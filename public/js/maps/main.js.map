{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","runAnimations","pop","canvasId","palette","colors","colorNames","#20171C","#1E2A43","#28377D","#352747","#CA2E26","#9A2A1F","#DA6C26","#453121","#916A47","#DAAD27","#7F7D31","#2B5E2E","gradients","pops","colorSize","selectedColorSize","contextualTuts","type","copy","2","process","global","define","amd","window","self","Promise","_dereq_","any","promises","ret","SomePromiseArray","promise","setHowMany","setUnwrap","init","_SomePromiseArray","prototype","this","Async","_customScheduler","_isTickUsed","_lateQueue","Queue","_normalQueue","_haveDrainedQueues","_trampolineEnabled","drainQueues","_drainQueues","_schedule","schedule","AsyncInvokeLater","fn","receiver","arg","push","_queueTick","AsyncInvoke","AsyncSettlePromises","_pushOne","firstLineError","util","setScheduler","prev","hasCustomScheduler","enableTrampoline","disableTrampolineIfNecessary","hasDevTools","haveItemsQueued","fatalError","isNode","stderr","write","stack","exit","throwLater","arguments","setTimeout","invokeLater","invoke","settlePromises","_settlePromises","_drainQueue","queue","shift","_reset","./queue","./schedule","./util","3","INTERNAL","tryConvertToPromise","debug","calledBind","rejectThis","_","_reject","targetRejected","context","promiseRejectionQueued","bindingPromise","_then","bindingResolved","thisArg","_bitField","_resolveCallback","target","bindingRejected","bind","_propagateFrom","propagateFromFunction","_boundValue","boundValueFunction","maybePromise","_target","_setBoundTo","undefined","_setOnCancel","obj","_boundTo","_isBound","value","resolve","4","noConflict","bluebird","old","./promise","5","cr","Object","create","callerCache","getterCache","ensureMethod","methodName","message","classString","toString","TypeError","caller","apply","namedGetter","indexedGetter","index","Math","max","getGetter","canEvaluate","isIdentifier","args","slice","get","propertyName","getter","isIndex","maybeGetter","6","PromiseArray","apiRejection","tryCatch","errorObj","async","_async","cancel","cancellation","_warn","child","_isCancellable","_cancelBy","_isFollowing","_followee","_cancelBranched","parent","_cancellationParent","_setWillBeCancelled","_branchHasCancelled","_branchesRemainingToCancel","_enoughBranchesHaveCancelled","canceller","_invokeOnCancel","_cancel","_setCancelled","_cancelPromises","_length","_unsetOnCancel","_onCancelField","isPending","_isCancelled","isCancellable","isCancelled","_doInvokeOnCancel","onCancelCallback","internalOnly","isArray","_attachExtraTrace","_resultCancelled","_onCancel","_invokeInternalOnCancel","7","NEXT_FILTER","catchFilter","instances","cb","boundTo","predicateLoop","item","matchesPredicate","isObject","keys","getKeys","j","key","./es5","8","Context","_trace","CapturedTrace","peekContext","createContext","longStackTraces","lastIndex","contextStack","_promiseCreated","_pushContext","_popContext","_peekContext","trace","deactivateLongStackTraces","activateLongStackTraces","Promise_pushContext","Promise_popContext","Promise_PeekContext","Promise_peekContext","Promise_promiseCreated","ctx","9","generatePromiseLifecycleEventObject","name","defaultFireEvent","cancellationExecute","executor","reject","onCancel","_attachCancellationCallback","cancellationAttachCancellationCallback","previousOnCancel","cancellationOnCancel","cancellationSetOnCancel","cancellationClearCancellationData","cancellationPropagateFrom","flags","branchesRemainingToCancel","bindingPropagateFrom","isFulfilled","longStackTracesCaptureStackTrace","longStackTracesAttachExtraTrace","error","ignoreSelf","canAttachTrace","_parent","attachExtraTrace","__stackCleaned__","parsed","parseStackAndMessage","notEnumerableProp","join","checkForgottenReturns","returnValue","promiseCreated","wForgottenReturn","_returnedNonUndefined","handlerLine","creatorLine","traceLines","split","cleanStack","line","nodeFramePattern","test","lineMatches","match","parseLinePattern","firstUserLine","msg","deprecated","replacement","warn","shouldUseOwnTrace","config","warnings","warning","Warning","activeFireEvent","formatAndLogError","reconstructStack","stacks","removeDuplicateOrEmptyJumps","splice","removeCommonRoots","current","currentLastIndex","currentLastLine","commonRootMeetPoint","isTraceLine","stackFramePattern","isInternalFrame","shouldIgnore","indentStackFrames","charAt","stackFramesAsArray","replace","title","isSoft","console","formatStack","String","printWarning","log","fireRejectionEvent","localHandler","reason","localEventFired","formatNonError","str","ruselessToString","newStr","JSON","stringify","snip","maxChars","substr","longStackTracesIsSupported","captureStackTrace","parseLineInfo","matches","parseLineInfoRegex","fileName","parseInt","setBounds","lastLineError","firstFileName","lastFileName","firstStackLines","lastStackLines","firstIndex","result","bluebirdFramePattern","info","_promisesCreated","uncycle","unhandledRejectionHandled","possiblyUnhandledRejection","getDomain","_getDomain","debugging","env","suppressUnhandledRejections","_ensurePossibleRejectionHandled","_setRejectionIsUnhandled","_notifyUnhandledRejection","_notifyUnhandledRejectionIsHandled","_setReturnedNonUndefined","_isRejectionUnhandled","_settledValue","_setUnhandledRejectionIsNotified","_unsetUnhandledRejectionIsNotified","_isUnhandledRejectionNotified","_unsetRejectionIsUnhandled","onPossiblyUnhandledRejection","domain","domainBind","onUnhandledRejectionHandled","disableLongStackTraces","Promise_captureStackTrace","_captureStackTrace","Promise_attachExtraTrace","hasLongStackTraces","fireDomEvent","CustomEvent","event","dispatchEvent","domEvent","toLowerCase","detail","cancelable","Event","document","createEvent","initCustomEvent","fireGlobalEvent","emit","method","eventToObjectGenerator","promiseFulfilled","promiseRejected","promiseResolved","promiseCancelled","promiseChained","unhandledRejection","rejectionHandled","globalEventFired","domEventFired","opts","warningsOption","_clearCancellationData","_execute","monitoring","_fireEvent","handler","inherits","nodes","stackToIndex","node","currentStack","cycleEdgeNode","currentChildLength","v8stackFramePattern","v8stackFormatter","stackTraceLimit","ignoreUntil","err","indexOf","hasStackAfterThrow","isTTY","color","./errors","10","returner","thrower","thenReturn","thenThrow","catchThrow","_reason","caught","catchReturn","_value","11","promiseAllThis","PromiseAll","PromiseMapSeries","PromiseReduce","reduce","all","each","mapSeries","12","subError","nameProperty","defaultMessage","SubError","constructor","OperationalError","cause","_TypeError","_RangeError","es5","Objectfreeze","freeze","CancellationError","TimeoutError","AggregateError","RangeError","methods","Array","defineProperty","configurable","writable","enumerable","level","indent","lines","errorTypes","RejectionError","13","isES5","getDescriptor","getOwnPropertyDescriptor","names","getOwnPropertyNames","getPrototypeOf","propertyIsWritable","prop","descriptor","set","has","hasOwnProperty","proto","ObjectKeys","ObjectGetDescriptor","ObjectDefineProperty","desc","ObjectFreeze","ObjectGetPrototypeOf","ArrayIsArray","14","PromiseMap","map","filter","options","15","PassThroughHandlerContext","called","cancelPromise","FinallyHandlerCancelReaction","finallyHandler","checkCancel","succeed","fail","reasonOrValue","isFinallyHandler","isRejected","_passThrough","success","then","lastly","tap","16","Proxyable","promiseFromYieldHandler","yieldHandlers","traceParent","PromiseSpawn","generatorFunction","yieldHandler","internal","_finallyPromise","_promise","_stack","_generatorFunction","_receiver","_generator","_yieldHandlers","concat","_yieldedPromise","_cancellationPhase","errors","_isResolved","_cleanup","_fulfill","_promiseCancelled","implementsReturn","coroutine","returnSentinel","_continue","_promiseFulfilled","next","_promiseRejected","_run","_rejectCallback","done","bitField","_proxy","PromiseSpawn$","generator","spawn","addYieldHandler","17","last","spread","18","MappingPromiseArray","limit","_filter","constructor$","_callback","_preservedValues","_limit","_inFlight","_queue","_asyncInit","concurrency","isFinite","_init$","_init","values","_values","preservedValues","callback","totalResolved","_totalResolved","_resolve","booleans","len","19","_resolveFromSyncValue","attempt","20","isUntypedError","wrapAsOperationalError","rErrorKey","markAsOriginatingFromRejection","nodebackForPromise","multiArgs","wrapped","maybeWrapAsError","21","spreadAdapter","val","nodeback","successAdapter","errorAdapter","newReason","asCallback","nodeify","adapter","22","check","_fulfillmentHandler0","_rejectionHandler0","_promise0","_receiver0","_resolveFromExecutor","deferResolve","v","deferReject","fillTypes","p","makeSelfResolutionError","reflectHandler","PromiseInspection","UNDEFINED_BINDING","APPLY","catchInstances","reflect","didFulfill","didReject","_setIsFinal","toJSON","fulfillmentValue","rejectionReason","originatesFromRejection","getNewLibraryCopy","is","fromNode","fromCallback","_isFateSealed","_setAsyncGuaranteed","cast","_setFulfilled","fulfilled","rejected","internalData","haveInternalData","settler","_settlePromiseCtx","_settlePromiseLateCancellationObserver","_addCallbacks","_setLength","_setRejected","_setFollowing","_isFinal","_unsetCancelled","_receiverAt","_promiseAt","_fulfillmentHandlerAt","_rejectionHandlerAt","_migrateCallback0","follower","fulfill","_migrateCallbackAt","base","proxyable","shouldBind","_setFollowee","synchronous","ignoreNonErrorWarnings","ensureErrorObject","hasStack","_settlePromiseFromHandler","x","_settlePromise","isPromise","asyncGuaranteed","_settlePromise0","_clearCallbackDataAtIndex","_fulfillPromises","_rejectPromises","defer","pending","version","toFastProperties","b","c","./any.js","./async","./bind","./call_get.js","./cancel","./catch_filter","./context","./debuggability","./direct_resolve","./each.js","./filter.js","./finally","./generators.js","./join","./map.js","./method","./nodeback","./nodeify.js","./promise_array","./promisify.js","./props.js","./race.js","./reduce.js","./settle.js","./some.js","./synchronous_inspection","./thenables","./timers.js","./using.js","23","toResolutionValue","resolveValueIfEmpty","asArray","_resolveEmptyArray","_iterate","getActualLength","shouldCopyValues","isResolved","24","propsFilter","noCopyPropsPattern","isPromisified","__isPromisified__","hasPromisified","suffix","getDataPropertyOrDefault","defaultPromisified","checkValid","suffixRegexp","keyWithoutAsyncSuffix","promisifiableMethods","inheritedDataKeys","passesDefaultFilter","defaultFilter","makeNodePromisifiedClosure","__","promisified","THIS","defaultThis","withAppended","promisifyAll","promisifier","RegExp","escapeIdentRegex","promisifiedKey","makeNodePromisified","promisify","makeNodePromisifiedEval","defaultSuffix","noCopyProps","copyDescriptors","isClass","25","PropertiesPromiseArray","entries","isMap","Es6Map","mapToEntries","_isMap","props","castValue","Map","extractEntry","size","forEach","entriesToMap","keyOffset","26","arrayMove","src","srcIndex","dst","dstIndex","capacity","_capacity","_front","_willBeOverCapacity","_checkCapacity","wrapMask","front","_resizeTo","oldCapacity","moveItemsCount","27","race","raceLater","array","28","ReductionPromiseArray","initialValue","_each","_fn","_initialValue","_currentCancellable","_eachValues","completed","valueOrReason","gotAccum","accum","_gotAccum","gotValue","_eachComplete","sender","_resultCancelled$","29","noAsyncScheduler","NativePromise","getNativePromise","MutationObserver","GlobalSetImmediate","setImmediate","ProcessNextTick","nextTick","isRecentNode","nativePromise","navigator","standalone","cordova","div","createElement","attributes","toggleScheduled","div2","o2","classList","toggle","observe","scheduleToggle","disconnect","30","SettledPromiseArray","_promiseResolved","inspection","_settledValueField","settle","31","_howMany","_unwrap","_initialized","some","howMany","CANCELLATION","isArrayResolved","_canPossiblyFulfill","_getRangeError","count","_addFulfilled","_fulfilled","_addRejected","_checkOutcome","_rejected","32","__isCancelled","33","getThen","isAnyBluebirdPromise","doThenable","doGetThen","hasProp","34","HandleWrapper","handle","successClear","clearTimeout","failureClear","afterValue","delay","ms","afterTimeout","timeout","handleWrapper","35","castPreservingDisposable","thenable","_isDisposable","_getDisposer","_setDisposable","dispose","resources","iterator","tryDispose","Disposer","data","_data","_context","FunctionDisposer","maybeUnwrapDisposer","isDisposer","ResourceList","NULL","resource","doDispose","_unsetDisposable","d","using","input","spreadArgs","disposer","reflectedResources","resultPromise","inspections","_disposer","36","tryCatcher","tryCatchTarget","isPrimitive","maybeError","safeToString","appendee","defaultValue","hasMethods","hasMethodsOtherThanConstructor","hasThisAssignmentAndStaticMethods","thisAssignmentPattern","FakeConstructor","rident","filledRange","prefix","isError","ignore","from","to","hasEnvVariables","globalObject","Child","Parent","T","excludedPrototypes","Function","isExcludedProto","visitedKeys","enumeration","Symbol","ArrayFrom","itResult","it","chrome","loadTimes","versions","Number","P","_process","exportName","setTimeoutContext","bindFn","invokeArrayArg","deprecate","deprecationMessage","inherit","properties","childP","baseP","_super","assign","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","splitStr","addEventListener","removeEventListeners","removeEventListener","hasParent","parentNode","inStr","find","trim","inArray","findByKey","toArray","uniqueArray","sort","results","prefixed","property","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","inputTarget","domHandler","ev","enable","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","lastInterval","COMPUTE_INTERVAL","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","touches","changed","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","dx","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","defaults","id","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","gestureEvent","initEvent","gesture","TEST_ELEMENT","Date","output","source","nextKey","extend","dest","merge","MOBILE_REGEX","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","on","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","HowlerGlobal","Howler","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","mobileAutoEnable","_setup","volume","vol","parseFloat","setupAudioContext","gain","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","canPlayType","mpegTest","checkOpera","isOldOpera","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_enableMobileAudio","isMobile","maxTouchPoints","msMaxTouchPoints","_mobileEnabled","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","createBufferSource","buffer","connect","destination","noteOn","onended","suspend","_sounds","_paused","_suspendTimer","_resumeAfterSuspend","_autoResume","resume","_emit","Howl","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_duration","_state","_endTimers","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onresume","action","play","load","url","exec","location","protocol","Sound","loadBuffer","num","_ended","_id","_inactiveSound","seek","_seek","duration","_start","_stop","playWebAudio","_refreshBuffer","setValueAtTime","currentTime","_playStart","bufferSource","noteGrainOn","Infinity","isRunning","once","_clearTimer","playHtml5","playbackRate","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","fade","diff","dir","steps","stepLen","ceil","linearRampToValueAtTime","_interval","setInterval","soundId","min","clearInterval","cancelScheduledValues","loopStart","loopEnd","realTime","playing","rateSeek","sounds","_errorFn","_loadFn","remCache","cache","_loadQueue","task","_drain","cnt","_panner","howl","random","createGain","createGainNode","paused","_errorListener","_loadListener","__default","loadSound","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","AudioContext","webkitAudioContext","iOS","platform","appVersion","safari","_pos","_orientation","stereo","pan","pos","z","setPosition","orientation","xUp","yUp","zUp","or","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_panningModel","_refDistance","_rolloffFactor","pa","panner","createPanner","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","noop","browser","argv","addListener","removeListener","removeAllListeners","binding","cwd","chdir","umask","RecordRTC","mediaStream","startRecording","disableLogs","mediaRecorder","clearRecordedData","record","recordingDuration","handleRecordingDuration","initRecorder","initCallback","Recorder","GetRecorderType","stopRecording","__blob","recordRTC","blob","URL","createObjectURL","bytesToSize","autoWriteToDisk","getDataURL","dataURL","parameter","DiskStorage","Store","WARNING","pauseRecording","resumeRecording","readFile","_blob","postMessage","FileReaderSync","readAsDataURL","_mediaRecorder","processInWebWorker","_function","Blob","worker","Worker","revokeObjectURL","mozGetUserMedia","reader","FileReader","webWorker","onmessage","onRecordingStopped","RecordRTCConfiguration","returnObject","setRecordingDuration","milliseconds","getBlob","toURL","save","invokeSaveAsDialog","getFromDisk","setAdvertisementArray","arrayOfWebPImages","advertisement","image","bufferSize","view","recorderType","WhammyRecorder","CanvasRecorder","GifRecorder","StereoAudioRecorder","MediaStreamRecorder","getAudioTracks","getVideoTracks","MediaRecorder","mimeType","bitsPerSecond","recorder","isChrome","isEdge","isOpera","isMediaRecorderCompatible","isTypeSupported","MultiStreamRecorder","MRecordRTC","addStream","_mediaStream","mediaType","audio","video","gif","audioRecorder","numberOfAudioChannels","newStream","videoTrack","MediaStream","addTrack","videoRecorder","canvas","frameInterval","gifRecorder","frameRate","quality","blobURL","callback00","webkitURL","_audioDataURL","_videoDataURL","writeToDisk","bytes","k","sizes","floor","pow","toPrecision","file","fileExtension","splitted","fileFullName","msSaveOrOpenBlob","msSaveBlob","hyperlink","href","download","onclick","body","documentElement","removeChild","appendChild","evt","MouseEvent","bubbles","opera","isFirefox","InstallTrigger","verOffset","ix","nAgt","fullVersion","majorVersion","substring","isMediaStreamActive","active","ended","stream","recorderHints","canRecordMimeType","ignoreMutedMedia","ondataavailable","dontFireOnDataAvailableEvent","recordingCallback","getNativeBlob","onAudioProcessStarted","looper","mergeLeftRightBuffers","mergeAudioBuffers","mergeBuffers","channelBuffer","rLength","Float64Array","lng","interleave","leftChannel","rightChannel","inputIndex","writeUTFBytes","string","setUint8","leftBuffers","rightBuffers","internalInterleavedLength","interleaved","interleavedLength","resultingBufferLength","ArrayBuffer","DataView","setUint32","setUint16","setInt16","workerURL","onAudioProcessDataAvailable","isPaused","jsAudioNode","recording","audioInput","isAudioProcessStarted","left","inputBuffer","getChannelData","leftchannel","Float32Array","right","rightchannel","recordingLength","byteLength","Storage","AudioContextConstructor","createMediaStreamSource","legalBufferValues","createJavaScriptNode","createScriptProcessor","onaudioprocess","htmlElement","cloneCanvas","newCanvas","getContext","width","height","drawImage","drawCanvasFrame","isPausedRecording","lastTime","getTime","nodeName","whammy","frames","isRecording","html2canvas","grabMouse","showMousePointer","onrendered","toDataURL","isCanvasSupportsStreamCapturing","_isChrome","webkitRTCPeerConnection","webkitGetUserMedia","chromeVersion","matchArray","globalCanvas","mediaStreamRecorder","HTMLCanvasElement","CanvasRenderingContext2D","canvasMediaStream","captureStream","mozCaptureStream","webkitCaptureStream","mdStream","getWebPImages","framesLength","frame","idx","framesRemaining","onEncodingCallback","webp","that","compile","Whammy","Video","drawFrames","isStopDrawing","asyncLoop","functionToLoop","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","context2d","resultFrames","checkUntilNotBlack","endCheckFrame","sampleColor","g","maxColorDifference","pixTolerance","frameTolerance","doNotCheckNext","matchPixCount","endPixCheck","maxPixCount","finishImage","Image","imageData","getImageData","pix","currentColor","colorDifference","HTMLVideoElement","cloneNode","srcObject","onloadedmetadata","_this","GIFEncoder","isHTMLObject","drawVideoFrame","lastAnimationFrame","requestAnimationFrame","lastFrameTime","onGifPreview","gifEncoder","addFrame","offsetWidth","offsetHeight","setRepeat","setDelay","setQuality","startTime","cancelAnimationFrame","endTime","bin","arrayOfMediaStreams","getMixedAudioStream","audioContext","audioSources","audioTracksLength","audioiDestination","createMediaStreamDestination","audioSource","getMixedVideoStream","getVideo","videos","capturedStream","drawVideosToCanvas","isStoppedRecording","videosLength","mixedVideoStream","mixedAudioStream","track","previewStream","clearRect","Fetch","_type","audioDataURL","videoDataURL","gifDataURL","audioBlob","videoBlob","gifBlob","browserFakeUserAgent","getUserMedia","hash","screen","webkitRequestAnimationFrame","mozRequestAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","mozAudioContext","webkitMediaStream","getTracks","tracks","kind","WhammyVideo","whammyInWebWorker","ArrayToWebM","checkFrames","clusterMaxDuration","EBML","doubleToString","frameNumber","clusterTimecode","clusterFrames","clusterDuration","clusterCounter","cluster","getClusterData","generateEBML","block","makeSimpleBlock","discardable","invisible","keyframe","lacing","trackNum","timecode","numToBuffer","parts","reverse","strToBuffer","bitsToBuffer","bits","pad","json","ebml","zeroes","sizeToString","padded","out","fromCharCode","parseWebP","riff","VP8","RIFF","WEBP","frameStart","tmp","getStrLength","unpadded","parseRIFF","chunks","createObjectStore","dataBase","dataStoreName","putInDB","getFromStore","portionName","transaction","objectStore","onsuccess","db","put","indexedDB","dbVersion","dbName","request","onError","setVersion","onupgradeneeded","getPathColorName","path","hexColor","originalColor","getColorName","getRandomPop","getIndexedPopColor","transparent","Color","./../../config","root","factory","ShapeDetector","deg2Rad","Stroke","points","processStroke","patterns","_nbSamplePoints","nbSamplePoints","learn","_squareSize","_phi","_angleRange","_anglePrecision","_halfDiagonal","_origin","resample","setCentroid","rotateBy","indicativeAngle","scaleToSquare","translateToOrigin","localDistance","q","strokeLength","newPoints","point","cos","sin","box","minX","maxX","minY","maxY","distanceAtBestAngle","pattern","x1","f1","distanceAtAngle","x2","f2","strokePoints","patternPoints","defaultShapes","spot","patternName","score","stroke","bestDistance","bestPattern","bestScore","resetWindow","kan","composition","compositionInterval","compositionTimeout","soundTimeouts","lastEvent","interaction","moves","pinching","pinchedGroup","pinchedTut","pathData","shapePath","prevAngle","sides","side","corners","lastScale","lastRotation","originalPosition","tutorialCompletion","fill","pinch","swipe","inactivityTimeout","playPromptTimeout","userHasDrawnFirstShape","firstTimePlaying","shapesSinceTut","refreshCheckInterval","sha","scheduledOverlay","continueCountdownInterval","shapeSounds","ui","overlays","timing","$","setSha","reload","./overlays","./sound","./timing","./touch","./ui","./video","openOverlay","overlayName","allOverlays","includes","panning","preventInactivityTimeout","closeAndResetOverlays","tutorial","hideContextualTuts","$body","addClass","overlayActiveClass","tapEvent","openIntroOverlay","anyShapesOnCanvas","openPlayPromptOverlay","playPromptDelay","openSharePromptOverlay","openContinueOverlay","openTipsOverlay","openShareOverlay","resetContinueCountdown","html","continueInactivityDelay","$countdownNumWrap","enterTutorialMode","activateTipsCards","cardNavNext","$old","$new","$cardItems","first","$next","$third","slide","removeClass","updateCardCounter","cardsCount","cardInteractions","timeOfLastInteraction","closest","resetTips","$sharePhone","overlayOpenClasses","total","$footer","phoneNumberInputs","mask","$shareKeypad","phoneNumber","masked","randomCardGraphics","el","attr","initTips","initShare","hammerCanvas","$cardsWrap","overlay","./tutorial","destroyGroupPops","group","groupPopsBefore","getGroupPops","fillInGroupPopsById","groupId","paper","project","getItem","className","children","groupChild","toggleFill","interior","fillColor","strokeColor","cleanUpGroup","acceptableNames","updatePops","freshGroups","getFreshGroups","popCandidates","getPopCandidates","getAllPops","freshGroup","freshOuter","_namedChildren","bringToFront","otherGroup","otherGroupOuter","thisPop","intersect","popColor","popGroup","intersectingGroup","visible","closed","addChild","fresh","getOutlineGroup","truedShape","outerPath","Path","middlePath","lastAngle","firstTop","firstBottom","lastTop","lastBottom","Group","firstSegment","cumSize","avgSize","getPointAt","normal","getNormalAt","top","Point","bottom","insert","centerTop","centerBottom","flatten","simplify","selected","returnGroup","getTruedShape","pathClone","clone","completedPath","getCompletedPath","truedPath","strokeWidth","intersections","getIntersections","trimmedPath","getTrimmedPath","extendedPath","getExtendedPath","_intersections","_trimmedPath","replaceWith","getBruteExtendedPath","_intersections2","_trimmedPath2","getShapePrediction","prediction","shapeJSON","exportJSON","shapeData","processShapeData","shapePrediction","detector","closedShapes","randomPick","intersects","getIntegerPoint","stringifyPoint","parsePoint","pointStr","getClosestPointFromPathData","leastDistance","closestPoint","Base","datum","returnShape","jsonObj","parse","segments","segment","positionInfo","findInteriorCurves","interiorCurves","dividedPath","resolveCrossings","enclosedLoop","_enclosedLoop","thresholdDist","thresholdDistMultiplier","nextSegment","startAngle","inverseStartAngle","extendedStartPoint","lastSegment","penSegment","previous","endAngle","extendedEndPoint","firstPoint","lastPoint","unite","crossings","maxArea","maxChild","area","intersection","intersectionPoint","pathCrossings","subtract","_ret2","closedChildren","childClone","accumulator","_j","newPath","copyContent","copyAttributes","_typeof","hitTestGroupBounds","groups","getAllGroups","hitTestBounds","strokeBounds","isInside","cornerThresholdDeg","shapeNames","./color","./lib/shape-detector","asyncPlayCompositionOnce","drawCanvas","getElementById","recordrtc","asyncInitShapeSounds","reinitShapeSounds","getShapeSoundObj","viewWidth","viewSize","initShapeSounds","shape","colorName","quantizedSoundStartTime","quantizeLength","bounds","compositionLength","quantizedSoundDuration","soundObj","pathId","spriteName","startPlaying","hasClass","playEnabledClass","playingClass","startComposition","stopPlaying","stopComposition","asyncGetShapeSoundFromShapeName","shapeName","shapeSoundJSONPath","getJSON","resp","shapeSoundData","formatShapeSoundData","when","returnSounds","returnData","urls","smallestDuration","bpm","returnDuration","quantizePosition","position","smallestInterval","measures","returnPosition","asyncPlayShape","asyncPlayShapeSound","asyncPlayShapeAnimation","animating","totalDuration","measureLength","animate","rotate","settings","easing","complete","removeShapeFromComposition","shapeGroup","getItems","clearSoundTimeouts","soundTimeout","playCompositionFirstTime","trimmedCompositionObj","getTrimmedCompositionObj","res","iterations","repeatComposition","playCompositionOnce","asyncPlayCompositionMultipleTimes","repeats","promisedRepeats","shapePromises","asyncPlayShapeWithDelay","playTime","trimmedComposition","getCompositionStartTime","modifiedSound","shallowCopy","beatLength","./shape","howler","pauseVideo","exitTutorialMode","drawInactivityDelay","inputDelay","refreshCheckDelay","overlayDelay","hammerTips","tipsOverlay","doubleTap","panStart","panMove","panEnd","pinchStart","pinchMove","pinchEnd","enablePanAndPinchEvents","enablePanEvents","enablePinchEvents","enableTapEvents","disableTapEvents","disablePanEvents","disablePinchEvents","pointer","hitResult","hitTest","hitOptions","eventTargetIsOnCanvas","hideContextualTutByName","stopPropagation","strokeCap","maxShapeLength","angleDelta","prevPoint","halfPointX","halfPointY","halfPoint","topX","topY","bottomX","bottomY","smooth","speed","tooLong","draw","minShapeSize","shapeSize","centerPoint","rad","gradientSize","originX","originY","destinationX","destinationY","origin","gradient","stops","shapeSoundObj","outlineGroup","outline","outer","outlineCenter","middle","sendToBack","shapeMask","enclosedLoops","unditherButtonsByName","scaleFactor","allTutsCompleted","tutName","_groups","addContextualTut","tut","interacting","originalRotation","originalScale","thrown","$tut","$pinchedTut","currentScale","scaleDelta","currentRotation","rotationDelta","moveContextualTut","hypot","viewHypot","maxScaleFactor","move","hideContextualTut","throwPinchedGroup","velocityMultiplier","viewHeight","offScreen","newX","newY","newPos","tolerance","hammerjs","getTutByName","tutObj","tutorialCompletionObj","completion","shapeCenter","tutCopy","tutPos","getTutPositionFromCenter","css","visibility","$tuts","resetContextualTuts","tutWidth","outerWidth","tutHeight","outerHeight","leftPos","topPos","tutArrowHeight","initLogoRefresh","initColorPalette","initNewButton","initUndoButton","initPlayButton","initTipsButton","initShareButton","initContextualTuts","resetCanvas","ditherButtonsByName","buttonNames","undither","ditherButtonByName","buttonName","$button","ditheredClass","unditherButtonByName","newPressed","activeLayer","removeChildren","undoPressed","lastMove","clearGroupPops","numGroups","getNumGroups","tipsPressed","sharePressed","share","$paletteWrap","$paletteColors","paletteColorSize","paletteSelectedColorSize","paletteSelectedClass","$svg","clear","numCanvasses","randomCanvasIndex","canvasBg","Raster","scaleFactorHorizontal","scaleFactorVertical","Layer","./share","degrees","deg","radians","delta","toLocaleTimeString","returnPops","groupPops","intersectingPops","original","playVideo","videoPlayingClass","main","$video","$videoWrapper","./main"],"mappings":"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,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAClmCzyB,KAAM,SAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MACtpCzyB,KAAM,SAENkvD,SAAWl0C,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,UAAWyX,EAAK,WAClMzyB,KAAM,WAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,UAAWyX,EAAK,WACxNzyB,KAAM,WAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,SAAUyX,EAAK,WAChPzyB,KAAM,WAENkvD,SAAWl0C,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MACrhCzyB,KAAM,WAENkvD,SAAWl0C,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAC1QzyB,KAAM,aAENkvD,SAAWl0C,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,UAAWyX,EAAK,YACxSzyB,KAAM,aAENkvD,SAAWl0C,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,SAAUyX,EAAK,YAC7TzyB,KAAM,aAENkvD,SAAWl0C,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAC9hDzyB,KAAM,aAENkvD,SAAWl0C,EAAG,EAAGyX,EAAG,IAAOzX,EAAG,EAAGyX,EAAG,KAAQzX,EAAG,GAAIyX,EAAG,KAAQzX,EAAG,GAAIyX,EAAG,IACxEzyB,KAAM,WAENkvD,SAAWl0C,EAAG,EAAGyX,EAAG,IAAOzX,EAAG,EAAGyX,EAAG,MAASzX,EAAG,GAAIyX,EAAG,MAASzX,EAAG,GAAIyX,EAAG,IAC1EzyB,KAAM,WAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MACl5DzyB,KAAM,WAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MACvezyB,KAAM,UAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,KACrNzyB,KAAM,UAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,IAAKyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,KAAQzX,EAAK,GAAIyX,EAAK,MACzIzyB,KAAM,UAENkvD,SAAWl0C,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAC1vCzyB,KAAM,UAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MACjhDzyB,KAAM,UAENkvD,SAAWl0C,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,GAAIyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKyX,EAAK,MAASzX,EAAK,IAAKy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","file":"../main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nexports.runAnimations = false;\nexports.pop = true;\nexports.canvasId = 'canvas';\n\nexports.palette = {\n  colors: [\"#20171C\", \"#1E2A43\", \"#28377D\", \"#352747\", \"#CA2E26\", \"#9A2A1F\", \"#DA6C26\", \"#453121\", \"#916A47\", \"#DAAD27\", \"#7F7D31\", \"#2B5E2E\"],\n  colorNames: {\n    \"#20171C\": \"black\",\n    \"#1E2A43\": \"blue\",\n    \"#28377D\": \"blue\",\n    \"#352747\": \"blue\",\n    \"#CA2E26\": \"red\",\n    \"#9A2A1F\": \"red\",\n    \"#DA6C26\": \"orange\",\n    \"#453121\": \"brown\",\n    \"#916A47\": \"brown\",\n    \"#DAAD27\": \"orange\",\n    \"#7F7D31\": \"green\",\n    \"#2B5E2E\": \"green\"\n  },\n  gradients: {\n    '#20171C': ['#20171C', '#000000'],\n    '#1E2A43': ['#1E2A43', '#263166'],\n    '#28377D': ['#28377D', '#1E4695'],\n    '#352747': ['#352747', '#45005B'],\n    '#CA2E26': ['#CA2E26', '#9B352F'],\n    '#9A2A1F': ['#9A2A1F', '#CD3621'],\n    '#DA6C26': ['#DA6C26', '#BD4820'],\n    '#453121': ['#453121', '#281806'],\n    '#916A47': ['#916A47', '#623A22'],\n    '#DAAD27': ['#DAAD27', '#AF871D'],\n    '#7F7D31': ['#7F7D31', '#555827'],\n    '#2B5E2E': ['#2B5E2E', '#16451D']\n  },\n  pops: [\"#00ADEF\", \"#F285A5\", \"#7DC57F\", \"#F6EB16\", \"#F4EAE0\"],\n  colorSize: 20,\n  selectedColorSize: 30\n};\n\nexports.contextualTuts = [{\n  type: \"fill\",\n  copy: \"<strong>Double-tap</strong> a filled shape to <strong>UNFILL</strong> it. Repeat to <strong>FILL</strong> an unfilled shape.\"\n}, {\n  type: \"pinch\",\n  copy: \"<strong>Pinch</strong> shapes with <strong>TWO FINGERS</strong> to <strong>resize</strong> and <strong>move</strong> them.\"\n}, {\n  type: \"swipe\",\n  copy: \"To <strong>remove</strong> shapes, <strong>pinch</strong> with <strong>two fingers</strong> then <strong>swipe</strong> or hit <strong>undo</strong>.\"\n}];\n\n},{}],2:[function(require,module,exports){\n(function (process,global){\n/* @preserve\n * The MIT License (MIT)\n * \n * Copyright (c) 2013-2015 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n/**\n * bluebird build version 3.4.7\n * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each\n*/\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar SomePromiseArray = Promise._SomePromiseArray;\nfunction any(promises) {\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function (promises) {\n    return any(promises);\n};\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n};\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\nvar firstLineError;\ntry {throw new Error(); } catch (e) {firstLineError = e;}\nvar schedule = _dereq_(\"./schedule\");\nvar Queue = _dereq_(\"./queue\");\nvar util = _dereq_(\"./util\");\n\nfunction Async() {\n    this._customScheduler = false;\n    this._isTickUsed = false;\n    this._lateQueue = new Queue(16);\n    this._normalQueue = new Queue(16);\n    this._haveDrainedQueues = false;\n    this._trampolineEnabled = true;\n    var self = this;\n    this.drainQueues = function () {\n        self._drainQueues();\n    };\n    this._schedule = schedule;\n}\n\nAsync.prototype.setScheduler = function(fn) {\n    var prev = this._schedule;\n    this._schedule = fn;\n    this._customScheduler = true;\n    return prev;\n};\n\nAsync.prototype.hasCustomScheduler = function() {\n    return this._customScheduler;\n};\n\nAsync.prototype.enableTrampoline = function() {\n    this._trampolineEnabled = true;\n};\n\nAsync.prototype.disableTrampolineIfNecessary = function() {\n    if (util.hasDevTools) {\n        this._trampolineEnabled = false;\n    }\n};\n\nAsync.prototype.haveItemsQueued = function () {\n    return this._isTickUsed || this._haveDrainedQueues;\n};\n\n\nAsync.prototype.fatalError = function(e, isNode) {\n    if (isNode) {\n        process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) +\n            \"\\n\");\n        process.exit(2);\n    } else {\n        this.throwLater(e);\n    }\n};\n\nAsync.prototype.throwLater = function(fn, arg) {\n    if (arguments.length === 1) {\n        arg = fn;\n        fn = function () { throw arg; };\n    }\n    if (typeof setTimeout !== \"undefined\") {\n        setTimeout(function() {\n            fn(arg);\n        }, 0);\n    } else try {\n        this._schedule(function() {\n            fn(arg);\n        });\n    } catch (e) {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n};\n\nfunction AsyncInvokeLater(fn, receiver, arg) {\n    this._lateQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncInvoke(fn, receiver, arg) {\n    this._normalQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncSettlePromises(promise) {\n    this._normalQueue._pushOne(promise);\n    this._queueTick();\n}\n\nif (!util.hasDevTools) {\n    Async.prototype.invokeLater = AsyncInvokeLater;\n    Async.prototype.invoke = AsyncInvoke;\n    Async.prototype.settlePromises = AsyncSettlePromises;\n} else {\n    Async.prototype.invokeLater = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvokeLater.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                setTimeout(function() {\n                    fn.call(receiver, arg);\n                }, 100);\n            });\n        }\n    };\n\n    Async.prototype.invoke = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvoke.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                fn.call(receiver, arg);\n            });\n        }\n    };\n\n    Async.prototype.settlePromises = function(promise) {\n        if (this._trampolineEnabled) {\n            AsyncSettlePromises.call(this, promise);\n        } else {\n            this._schedule(function() {\n                promise._settlePromises();\n            });\n        }\n    };\n}\n\nAsync.prototype._drainQueue = function(queue) {\n    while (queue.length() > 0) {\n        var fn = queue.shift();\n        if (typeof fn !== \"function\") {\n            fn._settlePromises();\n            continue;\n        }\n        var receiver = queue.shift();\n        var arg = queue.shift();\n        fn.call(receiver, arg);\n    }\n};\n\nAsync.prototype._drainQueues = function () {\n    this._drainQueue(this._normalQueue);\n    this._reset();\n    this._haveDrainedQueues = true;\n    this._drainQueue(this._lateQueue);\n};\n\nAsync.prototype._queueTick = function () {\n    if (!this._isTickUsed) {\n        this._isTickUsed = true;\n        this._schedule(this.drainQueues);\n    }\n};\n\nAsync.prototype._reset = function () {\n    this._isTickUsed = false;\n};\n\nmodule.exports = Async;\nmodule.exports.firstLineError = firstLineError;\n\n},{\"./queue\":26,\"./schedule\":29,\"./util\":36}],3:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {\nvar calledBind = false;\nvar rejectThis = function(_, e) {\n    this._reject(e);\n};\n\nvar targetRejected = function(e, context) {\n    context.promiseRejectionQueued = true;\n    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n};\n\nvar bindingResolved = function(thisArg, context) {\n    if (((this._bitField & 50397184) === 0)) {\n        this._resolveCallback(context.target);\n    }\n};\n\nvar bindingRejected = function(e, context) {\n    if (!context.promiseRejectionQueued) this._reject(e);\n};\n\nPromise.prototype.bind = function (thisArg) {\n    if (!calledBind) {\n        calledBind = true;\n        Promise.prototype._propagateFrom = debug.propagateFromFunction();\n        Promise.prototype._boundValue = debug.boundValueFunction();\n    }\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 1);\n    var target = this._target();\n    ret._setBoundTo(maybePromise);\n    if (maybePromise instanceof Promise) {\n        var context = {\n            promiseRejectionQueued: false,\n            promise: ret,\n            target: target,\n            bindingPromise: maybePromise\n        };\n        target._then(INTERNAL, targetRejected, undefined, ret, context);\n        maybePromise._then(\n            bindingResolved, bindingRejected, undefined, ret, context);\n        ret._setOnCancel(maybePromise);\n    } else {\n        ret._resolveCallback(target);\n    }\n    return ret;\n};\n\nPromise.prototype._setBoundTo = function (obj) {\n    if (obj !== undefined) {\n        this._bitField = this._bitField | 2097152;\n        this._boundTo = obj;\n    } else {\n        this._bitField = this._bitField & (~2097152);\n    }\n};\n\nPromise.prototype._isBound = function () {\n    return (this._bitField & 2097152) === 2097152;\n};\n\nPromise.bind = function (thisArg, value) {\n    return Promise.resolve(value).bind(thisArg);\n};\n};\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\nvar old;\nif (typeof Promise !== \"undefined\") old = Promise;\nfunction noConflict() {\n    try { if (Promise === bluebird) Promise = old; }\n    catch (e) {}\n    return bluebird;\n}\nvar bluebird = _dereq_(\"./promise\")();\nbluebird.noConflict = noConflict;\nmodule.exports = bluebird;\n\n},{\"./promise\":22}],5:[function(_dereq_,module,exports){\n\"use strict\";\nvar cr = Object.create;\nif (cr) {\n    var callerCache = cr(null);\n    var getterCache = cr(null);\n    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n}\n\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar isIdentifier = util.isIdentifier;\n\nvar getMethodCaller;\nvar getGetter;\nif (!true) {\nvar makeMethodCaller = function (methodName) {\n    return new Function(\"ensureMethod\", \"                                    \\n\\\n        return function(obj) {                                               \\n\\\n            'use strict'                                                     \\n\\\n            var len = this.length;                                           \\n\\\n            ensureMethod(obj, 'methodName');                                 \\n\\\n            switch(len) {                                                    \\n\\\n                case 1: return obj.methodName(this[0]);                      \\n\\\n                case 2: return obj.methodName(this[0], this[1]);             \\n\\\n                case 3: return obj.methodName(this[0], this[1], this[2]);    \\n\\\n                case 0: return obj.methodName();                             \\n\\\n                default:                                                     \\n\\\n                    return obj.methodName.apply(obj, this);                  \\n\\\n            }                                                                \\n\\\n        };                                                                   \\n\\\n        \".replace(/methodName/g, methodName))(ensureMethod);\n};\n\nvar makeGetter = function (propertyName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict';                                                        \\n\\\n        return obj.propertyName;                                             \\n\\\n        \".replace(\"propertyName\", propertyName));\n};\n\nvar getCompiled = function(name, compiler, cache) {\n    var ret = cache[name];\n    if (typeof ret !== \"function\") {\n        if (!isIdentifier(name)) {\n            return null;\n        }\n        ret = compiler(name);\n        cache[name] = ret;\n        cache[\" size\"]++;\n        if (cache[\" size\"] > 512) {\n            var keys = Object.keys(cache);\n            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n            cache[\" size\"] = keys.length - 256;\n        }\n    }\n    return ret;\n};\n\ngetMethodCaller = function(name) {\n    return getCompiled(name, makeMethodCaller, callerCache);\n};\n\ngetGetter = function(name) {\n    return getCompiled(name, makeGetter, getterCache);\n};\n}\n\nfunction ensureMethod(obj, methodName) {\n    var fn;\n    if (obj != null) fn = obj[methodName];\n    if (typeof fn !== \"function\") {\n        var message = \"Object \" + util.classString(obj) + \" has no method '\" +\n            util.toString(methodName) + \"'\";\n        throw new Promise.TypeError(message);\n    }\n    return fn;\n}\n\nfunction caller(obj) {\n    var methodName = this.pop();\n    var fn = ensureMethod(obj, methodName);\n    return fn.apply(obj, this);\n}\nPromise.prototype.call = function (methodName) {\n    var args = [].slice.call(arguments, 1);;\n    if (!true) {\n        if (canEvaluate) {\n            var maybeCaller = getMethodCaller(methodName);\n            if (maybeCaller !== null) {\n                return this._then(\n                    maybeCaller, undefined, undefined, args, undefined);\n            }\n        }\n    }\n    args.push(methodName);\n    return this._then(caller, undefined, undefined, args, undefined);\n};\n\nfunction namedGetter(obj) {\n    return obj[this];\n}\nfunction indexedGetter(obj) {\n    var index = +this;\n    if (index < 0) index = Math.max(0, index + obj.length);\n    return obj[index];\n}\nPromise.prototype.get = function (propertyName) {\n    var isIndex = (typeof propertyName === \"number\");\n    var getter;\n    if (!isIndex) {\n        if (canEvaluate) {\n            var maybeGetter = getGetter(propertyName);\n            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n        } else {\n            getter = namedGetter;\n        }\n    } else {\n        getter = indexedGetter;\n    }\n    return this._then(getter, undefined, undefined, propertyName, undefined);\n};\n};\n\n},{\"./util\":36}],6:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nPromise.prototype[\"break\"] = Promise.prototype.cancel = function() {\n    if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n\n    var promise = this;\n    var child = promise;\n    while (promise._isCancellable()) {\n        if (!promise._cancelBy(child)) {\n            if (child._isFollowing()) {\n                child._followee().cancel();\n            } else {\n                child._cancelBranched();\n            }\n            break;\n        }\n\n        var parent = promise._cancellationParent;\n        if (parent == null || !parent._isCancellable()) {\n            if (promise._isFollowing()) {\n                promise._followee().cancel();\n            } else {\n                promise._cancelBranched();\n            }\n            break;\n        } else {\n            if (promise._isFollowing()) promise._followee().cancel();\n            promise._setWillBeCancelled();\n            child = promise;\n            promise = parent;\n        }\n    }\n};\n\nPromise.prototype._branchHasCancelled = function() {\n    this._branchesRemainingToCancel--;\n};\n\nPromise.prototype._enoughBranchesHaveCancelled = function() {\n    return this._branchesRemainingToCancel === undefined ||\n           this._branchesRemainingToCancel <= 0;\n};\n\nPromise.prototype._cancelBy = function(canceller) {\n    if (canceller === this) {\n        this._branchesRemainingToCancel = 0;\n        this._invokeOnCancel();\n        return true;\n    } else {\n        this._branchHasCancelled();\n        if (this._enoughBranchesHaveCancelled()) {\n            this._invokeOnCancel();\n            return true;\n        }\n    }\n    return false;\n};\n\nPromise.prototype._cancelBranched = function() {\n    if (this._enoughBranchesHaveCancelled()) {\n        this._cancel();\n    }\n};\n\nPromise.prototype._cancel = function() {\n    if (!this._isCancellable()) return;\n    this._setCancelled();\n    async.invoke(this._cancelPromises, this, undefined);\n};\n\nPromise.prototype._cancelPromises = function() {\n    if (this._length() > 0) this._settlePromises();\n};\n\nPromise.prototype._unsetOnCancel = function() {\n    this._onCancelField = undefined;\n};\n\nPromise.prototype._isCancellable = function() {\n    return this.isPending() && !this._isCancelled();\n};\n\nPromise.prototype.isCancellable = function() {\n    return this.isPending() && !this.isCancelled();\n};\n\nPromise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {\n    if (util.isArray(onCancelCallback)) {\n        for (var i = 0; i < onCancelCallback.length; ++i) {\n            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n        }\n    } else if (onCancelCallback !== undefined) {\n        if (typeof onCancelCallback === \"function\") {\n            if (!internalOnly) {\n                var e = tryCatch(onCancelCallback).call(this._boundValue());\n                if (e === errorObj) {\n                    this._attachExtraTrace(e.e);\n                    async.throwLater(e.e);\n                }\n            }\n        } else {\n            onCancelCallback._resultCancelled(this);\n        }\n    }\n};\n\nPromise.prototype._invokeOnCancel = function() {\n    var onCancelCallback = this._onCancel();\n    this._unsetOnCancel();\n    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n};\n\nPromise.prototype._invokeInternalOnCancel = function() {\n    if (this._isCancellable()) {\n        this._doInvokeOnCancel(this._onCancel(), true);\n        this._unsetOnCancel();\n    }\n};\n\nPromise.prototype._resultCancelled = function() {\n    this.cancel();\n};\n\n};\n\n},{\"./util\":36}],7:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar getKeys = _dereq_(\"./es5\").keys;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction catchFilter(instances, cb, promise) {\n    return function(e) {\n        var boundTo = promise._boundValue();\n        predicateLoop: for (var i = 0; i < instances.length; ++i) {\n            var item = instances[i];\n\n            if (item === Error ||\n                (item != null && item.prototype instanceof Error)) {\n                if (e instanceof item) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (typeof item === \"function\") {\n                var matchesPredicate = tryCatch(item).call(boundTo, e);\n                if (matchesPredicate === errorObj) {\n                    return matchesPredicate;\n                } else if (matchesPredicate) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (util.isObject(e)) {\n                var keys = getKeys(item);\n                for (var j = 0; j < keys.length; ++j) {\n                    var key = keys[j];\n                    if (item[key] != e[key]) {\n                        continue predicateLoop;\n                    }\n                }\n                return tryCatch(cb).call(boundTo, e);\n            }\n        }\n        return NEXT_FILTER;\n    };\n}\n\nreturn catchFilter;\n};\n\n},{\"./es5\":13,\"./util\":36}],8:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar longStackTraces = false;\nvar contextStack = [];\n\nPromise.prototype._promiseCreated = function() {};\nPromise.prototype._pushContext = function() {};\nPromise.prototype._popContext = function() {return null;};\nPromise._peekContext = Promise.prototype._peekContext = function() {};\n\nfunction Context() {\n    this._trace = new Context.CapturedTrace(peekContext());\n}\nContext.prototype._pushContext = function () {\n    if (this._trace !== undefined) {\n        this._trace._promiseCreated = null;\n        contextStack.push(this._trace);\n    }\n};\n\nContext.prototype._popContext = function () {\n    if (this._trace !== undefined) {\n        var trace = contextStack.pop();\n        var ret = trace._promiseCreated;\n        trace._promiseCreated = null;\n        return ret;\n    }\n    return null;\n};\n\nfunction createContext() {\n    if (longStackTraces) return new Context();\n}\n\nfunction peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return undefined;\n}\nContext.CapturedTrace = null;\nContext.create = createContext;\nContext.deactivateLongStackTraces = function() {};\nContext.activateLongStackTraces = function() {\n    var Promise_pushContext = Promise.prototype._pushContext;\n    var Promise_popContext = Promise.prototype._popContext;\n    var Promise_PeekContext = Promise._peekContext;\n    var Promise_peekContext = Promise.prototype._peekContext;\n    var Promise_promiseCreated = Promise.prototype._promiseCreated;\n    Context.deactivateLongStackTraces = function() {\n        Promise.prototype._pushContext = Promise_pushContext;\n        Promise.prototype._popContext = Promise_popContext;\n        Promise._peekContext = Promise_PeekContext;\n        Promise.prototype._peekContext = Promise_peekContext;\n        Promise.prototype._promiseCreated = Promise_promiseCreated;\n        longStackTraces = false;\n    };\n    longStackTraces = true;\n    Promise.prototype._pushContext = Context.prototype._pushContext;\n    Promise.prototype._popContext = Context.prototype._popContext;\n    Promise._peekContext = Promise.prototype._peekContext = peekContext;\n    Promise.prototype._promiseCreated = function() {\n        var ctx = this._peekContext();\n        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n    };\n};\nreturn Context;\n};\n\n},{}],9:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, Context) {\nvar getDomain = Promise._getDomain;\nvar async = Promise._async;\nvar Warning = _dereq_(\"./errors\").Warning;\nvar util = _dereq_(\"./util\");\nvar canAttachTrace = util.canAttachTrace;\nvar unhandledRejectionHandled;\nvar possiblyUnhandledRejection;\nvar bluebirdFramePattern =\n    /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\nvar nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\nvar parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\nvar stackFramePattern = null;\nvar formatStack = null;\nvar indentStackFrames = false;\nvar printWarning;\nvar debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 &&\n                        (true ||\n                         util.env(\"BLUEBIRD_DEBUG\") ||\n                         util.env(\"NODE_ENV\") === \"development\"));\n\nvar warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n\nvar longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n\nvar wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 &&\n    (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\nPromise.prototype.suppressUnhandledRejections = function() {\n    var target = this._target();\n    target._bitField = ((target._bitField & (~1048576)) |\n                      524288);\n};\n\nPromise.prototype._ensurePossibleRejectionHandled = function () {\n    if ((this._bitField & 524288) !== 0) return;\n    this._setRejectionIsUnhandled();\n    async.invokeLater(this._notifyUnhandledRejection, this, undefined);\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n    fireRejectionEvent(\"rejectionHandled\",\n                                  unhandledRejectionHandled, undefined, this);\n};\n\nPromise.prototype._setReturnedNonUndefined = function() {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._returnedNonUndefined = function() {\n    return (this._bitField & 268435456) !== 0;\n};\n\nPromise.prototype._notifyUnhandledRejection = function () {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._settledValue();\n        this._setUnhandledRejectionIsNotified();\n        fireRejectionEvent(\"unhandledRejection\",\n                                      possiblyUnhandledRejection, reason, this);\n    }\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField | 262144;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField & (~262144);\n};\n\nPromise.prototype._isUnhandledRejectionNotified = function () {\n    return (this._bitField & 262144) > 0;\n};\n\nPromise.prototype._setRejectionIsUnhandled = function () {\n    this._bitField = this._bitField | 1048576;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled = function () {\n    this._bitField = this._bitField & (~1048576);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled = function () {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._warn = function(message, shouldUseOwnTrace, promise) {\n    return warn(message, shouldUseOwnTrace, promise || this);\n};\n\nPromise.onPossiblyUnhandledRejection = function (fn) {\n    var domain = getDomain();\n    possiblyUnhandledRejection =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nPromise.onUnhandledRejectionHandled = function (fn) {\n    var domain = getDomain();\n    unhandledRejectionHandled =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nvar disableLongStackTraces = function() {};\nPromise.longStackTraces = function () {\n    if (async.haveItemsQueued() && !config.longStackTraces) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (!config.longStackTraces && longStackTracesIsSupported()) {\n        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n        config.longStackTraces = true;\n        disableLongStackTraces = function() {\n            if (async.haveItemsQueued() && !config.longStackTraces) {\n                throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n            }\n            Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n            Context.deactivateLongStackTraces();\n            async.enableTrampoline();\n            config.longStackTraces = false;\n        };\n        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n        Context.activateLongStackTraces();\n        async.disableTrampolineIfNecessary();\n    }\n};\n\nPromise.hasLongStackTraces = function () {\n    return config.longStackTraces && longStackTracesIsSupported();\n};\n\nvar fireDomEvent = (function() {\n    try {\n        if (typeof CustomEvent === \"function\") {\n            var event = new CustomEvent(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new CustomEvent(name.toLowerCase(), {\n                    detail: event,\n                    cancelable: true\n                });\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else if (typeof Event === \"function\") {\n            var event = new Event(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new Event(name.toLowerCase(), {\n                    cancelable: true\n                });\n                domEvent.detail = event;\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else {\n            var event = document.createEvent(\"CustomEvent\");\n            event.initCustomEvent(\"testingtheevent\", false, true, {});\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = document.createEvent(\"CustomEvent\");\n                domEvent.initCustomEvent(name.toLowerCase(), false, true,\n                    event);\n                return !util.global.dispatchEvent(domEvent);\n            };\n        }\n    } catch (e) {}\n    return function() {\n        return false;\n    };\n})();\n\nvar fireGlobalEvent = (function() {\n    if (util.isNode) {\n        return function() {\n            return process.emit.apply(process, arguments);\n        };\n    } else {\n        if (!util.global) {\n            return function() {\n                return false;\n            };\n        }\n        return function(name) {\n            var methodName = \"on\" + name.toLowerCase();\n            var method = util.global[methodName];\n            if (!method) return false;\n            method.apply(util.global, [].slice.call(arguments, 1));\n            return true;\n        };\n    }\n})();\n\nfunction generatePromiseLifecycleEventObject(name, promise) {\n    return {promise: promise};\n}\n\nvar eventToObjectGenerator = {\n    promiseCreated: generatePromiseLifecycleEventObject,\n    promiseFulfilled: generatePromiseLifecycleEventObject,\n    promiseRejected: generatePromiseLifecycleEventObject,\n    promiseResolved: generatePromiseLifecycleEventObject,\n    promiseCancelled: generatePromiseLifecycleEventObject,\n    promiseChained: function(name, promise, child) {\n        return {promise: promise, child: child};\n    },\n    warning: function(name, warning) {\n        return {warning: warning};\n    },\n    unhandledRejection: function (name, reason, promise) {\n        return {reason: reason, promise: promise};\n    },\n    rejectionHandled: generatePromiseLifecycleEventObject\n};\n\nvar activeFireEvent = function (name) {\n    var globalEventFired = false;\n    try {\n        globalEventFired = fireGlobalEvent.apply(null, arguments);\n    } catch (e) {\n        async.throwLater(e);\n        globalEventFired = true;\n    }\n\n    var domEventFired = false;\n    try {\n        domEventFired = fireDomEvent(name,\n                    eventToObjectGenerator[name].apply(null, arguments));\n    } catch (e) {\n        async.throwLater(e);\n        domEventFired = true;\n    }\n\n    return domEventFired || globalEventFired;\n};\n\nPromise.config = function(opts) {\n    opts = Object(opts);\n    if (\"longStackTraces\" in opts) {\n        if (opts.longStackTraces) {\n            Promise.longStackTraces();\n        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n            disableLongStackTraces();\n        }\n    }\n    if (\"warnings\" in opts) {\n        var warningsOption = opts.warnings;\n        config.warnings = !!warningsOption;\n        wForgottenReturn = config.warnings;\n\n        if (util.isObject(warningsOption)) {\n            if (\"wForgottenReturn\" in warningsOption) {\n                wForgottenReturn = !!warningsOption.wForgottenReturn;\n            }\n        }\n    }\n    if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n        if (async.haveItemsQueued()) {\n            throw new Error(\n                \"cannot enable cancellation after promises are in use\");\n        }\n        Promise.prototype._clearCancellationData =\n            cancellationClearCancellationData;\n        Promise.prototype._propagateFrom = cancellationPropagateFrom;\n        Promise.prototype._onCancel = cancellationOnCancel;\n        Promise.prototype._setOnCancel = cancellationSetOnCancel;\n        Promise.prototype._attachCancellationCallback =\n            cancellationAttachCancellationCallback;\n        Promise.prototype._execute = cancellationExecute;\n        propagateFromFunction = cancellationPropagateFrom;\n        config.cancellation = true;\n    }\n    if (\"monitoring\" in opts) {\n        if (opts.monitoring && !config.monitoring) {\n            config.monitoring = true;\n            Promise.prototype._fireEvent = activeFireEvent;\n        } else if (!opts.monitoring && config.monitoring) {\n            config.monitoring = false;\n            Promise.prototype._fireEvent = defaultFireEvent;\n        }\n    }\n    return Promise;\n};\n\nfunction defaultFireEvent() { return false; }\n\nPromise.prototype._fireEvent = defaultFireEvent;\nPromise.prototype._execute = function(executor, resolve, reject) {\n    try {\n        executor(resolve, reject);\n    } catch (e) {\n        return e;\n    }\n};\nPromise.prototype._onCancel = function () {};\nPromise.prototype._setOnCancel = function (handler) { ; };\nPromise.prototype._attachCancellationCallback = function(onCancel) {\n    ;\n};\nPromise.prototype._captureStackTrace = function () {};\nPromise.prototype._attachExtraTrace = function () {};\nPromise.prototype._clearCancellationData = function() {};\nPromise.prototype._propagateFrom = function (parent, flags) {\n    ;\n    ;\n};\n\nfunction cancellationExecute(executor, resolve, reject) {\n    var promise = this;\n    try {\n        executor(resolve, reject, function(onCancel) {\n            if (typeof onCancel !== \"function\") {\n                throw new TypeError(\"onCancel must be a function, got: \" +\n                                    util.toString(onCancel));\n            }\n            promise._attachCancellationCallback(onCancel);\n        });\n    } catch (e) {\n        return e;\n    }\n}\n\nfunction cancellationAttachCancellationCallback(onCancel) {\n    if (!this._isCancellable()) return this;\n\n    var previousOnCancel = this._onCancel();\n    if (previousOnCancel !== undefined) {\n        if (util.isArray(previousOnCancel)) {\n            previousOnCancel.push(onCancel);\n        } else {\n            this._setOnCancel([previousOnCancel, onCancel]);\n        }\n    } else {\n        this._setOnCancel(onCancel);\n    }\n}\n\nfunction cancellationOnCancel() {\n    return this._onCancelField;\n}\n\nfunction cancellationSetOnCancel(onCancel) {\n    this._onCancelField = onCancel;\n}\n\nfunction cancellationClearCancellationData() {\n    this._cancellationParent = undefined;\n    this._onCancelField = undefined;\n}\n\nfunction cancellationPropagateFrom(parent, flags) {\n    if ((flags & 1) !== 0) {\n        this._cancellationParent = parent;\n        var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n        if (branchesRemainingToCancel === undefined) {\n            branchesRemainingToCancel = 0;\n        }\n        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n    }\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\n\nfunction bindingPropagateFrom(parent, flags) {\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\nvar propagateFromFunction = bindingPropagateFrom;\n\nfunction boundValueFunction() {\n    var ret = this._boundTo;\n    if (ret !== undefined) {\n        if (ret instanceof Promise) {\n            if (ret.isFulfilled()) {\n                return ret.value();\n            } else {\n                return undefined;\n            }\n        }\n    }\n    return ret;\n}\n\nfunction longStackTracesCaptureStackTrace() {\n    this._trace = new CapturedTrace(this._peekContext());\n}\n\nfunction longStackTracesAttachExtraTrace(error, ignoreSelf) {\n    if (canAttachTrace(error)) {\n        var trace = this._trace;\n        if (trace !== undefined) {\n            if (ignoreSelf) trace = trace._parent;\n        }\n        if (trace !== undefined) {\n            trace.attachExtraTrace(error);\n        } else if (!error.__stackCleaned__) {\n            var parsed = parseStackAndMessage(error);\n            util.notEnumerableProp(error, \"stack\",\n                parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n            util.notEnumerableProp(error, \"__stackCleaned__\", true);\n        }\n    }\n}\n\nfunction checkForgottenReturns(returnValue, promiseCreated, name, promise,\n                               parent) {\n    if (returnValue === undefined && promiseCreated !== null &&\n        wForgottenReturn) {\n        if (parent !== undefined && parent._returnedNonUndefined()) return;\n        if ((promise._bitField & 65535) === 0) return;\n\n        if (name) name = name + \" \";\n        var handlerLine = \"\";\n        var creatorLine = \"\";\n        if (promiseCreated._trace) {\n            var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n            var stack = cleanStack(traceLines);\n            for (var i = stack.length - 1; i >= 0; --i) {\n                var line = stack[i];\n                if (!nodeFramePattern.test(line)) {\n                    var lineMatches = line.match(parseLinePattern);\n                    if (lineMatches) {\n                        handlerLine  = \"at \" + lineMatches[1] +\n                            \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n                    }\n                    break;\n                }\n            }\n\n            if (stack.length > 0) {\n                var firstUserLine = stack[0];\n                for (var i = 0; i < traceLines.length; ++i) {\n\n                    if (traceLines[i] === firstUserLine) {\n                        if (i > 0) {\n                            creatorLine = \"\\n\" + traceLines[i - 1];\n                        }\n                        break;\n                    }\n                }\n\n            }\n        }\n        var msg = \"a promise was created in a \" + name +\n            \"handler \" + handlerLine + \"but was not returned from it, \" +\n            \"see http://goo.gl/rRqMUw\" +\n            creatorLine;\n        promise._warn(msg, true, promiseCreated);\n    }\n}\n\nfunction deprecated(name, replacement) {\n    var message = name +\n        \" is deprecated and will be removed in a future version.\";\n    if (replacement) message += \" Use \" + replacement + \" instead.\";\n    return warn(message);\n}\n\nfunction warn(message, shouldUseOwnTrace, promise) {\n    if (!config.warnings) return;\n    var warning = new Warning(message);\n    var ctx;\n    if (shouldUseOwnTrace) {\n        promise._attachExtraTrace(warning);\n    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n        ctx.attachExtraTrace(warning);\n    } else {\n        var parsed = parseStackAndMessage(warning);\n        warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n    }\n\n    if (!activeFireEvent(\"warning\", warning)) {\n        formatAndLogError(warning, \"\", true);\n    }\n}\n\nfunction reconstructStack(message, stacks) {\n    for (var i = 0; i < stacks.length - 1; ++i) {\n        stacks[i].push(\"From previous event:\");\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    if (i < stacks.length) {\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    return message + \"\\n\" + stacks.join(\"\\n\");\n}\n\nfunction removeDuplicateOrEmptyJumps(stacks) {\n    for (var i = 0; i < stacks.length; ++i) {\n        if (stacks[i].length === 0 ||\n            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n            stacks.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nfunction removeCommonRoots(stacks) {\n    var current = stacks[0];\n    for (var i = 1; i < stacks.length; ++i) {\n        var prev = stacks[i];\n        var currentLastIndex = current.length - 1;\n        var currentLastLine = current[currentLastIndex];\n        var commonRootMeetPoint = -1;\n\n        for (var j = prev.length - 1; j >= 0; --j) {\n            if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n            }\n        }\n\n        for (var j = commonRootMeetPoint; j >= 0; --j) {\n            var line = prev[j];\n            if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n            } else {\n                break;\n            }\n        }\n        current = prev;\n    }\n}\n\nfunction cleanStack(stack) {\n    var ret = [];\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        var isTraceLine = \"    (No stack trace)\" === line ||\n            stackFramePattern.test(line);\n        var isInternalFrame = isTraceLine && shouldIgnore(line);\n        if (isTraceLine && !isInternalFrame) {\n            if (indentStackFrames && line.charAt(0) !== \" \") {\n                line = \"    \" + line;\n            }\n            ret.push(line);\n        }\n    }\n    return ret;\n}\n\nfunction stackFramesAsArray(error) {\n    var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n            break;\n        }\n    }\n    if (i > 0 && error.name != \"SyntaxError\") {\n        stack = stack.slice(i);\n    }\n    return stack;\n}\n\nfunction parseStackAndMessage(error) {\n    var stack = error.stack;\n    var message = error.toString();\n    stack = typeof stack === \"string\" && stack.length > 0\n                ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n    return {\n        message: message,\n        stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n    };\n}\n\nfunction formatAndLogError(error, title, isSoft) {\n    if (typeof console !== \"undefined\") {\n        var message;\n        if (util.isObject(error)) {\n            var stack = error.stack;\n            message = title + formatStack(stack, error);\n        } else {\n            message = title + String(error);\n        }\n        if (typeof printWarning === \"function\") {\n            printWarning(message, isSoft);\n        } else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n}\n\nfunction fireRejectionEvent(name, localHandler, reason, promise) {\n    var localEventFired = false;\n    try {\n        if (typeof localHandler === \"function\") {\n            localEventFired = true;\n            if (name === \"rejectionHandled\") {\n                localHandler(promise);\n            } else {\n                localHandler(reason, promise);\n            }\n        }\n    } catch (e) {\n        async.throwLater(e);\n    }\n\n    if (name === \"unhandledRejection\") {\n        if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n            formatAndLogError(reason, \"Unhandled rejection \");\n        }\n    } else {\n        activeFireEvent(name, promise);\n    }\n}\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    } else {\n        str = obj && typeof obj.toString === \"function\"\n            ? obj.toString() : util.toString(obj);\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nfunction longStackTracesIsSupported() {\n    return typeof captureStackTrace === \"function\";\n}\n\nvar shouldIgnore = function() { return false; };\nvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\nfunction parseLineInfo(line) {\n    var matches = line.match(parseLineInfoRegex);\n    if (matches) {\n        return {\n            fileName: matches[1],\n            line: parseInt(matches[2], 10)\n        };\n    }\n}\n\nfunction setBounds(firstLineError, lastLineError) {\n    if (!longStackTracesIsSupported()) return;\n    var firstStackLines = firstLineError.stack.split(\"\\n\");\n    var lastStackLines = lastLineError.stack.split(\"\\n\");\n    var firstIndex = -1;\n    var lastIndex = -1;\n    var firstFileName;\n    var lastFileName;\n    for (var i = 0; i < firstStackLines.length; ++i) {\n        var result = parseLineInfo(firstStackLines[i]);\n        if (result) {\n            firstFileName = result.fileName;\n            firstIndex = result.line;\n            break;\n        }\n    }\n    for (var i = 0; i < lastStackLines.length; ++i) {\n        var result = parseLineInfo(lastStackLines[i]);\n        if (result) {\n            lastFileName = result.fileName;\n            lastIndex = result.line;\n            break;\n        }\n    }\n    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n        return;\n    }\n\n    shouldIgnore = function(line) {\n        if (bluebirdFramePattern.test(line)) return true;\n        var info = parseLineInfo(line);\n        if (info) {\n            if (info.fileName === firstFileName &&\n                (firstIndex <= info.line && info.line <= lastIndex)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n\nfunction CapturedTrace(parent) {\n    this._parent = parent;\n    this._promisesCreated = 0;\n    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n    captureStackTrace(this, CapturedTrace);\n    if (length > 32) this.uncycle();\n}\nutil.inherits(CapturedTrace, Error);\nContext.CapturedTrace = CapturedTrace;\n\nCapturedTrace.prototype.uncycle = function() {\n    var length = this._length;\n    if (length < 2) return;\n    var nodes = [];\n    var stackToIndex = {};\n\n    for (var i = 0, node = this; node !== undefined; ++i) {\n        nodes.push(node);\n        node = node._parent;\n    }\n    length = this._length = i;\n    for (var i = length - 1; i >= 0; --i) {\n        var stack = nodes[i].stack;\n        if (stackToIndex[stack] === undefined) {\n            stackToIndex[stack] = i;\n        }\n    }\n    for (var i = 0; i < length; ++i) {\n        var currentStack = nodes[i].stack;\n        var index = stackToIndex[currentStack];\n        if (index !== undefined && index !== i) {\n            if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n            }\n            nodes[i]._parent = undefined;\n            nodes[i]._length = 1;\n            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n            if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n                cycleEdgeNode._parent.uncycle();\n                cycleEdgeNode._length =\n                    cycleEdgeNode._parent._length + 1;\n            } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n            }\n            var currentChildLength = cycleEdgeNode._length + 1;\n            for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n            }\n            return;\n        }\n    }\n};\n\nCapturedTrace.prototype.attachExtraTrace = function(error) {\n    if (error.__stackCleaned__) return;\n    this.uncycle();\n    var parsed = parseStackAndMessage(error);\n    var message = parsed.message;\n    var stacks = [parsed.stack];\n\n    var trace = this;\n    while (trace !== undefined) {\n        stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n        trace = trace._parent;\n    }\n    removeCommonRoots(stacks);\n    removeDuplicateOrEmptyJumps(stacks);\n    util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n    util.notEnumerableProp(error, \"__stackCleaned__\", true);\n};\n\nvar captureStackTrace = (function stackDetection() {\n    var v8stackFramePattern = /^\\s*at\\s*/;\n    var v8stackFormatter = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if (error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        Error.stackTraceLimit += 6;\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        var captureStackTrace = Error.captureStackTrace;\n\n        shouldIgnore = function(line) {\n            return bluebirdFramePattern.test(line);\n        };\n        return function(receiver, ignoreUntil) {\n            Error.stackTraceLimit += 6;\n            captureStackTrace(receiver, ignoreUntil);\n            Error.stackTraceLimit -= 6;\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n        stackFramePattern = /@/;\n        formatStack = v8stackFormatter;\n        indentStackFrames = true;\n        return function captureStackTrace(o) {\n            o.stack = new Error().stack;\n        };\n    }\n\n    var hasStackAfterThrow;\n    try { throw new Error(); }\n    catch(e) {\n        hasStackAfterThrow = (\"stack\" in e);\n    }\n    if (!(\"stack\" in err) && hasStackAfterThrow &&\n        typeof Error.stackTraceLimit === \"number\") {\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        return function captureStackTrace(o) {\n            Error.stackTraceLimit += 6;\n            try { throw new Error(); }\n            catch(e) { o.stack = e.stack; }\n            Error.stackTraceLimit -= 6;\n        };\n    }\n\n    formatStack = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if ((typeof error === \"object\" ||\n            typeof error === \"function\") &&\n            error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    return null;\n\n})([]);\n\nif (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n    printWarning = function (message) {\n        console.warn(message);\n    };\n    if (util.isNode && process.stderr.isTTY) {\n        printWarning = function(message, isSoft) {\n            var color = isSoft ? \"\\u001b[33m\" : \"\\u001b[31m\";\n            console.warn(color + message + \"\\u001b[0m\\n\");\n        };\n    } else if (!util.isNode && typeof (new Error().stack) === \"string\") {\n        printWarning = function(message, isSoft) {\n            console.warn(\"%c\" + message,\n                        isSoft ? \"color: darkorange\" : \"color: red\");\n        };\n    }\n}\n\nvar config = {\n    warnings: warnings,\n    longStackTraces: false,\n    cancellation: false,\n    monitoring: false\n};\n\nif (longStackTraces) Promise.longStackTraces();\n\nreturn {\n    longStackTraces: function() {\n        return config.longStackTraces;\n    },\n    warnings: function() {\n        return config.warnings;\n    },\n    cancellation: function() {\n        return config.cancellation;\n    },\n    monitoring: function() {\n        return config.monitoring;\n    },\n    propagateFromFunction: function() {\n        return propagateFromFunction;\n    },\n    boundValueFunction: function() {\n        return boundValueFunction;\n    },\n    checkForgottenReturns: checkForgottenReturns,\n    setBounds: setBounds,\n    warn: warn,\n    deprecated: deprecated,\n    CapturedTrace: CapturedTrace,\n    fireDomEvent: fireDomEvent,\n    fireGlobalEvent: fireGlobalEvent\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],10:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction returner() {\n    return this.value;\n}\nfunction thrower() {\n    throw this.reason;\n}\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn = function (value) {\n    if (value instanceof Promise) value.suppressUnhandledRejections();\n    return this._then(\n        returner, undefined, undefined, {value: value}, undefined);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow = function (reason) {\n    return this._then(\n        thrower, undefined, undefined, {reason: reason}, undefined);\n};\n\nPromise.prototype.catchThrow = function (reason) {\n    if (arguments.length <= 1) {\n        return this._then(\n            undefined, thrower, undefined, {reason: reason}, undefined);\n    } else {\n        var _reason = arguments[1];\n        var handler = function() {throw _reason;};\n        return this.caught(reason, handler);\n    }\n};\n\nPromise.prototype.catchReturn = function (value) {\n    if (arguments.length <= 1) {\n        if (value instanceof Promise) value.suppressUnhandledRejections();\n        return this._then(\n            undefined, returner, undefined, {value: value}, undefined);\n    } else {\n        var _value = arguments[1];\n        if (_value instanceof Promise) _value.suppressUnhandledRejections();\n        var handler = function() {return _value;};\n        return this.caught(value, handler);\n    }\n};\n};\n\n},{}],11:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseReduce = Promise.reduce;\nvar PromiseAll = Promise.all;\n\nfunction promiseAllThis() {\n    return PromiseAll(this);\n}\n\nfunction PromiseMapSeries(promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n}\n\nPromise.prototype.each = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, this, undefined);\n};\n\nPromise.prototype.mapSeries = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n};\n\nPromise.each = function (promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, promises, undefined);\n};\n\nPromise.mapSeries = PromiseMapSeries;\n};\n\n\n},{}],12:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar Objectfreeze = es5.freeze;\nvar util = _dereq_(\"./util\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        notEnumerableProp(this, \"message\",\n            typeof message === \"string\" ? message : defaultMessage);\n        notEnumerableProp(this, \"name\", nameProperty);\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            Error.call(this);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar _TypeError, _RangeError;\nvar Warning = subError(\"Warning\", \"warning\");\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\nvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\ntry {\n    _TypeError = TypeError;\n    _RangeError = RangeError;\n} catch(e) {\n    _TypeError = subError(\"TypeError\", \"type error\");\n    _RangeError = subError(\"RangeError\", \"range error\");\n}\n\nvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\nfor (var i = 0; i < methods.length; ++i) {\n    if (typeof Array.prototype[methods[i]] === \"function\") {\n        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n    }\n}\n\nes5.defineProperty(AggregateError.prototype, \"length\", {\n    value: 0,\n    configurable: false,\n    writable: true,\n    enumerable: true\n});\nAggregateError.prototype[\"isOperational\"] = true;\nvar level = 0;\nAggregateError.prototype.toString = function() {\n    var indent = Array(level * 4 + 1).join(\" \");\n    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n    level++;\n    indent = Array(level * 4 + 1).join(\" \");\n    for (var i = 0; i < this.length; ++i) {\n        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n        var lines = str.split(\"\\n\");\n        for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n        }\n        str = lines.join(\"\\n\");\n        ret += str + \"\\n\";\n    }\n    level--;\n    return ret;\n};\n\nfunction OperationalError(message) {\n    if (!(this instanceof OperationalError))\n        return new OperationalError(message);\n    notEnumerableProp(this, \"name\", \"OperationalError\");\n    notEnumerableProp(this, \"message\", message);\n    this.cause = message;\n    this[\"isOperational\"] = true;\n\n    if (message instanceof Error) {\n        notEnumerableProp(this, \"message\", message.message);\n        notEnumerableProp(this, \"stack\", message.stack);\n    } else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(OperationalError, Error);\n\nvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        OperationalError: OperationalError,\n        RejectionError: OperationalError,\n        AggregateError: AggregateError\n    });\n    es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n        value: errorTypes,\n        writable: false,\n        enumerable: false,\n        configurable: false\n    });\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: _TypeError,\n    RangeError: _RangeError,\n    CancellationError: errorTypes.CancellationError,\n    OperationalError: errorTypes.OperationalError,\n    TimeoutError: errorTypes.TimeoutError,\n    AggregateError: errorTypes.AggregateError,\n    Warning: Warning\n};\n\n},{\"./es5\":13,\"./util\":36}],13:[function(_dereq_,module,exports){\nvar isES5 = (function(){\n    \"use strict\";\n    return this === undefined;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        getDescriptor: Object.getOwnPropertyDescriptor,\n        keys: Object.keys,\n        names: Object.getOwnPropertyNames,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5,\n        propertyIsWritable: function(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n        }\n    };\n} else {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function (o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    };\n\n    var ObjectGetDescriptor = function(o, key) {\n        return {value: o[key]};\n    };\n\n    var ObjectDefineProperty = function (o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    };\n\n    var ObjectFreeze = function (obj) {\n        return obj;\n    };\n\n    var ObjectGetPrototypeOf = function (obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    };\n\n    var ArrayIsArray = function (obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    };\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        names: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        getDescriptor: ObjectGetDescriptor,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5,\n        propertyIsWritable: function() {\n            return true;\n        }\n    };\n}\n\n},{}],14:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseMap = Promise.map;\n\nPromise.prototype.filter = function (fn, options) {\n    return PromiseMap(this, fn, options, INTERNAL);\n};\n\nPromise.filter = function (promises, fn, options) {\n    return PromiseMap(promises, fn, options, INTERNAL);\n};\n};\n\n},{}],15:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, tryConvertToPromise) {\nvar util = _dereq_(\"./util\");\nvar CancellationError = Promise.CancellationError;\nvar errorObj = util.errorObj;\n\nfunction PassThroughHandlerContext(promise, type, handler) {\n    this.promise = promise;\n    this.type = type;\n    this.handler = handler;\n    this.called = false;\n    this.cancelPromise = null;\n}\n\nPassThroughHandlerContext.prototype.isFinallyHandler = function() {\n    return this.type === 0;\n};\n\nfunction FinallyHandlerCancelReaction(finallyHandler) {\n    this.finallyHandler = finallyHandler;\n}\n\nFinallyHandlerCancelReaction.prototype._resultCancelled = function() {\n    checkCancel(this.finallyHandler);\n};\n\nfunction checkCancel(ctx, reason) {\n    if (ctx.cancelPromise != null) {\n        if (arguments.length > 1) {\n            ctx.cancelPromise._reject(reason);\n        } else {\n            ctx.cancelPromise._cancel();\n        }\n        ctx.cancelPromise = null;\n        return true;\n    }\n    return false;\n}\n\nfunction succeed() {\n    return finallyHandler.call(this, this.promise._target()._settledValue());\n}\nfunction fail(reason) {\n    if (checkCancel(this, reason)) return;\n    errorObj.e = reason;\n    return errorObj;\n}\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    if (!this.called) {\n        this.called = true;\n        var ret = this.isFinallyHandler()\n            ? handler.call(promise._boundValue())\n            : handler.call(promise._boundValue(), reasonOrValue);\n        if (ret !== undefined) {\n            promise._setReturnedNonUndefined();\n            var maybePromise = tryConvertToPromise(ret, promise);\n            if (maybePromise instanceof Promise) {\n                if (this.cancelPromise != null) {\n                    if (maybePromise._isCancelled()) {\n                        var reason =\n                            new CancellationError(\"late cancellation observer\");\n                        promise._attachExtraTrace(reason);\n                        errorObj.e = reason;\n                        return errorObj;\n                    } else if (maybePromise.isPending()) {\n                        maybePromise._attachCancellationCallback(\n                            new FinallyHandlerCancelReaction(this));\n                    }\n                }\n                return maybePromise._then(\n                    succeed, fail, undefined, this, undefined);\n            }\n        }\n    }\n\n    if (promise.isRejected()) {\n        checkCancel(this);\n        errorObj.e = reasonOrValue;\n        return errorObj;\n    } else {\n        checkCancel(this);\n        return reasonOrValue;\n    }\n}\n\nPromise.prototype._passThrough = function(handler, type, success, fail) {\n    if (typeof handler !== \"function\") return this.then();\n    return this._then(success,\n                      fail,\n                      undefined,\n                      new PassThroughHandlerContext(this, type, handler),\n                      undefined);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function (handler) {\n    return this._passThrough(handler,\n                             0,\n                             finallyHandler,\n                             finallyHandler);\n};\n\nPromise.prototype.tap = function (handler) {\n    return this._passThrough(handler, 1, finallyHandler);\n};\n\nreturn PassThroughHandlerContext;\n};\n\n},{\"./util\":36}],16:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          apiRejection,\n                          INTERNAL,\n                          tryConvertToPromise,\n                          Proxyable,\n                          debug) {\nvar errors = _dereq_(\"./errors\");\nvar TypeError = errors.TypeError;\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n    for (var i = 0; i < yieldHandlers.length; ++i) {\n        traceParent._pushContext();\n        var result = tryCatch(yieldHandlers[i])(value);\n        traceParent._popContext();\n        if (result === errorObj) {\n            traceParent._pushContext();\n            var ret = Promise.reject(errorObj.e);\n            traceParent._popContext();\n            return ret;\n        }\n        var maybePromise = tryConvertToPromise(result, traceParent);\n        if (maybePromise instanceof Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n    if (debug.cancellation()) {\n        var internal = new Promise(INTERNAL);\n        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n        this._promise = internal.lastly(function() {\n            return _finallyPromise;\n        });\n        internal._captureStackTrace();\n        internal._setOnCancel(this);\n    } else {\n        var promise = this._promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n    }\n    this._stack = stack;\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = undefined;\n    this._yieldHandlers = typeof yieldHandler === \"function\"\n        ? [yieldHandler].concat(yieldHandlers)\n        : yieldHandlers;\n    this._yieldedPromise = null;\n    this._cancellationPhase = false;\n}\nutil.inherits(PromiseSpawn, Proxyable);\n\nPromiseSpawn.prototype._isResolved = function() {\n    return this._promise === null;\n};\n\nPromiseSpawn.prototype._cleanup = function() {\n    this._promise = this._generator = null;\n    if (debug.cancellation() && this._finallyPromise !== null) {\n        this._finallyPromise._fulfill();\n        this._finallyPromise = null;\n    }\n};\n\nPromiseSpawn.prototype._promiseCancelled = function() {\n    if (this._isResolved()) return;\n    var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n\n    var result;\n    if (!implementsReturn) {\n        var reason = new Promise.CancellationError(\n            \"generator .return() sentinel\");\n        Promise.coroutine.returnSentinel = reason;\n        this._promise._attachExtraTrace(reason);\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"throw\"]).call(this._generator,\n                                                         reason);\n        this._promise._popContext();\n    } else {\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"return\"]).call(this._generator,\n                                                          undefined);\n        this._promise._popContext();\n    }\n    this._cancellationPhase = true;\n    this._yieldedPromise = null;\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseFulfilled = function(value) {\n    this._yieldedPromise = null;\n    this._promise._pushContext();\n    var result = tryCatch(this._generator.next).call(this._generator, value);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseRejected = function(reason) {\n    this._yieldedPromise = null;\n    this._promise._attachExtraTrace(reason);\n    this._promise._pushContext();\n    var result = tryCatch(this._generator[\"throw\"])\n        .call(this._generator, reason);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._resultCancelled = function() {\n    if (this._yieldedPromise instanceof Promise) {\n        var promise = this._yieldedPromise;\n        this._yieldedPromise = null;\n        promise.cancel();\n    }\n};\n\nPromiseSpawn.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function () {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = undefined;\n    this._promiseFulfilled(undefined);\n};\n\nPromiseSpawn.prototype._continue = function (result) {\n    var promise = this._promise;\n    if (result === errorObj) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._rejectCallback(result.e, false);\n        }\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._resolveCallback(value);\n        }\n    } else {\n        var maybePromise = tryConvertToPromise(value, this._promise);\n        if (!(maybePromise instanceof Promise)) {\n            maybePromise =\n                promiseFromYieldHandler(maybePromise,\n                                        this._yieldHandlers,\n                                        this._promise);\n            if (maybePromise === null) {\n                this._promiseRejected(\n                    new TypeError(\n                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\\u000a\".replace(\"%s\", value) +\n                        \"From coroutine:\\u000a\" +\n                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n                    )\n                );\n                return;\n            }\n        }\n        maybePromise = maybePromise._target();\n        var bitField = maybePromise._bitField;\n        ;\n        if (((bitField & 50397184) === 0)) {\n            this._yieldedPromise = maybePromise;\n            maybePromise._proxy(this, null);\n        } else if (((bitField & 33554432) !== 0)) {\n            Promise._async.invoke(\n                this._promiseFulfilled, this, maybePromise._value()\n            );\n        } else if (((bitField & 16777216) !== 0)) {\n            Promise._async.invoke(\n                this._promiseRejected, this, maybePromise._reason()\n            );\n        } else {\n            this._promiseCancelled();\n        }\n    }\n};\n\nPromise.coroutine = function (generatorFunction, options) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var yieldHandler = Object(options).yieldHandler;\n    var PromiseSpawn$ = PromiseSpawn;\n    var stack = new Error().stack;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                                      stack);\n        var ret = spawn.promise();\n        spawn._generator = generator;\n        spawn._promiseFulfilled(undefined);\n        return ret;\n    };\n};\n\nPromise.coroutine.addYieldHandler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    yieldHandlers.push(fn);\n};\n\nPromise.spawn = function (generatorFunction) {\n    debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],17:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,\n         getDomain) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar reject;\n\nif (!true) {\nif (canEvaluate) {\n    var thenCallback = function(i) {\n        return new Function(\"value\", \"holder\", \"                             \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = value;                                           \\n\\\n            holder.checkFulfillment(this);                                   \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var promiseSetter = function(i) {\n        return new Function(\"promise\", \"holder\", \"                           \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = promise;                                         \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var generateHolderClass = function(total) {\n        var props = new Array(total);\n        for (var i = 0; i < props.length; ++i) {\n            props[i] = \"this.p\" + (i+1);\n        }\n        var assignment = props.join(\" = \") + \" = null;\";\n        var cancellationCode= \"var promise;\\n\" + props.map(function(prop) {\n            return \"                                                         \\n\\\n                promise = \" + prop + \";                                      \\n\\\n                if (promise instanceof Promise) {                            \\n\\\n                    promise.cancel();                                        \\n\\\n                }                                                            \\n\\\n            \";\n        }).join(\"\\n\");\n        var passedArguments = props.join(\", \");\n        var name = \"Holder$\" + total;\n\n\n        var code = \"return function(tryCatch, errorObj, Promise, async) {    \\n\\\n            'use strict';                                                    \\n\\\n            function [TheName](fn) {                                         \\n\\\n                [TheProperties]                                              \\n\\\n                this.fn = fn;                                                \\n\\\n                this.asyncNeeded = true;                                     \\n\\\n                this.now = 0;                                                \\n\\\n            }                                                                \\n\\\n                                                                             \\n\\\n            [TheName].prototype._callFunction = function(promise) {          \\n\\\n                promise._pushContext();                                      \\n\\\n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \\n\\\n                promise._popContext();                                       \\n\\\n                if (ret === errorObj) {                                      \\n\\\n                    promise._rejectCallback(ret.e, false);                   \\n\\\n                } else {                                                     \\n\\\n                    promise._resolveCallback(ret);                           \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype.checkFulfillment = function(promise) {       \\n\\\n                var now = ++this.now;                                        \\n\\\n                if (now === [TheTotal]) {                                    \\n\\\n                    if (this.asyncNeeded) {                                  \\n\\\n                        async.invoke(this._callFunction, this, promise);     \\n\\\n                    } else {                                                 \\n\\\n                        this._callFunction(promise);                         \\n\\\n                    }                                                        \\n\\\n                                                                             \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype._resultCancelled = function() {              \\n\\\n                [CancellationCode]                                           \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            return [TheName];                                                \\n\\\n        }(tryCatch, errorObj, Promise, async);                               \\n\\\n        \";\n\n        code = code.replace(/\\[TheName\\]/g, name)\n            .replace(/\\[TheTotal\\]/g, total)\n            .replace(/\\[ThePassedArguments\\]/g, passedArguments)\n            .replace(/\\[TheProperties\\]/g, assignment)\n            .replace(/\\[CancellationCode\\]/g, cancellationCode);\n\n        return new Function(\"tryCatch\", \"errorObj\", \"Promise\", \"async\", code)\n                           (tryCatch, errorObj, Promise, async);\n    };\n\n    var holderClasses = [];\n    var thenCallbacks = [];\n    var promiseSetters = [];\n\n    for (var i = 0; i < 8; ++i) {\n        holderClasses.push(generateHolderClass(i + 1));\n        thenCallbacks.push(thenCallback(i + 1));\n        promiseSetters.push(promiseSetter(i + 1));\n    }\n\n    reject = function (reason) {\n        this._reject(reason);\n    };\n}}\n\nPromise.join = function () {\n    var last = arguments.length - 1;\n    var fn;\n    if (last > 0 && typeof arguments[last] === \"function\") {\n        fn = arguments[last];\n        if (!true) {\n            if (last <= 8 && canEvaluate) {\n                var ret = new Promise(INTERNAL);\n                ret._captureStackTrace();\n                var HolderClass = holderClasses[last - 1];\n                var holder = new HolderClass(fn);\n                var callbacks = thenCallbacks;\n\n                for (var i = 0; i < last; ++i) {\n                    var maybePromise = tryConvertToPromise(arguments[i], ret);\n                    if (maybePromise instanceof Promise) {\n                        maybePromise = maybePromise._target();\n                        var bitField = maybePromise._bitField;\n                        ;\n                        if (((bitField & 50397184) === 0)) {\n                            maybePromise._then(callbacks[i], reject,\n                                               undefined, ret, holder);\n                            promiseSetters[i](maybePromise, holder);\n                            holder.asyncNeeded = false;\n                        } else if (((bitField & 33554432) !== 0)) {\n                            callbacks[i].call(ret,\n                                              maybePromise._value(), holder);\n                        } else if (((bitField & 16777216) !== 0)) {\n                            ret._reject(maybePromise._reason());\n                        } else {\n                            ret._cancel();\n                        }\n                    } else {\n                        callbacks[i].call(ret, maybePromise, holder);\n                    }\n                }\n\n                if (!ret._isFateSealed()) {\n                    if (holder.asyncNeeded) {\n                        var domain = getDomain();\n                        if (domain !== null) {\n                            holder.fn = util.domainBind(domain, holder.fn);\n                        }\n                    }\n                    ret._setAsyncGuaranteed();\n                    ret._setOnCancel(holder);\n                }\n                return ret;\n            }\n        }\n    }\n    var args = [].slice.call(arguments);;\n    if (fn) args.pop();\n    var ret = new PromiseArray(args).promise();\n    return fn !== undefined ? ret.spread(fn) : ret;\n};\n\n};\n\n},{\"./util\":36}],18:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nfunction MappingPromiseArray(promises, fn, limit, _filter) {\n    this.constructor$(promises);\n    this._promise._captureStackTrace();\n    var domain = getDomain();\n    this._callback = domain === null ? fn : util.domainBind(domain, fn);\n    this._preservedValues = _filter === INTERNAL\n        ? new Array(this.length())\n        : null;\n    this._limit = limit;\n    this._inFlight = 0;\n    this._queue = [];\n    async.invoke(this._asyncInit, this, undefined);\n}\nutil.inherits(MappingPromiseArray, PromiseArray);\n\nMappingPromiseArray.prototype._asyncInit = function() {\n    this._init$(undefined, -2);\n};\n\nMappingPromiseArray.prototype._init = function () {};\n\nMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var limit = this._limit;\n\n    if (index < 0) {\n        index = (index * -1) - 1;\n        values[index] = value;\n        if (limit >= 1) {\n            this._inFlight--;\n            this._drainQueue();\n            if (this._isResolved()) return true;\n        }\n    } else {\n        if (limit >= 1 && this._inFlight >= limit) {\n            values[index] = value;\n            this._queue.push(index);\n            return false;\n        }\n        if (preservedValues !== null) preservedValues[index] = value;\n\n        var promise = this._promise;\n        var callback = this._callback;\n        var receiver = promise._boundValue();\n        promise._pushContext();\n        var ret = tryCatch(callback).call(receiver, value, index, length);\n        var promiseCreated = promise._popContext();\n        debug.checkForgottenReturns(\n            ret,\n            promiseCreated,\n            preservedValues !== null ? \"Promise.filter\" : \"Promise.map\",\n            promise\n        );\n        if (ret === errorObj) {\n            this._reject(ret.e);\n            return true;\n        }\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            var bitField = maybePromise._bitField;\n            ;\n            if (((bitField & 50397184) === 0)) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = maybePromise;\n                maybePromise._proxy(this, (index + 1) * -1);\n                return false;\n            } else if (((bitField & 33554432) !== 0)) {\n                ret = maybePromise._value();\n            } else if (((bitField & 16777216) !== 0)) {\n                this._reject(maybePromise._reason());\n                return true;\n            } else {\n                this._cancel();\n                return true;\n            }\n        }\n        values[index] = ret;\n    }\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= length) {\n        if (preservedValues !== null) {\n            this._filter(values, preservedValues);\n        } else {\n            this._resolve(values);\n        }\n        return true;\n    }\n    return false;\n};\n\nMappingPromiseArray.prototype._drainQueue = function () {\n    var queue = this._queue;\n    var limit = this._limit;\n    var values = this._values;\n    while (queue.length > 0 && this._inFlight < limit) {\n        if (this._isResolved()) return;\n        var index = queue.pop();\n        this._promiseFulfilled(values[index], index);\n    }\n};\n\nMappingPromiseArray.prototype._filter = function (booleans, values) {\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n    }\n    ret.length = j;\n    this._resolve(ret);\n};\n\nMappingPromiseArray.prototype.preservedValues = function () {\n    return this._preservedValues;\n};\n\nfunction map(promises, fn, options, _filter) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    var limit = 0;\n    if (options !== undefined) {\n        if (typeof options === \"object\" && options !== null) {\n            if (typeof options.concurrency !== \"number\") {\n                return Promise.reject(\n                    new TypeError(\"'concurrency' must be a number but it is \" +\n                                    util.classString(options.concurrency)));\n            }\n            limit = options.concurrency;\n        } else {\n            return Promise.reject(new TypeError(\n                            \"options argument must be an object but it is \" +\n                             util.classString(options)));\n        }\n    }\n    limit = typeof limit === \"number\" &&\n        isFinite(limit) && limit >= 1 ? limit : 0;\n    return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n}\n\nPromise.prototype.map = function (fn, options) {\n    return map(this, fn, options, null);\n};\n\nPromise.map = function (promises, fn, options, _filter) {\n    return map(promises, fn, options, _filter);\n};\n\n\n};\n\n},{\"./util\":36}],19:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n\n},{\"./util\":36}],20:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = _dereq_(\"./errors\");\nvar OperationalError = errors.OperationalError;\nvar es5 = _dereq_(\"./es5\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n    return function(err, value) {\n        if (promise === null) return;\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (!multiArgs) {\n            promise._fulfill(value);\n        } else {\n            var args = [].slice.call(arguments, 1);;\n            promise._fulfill(args);\n        }\n        promise = null;\n    };\n}\n\nmodule.exports = nodebackForPromise;\n\n},{\"./errors\":12,\"./es5\":13,\"./util\":36}],21:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar async = Promise._async;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction spreadAdapter(val, nodeback) {\n    var promise = this;\n    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n    var ret =\n        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nfunction successAdapter(val, nodeback) {\n    var promise = this;\n    var receiver = promise._boundValue();\n    var ret = val === undefined\n        ? tryCatch(nodeback).call(receiver, null)\n        : tryCatch(nodeback).call(receiver, null, val);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\nfunction errorAdapter(reason, nodeback) {\n    var promise = this;\n    if (!reason) {\n        var newReason = new Error(reason + \"\");\n        newReason.cause = reason;\n        reason = newReason;\n    }\n    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nPromise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,\n                                                                     options) {\n    if (typeof nodeback == \"function\") {\n        var adapter = successAdapter;\n        if (options !== undefined && Object(options).spread) {\n            adapter = spreadAdapter;\n        }\n        this._then(\n            adapter,\n            errorAdapter,\n            undefined,\n            this,\n            nodeback\n        );\n    }\n    return this;\n};\n};\n\n},{\"./util\":36}],22:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function() {\nvar makeSelfResolutionError = function () {\n    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar reflectHandler = function() {\n    return new Promise.PromiseInspection(this._target());\n};\nvar apiRejection = function(msg) {\n    return Promise.reject(new TypeError(msg));\n};\nfunction Proxyable() {}\nvar UNDEFINED_BINDING = {};\nvar util = _dereq_(\"./util\");\n\nvar getDomain;\nif (util.isNode) {\n    getDomain = function() {\n        var ret = process.domain;\n        if (ret === undefined) ret = null;\n        return ret;\n    };\n} else {\n    getDomain = function() {\n        return null;\n    };\n}\nutil.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\nvar es5 = _dereq_(\"./es5\");\nvar Async = _dereq_(\"./async\");\nvar async = new Async();\nes5.defineProperty(Promise, \"_async\", {value: async});\nvar errors = _dereq_(\"./errors\");\nvar TypeError = Promise.TypeError = errors.TypeError;\nPromise.RangeError = errors.RangeError;\nvar CancellationError = Promise.CancellationError = errors.CancellationError;\nPromise.TimeoutError = errors.TimeoutError;\nPromise.OperationalError = errors.OperationalError;\nPromise.RejectionError = errors.OperationalError;\nPromise.AggregateError = errors.AggregateError;\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {};\nvar tryConvertToPromise = _dereq_(\"./thenables\")(Promise, INTERNAL);\nvar PromiseArray =\n    _dereq_(\"./promise_array\")(Promise, INTERNAL,\n                               tryConvertToPromise, apiRejection, Proxyable);\nvar Context = _dereq_(\"./context\")(Promise);\n /*jshint unused:false*/\nvar createContext = Context.create;\nvar debug = _dereq_(\"./debuggability\")(Promise, Context);\nvar CapturedTrace = debug.CapturedTrace;\nvar PassThroughHandlerContext =\n    _dereq_(\"./finally\")(Promise, tryConvertToPromise);\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nfunction check(self, executor) {\n    if (typeof executor !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n    }\n    if (self.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n}\n\nfunction Promise(executor) {\n    this._bitField = 0;\n    this._fulfillmentHandler0 = undefined;\n    this._rejectionHandler0 = undefined;\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    if (executor !== INTERNAL) {\n        check(this, executor);\n        this._resolveFromExecutor(executor);\n    }\n    this._promiseCreated();\n    this._fireEvent(\"promiseCreated\", this);\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return apiRejection(\"expecting an object but got \" +\n                    \"A catch statement predicate \" + util.classString(item));\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n        return this.then(undefined, catchFilter(catchInstances, fn, this));\n    }\n    return this.then(undefined, fn);\n};\n\nPromise.prototype.reflect = function () {\n    return this._then(reflectHandler,\n        reflectHandler, undefined, this, undefined);\n};\n\nPromise.prototype.then = function (didFulfill, didReject) {\n    if (debug.warnings() && arguments.length > 0 &&\n        typeof didFulfill !== \"function\" &&\n        typeof didReject !== \"function\") {\n        var msg = \".then() only accepts functions but was passed: \" +\n                util.classString(didFulfill);\n        if (arguments.length > 1) {\n            msg += \", \" + util.classString(didReject);\n        }\n        this._warn(msg);\n    }\n    return this._then(didFulfill, didReject, undefined, undefined, undefined);\n};\n\nPromise.prototype.done = function (didFulfill, didReject) {\n    var promise =\n        this._then(didFulfill, didReject, undefined, undefined, undefined);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n};\n\nPromise.prototype.toJSON = function () {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: undefined,\n        rejectionReason: undefined\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this.value();\n        ret.isFulfilled = true;\n    } else if (this.isRejected()) {\n        ret.rejectionReason = this.reason();\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function () {\n    if (arguments.length > 0) {\n        this._warn(\".all() was passed arguments but it does not take any\");\n    }\n    return new PromiseArray(this).promise();\n};\n\nPromise.prototype.error = function (fn) {\n    return this.caught(util.originatesFromRejection, fn);\n};\n\nPromise.getNewLibraryCopy = module.exports;\n\nPromise.is = function (val) {\n    return val instanceof Promise;\n};\n\nPromise.fromNode = Promise.fromCallback = function(fn) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs\n                                         : false;\n    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n    if (result === errorObj) {\n        ret._rejectCallback(result.e, true);\n    }\n    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.all = function (promises) {\n    return new PromiseArray(promises).promise();\n};\n\nPromise.cast = function (obj) {\n    var ret = tryConvertToPromise(obj);\n    if (!(ret instanceof Promise)) {\n        ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._setFulfilled();\n        ret._rejectionHandler0 = obj;\n    }\n    return ret;\n};\n\nPromise.resolve = Promise.fulfilled = Promise.cast;\n\nPromise.reject = Promise.rejected = function (reason) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._rejectCallback(reason, true);\n    return ret;\n};\n\nPromise.setScheduler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return async.setScheduler(fn);\n};\n\nPromise.prototype._then = function (\n    didFulfill,\n    didReject,\n    _,    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== undefined;\n    var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n    var target = this._target();\n    var bitField = target._bitField;\n\n    if (!haveInternalData) {\n        promise._propagateFrom(this, 3);\n        promise._captureStackTrace();\n        if (receiver === undefined &&\n            ((this._bitField & 2097152) !== 0)) {\n            if (!((bitField & 50397184) === 0)) {\n                receiver = this._boundValue();\n            } else {\n                receiver = target === this ? undefined : this._boundTo;\n            }\n        }\n        this._fireEvent(\"promiseChained\", this, promise);\n    }\n\n    var domain = getDomain();\n    if (!((bitField & 50397184) === 0)) {\n        var handler, value, settler = target._settlePromiseCtx;\n        if (((bitField & 33554432) !== 0)) {\n            value = target._rejectionHandler0;\n            handler = didFulfill;\n        } else if (((bitField & 16777216) !== 0)) {\n            value = target._fulfillmentHandler0;\n            handler = didReject;\n            target._unsetRejectionIsUnhandled();\n        } else {\n            settler = target._settlePromiseLateCancellationObserver;\n            value = new CancellationError(\"late cancellation observer\");\n            target._attachExtraTrace(value);\n            handler = didReject;\n        }\n\n        async.invoke(settler, target, {\n            handler: domain === null ? handler\n                : (typeof handler === \"function\" &&\n                    util.domainBind(domain, handler)),\n            promise: promise,\n            receiver: receiver,\n            value: value\n        });\n    } else {\n        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n    }\n\n    return promise;\n};\n\nPromise.prototype._length = function () {\n    return this._bitField & 65535;\n};\n\nPromise.prototype._isFateSealed = function () {\n    return (this._bitField & 117506048) !== 0;\n};\n\nPromise.prototype._isFollowing = function () {\n    return (this._bitField & 67108864) === 67108864;\n};\n\nPromise.prototype._setLength = function (len) {\n    this._bitField = (this._bitField & -65536) |\n        (len & 65535);\n};\n\nPromise.prototype._setFulfilled = function () {\n    this._bitField = this._bitField | 33554432;\n    this._fireEvent(\"promiseFulfilled\", this);\n};\n\nPromise.prototype._setRejected = function () {\n    this._bitField = this._bitField | 16777216;\n    this._fireEvent(\"promiseRejected\", this);\n};\n\nPromise.prototype._setFollowing = function () {\n    this._bitField = this._bitField | 67108864;\n    this._fireEvent(\"promiseResolved\", this);\n};\n\nPromise.prototype._setIsFinal = function () {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._isFinal = function () {\n    return (this._bitField & 4194304) > 0;\n};\n\nPromise.prototype._unsetCancelled = function() {\n    this._bitField = this._bitField & (~65536);\n};\n\nPromise.prototype._setCancelled = function() {\n    this._bitField = this._bitField | 65536;\n    this._fireEvent(\"promiseCancelled\", this);\n};\n\nPromise.prototype._setWillBeCancelled = function() {\n    this._bitField = this._bitField | 8388608;\n};\n\nPromise.prototype._setAsyncGuaranteed = function() {\n    if (async.hasCustomScheduler()) return;\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._receiverAt = function (index) {\n    var ret = index === 0 ? this._receiver0 : this[\n            index * 4 - 4 + 3];\n    if (ret === UNDEFINED_BINDING) {\n        return undefined;\n    } else if (ret === undefined && this._isBound()) {\n        return this._boundValue();\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function (index) {\n    return this[\n            index * 4 - 4 + 2];\n};\n\nPromise.prototype._fulfillmentHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 0];\n};\n\nPromise.prototype._rejectionHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 1];\n};\n\nPromise.prototype._boundValue = function() {};\n\nPromise.prototype._migrateCallback0 = function (follower) {\n    var bitField = follower._bitField;\n    var fulfill = follower._fulfillmentHandler0;\n    var reject = follower._rejectionHandler0;\n    var promise = follower._promise0;\n    var receiver = follower._receiverAt(0);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._migrateCallbackAt = function (follower, index) {\n    var fulfill = follower._fulfillmentHandlerAt(index);\n    var reject = follower._rejectionHandlerAt(index);\n    var promise = follower._promiseAt(index);\n    var receiver = follower._receiverAt(index);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._addCallbacks = function (\n    fulfill,\n    reject,\n    promise,\n    receiver,\n    domain\n) {\n    var index = this._length();\n\n    if (index >= 65535 - 4) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        this._receiver0 = receiver;\n        if (typeof fulfill === \"function\") {\n            this._fulfillmentHandler0 =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this._rejectionHandler0 =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    } else {\n        var base = index * 4 - 4;\n        this[base + 2] = promise;\n        this[base + 3] = receiver;\n        if (typeof fulfill === \"function\") {\n            this[base + 0] =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this[base + 1] =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    }\n    this._setLength(index + 1);\n    return index;\n};\n\nPromise.prototype._proxy = function (proxyable, arg) {\n    this._addCallbacks(undefined, undefined, arg, proxyable, null);\n};\n\nPromise.prototype._resolveCallback = function(value, shouldBind) {\n    if (((this._bitField & 117506048) !== 0)) return;\n    if (value === this)\n        return this._rejectCallback(makeSelfResolutionError(), false);\n    var maybePromise = tryConvertToPromise(value, this);\n    if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n\n    if (shouldBind) this._propagateFrom(maybePromise, 2);\n\n    var promise = maybePromise._target();\n\n    if (promise === this) {\n        this._reject(makeSelfResolutionError());\n        return;\n    }\n\n    var bitField = promise._bitField;\n    if (((bitField & 50397184) === 0)) {\n        var len = this._length();\n        if (len > 0) promise._migrateCallback0(this);\n        for (var i = 1; i < len; ++i) {\n            promise._migrateCallbackAt(this, i);\n        }\n        this._setFollowing();\n        this._setLength(0);\n        this._setFollowee(promise);\n    } else if (((bitField & 33554432) !== 0)) {\n        this._fulfill(promise._value());\n    } else if (((bitField & 16777216) !== 0)) {\n        this._reject(promise._reason());\n    } else {\n        var reason = new CancellationError(\"late cancellation observer\");\n        promise._attachExtraTrace(reason);\n        this._reject(reason);\n    }\n};\n\nPromise.prototype._rejectCallback =\nfunction(reason, synchronous, ignoreNonErrorWarnings) {\n    var trace = util.ensureErrorObject(reason);\n    var hasStack = trace === reason;\n    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n        var message = \"a promise was rejected with a non-error: \" +\n            util.classString(reason);\n        this._warn(message, true);\n    }\n    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n    this._reject(reason);\n};\n\nPromise.prototype._resolveFromExecutor = function (executor) {\n    var promise = this;\n    this._captureStackTrace();\n    this._pushContext();\n    var synchronous = true;\n    var r = this._execute(executor, function(value) {\n        promise._resolveCallback(value);\n    }, function (reason) {\n        promise._rejectCallback(reason, synchronous);\n    });\n    synchronous = false;\n    this._popContext();\n\n    if (r !== undefined) {\n        promise._rejectCallback(r, true);\n    }\n};\n\nPromise.prototype._settlePromiseFromHandler = function (\n    handler, receiver, value, promise\n) {\n    var bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n    promise._pushContext();\n    var x;\n    if (receiver === APPLY) {\n        if (!value || typeof value.length !== \"number\") {\n            x = errorObj;\n            x.e = new TypeError(\"cannot .spread() a non-array: \" +\n                                    util.classString(value));\n        } else {\n            x = tryCatch(handler).apply(this._boundValue(), value);\n        }\n    } else {\n        x = tryCatch(handler).call(receiver, value);\n    }\n    var promiseCreated = promise._popContext();\n    bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n\n    if (x === NEXT_FILTER) {\n        promise._reject(value);\n    } else if (x === errorObj) {\n        promise._rejectCallback(x.e, false);\n    } else {\n        debug.checkForgottenReturns(x, promiseCreated, \"\",  promise, this);\n        promise._resolveCallback(x);\n    }\n};\n\nPromise.prototype._target = function() {\n    var ret = this;\n    while (ret._isFollowing()) ret = ret._followee();\n    return ret;\n};\n\nPromise.prototype._followee = function() {\n    return this._rejectionHandler0;\n};\n\nPromise.prototype._setFollowee = function(promise) {\n    this._rejectionHandler0 = promise;\n};\n\nPromise.prototype._settlePromise = function(promise, handler, receiver, value) {\n    var isPromise = promise instanceof Promise;\n    var bitField = this._bitField;\n    var asyncGuaranteed = ((bitField & 134217728) !== 0);\n    if (((bitField & 65536) !== 0)) {\n        if (isPromise) promise._invokeInternalOnCancel();\n\n        if (receiver instanceof PassThroughHandlerContext &&\n            receiver.isFinallyHandler()) {\n            receiver.cancelPromise = promise;\n            if (tryCatch(handler).call(receiver, value) === errorObj) {\n                promise._reject(errorObj.e);\n            }\n        } else if (handler === reflectHandler) {\n            promise._fulfill(reflectHandler.call(receiver));\n        } else if (receiver instanceof Proxyable) {\n            receiver._promiseCancelled(promise);\n        } else if (isPromise || promise instanceof PromiseArray) {\n            promise._cancel();\n        } else {\n            receiver.cancel();\n        }\n    } else if (typeof handler === \"function\") {\n        if (!isPromise) {\n            handler.call(receiver, value, promise);\n        } else {\n            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (receiver instanceof Proxyable) {\n        if (!receiver._isResolved()) {\n            if (((bitField & 33554432) !== 0)) {\n                receiver._promiseFulfilled(value, promise);\n            } else {\n                receiver._promiseRejected(value, promise);\n            }\n        }\n    } else if (isPromise) {\n        if (asyncGuaranteed) promise._setAsyncGuaranteed();\n        if (((bitField & 33554432) !== 0)) {\n            promise._fulfill(value);\n        } else {\n            promise._reject(value);\n        }\n    }\n};\n\nPromise.prototype._settlePromiseLateCancellationObserver = function(ctx) {\n    var handler = ctx.handler;\n    var promise = ctx.promise;\n    var receiver = ctx.receiver;\n    var value = ctx.value;\n    if (typeof handler === \"function\") {\n        if (!(promise instanceof Promise)) {\n            handler.call(receiver, value, promise);\n        } else {\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (promise instanceof Promise) {\n        promise._reject(value);\n    }\n};\n\nPromise.prototype._settlePromiseCtx = function(ctx) {\n    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n};\n\nPromise.prototype._settlePromise0 = function(handler, value, bitField) {\n    var promise = this._promise0;\n    var receiver = this._receiverAt(0);\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._settlePromise(promise, handler, receiver, value);\n};\n\nPromise.prototype._clearCallbackDataAtIndex = function(index) {\n    var base = index * 4 - 4;\n    this[base + 2] =\n    this[base + 3] =\n    this[base + 0] =\n    this[base + 1] = undefined;\n};\n\nPromise.prototype._fulfill = function (value) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._reject(err);\n    }\n    this._setFulfilled();\n    this._rejectionHandler0 = value;\n\n    if ((bitField & 65535) > 0) {\n        if (((bitField & 134217728) !== 0)) {\n            this._settlePromises();\n        } else {\n            async.settlePromises(this);\n        }\n    }\n};\n\nPromise.prototype._reject = function (reason) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    this._setRejected();\n    this._fulfillmentHandler0 = reason;\n\n    if (this._isFinal()) {\n        return async.fatalError(reason, util.isNode);\n    }\n\n    if ((bitField & 65535) > 0) {\n        async.settlePromises(this);\n    } else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._fulfillPromises = function (len, value) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._fulfillmentHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, value);\n    }\n};\n\nPromise.prototype._rejectPromises = function (len, reason) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._rejectionHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, reason);\n    }\n};\n\nPromise.prototype._settlePromises = function () {\n    var bitField = this._bitField;\n    var len = (bitField & 65535);\n\n    if (len > 0) {\n        if (((bitField & 16842752) !== 0)) {\n            var reason = this._fulfillmentHandler0;\n            this._settlePromise0(this._rejectionHandler0, reason, bitField);\n            this._rejectPromises(len, reason);\n        } else {\n            var value = this._rejectionHandler0;\n            this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n            this._fulfillPromises(len, value);\n        }\n        this._setLength(0);\n    }\n    this._clearCancellationData();\n};\n\nPromise.prototype._settledValue = function() {\n    var bitField = this._bitField;\n    if (((bitField & 33554432) !== 0)) {\n        return this._rejectionHandler0;\n    } else if (((bitField & 16777216) !== 0)) {\n        return this._fulfillmentHandler0;\n    }\n};\n\nfunction deferResolve(v) {this.promise._resolveCallback(v);}\nfunction deferReject(v) {this.promise._rejectCallback(v, false);}\n\nPromise.defer = Promise.pending = function() {\n    debug.deprecated(\"Promise.defer\", \"new Promise\");\n    var promise = new Promise(INTERNAL);\n    return {\n        promise: promise,\n        resolve: deferResolve,\n        reject: deferReject\n    };\n};\n\nutil.notEnumerableProp(Promise,\n                       \"_makeSelfResolutionError\",\n                       makeSelfResolutionError);\n\n_dereq_(\"./method\")(Promise, INTERNAL, tryConvertToPromise, apiRejection,\n    debug);\n_dereq_(\"./bind\")(Promise, INTERNAL, tryConvertToPromise, debug);\n_dereq_(\"./cancel\")(Promise, PromiseArray, apiRejection, debug);\n_dereq_(\"./direct_resolve\")(Promise);\n_dereq_(\"./synchronous_inspection\")(Promise);\n_dereq_(\"./join\")(\n    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\nPromise.Promise = Promise;\nPromise.version = \"3.4.7\";\n_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./call_get.js')(Promise);\n_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\n_dereq_('./timers.js')(Promise, INTERNAL, debug);\n_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\n_dereq_('./nodeify.js')(Promise);\n_dereq_('./promisify.js')(Promise, INTERNAL);\n_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\n_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\n_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./settle.js')(Promise, PromiseArray, debug);\n_dereq_('./some.js')(Promise, PromiseArray, apiRejection);\n_dereq_('./filter.js')(Promise, INTERNAL);\n_dereq_('./each.js')(Promise, INTERNAL);\n_dereq_('./any.js')(Promise);\n                                                         \n    util.toFastProperties(Promise);                                          \n    util.toFastProperties(Promise.prototype);                                \n    function fillTypes(value) {                                              \n        var p = new Promise(INTERNAL);                                       \n        p._fulfillmentHandler0 = value;                                      \n        p._rejectionHandler0 = value;                                        \n        p._promise0 = value;                                                 \n        p._receiver0 = value;                                                \n    }                                                                        \n    // Complete slack tracking, opt out of field-type tracking and           \n    // stabilize map                                                         \n    fillTypes({a: 1});                                                       \n    fillTypes({b: 2});                                                       \n    fillTypes({c: 3});                                                       \n    fillTypes(1);                                                            \n    fillTypes(function(){});                                                 \n    fillTypes(undefined);                                                    \n    fillTypes(false);                                                        \n    fillTypes(new Promise(INTERNAL));                                        \n    debug.setBounds(Async.firstLineError, util.lastLineError);               \n    return Promise;                                                          \n\n};\n\n},{\"./any.js\":1,\"./async\":2,\"./bind\":3,\"./call_get.js\":5,\"./cancel\":6,\"./catch_filter\":7,\"./context\":8,\"./debuggability\":9,\"./direct_resolve\":10,\"./each.js\":11,\"./errors\":12,\"./es5\":13,\"./filter.js\":14,\"./finally\":15,\"./generators.js\":16,\"./join\":17,\"./map.js\":18,\"./method\":19,\"./nodeback\":20,\"./nodeify.js\":21,\"./promise_array\":23,\"./promisify.js\":24,\"./props.js\":25,\"./race.js\":27,\"./reduce.js\":28,\"./settle.js\":30,\"./some.js\":31,\"./synchronous_inspection\":32,\"./thenables\":33,\"./timers.js\":34,\"./using.js\":35,\"./util\":36}],23:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n    apiRejection, Proxyable) {\nvar util = _dereq_(\"./util\");\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -2: return [];\n    case -3: return {};\n    }\n}\n\nfunction PromiseArray(values) {\n    var promise = this._promise = new Promise(INTERNAL);\n    if (values instanceof Promise) {\n        promise._propagateFrom(values, 3);\n    }\n    promise._setOnCancel(this);\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(undefined, -2);\n}\nutil.inherits(PromiseArray, Proxyable);\n\nPromiseArray.prototype.length = function () {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n    var values = tryConvertToPromise(this._values, this._promise);\n    if (values instanceof Promise) {\n        values = values._target();\n        var bitField = values._bitField;\n        ;\n        this._values = values;\n\n        if (((bitField & 50397184) === 0)) {\n            this._promise._setAsyncGuaranteed();\n            return values._then(\n                init,\n                this._reject,\n                undefined,\n                this,\n                resolveValueIfEmpty\n           );\n        } else if (((bitField & 33554432) !== 0)) {\n            values = values._value();\n        } else if (((bitField & 16777216) !== 0)) {\n            return this._reject(values._reason());\n        } else {\n            return this._cancel();\n        }\n    }\n    values = util.asArray(values);\n    if (values === null) {\n        var err = apiRejection(\n            \"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n        this._promise._rejectCallback(err, false);\n        return;\n    }\n\n    if (values.length === 0) {\n        if (resolveValueIfEmpty === -5) {\n            this._resolveEmptyArray();\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    this._iterate(values);\n};\n\nPromiseArray.prototype._iterate = function(values) {\n    var len = this.getActualLength(values.length);\n    this._length = len;\n    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n    var result = this._promise;\n    var isResolved = false;\n    var bitField = null;\n    for (var i = 0; i < len; ++i) {\n        var maybePromise = tryConvertToPromise(values[i], result);\n\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            bitField = maybePromise._bitField;\n        } else {\n            bitField = null;\n        }\n\n        if (isResolved) {\n            if (bitField !== null) {\n                maybePromise.suppressUnhandledRejections();\n            }\n        } else if (bitField !== null) {\n            if (((bitField & 50397184) === 0)) {\n                maybePromise._proxy(this, i);\n                this._values[i] = maybePromise;\n            } else if (((bitField & 33554432) !== 0)) {\n                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n            } else if (((bitField & 16777216) !== 0)) {\n                isResolved = this._promiseRejected(maybePromise._reason(), i);\n            } else {\n                isResolved = this._promiseCancelled(i);\n            }\n        } else {\n            isResolved = this._promiseFulfilled(maybePromise, i);\n        }\n    }\n    if (!isResolved) result._setAsyncGuaranteed();\n};\n\nPromiseArray.prototype._isResolved = function () {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function (value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype._cancel = function() {\n    if (this._isResolved() || !this._promise._isCancellable()) return;\n    this._values = null;\n    this._promise._cancel();\n};\n\nPromiseArray.prototype._reject = function (reason) {\n    this._values = null;\n    this._promise._rejectCallback(reason, false);\n};\n\nPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nPromiseArray.prototype._promiseCancelled = function() {\n    this._cancel();\n    return true;\n};\n\nPromiseArray.prototype._promiseRejected = function (reason) {\n    this._totalResolved++;\n    this._reject(reason);\n    return true;\n};\n\nPromiseArray.prototype._resultCancelled = function() {\n    if (this._isResolved()) return;\n    var values = this._values;\n    this._cancel();\n    if (values instanceof Promise) {\n        values.cancel();\n    } else {\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] instanceof Promise) {\n                values[i].cancel();\n            }\n        }\n    }\n};\n\nPromiseArray.prototype.shouldCopyValues = function () {\n    return true;\n};\n\nPromiseArray.prototype.getActualLength = function (len) {\n    return len;\n};\n\nreturn PromiseArray;\n};\n\n},{\"./util\":36}],24:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = _dereq_(\"./util\");\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar TypeError = _dereq_(\"./errors\").TypeError;\nvar defaultSuffix = \"Async\";\nvar defaultPromisified = {__isPromisified__: true};\nvar noCopyProps = [\n    \"arity\",    \"length\",\n    \"name\",\n    \"arguments\",\n    \"caller\",\n    \"callee\",\n    \"prototype\",\n    \"__isPromisified__\"\n];\nvar noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\nvar defaultFilter = function(name) {\n    return util.isIdentifier(name) &&\n        name.charAt(0) !== \"_\" &&\n        name !== \"constructor\";\n};\n\nfunction propsFilter(key) {\n    return !noCopyPropsPattern.test(key);\n}\n\nfunction isPromisified(fn) {\n    try {\n        return fn.__isPromisified__ === true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction hasPromisified(obj, key, suffix) {\n    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n                                            defaultPromisified);\n    return val ? isPromisified(val) : false;\n}\nfunction checkValid(ret, suffix, suffixRegexp) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (suffixRegexp.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\"\n                        .replace(\"%s\", suffix));\n                }\n            }\n        }\n    }\n}\n\nfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n    var keys = util.inheritedDataKeys(obj);\n    var ret = [];\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var value = obj[key];\n        var passesDefaultFilter = filter === defaultFilter\n            ? true : defaultFilter(key, value, obj);\n        if (typeof value === \"function\" &&\n            !isPromisified(value) &&\n            !hasPromisified(obj, key, suffix) &&\n            filter(key, value, obj, passesDefaultFilter)) {\n            ret.push(key, value);\n        }\n    }\n    checkValid(ret, suffix, suffixRegexp);\n    return ret;\n}\n\nvar escapeIdentRegex = function(str) {\n    return str.replace(/([$])/, \"\\\\$\");\n};\n\nvar makeNodePromisifiedEval;\nif (!true) {\nvar switchCaseArgumentOrder = function(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 3);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {\n        ret.push(i);\n    }\n    return ret;\n};\n\nvar argumentSequence = function(argumentCount) {\n    return util.filledRange(argumentCount, \"_arg\", \"\");\n};\n\nvar parameterDeclaration = function(parameterCount) {\n    return util.filledRange(\n        Math.max(parameterCount, 3), \"_arg\", \"\");\n};\n\nvar parameterCount = function(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n};\n\nmakeNodePromisifiedEval =\nfunction(callback, receiver, originalName, fn, _, multiArgs) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n    var shouldProxyThis = typeof callback === \"string\" || receiver === THIS;\n\n    function generateCallForArgumentCount(count) {\n        var args = argumentSequence(count).join(\", \");\n        var comma = count > 0 ? \", \" : \"\";\n        var ret;\n        if (shouldProxyThis) {\n            ret = \"ret = callback.call(this, {{args}}, nodeback); break;\\n\";\n        } else {\n            ret = receiver === undefined\n                ? \"ret = callback({{args}}, nodeback); break;\\n\"\n                : \"ret = callback.call(receiver, {{args}}, nodeback); break;\\n\";\n        }\n        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for (var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n\n        ret += \"                                                             \\n\\\n        default:                                                             \\n\\\n            var args = new Array(len + 1);                                   \\n\\\n            var i = 0;                                                       \\n\\\n            for (var i = 0; i < len; ++i) {                                  \\n\\\n               args[i] = arguments[i];                                       \\n\\\n            }                                                                \\n\\\n            args[i] = nodeback;                                              \\n\\\n            [CodeForCall]                                                    \\n\\\n            break;                                                           \\n\\\n        \".replace(\"[CodeForCall]\", (shouldProxyThis\n                                ? \"ret = callback.apply(this, args);\\n\"\n                                : \"ret = callback.apply(receiver, args);\\n\"));\n        return ret;\n    }\n\n    var getFunctionCode = typeof callback === \"string\"\n                                ? (\"this != null ? this['\"+callback+\"'] : fn\")\n                                : \"fn\";\n    var body = \"'use strict';                                                \\n\\\n        var ret = function (Parameters) {                                    \\n\\\n            'use strict';                                                    \\n\\\n            var len = arguments.length;                                      \\n\\\n            var promise = new Promise(INTERNAL);                             \\n\\\n            promise._captureStackTrace();                                    \\n\\\n            var nodeback = nodebackForPromise(promise, \" + multiArgs + \");   \\n\\\n            var ret;                                                         \\n\\\n            var callback = tryCatch([GetFunctionCode]);                      \\n\\\n            switch(len) {                                                    \\n\\\n                [CodeForSwitchCase]                                          \\n\\\n            }                                                                \\n\\\n            if (ret === errorObj) {                                          \\n\\\n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\\n\\\n            }                                                                \\n\\\n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \\n\\\n            return promise;                                                  \\n\\\n        };                                                                   \\n\\\n        notEnumerableProp(ret, '__isPromisified__', true);                   \\n\\\n        return ret;                                                          \\n\\\n    \".replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase())\n        .replace(\"[GetFunctionCode]\", getFunctionCode);\n    body = body.replace(\"Parameters\", parameterDeclaration(newParameterCount));\n    return new Function(\"Promise\",\n                        \"fn\",\n                        \"receiver\",\n                        \"withAppended\",\n                        \"maybeWrapAsError\",\n                        \"nodebackForPromise\",\n                        \"tryCatch\",\n                        \"errorObj\",\n                        \"notEnumerableProp\",\n                        \"INTERNAL\",\n                        body)(\n                    Promise,\n                    fn,\n                    receiver,\n                    withAppended,\n                    maybeWrapAsError,\n                    nodebackForPromise,\n                    util.tryCatch,\n                    util.errorObj,\n                    util.notEnumerableProp,\n                    INTERNAL);\n};\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n    var defaultThis = (function() {return this;})();\n    var method = callback;\n    if (typeof method === \"string\") {\n        callback = fn;\n    }\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        var promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n        var cb = typeof method === \"string\" && this !== defaultThis\n            ? this[method] : callback;\n        var fn = nodebackForPromise(promise, multiArgs);\n        try {\n            cb.apply(_receiver, withAppended(arguments, fn));\n        } catch(e) {\n            promise._rejectCallback(maybeWrapAsError(e), true, true);\n        }\n        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n        return promise;\n    }\n    util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n    var methods =\n        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n    for (var i = 0, len = methods.length; i < len; i+= 2) {\n        var key = methods[i];\n        var fn = methods[i+1];\n        var promisifiedKey = key + suffix;\n        if (promisifier === makeNodePromisified) {\n            obj[promisifiedKey] =\n                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n        } else {\n            var promisified = promisifier(fn, function() {\n                return makeNodePromisified(key, THIS, key,\n                                           fn, suffix, multiArgs);\n            });\n            util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n            obj[promisifiedKey] = promisified;\n        }\n    }\n    util.toFastProperties(obj);\n    return obj;\n}\n\nfunction promisify(callback, receiver, multiArgs) {\n    return makeNodePromisified(callback, receiver, undefined,\n                                callback, null, multiArgs);\n}\n\nPromise.promisify = function (fn, options) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    options = Object(options);\n    var receiver = options.context === undefined ? THIS : options.context;\n    var multiArgs = !!options.multiArgs;\n    var ret = promisify(fn, receiver, multiArgs);\n    util.copyDescriptors(fn, ret, propsFilter);\n    return ret;\n};\n\nPromise.promisifyAll = function (target, options) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    options = Object(options);\n    var multiArgs = !!options.multiArgs;\n    var suffix = options.suffix;\n    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n    var filter = options.filter;\n    if (typeof filter !== \"function\") filter = defaultFilter;\n    var promisifier = options.promisifier;\n    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n    if (!util.isIdentifier(suffix)) {\n        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n\n    var keys = util.inheritedDataKeys(target);\n    for (var i = 0; i < keys.length; ++i) {\n        var value = target[keys[i]];\n        if (keys[i] !== \"constructor\" &&\n            util.isClass(value)) {\n            promisifyAll(value.prototype, suffix, filter, promisifier,\n                multiArgs);\n            promisifyAll(value, suffix, filter, promisifier, multiArgs);\n        }\n    }\n\n    return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n};\n};\n\n\n},{\"./errors\":12,\"./nodeback\":20,\"./util\":36}],25:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar isObject = util.isObject;\nvar es5 = _dereq_(\"./es5\");\nvar Es6Map;\nif (typeof Map === \"function\") Es6Map = Map;\n\nvar mapToEntries = (function() {\n    var index = 0;\n    var size = 0;\n\n    function extractEntry(value, key) {\n        this[index] = value;\n        this[index + size] = key;\n        index++;\n    }\n\n    return function mapToEntries(map) {\n        size = map.size;\n        index = 0;\n        var ret = new Array(map.size * 2);\n        map.forEach(extractEntry, ret);\n        return ret;\n    };\n})();\n\nvar entriesToMap = function(entries) {\n    var ret = new Es6Map();\n    var length = entries.length / 2 | 0;\n    for (var i = 0; i < length; ++i) {\n        var key = entries[length + i];\n        var value = entries[i];\n        ret.set(key, value);\n    }\n    return ret;\n};\n\nfunction PropertiesPromiseArray(obj) {\n    var isMap = false;\n    var entries;\n    if (Es6Map !== undefined && obj instanceof Es6Map) {\n        entries = mapToEntries(obj);\n        isMap = true;\n    } else {\n        var keys = es5.keys(obj);\n        var len = keys.length;\n        entries = new Array(len * 2);\n        for (var i = 0; i < len; ++i) {\n            var key = keys[i];\n            entries[i] = obj[key];\n            entries[i + len] = key;\n        }\n    }\n    this.constructor$(entries);\n    this._isMap = isMap;\n    this._init$(undefined, -3);\n}\nutil.inherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init = function () {};\n\nPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val;\n        if (this._isMap) {\n            val = entriesToMap(this._values);\n        } else {\n            val = {};\n            var keyOffset = this.length();\n            for (var i = 0, len = this.length(); i < len; ++i) {\n                val[this._values[i + keyOffset]] = this._values[i];\n            }\n        }\n        this._resolve(val);\n        return true;\n    }\n    return false;\n};\n\nPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nPropertiesPromiseArray.prototype.getActualLength = function (len) {\n    return len >> 1;\n};\n\nfunction props(promises) {\n    var ret;\n    var castValue = tryConvertToPromise(promises);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    } else if (castValue instanceof Promise) {\n        ret = castValue._then(\n            Promise.props, undefined, undefined, undefined, undefined);\n    } else {\n        ret = new PropertiesPromiseArray(castValue).promise();\n    }\n\n    if (castValue instanceof Promise) {\n        ret._propagateFrom(castValue, 2);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function () {\n    return props(this);\n};\n\nPromise.props = function (promises) {\n    return props(promises);\n};\n};\n\n},{\"./es5\":13,\"./util\":36}],26:[function(_dereq_,module,exports){\n\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    var moveItemsCount = (front + length) & (oldCapacity - 1);\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;\n\n},{}],27:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else {\n        promises = util.asArray(promises);\n        if (promises === null)\n            return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 3);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n\n},{\"./util\":36}],28:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nfunction ReductionPromiseArray(promises, fn, initialValue, _each) {\n    this.constructor$(promises);\n    var domain = getDomain();\n    this._fn = domain === null ? fn : util.domainBind(domain, fn);\n    if (initialValue !== undefined) {\n        initialValue = Promise.resolve(initialValue);\n        initialValue._attachCancellationCallback(this);\n    }\n    this._initialValue = initialValue;\n    this._currentCancellable = null;\n    if(_each === INTERNAL) {\n        this._eachValues = Array(this._length);\n    } else if (_each === 0) {\n        this._eachValues = null;\n    } else {\n        this._eachValues = undefined;\n    }\n    this._promise._captureStackTrace();\n    this._init$(undefined, -5);\n}\nutil.inherits(ReductionPromiseArray, PromiseArray);\n\nReductionPromiseArray.prototype._gotAccum = function(accum) {\n    if (this._eachValues !== undefined && \n        this._eachValues !== null && \n        accum !== INTERNAL) {\n        this._eachValues.push(accum);\n    }\n};\n\nReductionPromiseArray.prototype._eachComplete = function(value) {\n    if (this._eachValues !== null) {\n        this._eachValues.push(value);\n    }\n    return this._eachValues;\n};\n\nReductionPromiseArray.prototype._init = function() {};\n\nReductionPromiseArray.prototype._resolveEmptyArray = function() {\n    this._resolve(this._eachValues !== undefined ? this._eachValues\n                                                 : this._initialValue);\n};\n\nReductionPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nReductionPromiseArray.prototype._resolve = function(value) {\n    this._promise._resolveCallback(value);\n    this._values = null;\n};\n\nReductionPromiseArray.prototype._resultCancelled = function(sender) {\n    if (sender === this._initialValue) return this._cancel();\n    if (this._isResolved()) return;\n    this._resultCancelled$();\n    if (this._currentCancellable instanceof Promise) {\n        this._currentCancellable.cancel();\n    }\n    if (this._initialValue instanceof Promise) {\n        this._initialValue.cancel();\n    }\n};\n\nReductionPromiseArray.prototype._iterate = function (values) {\n    this._values = values;\n    var value;\n    var i;\n    var length = values.length;\n    if (this._initialValue !== undefined) {\n        value = this._initialValue;\n        i = 0;\n    } else {\n        value = Promise.resolve(values[0]);\n        i = 1;\n    }\n\n    this._currentCancellable = value;\n\n    if (!value.isRejected()) {\n        for (; i < length; ++i) {\n            var ctx = {\n                accum: null,\n                value: values[i],\n                index: i,\n                length: length,\n                array: this\n            };\n            value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n        }\n    }\n\n    if (this._eachValues !== undefined) {\n        value = value\n            ._then(this._eachComplete, undefined, undefined, this, undefined);\n    }\n    value._then(completed, completed, undefined, value, this);\n};\n\nPromise.prototype.reduce = function (fn, initialValue) {\n    return reduce(this, fn, initialValue, null);\n};\n\nPromise.reduce = function (promises, fn, initialValue, _each) {\n    return reduce(promises, fn, initialValue, _each);\n};\n\nfunction completed(valueOrReason, array) {\n    if (this.isFulfilled()) {\n        array._resolve(valueOrReason);\n    } else {\n        array._reject(valueOrReason);\n    }\n}\n\nfunction reduce(promises, fn, initialValue, _each) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n    return array.promise();\n}\n\nfunction gotAccum(accum) {\n    this.accum = accum;\n    this.array._gotAccum(accum);\n    var value = tryConvertToPromise(this.value, this.array._promise);\n    if (value instanceof Promise) {\n        this.array._currentCancellable = value;\n        return value._then(gotValue, undefined, undefined, this, undefined);\n    } else {\n        return gotValue.call(this, value);\n    }\n}\n\nfunction gotValue(value) {\n    var array = this.array;\n    var promise = array._promise;\n    var fn = tryCatch(array._fn);\n    promise._pushContext();\n    var ret;\n    if (array._eachValues !== undefined) {\n        ret = fn.call(promise._boundValue(), value, this.index, this.length);\n    } else {\n        ret = fn.call(promise._boundValue(),\n                              this.accum, value, this.index, this.length);\n    }\n    if (ret instanceof Promise) {\n        array._currentCancellable = ret;\n    }\n    var promiseCreated = promise._popContext();\n    debug.checkForgottenReturns(\n        ret,\n        promiseCreated,\n        array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\",\n        promise\n    );\n    return ret;\n}\n};\n\n},{\"./util\":36}],29:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar schedule;\nvar noAsyncScheduler = function() {\n    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar NativePromise = util.getNativePromise();\nif (util.isNode && typeof MutationObserver === \"undefined\") {\n    var GlobalSetImmediate = global.setImmediate;\n    var ProcessNextTick = process.nextTick;\n    schedule = util.isRecentNode\n                ? function(fn) { GlobalSetImmediate.call(global, fn); }\n                : function(fn) { ProcessNextTick.call(process, fn); };\n} else if (typeof NativePromise === \"function\" &&\n           typeof NativePromise.resolve === \"function\") {\n    var nativePromise = NativePromise.resolve();\n    schedule = function(fn) {\n        nativePromise.then(fn);\n    };\n} else if ((typeof MutationObserver !== \"undefined\") &&\n          !(typeof window !== \"undefined\" &&\n            window.navigator &&\n            (window.navigator.standalone || window.cordova))) {\n    schedule = (function() {\n        var div = document.createElement(\"div\");\n        var opts = {attributes: true};\n        var toggleScheduled = false;\n        var div2 = document.createElement(\"div\");\n        var o2 = new MutationObserver(function() {\n            div.classList.toggle(\"foo\");\n            toggleScheduled = false;\n        });\n        o2.observe(div2, opts);\n\n        var scheduleToggle = function() {\n            if (toggleScheduled) return;\n                toggleScheduled = true;\n                div2.classList.toggle(\"foo\");\n            };\n\n            return function schedule(fn) {\n            var o = new MutationObserver(function() {\n                o.disconnect();\n                fn();\n            });\n            o.observe(div, opts);\n            scheduleToggle();\n        };\n    })();\n} else if (typeof setImmediate !== \"undefined\") {\n    schedule = function (fn) {\n        setImmediate(fn);\n    };\n} else if (typeof setTimeout !== \"undefined\") {\n    schedule = function (fn) {\n        setTimeout(fn, 0);\n    };\n} else {\n    schedule = noAsyncScheduler;\n}\nmodule.exports = schedule;\n\n},{\"./util\":36}],30:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray, debug) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = _dereq_(\"./util\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return Promise.settle(this);\n};\n};\n\n},{\"./util\":36}],31:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar RangeError = _dereq_(\"./errors\").RangeError;\nvar AggregateError = _dereq_(\"./errors\").AggregateError;\nvar isArray = util.isArray;\nvar CANCELLATION = {};\n\n\nfunction SomePromiseArray(values) {\n    this.constructor$(values);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\nutil.inherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function () {\n    if (!this._initialized) {\n        return;\n    }\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(undefined, -5);\n    var isArrayResolved = isArray(this._values);\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        this._reject(this._getRangeError(this.length()));\n    }\n};\n\nSomePromiseArray.prototype.init = function () {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function () {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function () {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany = function (count) {\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled = function (value) {\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        } else {\n            this._resolve(this._values);\n        }\n        return true;\n    }\n    return false;\n\n};\nSomePromiseArray.prototype._promiseRejected = function (reason) {\n    this._addRejected(reason);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._promiseCancelled = function () {\n    if (this._values instanceof Promise || this._values == null) {\n        return this._cancel();\n    }\n    this._addRejected(CANCELLATION);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._checkOutcome = function() {\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        var e = new AggregateError();\n        for (var i = this.length(); i < this._values.length; ++i) {\n            if (this._values[i] !== CANCELLATION) {\n                e.push(this._values[i]);\n            }\n        }\n        if (e.length > 0) {\n            this._reject(e);\n        } else {\n            this._cancel();\n        }\n        return true;\n    }\n    return false;\n};\n\nSomePromiseArray.prototype._fulfilled = function () {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function () {\n    return this._values.length - this.length();\n};\n\nSomePromiseArray.prototype._addRejected = function (reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled = function (value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill = function () {\n    return this.length() - this._rejected();\n};\n\nSomePromiseArray.prototype._getRangeError = function (count) {\n    var message = \"Input array must contain at least \" +\n            this._howMany + \" items but contains only \" + count + \" items\";\n    return new RangeError(message);\n};\n\nSomePromiseArray.prototype._resolveEmptyArray = function () {\n    this._reject(this._getRangeError(0));\n};\n\nfunction some(promises, howMany) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function (promises, howMany) {\n    return some(promises, howMany);\n};\n\nPromise.prototype.some = function (howMany) {\n    return some(this, howMany);\n};\n\nPromise._SomePromiseArray = SomePromiseArray;\n};\n\n},{\"./errors\":12,\"./util\":36}],32:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== undefined) {\n        promise = promise._target();\n        this._bitField = promise._bitField;\n        this._settledValueField = promise._isFateSealed()\n            ? promise._settledValue() : undefined;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValueField = undefined;\n    }\n}\n\nPromiseInspection.prototype._settledValue = function() {\n    return this._settledValueField;\n};\n\nvar value = PromiseInspection.prototype.value = function () {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar reason = PromiseInspection.prototype.error =\nPromiseInspection.prototype.reason = function () {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar isFulfilled = PromiseInspection.prototype.isFulfilled = function() {\n    return (this._bitField & 33554432) !== 0;\n};\n\nvar isRejected = PromiseInspection.prototype.isRejected = function () {\n    return (this._bitField & 16777216) !== 0;\n};\n\nvar isPending = PromiseInspection.prototype.isPending = function () {\n    return (this._bitField & 50397184) === 0;\n};\n\nvar isResolved = PromiseInspection.prototype.isResolved = function () {\n    return (this._bitField & 50331648) !== 0;\n};\n\nPromiseInspection.prototype.isCancelled = function() {\n    return (this._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.__isCancelled = function() {\n    return (this._bitField & 65536) === 65536;\n};\n\nPromise.prototype._isCancelled = function() {\n    return this._target().__isCancelled();\n};\n\nPromise.prototype.isCancelled = function() {\n    return (this._target()._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.isPending = function() {\n    return isPending.call(this._target());\n};\n\nPromise.prototype.isRejected = function() {\n    return isRejected.call(this._target());\n};\n\nPromise.prototype.isFulfilled = function() {\n    return isFulfilled.call(this._target());\n};\n\nPromise.prototype.isResolved = function() {\n    return isResolved.call(this._target());\n};\n\nPromise.prototype.value = function() {\n    return value.call(this._target());\n};\n\nPromise.prototype.reason = function() {\n    var target = this._target();\n    target._unsetRejectionIsUnhandled();\n    return reason.call(target);\n};\n\nPromise.prototype._value = function() {\n    return this._settledValue();\n};\n\nPromise.prototype._reason = function() {\n    this._unsetRejectionIsUnhandled();\n    return this._settledValue();\n};\n\nPromise.PromiseInspection = PromiseInspection;\n};\n\n},{}],33:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) return obj;\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n                obj._then(\n                    ret._fulfill,\n                    ret._reject,\n                    undefined,\n                    ret,\n                    null\n                );\n                return ret;\n            }\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction doGetThen(obj) {\n    return obj.then;\n}\n\nfunction getThen(obj) {\n    try {\n        return doGetThen(obj);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    try {\n        return hasProp.call(obj, \"_promise0\");\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x, resolve, reject);\n    synchronous = false;\n\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolve(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function reject(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n\n},{\"./util\":36}],34:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, debug) {\nvar util = _dereq_(\"./util\");\nvar TimeoutError = Promise.TimeoutError;\n\nfunction HandleWrapper(handle)  {\n    this.handle = handle;\n}\n\nHandleWrapper.prototype._resultCancelled = function() {\n    clearTimeout(this.handle);\n};\n\nvar afterValue = function(value) { return delay(+this).thenReturn(value); };\nvar delay = Promise.delay = function (ms, value) {\n    var ret;\n    var handle;\n    if (value !== undefined) {\n        ret = Promise.resolve(value)\n                ._then(afterValue, null, null, ms, undefined);\n        if (debug.cancellation() && value instanceof Promise) {\n            ret._setOnCancel(value);\n        }\n    } else {\n        ret = new Promise(INTERNAL);\n        handle = setTimeout(function() { ret._fulfill(); }, +ms);\n        if (debug.cancellation()) {\n            ret._setOnCancel(new HandleWrapper(handle));\n        }\n        ret._captureStackTrace();\n    }\n    ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.prototype.delay = function (ms) {\n    return delay(ms, this);\n};\n\nvar afterTimeout = function (promise, message, parent) {\n    var err;\n    if (typeof message !== \"string\") {\n        if (message instanceof Error) {\n            err = message;\n        } else {\n            err = new TimeoutError(\"operation timed out\");\n        }\n    } else {\n        err = new TimeoutError(message);\n    }\n    util.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._reject(err);\n\n    if (parent != null) {\n        parent.cancel();\n    }\n};\n\nfunction successClear(value) {\n    clearTimeout(this.handle);\n    return value;\n}\n\nfunction failureClear(reason) {\n    clearTimeout(this.handle);\n    throw reason;\n}\n\nPromise.prototype.timeout = function (ms, message) {\n    ms = +ms;\n    var ret, parent;\n\n    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n        if (ret.isPending()) {\n            afterTimeout(ret, message, parent);\n        }\n    }, ms));\n\n    if (debug.cancellation()) {\n        parent = this.then();\n        ret = parent._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n        ret._setOnCancel(handleWrapper);\n    } else {\n        ret = this._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n    }\n\n    return ret;\n};\n\n};\n\n},{\"./util\":36}],35:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n    createContext, INTERNAL, debug) {\n    var util = _dereq_(\"./util\");\n    var TypeError = _dereq_(\"./errors\").TypeError;\n    var inherits = _dereq_(\"./util\").inherits;\n    var errorObj = util.errorObj;\n    var tryCatch = util.tryCatch;\n    var NULL = {};\n\n    function thrower(e) {\n        setTimeout(function(){throw e;}, 0);\n    }\n\n    function castPreservingDisposable(thenable) {\n        var maybePromise = tryConvertToPromise(thenable);\n        if (maybePromise !== thenable &&\n            typeof thenable._isDisposable === \"function\" &&\n            typeof thenable._getDisposer === \"function\" &&\n            thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n        }\n        return maybePromise;\n    }\n    function dispose(resources, inspection) {\n        var i = 0;\n        var len = resources.length;\n        var ret = new Promise(INTERNAL);\n        function iterator() {\n            if (i >= len) return ret._fulfill();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n            if (maybePromise instanceof Promise &&\n                maybePromise._isDisposable()) {\n                try {\n                    maybePromise = tryConvertToPromise(\n                        maybePromise._getDisposer().tryDispose(inspection),\n                        resources.promise);\n                } catch (e) {\n                    return thrower(e);\n                }\n                if (maybePromise instanceof Promise) {\n                    return maybePromise._then(iterator, thrower,\n                                              null, null, null);\n                }\n            }\n            iterator();\n        }\n        iterator();\n        return ret;\n    }\n\n    function Disposer(data, promise, context) {\n        this._data = data;\n        this._promise = promise;\n        this._context = context;\n    }\n\n    Disposer.prototype.data = function () {\n        return this._data;\n    };\n\n    Disposer.prototype.promise = function () {\n        return this._promise;\n    };\n\n    Disposer.prototype.resource = function () {\n        if (this.promise().isFulfilled()) {\n            return this.promise().value();\n        }\n        return NULL;\n    };\n\n    Disposer.prototype.tryDispose = function(inspection) {\n        var resource = this.resource();\n        var context = this._context;\n        if (context !== undefined) context._pushContext();\n        var ret = resource !== NULL\n            ? this.doDispose(resource, inspection) : null;\n        if (context !== undefined) context._popContext();\n        this._promise._unsetDisposable();\n        this._data = null;\n        return ret;\n    };\n\n    Disposer.isDisposer = function (d) {\n        return (d != null &&\n                typeof d.resource === \"function\" &&\n                typeof d.tryDispose === \"function\");\n    };\n\n    function FunctionDisposer(fn, promise, context) {\n        this.constructor$(fn, promise, context);\n    }\n    inherits(FunctionDisposer, Disposer);\n\n    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n        var fn = this.data();\n        return fn.call(resource, resource, inspection);\n    };\n\n    function maybeUnwrapDisposer(value) {\n        if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n            return value.promise();\n        }\n        return value;\n    }\n\n    function ResourceList(length) {\n        this.length = length;\n        this.promise = null;\n        this[length-1] = null;\n    }\n\n    ResourceList.prototype._resultCancelled = function() {\n        var len = this.length;\n        for (var i = 0; i < len; ++i) {\n            var item = this[i];\n            if (item instanceof Promise) {\n                item.cancel();\n            }\n        }\n    };\n\n    Promise.using = function () {\n        var len = arguments.length;\n        if (len < 2) return apiRejection(\n                        \"you must pass at least 2 arguments to Promise.using\");\n        var fn = arguments[len - 1];\n        if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n        }\n        var input;\n        var spreadArgs = true;\n        if (len === 2 && Array.isArray(arguments[0])) {\n            input = arguments[0];\n            len = input.length;\n            spreadArgs = false;\n        } else {\n            input = arguments;\n            len--;\n        }\n        var resources = new ResourceList(len);\n        for (var i = 0; i < len; ++i) {\n            var resource = input[i];\n            if (Disposer.isDisposer(resource)) {\n                var disposer = resource;\n                resource = resource.promise();\n                resource._setDisposable(disposer);\n            } else {\n                var maybePromise = tryConvertToPromise(resource);\n                if (maybePromise instanceof Promise) {\n                    resource =\n                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n                            resources: resources,\n                            index: i\n                    }, undefined);\n                }\n            }\n            resources[i] = resource;\n        }\n\n        var reflectedResources = new Array(resources.length);\n        for (var i = 0; i < reflectedResources.length; ++i) {\n            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n        }\n\n        var resultPromise = Promise.all(reflectedResources)\n            .then(function(inspections) {\n                for (var i = 0; i < inspections.length; ++i) {\n                    var inspection = inspections[i];\n                    if (inspection.isRejected()) {\n                        errorObj.e = inspection.error();\n                        return errorObj;\n                    } else if (!inspection.isFulfilled()) {\n                        resultPromise.cancel();\n                        return;\n                    }\n                    inspections[i] = inspection.value();\n                }\n                promise._pushContext();\n\n                fn = tryCatch(fn);\n                var ret = spreadArgs\n                    ? fn.apply(undefined, inspections) : fn(inspections);\n                var promiseCreated = promise._popContext();\n                debug.checkForgottenReturns(\n                    ret, promiseCreated, \"Promise.using\", promise);\n                return ret;\n            });\n\n        var promise = resultPromise.lastly(function() {\n            var inspection = new Promise.PromiseInspection(resultPromise);\n            return dispose(resources, inspection);\n        });\n        resources.promise = promise;\n        promise._setOnCancel(resources);\n        return promise;\n    };\n\n    Promise.prototype._setDisposable = function (disposer) {\n        this._bitField = this._bitField | 131072;\n        this._disposer = disposer;\n    };\n\n    Promise.prototype._isDisposable = function () {\n        return (this._bitField & 131072) > 0;\n    };\n\n    Promise.prototype._getDisposer = function () {\n        return this._disposer;\n    };\n\n    Promise.prototype._unsetDisposable = function () {\n        this._bitField = this._bitField & (~131072);\n        this._disposer = undefined;\n    };\n\n    Promise.prototype.disposer = function (fn) {\n        if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n        }\n        throw new TypeError();\n    };\n\n};\n\n},{\"./errors\":12,\"./util\":36}],36:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar canEvaluate = typeof navigator == \"undefined\";\n\nvar errorObj = {e: {}};\nvar tryCatchTarget;\nvar globalObject = typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    this !== undefined ? this : null;\n\nfunction tryCatcher() {\n    try {\n        var target = tryCatchTarget;\n        tryCatchTarget = null;\n        return target.apply(this, arguments);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return typeof value === \"function\" ||\n           typeof value === \"object\" && value !== null;\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(safeToString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n    if (es5.isES5) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n        if (desc != null) {\n            return desc.get == null && desc.set == null\n                    ? desc.value\n                    : defaultValue;\n        }\n    } else {\n        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n    }\n}\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\nfunction thrower(r) {\n    throw r;\n}\n\nvar inheritedDataKeys = (function() {\n    var excludedPrototypes = [\n        Array.prototype,\n        Object.prototype,\n        Function.prototype\n    ];\n\n    var isExcludedProto = function(val) {\n        for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (excludedPrototypes[i] === val) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    if (es5.isES5) {\n        var getKeys = Object.getOwnPropertyNames;\n        return function(obj) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n            while (obj != null && !isExcludedProto(obj)) {\n                var keys;\n                try {\n                    keys = getKeys(obj);\n                } catch (e) {\n                    return ret;\n                }\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n                    if (desc != null && desc.get == null && desc.set == null) {\n                        ret.push(key);\n                    }\n                }\n                obj = es5.getPrototypeOf(obj);\n            }\n            return ret;\n        };\n    } else {\n        var hasProp = {}.hasOwnProperty;\n        return function(obj) {\n            if (isExcludedProto(obj)) return [];\n            var ret = [];\n\n            /*jshint forin:false */\n            enumeration: for (var key in obj) {\n                if (hasProp.call(obj, key)) {\n                    ret.push(key);\n                } else {\n                    for (var i = 0; i < excludedPrototypes.length; ++i) {\n                        if (hasProp.call(excludedPrototypes[i], key)) {\n                            continue enumeration;\n                        }\n                    }\n                    ret.push(key);\n                }\n            }\n            return ret;\n        };\n    }\n\n})();\n\nvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\nfunction isClass(fn) {\n    try {\n        if (typeof fn === \"function\") {\n            var keys = es5.names(fn.prototype);\n\n            var hasMethods = es5.isES5 && keys.length > 1;\n            var hasMethodsOtherThanConstructor = keys.length > 0 &&\n                !(keys.length === 1 && keys[0] === \"constructor\");\n            var hasThisAssignmentAndStaticMethods =\n                thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\n            if (hasMethods || hasMethodsOtherThanConstructor ||\n                hasThisAssignmentAndStaticMethods) {\n                return true;\n            }\n        }\n        return false;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction toFastProperties(obj) {\n    /*jshint -W027,-W055,-W031*/\n    function FakeConstructor() {}\n    FakeConstructor.prototype = obj;\n    var l = 8;\n    while (l--) new FakeConstructor();\n    return obj;\n    eval(obj);\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n    return rident.test(str);\n}\n\nfunction filledRange(count, prefix, suffix) {\n    var ret = new Array(count);\n    for(var i = 0; i < count; ++i) {\n        ret[i] = prefix + i + suffix;\n    }\n    return ret;\n}\n\nfunction safeToString(obj) {\n    try {\n        return obj + \"\";\n    } catch (e) {\n        return \"[no string representation]\";\n    }\n}\n\nfunction isError(obj) {\n    return obj !== null &&\n           typeof obj === \"object\" &&\n           typeof obj.message === \"string\" &&\n           typeof obj.name === \"string\";\n}\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isOperational\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n        e[\"isOperational\"] === true);\n}\n\nfunction canAttachTrace(obj) {\n    return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n}\n\nvar ensureErrorObject = (function() {\n    if (!(\"stack\" in new Error())) {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            try {throw new Error(safeToString(value));}\n            catch(err) {return err;}\n        };\n    } else {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n        };\n    }\n})();\n\nfunction classString(obj) {\n    return {}.toString.call(obj);\n}\n\nfunction copyDescriptors(from, to, filter) {\n    var keys = es5.names(from);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        if (filter(key)) {\n            try {\n                es5.defineProperty(to, key, es5.getDescriptor(from, key));\n            } catch (ignore) {}\n        }\n    }\n}\n\nvar asArray = function(v) {\n    if (es5.isArray(v)) {\n        return v;\n    }\n    return null;\n};\n\nif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n    var ArrayFrom = typeof Array.from === \"function\" ? function(v) {\n        return Array.from(v);\n    } : function(v) {\n        var ret = [];\n        var it = v[Symbol.iterator]();\n        var itResult;\n        while (!((itResult = it.next()).done)) {\n            ret.push(itResult.value);\n        }\n        return ret;\n    };\n\n    asArray = function(v) {\n        if (es5.isArray(v)) {\n            return v;\n        } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n            return ArrayFrom(v);\n        }\n        return null;\n    };\n}\n\nvar isNode = typeof process !== \"undefined\" &&\n        classString(process).toLowerCase() === \"[object process]\";\n\nvar hasEnvVariables = typeof process !== \"undefined\" &&\n    typeof process.env !== \"undefined\";\n\nfunction env(key) {\n    return hasEnvVariables ? process.env[key] : undefined;\n}\n\nfunction getNativePromise() {\n    if (typeof Promise === \"function\") {\n        try {\n            var promise = new Promise(function(){});\n            if ({}.toString.call(promise) === \"[object Promise]\") {\n                return Promise;\n            }\n        } catch (e) {}\n    }\n}\n\nfunction domainBind(self, cb) {\n    return self.bind(cb);\n}\n\nvar ret = {\n    isClass: isClass,\n    isIdentifier: isIdentifier,\n    inheritedDataKeys: inheritedDataKeys,\n    getDataPropertyOrDefault: getDataPropertyOrDefault,\n    thrower: thrower,\n    isArray: es5.isArray,\n    asArray: asArray,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    isError: isError,\n    canEvaluate: canEvaluate,\n    errorObj: errorObj,\n    tryCatch: tryCatch,\n    inherits: inherits,\n    withAppended: withAppended,\n    maybeWrapAsError: maybeWrapAsError,\n    toFastProperties: toFastProperties,\n    filledRange: filledRange,\n    toString: safeToString,\n    canAttachTrace: canAttachTrace,\n    ensureErrorObject: ensureErrorObject,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n    classString: classString,\n    copyDescriptors: copyDescriptors,\n    hasDevTools: typeof chrome !== \"undefined\" && chrome &&\n                 typeof chrome.loadTimes === \"function\",\n    isNode: isNode,\n    hasEnvVariables: hasEnvVariables,\n    env: env,\n    global: globalObject,\n    getNativePromise: getNativePromise,\n    domainBind: domainBind\n};\nret.isRecentNode = ret.isNode && (function() {\n    var version = process.versions.node.split(\".\").map(Number);\n    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);\n})();\n\nif (ret.isNode) ret.toFastProperties(process);\n\ntry {throw new Error(); } catch (e) {ret.lastLineError = e;}\nmodule.exports = ret;\n\n},{\"./es5\":13}]},{},[4])(4)\n});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":5}],3:[function(require,module,exports){\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n},{}],4:[function(require,module,exports){\n(function (global){\n/*!\n *  howler.js v2.0.2\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto iOS enabler.\n      self.mobileAutoEnable = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.value = vol;\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.value = muted ? 0 : self._volume;\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Mobile browsers will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _enableMobileAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on mobile devices if audio isn't already eanbled.\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(self._navigator && self._navigator.userAgent);\n      var isTouch = !!(('ontouchend' in window) || (self._navigator && self._navigator.maxTouchPoints > 0) || (self._navigator && self._navigator.msMaxTouchPoints > 0));\n      if (self._mobileEnabled || !self.ctx || (!isMobile && !isTouch)) {\n        return;\n      }\n\n      self._mobileEnabled = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function() {\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._mobileEnabled = true;\n          self.mobileAutoEnable = false;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchend', unlock, true);\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchend', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.state = 'resuming';\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio on iOS.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\n        Howler._enableMobileAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Check if this extension is available.\n        if (Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        var num = 0;\n        for (var i=0; i<self._sounds.length; i++) {\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n            num++;\n            id = self._sounds[i]._id;\n          }\n        }\n\n        if (num === 1) {\n          sprite = null;\n        } else {\n          id = null;\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If we have no sprite and the sound hasn't loaded, we must wait\n      // for the sound to load to get our audio's duration.\n      if (self._state !== 'loaded' && !self._sprite[sprite]) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(self._soundById(sound._id) ? sound._id : undefined);\n          }\n        });\n\n        return sound._id;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          setTimeout(function() {\n            self._emit('play', sound._id);\n          }, 0);\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n      // Update the parameters of the sound\n      sound._paused = false;\n      sound._ended = false;\n      sound._sprite = sprite;\n      sound._seek = seek;\n      sound._start = self._sprite[sprite][0] / 1000;\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n            }, 0);\n          }\n        };\n\n        var isRunning = (Howler.state === 'running');\n        if (self._state === 'loaded' && isRunning) {\n          playWebAudio();\n        } else {\n          // Wait for the audio to load and then begin playback.\n          self.once(isRunning ? 'load' : 'resume', playWebAudio, isRunning ? sound._id : null);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          setTimeout(function() {\n            node.play();\n\n            // Setup the new end timer.\n            if (timeout !== Infinity) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            if (!internal) {\n              self._emit('play', sound._id);\n            }\n          }, 0);\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (self._state === 'loaded' && (window && window.ejecta || !node.readyState && Howler._navigator.isCocoonJS));\n        if (node.readyState === 4 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                if (!internal) {\n                  self._emit('stop', sound._id);\n                }\n\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n            }\n          }\n        }\n\n        if (sound && !internal) {\n          self._emit('stop', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n      var diff = Math.abs(from - to);\n      var dir = from > to ? 'out' : 'in';\n      var steps = diff / 0.01;\n      var stepLen = (steps > 0) ? len / steps : len;\n\n      // Since browsers clamp timeouts to 4ms, we need to clamp our steps to that too.\n      if (stepLen < 4) {\n        steps = Math.ceil(steps / (4 / stepLen));\n        stepLen = 4;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          var vol = from;\n          sound._interval = setInterval(function(soundId, sound) {\n            // Update the volume amount, but only if the volume should change.\n            if (steps > 0) {\n              vol += (dir === 'in' ? 0.01 : -0.01);\n            }\n\n            // Make sure the volume is in the right bounds.\n            vol = Math.max(0, vol);\n            vol = Math.min(1, vol);\n\n            // Round to within 2 decimal points.\n            vol = Math.round(vol * 100) / 100;\n\n            // Change the volume.\n            if (self._webAudio) {\n              if (typeof id === 'undefined') {\n                self._volume = vol;\n              }\n\n              sound._volume = vol;\n            } else {\n              self.volume(vol, soundId, true);\n            }\n\n            // When the fade is complete, stop it and fire event.\n            if (vol === to) {\n              clearInterval(sound._interval);\n              sound._interval = null;\n              self.volume(vol, soundId);\n              self._emit('fade', soundId);\n            }\n          }.bind(self, ids[i], sound), stepLen);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            sound._rateSeek = self.seek(id[i]);\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.value = rate;\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Restart the playback if the sound was playing.\n          if (playing) {\n            self.play(id, true);\n          }\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node) {\n            sound._node.currentTime = seek;\n          }\n\n          self._emit('seek', id);\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n          self._emit('end', sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading.\n          sounds[i]._node.src = 'data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQAAAAA=';\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n\n        // Remove the references in the global Howler object.\n        var index = Howler._howls.indexOf(self);\n        if (index >= 0) {\n          Howler._howls.splice(index, 1);\n        }\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      if (fn) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          if (fn === events[i].fn && id === events[i].id) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function() {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // don't move onto the next task until this one is done\n        self.once(task.event, function() {\n          self._queue.shift();\n          self._loadQueue();\n        });\n\n        task.action();\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        clearTimeout(self._endTimers[id]);\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop;\n      }\n      sound._node.bufferSource.playbackRate.value = sound._rate;\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n\n      if (self._scratchBuffer) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        try { node.bufferSource.buffer = self._scratchBuffer; } catch(e) {}\n      }\n      node.bufferSource = null;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        self._node = new Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorListener, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Decode the buffer into an audio source.\n    Howler.ctx.decodeAudioData(arraybuffer, function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      }\n    }, function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    });\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.value = 1;\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.0.2\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n  \n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n      self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n      self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              sound._panner.setPosition(pan, 0, 0);\n            } else {\n              sound._panner.pan.value = pan;\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or\n   * all in the group. The most common usage is to set the 'x' position for\n   * left/right panning. Setting any value higher than 1.0 will begin to\n   * decrease the volume of the sound as it moves further away.\n   * @param  {Number} x  The x-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} y  The y-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} z  The z-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setPosition(x, y, z);\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setOrientation(x, y, z);\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) There will be no volume reduction inside this angle.\n   *     coneOuterAngle - (360 by default) The volume will be reduced to a constant value of\n   *                      `coneOuterGain` outside this angle.\n   *     coneOuterGain - (0 by default) The amount of volume reduction outside of `coneOuterAngle`.\n   *     distanceModel - ('inverse' by default) Determines algorithm to use to reduce volume as audio moves\n   *                      away from listener. Can be `linear`, `inverse` or `exponential`.\n   *     maxDistance - (10000 by default) Volume won't reduce between source/listener beyond this distance.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *     refDistance - (1 by default) A reference distance for reducing volume as the source\n   *                    moves away from the listener.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener.\n   * \n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : self._distanceModel,\n            maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : self._maxDistance,\n            panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : self._panningModel,\n            refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : self._refDistance,\n            rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : self._rolloffFactor\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.panningModel = pa.panningModel;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.value = sound._stereo;\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id);\n    }\n  };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],5:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],6:[function(require,module,exports){\n(function (global){\n// Last time updated: 2017-02-13 9:58:18 AM UTC\n\n// ________________\n// RecordRTC v5.4.1\n\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\n\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n\n'use strict';\n\n// ____________\n// RecordRTC.js\n\n/**\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a JavaScript-based media-recording library for modern web-browsers (supporting WebRTC getUserMedia API). It is optimized for different devices and browsers to bring all client-side (pluginfree) recording solutions in single place.\n * @summary JavaScript audio/video recording library runs top over WebRTC getUserMedia API.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef RecordRTC\n * @class\n * @example\n * var recordRTC = RecordRTC(mediaStream, {\n *     type: 'video' // audio or video or gif or canvas\n * });\n *\n * // or, you can also use the \"new\" keyword\n * var recordRTC = new RecordRTC(mediaStream[, config]);\n * @see For further information:\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n */\n\nfunction RecordRTC(mediaStream, config) {\n    if (!mediaStream) {\n        throw 'MediaStream is mandatory.';\n    }\n\n    config = config || {\n        type: 'video'\n    };\n\n    config = new RecordRTCConfiguration(mediaStream, config);\n\n    // a reference to user's recordRTC object\n    var self = this;\n\n    function startRecording() {\n        if (!config.disableLogs) {\n            console.debug('started recording ' + config.type + ' stream.');\n        }\n\n        if (mediaRecorder) {\n            mediaRecorder.clearRecordedData();\n            mediaRecorder.record();\n\n            if (self.recordingDuration) {\n                handleRecordingDuration();\n            }\n            return self;\n        }\n\n        initRecorder(function() {\n            if (self.recordingDuration) {\n                handleRecordingDuration();\n            }\n        });\n\n        return self;\n    }\n\n    function initRecorder(initCallback) {\n        if (initCallback) {\n            config.initCallback = function() {\n                initCallback();\n                initCallback = config.initCallback = null; // recordRTC.initRecorder should be call-backed once.\n            };\n        }\n\n        var Recorder = new GetRecorderType(mediaStream, config);\n\n        mediaRecorder = new Recorder(mediaStream, config);\n        mediaRecorder.record();\n\n        if (!config.disableLogs) {\n            console.debug('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\n        }\n    }\n\n    function stopRecording(callback) {\n        if (!mediaRecorder) {\n            return console.warn(WARNING);\n        }\n\n        /*jshint validthis:true */\n        var recordRTC = this;\n\n        if (!config.disableLogs) {\n            console.warn('Stopped recording ' + config.type + ' stream.');\n        }\n\n        if (config.type !== 'gif') {\n            mediaRecorder.stop(_callback);\n        } else {\n            mediaRecorder.stop();\n            _callback();\n        }\n\n        function _callback(__blob) {\n            for (var item in mediaRecorder) {\n                if (self) {\n                    self[item] = mediaRecorder[item];\n                }\n\n                if (recordRTC) {\n                    recordRTC[item] = mediaRecorder[item];\n                }\n            }\n\n            var blob = mediaRecorder.blob;\n\n            if (!blob) {\n                if (__blob) {\n                    mediaRecorder.blob = blob = __blob;\n                } else {\n                    throw 'Recording failed.';\n                }\n            }\n\n            if (callback) {\n                var url = URL.createObjectURL(blob);\n                callback(url);\n            }\n\n            if (blob && !config.disableLogs) {\n                console.debug(blob.type, '->', bytesToSize(blob.size));\n            }\n\n            if (!config.autoWriteToDisk) {\n                return;\n            }\n\n            getDataURL(function(dataURL) {\n                var parameter = {};\n                parameter[config.type + 'Blob'] = dataURL;\n                DiskStorage.Store(parameter);\n            });\n        }\n    }\n\n    function pauseRecording() {\n        if (!mediaRecorder) {\n            return console.warn(WARNING);\n        }\n\n        mediaRecorder.pause();\n\n        if (!config.disableLogs) {\n            console.debug('Paused recording.');\n        }\n    }\n\n    function resumeRecording() {\n        if (!mediaRecorder) {\n            return console.warn(WARNING);\n        }\n\n        // not all libs have this method yet\n        mediaRecorder.resume();\n\n        if (!config.disableLogs) {\n            console.debug('Resumed recording.');\n        }\n    }\n\n    function readFile(_blob) {\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\n    }\n\n    function getDataURL(callback, _mediaRecorder) {\n        if (!callback) {\n            throw 'Pass a callback function over getDataURL.';\n        }\n\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\n\n        if (!blob) {\n            if (!config.disableLogs) {\n                console.warn('Blob encoder did not finish its job yet.');\n            }\n\n            setTimeout(function() {\n                getDataURL(callback, _mediaRecorder);\n            }, 1000);\n            return;\n        }\n\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\n            var webWorker = processInWebWorker(readFile);\n\n            webWorker.onmessage = function(event) {\n                callback(event.data);\n            };\n\n            webWorker.postMessage(blob);\n        } else {\n            var reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.onload = function(event) {\n                callback(event.target.result);\n            };\n        }\n\n        function processInWebWorker(_function) {\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\n                'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\n            ], {\n                type: 'application/javascript'\n            }));\n\n            var worker = new Worker(blob);\n            URL.revokeObjectURL(blob);\n            return worker;\n        }\n    }\n\n    function handleRecordingDuration() {\n        setTimeout(function() {\n            stopRecording(self.onRecordingStopped);\n        }, self.recordingDuration);\n    }\n\n    var WARNING = 'It seems that \"startRecording\" is not invoked for ' + config.type + ' recorder.';\n\n    var mediaRecorder;\n\n    var returnObject = {\n        /**\n         * This method starts recording. It doesn't take any arguments.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.startRecording();\n         */\n        startRecording: startRecording,\n\n        /**\n         * This method stops recording. It takes a single \"callback\" argument. It is suggested to get blob or URI in the callback to make sure all encoders finished their jobs.\n         * @param {function} callback - This callback function is invoked after completion of all encoding jobs.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function(videoURL) {\n         *     video.src = videoURL;\n         *     recordRTC.blob; recordRTC.buffer;\n         * });\n         */\n        stopRecording: stopRecording,\n\n        /**\n         * This method pauses the recording process.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.pauseRecording();\n         */\n        pauseRecording: pauseRecording,\n\n        /**\n         * This method resumes the recording process.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.resumeRecording();\n         */\n        resumeRecording: resumeRecording,\n\n        /**\n         * This method initializes the recording process.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.initRecorder();\n         */\n        initRecorder: initRecorder,\n\n        /**\n         * This method sets the recording duration.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.setRecordingDuration();\n         */\n        setRecordingDuration: function(milliseconds, callback) {\n            if (typeof milliseconds === 'undefined') {\n                throw 'milliseconds is required.';\n            }\n\n            if (typeof milliseconds !== 'number') {\n                throw 'milliseconds must be a number.';\n            }\n\n            self.recordingDuration = milliseconds;\n            self.onRecordingStopped = callback || function() {};\n\n            return {\n                onRecordingStopped: function(callback) {\n                    self.onRecordingStopped = callback;\n                }\n            };\n        },\n\n        /**\n         * This method can be used to clear/reset all the recorded data.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.clearRecordedData();\n         */\n        clearRecordedData: function() {\n            if (!mediaRecorder) {\n                return console.warn(WARNING);\n            }\n\n            mediaRecorder.clearRecordedData();\n\n            if (!config.disableLogs) {\n                console.debug('Cleared old recorded data.');\n            }\n        },\n\n        /**\n         * It is equivalent to <code class=\"str\">\"recordRTC.blob\"</code> property.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     var blob = recordRTC.getBlob();\n         *\n         *     // equivalent to: recordRTC.blob property\n         *     var blob = recordRTC.blob;\n         * });\n         */\n        getBlob: function() {\n            if (!mediaRecorder) {\n                return console.warn(WARNING);\n            }\n\n            return mediaRecorder.blob;\n        },\n\n        /**\n         * This method returns the DataURL. It takes a single \"callback\" argument.\n         * @param {function} callback - DataURL is passed back over this callback.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     recordRTC.getDataURL(function(dataURL) {\n         *         video.src = dataURL;\n         *     });\n         * });\n         */\n        getDataURL: getDataURL,\n\n        /**\n         * This method returns the Virutal/Blob URL. It doesn't take any arguments.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     video.src = recordRTC.toURL();\n         * });\n         */\n        toURL: function() {\n            if (!mediaRecorder) {\n                return console.warn(WARNING);\n            }\n\n            return URL.createObjectURL(mediaRecorder.blob);\n        },\n\n        /**\n         * This method saves the blob/file to disk (by invoking save-as dialog). It takes a single (optional) argument i.e. FileName\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     recordRTC.save('file-name');\n         * });\n         */\n        save: function(fileName) {\n            if (!mediaRecorder) {\n                return console.warn(WARNING);\n            }\n\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\n        },\n\n        /**\n         * This method gets a blob from indexed-DB storage. It takes a single \"callback\" argument.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.getFromDisk(function(dataURL) {\n         *     video.src = dataURL;\n         * });\n         */\n        getFromDisk: function(callback) {\n            if (!mediaRecorder) {\n                return console.warn(WARNING);\n            }\n\n            RecordRTC.getFromDisk(config.type, callback);\n        },\n\n        /**\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\n         * @type {Array.<Array>}\n         * @param {Array} arrayOfWebPImages - Array of webp images.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var arrayOfWebPImages = [];\n         * arrayOfWebPImages.push({\n         *     duration: index,\n         *     image: 'data:image/webp;base64,...'\n         * });\n         * recordRTC.setAdvertisementArray(arrayOfWebPImages);\n         */\n        setAdvertisementArray: function(arrayOfWebPImages) {\n            config.advertisement = [];\n\n            var length = arrayOfWebPImages.length;\n            for (var i = 0; i < length; i++) {\n                config.advertisement.push({\n                    duration: i,\n                    image: arrayOfWebPImages[i]\n                });\n            }\n        },\n\n        /**\n         * It is equivalent to <code class=\"str\">\"recordRTC.getBlob()\"</code> method.\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     var blob = recordRTC.blob;\n         *\n         *     // equivalent to: recordRTC.getBlob() method\n         *     var blob = recordRTC.getBlob();\n         * });\n         */\n        blob: null,\n\n        /**\n         * @todo Add descriptions.\n         * @property {number} bufferSize - Either audio device's default buffer-size, or your custom value.\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     var bufferSize = recordRTC.bufferSize;\n         * });\n         */\n        bufferSize: 0,\n\n        /**\n         * @todo Add descriptions.\n         * @property {number} sampleRate - Audio device's default sample rates.\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     var sampleRate = recordRTC.sampleRate;\n         * });\n         */\n        sampleRate: 0,\n\n        /**\n         * @todo Add descriptions.\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     var buffer = recordRTC.buffer;\n         * });\n         */\n        buffer: null,\n\n        /**\n         * @todo Add descriptions.\n         * @property {DataView} view - Audio DataView, supported only in Chrome.\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recordRTC.stopRecording(function() {\n         *     var dataView = recordRTC.view;\n         * });\n         */\n        view: null\n    };\n\n    if (!this) {\n        self = returnObject;\n        return returnObject;\n    }\n\n    // if someone wants to use RecordRTC with the \"new\" keyword.\n    for (var prop in returnObject) {\n        this[prop] = returnObject[prop];\n    }\n\n    self = this;\n\n    return returnObject;\n}\n\n/**\n * This method can be used to get all recorded blobs from IndexedDB storage.\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\n * @param {function} callback - Callback function to get all stored blobs.\n * @method\n * @memberof RecordRTC\n * @example\n * RecordRTC.getFromDisk('all', function(dataURL, type){\n *     if(type === 'audio') { }\n *     if(type === 'video') { }\n *     if(type === 'gif')   { }\n * });\n */\nRecordRTC.getFromDisk = function(type, callback) {\n    if (!callback) {\n        throw 'callback is mandatory.';\n    }\n\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\n    DiskStorage.Fetch(function(dataURL, _type) {\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\n            callback(dataURL);\n        }\n\n        if (type === 'all' && callback) {\n            callback(dataURL, _type.replace('Blob', ''));\n        }\n    });\n};\n\n/**\n * This method can be used to store recorded blobs into IndexedDB storage.\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\n * @method\n * @memberof RecordRTC\n * @example\n * RecordRTC.writeToDisk({\n *     audio: audioBlob,\n *     video: videoBlob,\n *     gif  : gifBlob\n * });\n */\nRecordRTC.writeToDisk = function(options) {\n    console.log('Writing recorded blob(s) to disk!');\n    options = options || {};\n    if (options.audio && options.video && options.gif) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.video.getDataURL(function(videoDataURL) {\n                options.gif.getDataURL(function(gifDataURL) {\n                    DiskStorage.Store({\n                        audioBlob: audioDataURL,\n                        videoBlob: videoDataURL,\n                        gifBlob: gifDataURL\n                    });\n                });\n            });\n        });\n    } else if (options.audio && options.video) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.video.getDataURL(function(videoDataURL) {\n                DiskStorage.Store({\n                    audioBlob: audioDataURL,\n                    videoBlob: videoDataURL\n                });\n            });\n        });\n    } else if (options.audio && options.gif) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.gif.getDataURL(function(gifDataURL) {\n                DiskStorage.Store({\n                    audioBlob: audioDataURL,\n                    gifBlob: gifDataURL\n                });\n            });\n        });\n    } else if (options.video && options.gif) {\n        options.video.getDataURL(function(videoDataURL) {\n            options.gif.getDataURL(function(gifDataURL) {\n                DiskStorage.Store({\n                    videoBlob: videoDataURL,\n                    gifBlob: gifDataURL\n                });\n            });\n        });\n    } else if (options.audio) {\n        options.audio.getDataURL(function(audioDataURL) {\n            DiskStorage.Store({\n                audioBlob: audioDataURL\n            });\n        });\n    } else if (options.video) {\n        options.video.getDataURL(function(videoDataURL) {\n            DiskStorage.Store({\n                videoBlob: videoDataURL\n            });\n        });\n    } else if (options.gif) {\n        options.gif.getDataURL(function(gifDataURL) {\n            DiskStorage.Store({\n                gifBlob: gifDataURL\n            });\n        });\n    }\n};\n\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\n    module.exports = RecordRTC;\n}\n\nif (typeof define === 'function' && define.amd) {\n    define('RecordRTC', [], function() {\n        return RecordRTC;\n    });\n}\n\n// __________________________\n// RecordRTC-Configuration.js\n\n/**\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef RecordRTCConfiguration\n * @class\n * @example\n * var options = RecordRTCConfiguration(mediaStream, options);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\n */\n\nfunction RecordRTCConfiguration(mediaStream, config) {\n    if (config.recorderType && !config.type) {\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder) {\n            config.type = 'video';\n        } else if (config.recorderType === GifRecorder) {\n            config.type = 'gif';\n        } else if (config.recorderType === StereoAudioRecorder) {\n            config.type = 'audio';\n        } else if (config.recorderType === MediaStreamRecorder) {\n            if (mediaStream.getAudioTracks().length && mediaStream.getVideoTracks().length) {\n                config.type = 'video';\n            } else if (mediaStream.getAudioTracks().length && !mediaStream.getVideoTracks().length) {\n                config.type = 'audio';\n            } else if (!mediaStream.getAudioTracks().length && mediaStream.getVideoTracks().length) {\n                config.type = 'audio';\n            } else {\n                // config.type = 'UnKnown';\n            }\n        }\n    }\n\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\n        if (!config.mimeType) {\n            config.mimeType = 'video/webm';\n        }\n\n        if (!config.type) {\n            config.type = config.mimeType.split('/')[0];\n        }\n\n        if (!config.bitsPerSecond) {\n            // config.bitsPerSecond = 128000;\n        }\n    }\n\n    // consider default type=audio\n    if (!config.type) {\n        if (config.mimeType) {\n            config.type = config.mimeType.split('/')[0];\n        }\n        if (!config.type) {\n            config.type = 'audio';\n        }\n    }\n\n    return config;\n}\n\n// __________________\n// GetRecorderType.js\n\n/**\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\n * @summary It returns best recorder-type available for your browser.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef GetRecorderType\n * @class\n * @example\n * var RecorderType = GetRecorderType(options);\n * var recorder = new RecorderType(options);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n */\n\nfunction GetRecorderType(mediaStream, config) {\n    var recorder;\n\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\n    if (isChrome || isEdge || isOpera) {\n        // Media Stream Recording API has not been implemented in chrome yet;\n        // That's why using WebAudio API to record stereo audio in WAV format\n        recorder = StereoAudioRecorder;\n    }\n\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\n        recorder = MediaStreamRecorder;\n    }\n\n    // video recorder (in WebM format)\n    if (config.type === 'video' && (isChrome || isOpera)) {\n        recorder = WhammyRecorder;\n    }\n\n    // video recorder (in Gif format)\n    if (config.type === 'gif') {\n        recorder = GifRecorder;\n    }\n\n    // html2canvas recording!\n    if (config.type === 'canvas') {\n        recorder = CanvasRecorder;\n    }\n\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\n        if ((mediaStream.getVideoTracks && mediaStream.getVideoTracks().length) || (mediaStream.getAudioTracks && mediaStream.getAudioTracks().length)) {\n            // audio-only recording\n            if (config.type === 'audio') {\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\n                    recorder = MediaStreamRecorder;\n                }\n                // else recorder = StereoAudioRecorder;\n            } else {\n                // video or screen tracks\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\n                    recorder = MediaStreamRecorder;\n                }\n            }\n        }\n    }\n\n    if (config.recorderType) {\n        recorder = config.recorderType;\n    }\n\n    if (mediaStream instanceof Array && mediaStream.length) {\n        recorder = MultiStreamRecorder;\n    }\n\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\n        console.debug('Using recorderType:', recorder.name || recorder.constructor.name);\n    }\n\n    return recorder;\n}\n\n// _____________\n// MRecordRTC.js\n\n/**\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef MRecordRTC\n * @class\n * @example\n * var recorder = new MRecordRTC();\n * recorder.addStream(MediaStream);\n * recorder.mediaType = {\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\n *     video: true, // or WhammyRecorder or MediaStreamRecorder\n *     gif: true    // or GifRecorder\n * };\n * // mimeType is optional and should be set only in advance cases.\n * recorder.mimeType = {\n *     audio: 'audio/wav',\n *     video: 'video/webm',\n *     gif:   'image/gif'\n * };\n * recorder.startRecording();\n * @see For further information:\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n */\n\nfunction MRecordRTC(mediaStream) {\n\n    /**\n     * This method attaches MediaStream object to {@link MRecordRTC}.\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.addStream(MediaStream);\n     */\n    this.addStream = function(_mediaStream) {\n        if (_mediaStream) {\n            mediaStream = _mediaStream;\n        }\n    };\n\n    /**\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\n     * @memberof MRecordRTC\n     * @example\n     * var recorder = new MRecordRTC();\n     * recorder.mediaType = {\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder\n     *     gif  : true  // TRUE or GifRecorder\n     * };\n     */\n    this.mediaType = {\n        audio: true,\n        video: true\n    };\n\n    /**\n     * This method starts recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.startRecording();\n     */\n    this.startRecording = function() {\n        var mediaType = this.mediaType;\n        var recorderType;\n        var mimeType = this.mimeType || {\n            audio: null,\n            video: null,\n            gif: null\n        };\n\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && mediaStream.getAudioTracks && !mediaStream.getAudioTracks().length) {\n            // Firefox supports both audio/video in single blob\n            mediaType.audio = false;\n        }\n\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && mediaStream.getVideoTracks && !mediaStream.getVideoTracks().length) {\n            // Firefox supports both audio/video in single blob\n            mediaType.video = false;\n        }\n\n        if (!mediaType.audio && !mediaType.video) {\n            throw 'MediaStream must have either audio or video tracks.';\n        }\n\n        if (!!mediaType.audio) {\n            recorderType = null;\n            if (typeof mediaType.audio === 'function') {\n                recorderType = mediaType.audio;\n            }\n\n            this.audioRecorder = new RecordRTC(mediaStream, {\n                type: 'audio',\n                bufferSize: this.bufferSize,\n                sampleRate: this.sampleRate,\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.audio\n            });\n\n            if (!mediaType.video) {\n                this.audioRecorder.startRecording();\n            }\n        }\n\n        if (!!mediaType.video) {\n            recorderType = null;\n            if (typeof mediaType.video === 'function') {\n                recorderType = mediaType.video;\n            }\n\n            var newStream = mediaStream;\n\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\n                var videoTrack = mediaStream.getVideoTracks()[0];\n\n                if (!!navigator.mozGetUserMedia) {\n                    newStream = new MediaStream();\n                    newStream.addTrack(videoTrack);\n\n                    if (recorderType && recorderType === WhammyRecorder) {\n                        // Firefox does NOT support webp-encoding yet\n                        recorderType = MediaStreamRecorder;\n                    }\n                } else {\n                    newStream = new MediaStream([videoTrack]);\n                }\n            }\n\n            this.videoRecorder = new RecordRTC(newStream, {\n                type: 'video',\n                video: this.video,\n                canvas: this.canvas,\n                frameInterval: this.frameInterval || 10,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.video\n            });\n\n            if (!mediaType.audio) {\n                this.videoRecorder.startRecording();\n            }\n        }\n\n        if (!!mediaType.audio && !!mediaType.video) {\n            var self = this;\n            if (isMediaRecorderCompatible()) {\n                self.audioRecorder = null;\n                self.videoRecorder.startRecording();\n            } else {\n                self.videoRecorder.initRecorder(function() {\n                    self.audioRecorder.initRecorder(function() {\n                        // Both recorders are ready to record things accurately\n                        self.videoRecorder.startRecording();\n                        self.audioRecorder.startRecording();\n                    });\n                });\n            }\n        }\n\n        if (!!mediaType.gif) {\n            recorderType = null;\n            if (typeof mediaType.gif === 'function') {\n                recorderType = mediaType.gif;\n            }\n            this.gifRecorder = new RecordRTC(mediaStream, {\n                type: 'gif',\n                frameRate: this.frameRate || 200,\n                quality: this.quality || 10,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.gif\n            });\n            this.gifRecorder.startRecording();\n        }\n    };\n\n    /**\n     * This method stops recording.\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.stopRecording(function(recording){\n     *     var audioBlob = recording.audio;\n     *     var videoBlob = recording.video;\n     *     var gifBlob   = recording.gif;\n     * });\n     */\n    this.stopRecording = function(callback) {\n        callback = callback || function() {};\n\n        if (this.audioRecorder) {\n            this.audioRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'audio');\n            });\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'video');\n            });\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'gif');\n            });\n        }\n    };\n\n    /**\n     * This method pauses recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.pauseRecording();\n     */\n    this.pauseRecording = function() {\n        if (this.audioRecorder) {\n            this.audioRecorder.pauseRecording();\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.pauseRecording();\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.pauseRecording();\n        }\n    };\n\n    /**\n     * This method resumes recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.resumeRecording();\n     */\n    this.resumeRecording = function() {\n        if (this.audioRecorder) {\n            this.audioRecorder.resumeRecording();\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.resumeRecording();\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.resumeRecording();\n        }\n    };\n\n    /**\n     * This method can be used to manually get all recorded blobs.\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.getBlob(function(recording){\n     *     var audioBlob = recording.audio;\n     *     var videoBlob = recording.video;\n     *     var gifBlob   = recording.gif;\n     * });\n     * // or\n     * var audioBlob = recorder.getBlob().audio;\n     * var videoBlob = recorder.getBlob().video;\n     */\n    this.getBlob = function(callback) {\n        var output = {};\n\n        if (this.audioRecorder) {\n            output.audio = this.audioRecorder.getBlob();\n        }\n\n        if (this.videoRecorder) {\n            output.video = this.videoRecorder.getBlob();\n        }\n\n        if (this.gifRecorder) {\n            output.gif = this.gifRecorder.getBlob();\n        }\n\n        if (callback) {\n            callback(output);\n        }\n\n        return output;\n    };\n\n    /**\n     * This method can be used to manually get all recorded blobs' DataURLs.\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.getDataURL(function(recording){\n     *     var audioDataURL = recording.audio;\n     *     var videoDataURL = recording.video;\n     *     var gifDataURL   = recording.gif;\n     * });\n     */\n    this.getDataURL = function(callback) {\n        this.getBlob(function(blob) {\n            if (blob.audio && blob.video) {\n                getDataURL(blob.audio, function(_audioDataURL) {\n                    getDataURL(blob.video, function(_videoDataURL) {\n                        callback({\n                            audio: _audioDataURL,\n                            video: _videoDataURL\n                        });\n                    });\n                });\n            } else if (blob.audio) {\n                getDataURL(blob.audio, function(_audioDataURL) {\n                    callback({\n                        audio: _audioDataURL\n                    });\n                });\n            } else if (blob.video) {\n                getDataURL(blob.video, function(_videoDataURL) {\n                    callback({\n                        video: _videoDataURL\n                    });\n                });\n            }\n        });\n\n        function getDataURL(blob, callback00) {\n            if (typeof Worker !== 'undefined') {\n                var webWorker = processInWebWorker(function readFile(_blob) {\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\n                });\n\n                webWorker.onmessage = function(event) {\n                    callback00(event.data);\n                };\n\n                webWorker.postMessage(blob);\n            } else {\n                var reader = new FileReader();\n                reader.readAsDataURL(blob);\n                reader.onload = function(event) {\n                    callback00(event.target.result);\n                };\n            }\n        }\n\n        function processInWebWorker(_function) {\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\n                'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\n            ], {\n                type: 'application/javascript'\n            }));\n\n            var worker = new Worker(blob);\n            var url;\n            if (typeof URL !== 'undefined') {\n                url = URL;\n            } else if (typeof webkitURL !== 'undefined') {\n                url = webkitURL;\n            } else {\n                throw 'Neither URL nor webkitURL detected.';\n            }\n            url.revokeObjectURL(blob);\n            return worker;\n        }\n    };\n\n    /**\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.writeToDisk();\n     */\n    this.writeToDisk = function() {\n        RecordRTC.writeToDisk({\n            audio: this.audioRecorder,\n            video: this.videoRecorder,\n            gif: this.gifRecorder\n        });\n    };\n\n    /**\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.save({\n     *     audio: 'audio-file-name',\n     *     video: 'video-file-name',\n     *     gif  : 'gif-file-name'\n     * });\n     */\n    this.save = function(args) {\n        args = args || {\n            audio: true,\n            video: true,\n            gif: true\n        };\n\n        if (!!args.audio && this.audioRecorder) {\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\n        }\n\n        if (!!args.video && this.videoRecorder) {\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\n        }\n        if (!!args.gif && this.gifRecorder) {\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\n        }\n    };\n}\n\n/**\n * This method can be used to get all recorded blobs from IndexedDB storage.\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\n * @param {function} callback - Callback function to get all stored blobs.\n * @method\n * @memberof MRecordRTC\n * @example\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\n *     if(type === 'audio') { }\n *     if(type === 'video') { }\n *     if(type === 'gif')   { }\n * });\n */\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\n\n/**\n * This method can be used to store recorded blobs into IndexedDB storage.\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\n * @method\n * @memberof MRecordRTC\n * @example\n * MRecordRTC.writeToDisk({\n *     audio: audioBlob,\n *     video: videoBlob,\n *     gif  : gifBlob\n * });\n */\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MRecordRTC = MRecordRTC;\n}\n\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n\n(function(that) {\n    if (!that) {\n        return;\n    }\n\n    if (typeof window !== 'undefined') {\n        return;\n    }\n\n    if (typeof global === 'undefined') {\n        return;\n    }\n\n    global.navigator = {\n        userAgent: browserFakeUserAgent,\n        getUserMedia: function() {}\n    };\n\n    if (!global.console) {\n        global.console = {};\n    }\n\n    if (typeof global.console.debug === 'undefined') {\n        global.console.debug = global.console.info = global.console.error = global.console.log = global.console.log || function() {\n            console.log(arguments);\n        };\n    }\n\n    if (typeof document === 'undefined') {\n        /*global document:true */\n        that.document = {};\n\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\n            var obj = {\n                getContext: function() {\n                    return obj;\n                },\n                play: function() {},\n                pause: function() {},\n                drawImage: function() {},\n                toDataURL: function() {\n                    return '';\n                }\n            };\n            return obj;\n        };\n\n        that.HTMLVideoElement = function() {};\n    }\n\n    if (typeof location === 'undefined') {\n        /*global location:true */\n        that.location = {\n            protocol: 'file:',\n            href: '',\n            hash: ''\n        };\n    }\n\n    if (typeof screen === 'undefined') {\n        /*global screen:true */\n        that.screen = {\n            width: 0,\n            height: 0\n        };\n    }\n\n    if (typeof URL === 'undefined') {\n        /*global screen:true */\n        that.URL = {\n            createObjectURL: function() {\n                return '';\n            },\n            revokeObjectURL: function() {\n                return '';\n            }\n        };\n    }\n\n    /*global window:true */\n    that.window = global;\n})(typeof global !== 'undefined' ? global : null);\n\n// _____________________________\n// Cross-Browser-Declarations.js\n\n// animation-frame used in WebM recording\n\n/*jshint -W079 */\nvar requestAnimationFrame = window.requestAnimationFrame;\nif (typeof requestAnimationFrame === 'undefined') {\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = webkitRequestAnimationFrame;\n    }\n\n    if (typeof mozRequestAnimationFrame !== 'undefined') {\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = mozRequestAnimationFrame;\n    }\n}\n\n/*jshint -W079 */\nvar cancelAnimationFrame = window.cancelAnimationFrame;\nif (typeof cancelAnimationFrame === 'undefined') {\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = webkitCancelAnimationFrame;\n    }\n\n    if (typeof mozCancelAnimationFrame !== 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = mozCancelAnimationFrame;\n    }\n}\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === 'undefined') {\n    if (typeof webkitAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\n/*jshint -W079 */\nvar URL = window.URL;\n\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\n    /*global URL:true */\n    URL = webkitURL;\n}\n\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\n    }\n\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.mozGetUserMedia;\n    }\n}\n\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\nvar isChrome = !isOpera && !isEdge && !!navigator.webkitGetUserMedia;\n\nvar MediaStream = window.MediaStream;\n\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n    MediaStream = webkitMediaStream;\n}\n\n/*global MediaStream:true */\nif (typeof MediaStream !== 'undefined') {\n    if (!('getVideoTracks' in MediaStream.prototype)) {\n        MediaStream.prototype.getVideoTracks = function() {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function(track) {\n                if (track.kind.toString().indexOf('video') !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n\n        MediaStream.prototype.getAudioTracks = function() {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function(track) {\n                if (track.kind.toString().indexOf('audio') !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n    }\n\n    if (!('stop' in MediaStream.prototype)) {\n        MediaStream.prototype.stop = function() {\n            this.getAudioTracks().forEach(function(track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n\n            this.getVideoTracks().forEach(function(track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n        };\n    }\n}\n\n// below function via: http://goo.gl/B3ae8c\n/**\n * @param {number} bytes - Pass bytes and get formafted string.\n * @returns {string} - formafted string\n * @example\n * bytesToSize(1024*1024*5) === '5 GB'\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction bytesToSize(bytes) {\n    var k = 1000;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) {\n        return '0 Bytes';\n    }\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n}\n\n/**\n * @param {Blob} file - File or Blob object. This parameter is required.\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\n * @example\n * invokeSaveAsDialog(blob or file, [optional] fileName);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction invokeSaveAsDialog(file, fileName) {\n    if (!file) {\n        throw 'Blob object is required.';\n    }\n\n    if (!file.type) {\n        try {\n            file.type = 'video/webm';\n        } catch (e) {}\n    }\n\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\n\n    if (fileName && fileName.indexOf('.') !== -1) {\n        var splitted = fileName.split('.');\n        fileName = splitted[0];\n        fileExtension = splitted[1];\n    }\n\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\n\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\n        return navigator.msSaveBlob(file, fileFullName);\n    }\n\n    var hyperlink = document.createElement('a');\n    hyperlink.href = URL.createObjectURL(file);\n    hyperlink.target = '_blank';\n    hyperlink.download = fileFullName;\n\n    if (!!navigator.mozGetUserMedia) {\n        hyperlink.onclick = function() {\n            (document.body || document.documentElement).removeChild(hyperlink);\n        };\n        (document.body || document.documentElement).appendChild(hyperlink);\n    }\n\n    var evt = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n    });\n\n    hyperlink.dispatchEvent(evt);\n\n    if (!navigator.mozGetUserMedia) {\n        URL.revokeObjectURL(hyperlink.href);\n    }\n}\n\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// Storage.js\n\n/**\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @example\n * Storage.AudioContext === webkitAudioContext\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\nvar Storage = {};\n\nif (typeof AudioContext !== 'undefined') {\n    Storage.AudioContext = AudioContext;\n} else if (typeof webkitAudioContext !== 'undefined') {\n    Storage.AudioContext = webkitAudioContext;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.Storage = Storage;\n}\n\nfunction isMediaRecorderCompatible() {\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    var isChrome = !!window.chrome && !isOpera;\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\n\n    if (isFirefox) {\n        return true;\n    }\n\n    var nVer = navigator.appVersion;\n    var nAgt = navigator.userAgent;\n    var fullVersion = '' + parseFloat(navigator.appVersion);\n    var majorVersion = parseInt(navigator.appVersion, 10);\n    var nameOffset, verOffset, ix;\n\n    if (isChrome || isOpera) {\n        verOffset = nAgt.indexOf('Chrome');\n        fullVersion = nAgt.substring(verOffset + 7);\n    }\n\n    // trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    majorVersion = parseInt('' + fullVersion, 10);\n\n    if (isNaN(majorVersion)) {\n        fullVersion = '' + parseFloat(navigator.appVersion);\n        majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    return majorVersion >= 49;\n}\n\n// ______________________\n// MediaStreamRecorder.js\n\n/*\n * Implementation of https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\n * The MediaRecorder accepts a mediaStream as input source passed from UA. When recorder starts,\n * a MediaEncoder will be created and accept the mediaStream as input source.\n * Encoder will get the raw data by track data changes, encode it by selected MIME Type, then store the encoded in EncodedBufferCache object.\n * The encoded data will be extracted on every timeslice passed from Start function call or by RequestData function.\n * Thread model:\n * When the recorder starts, it creates a \"Media Encoder\" thread to read data from MediaEncoder object and store buffer in EncodedBufferCache object.\n * Also extract the encoded data and create blobs on every timeslice passed from start function or RequestData function called by UA.\n */\n\n/**\n * MediaStreamRecorder is an abstraction layer for \"MediaRecorder API\". It is used by {@link RecordRTC} to record MediaStream(s) in Firefox.\n * @summary Runs top over MediaRecorder API.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef MediaStreamRecorder\n * @class\n * @example\n * var options = {\n *     mimeType: 'video/webm',\n *     audioBitsPerSecond : 256 * 8 * 1024,\n *     videoBitsPerSecond : 256 * 8 * 1024,\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\n *     getNativeBlob: true // by default: it is false\n * }\n * var recorder = new MediaStreamRecorder(MediaStream, options);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", onAudioProcessStarted: function}\n */\n\nfunction MediaStreamRecorder(mediaStream, config) {\n    var self = this;\n\n    config = config || {\n        // bitsPerSecond: 256 * 8 * 1024,\n        mimeType: 'video/webm'\n    };\n\n    if (config.type === 'audio') {\n        if (mediaStream.getVideoTracks().length && mediaStream.getAudioTracks().length) {\n            var stream;\n            if (!!navigator.mozGetUserMedia) {\n                stream = new MediaStream();\n                stream.addTrack(mediaStream.getAudioTracks()[0]);\n            } else {\n                // webkitMediaStream\n                stream = new MediaStream(mediaStream.getAudioTracks());\n            }\n            mediaStream = stream;\n        }\n\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\n        }\n\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\n            // forcing better codecs on Firefox (via #166)\n            config.mimeType = 'audio/ogg';\n        }\n    }\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        self.blob = null;\n\n        var recorderHints = config;\n\n        if (!config.disableLogs) {\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\n        }\n\n        if (mediaRecorder) {\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\n            mediaRecorder = null;\n        }\n\n        if (isChrome && !isMediaRecorderCompatible()) {\n            // to support video-only recording on stable\n            recorderHints = 'video/vp8';\n        }\n\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\n                if (!config.disableLogs) {\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\n                }\n\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\n            }\n        }\n\n        // http://dxr.mozilla.org/mozilla-central/source/content/media/MediaRecorder.cpp\n        // https://wiki.mozilla.org/Gecko:MediaRecorder\n        // https://dvcs.w3.org/hg/dap/raw-file/default/media-stream-capture/MediaRecorder.html\n\n        // starting a recording session; which will initiate \"Reading Thread\"\n        // \"Reading Thread\" are used to prevent main-thread blocking scenarios\n        try {\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\n        } catch (e) {\n            mediaRecorder = new MediaRecorder(mediaStream);\n        }\n\n        if (!MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(config.mimeType) === false) {\n            if (!config.disableLogs) {\n                console.warn('MediaRecorder API seems unable to record mimeType:', config.mimeType);\n            }\n        }\n\n        // i.e. stop recording when <video> is paused by the user; and auto restart recording \n        // when video is resumed. E.g. yourStream.getVideoTracks()[0].muted = true; // it will auto-stop recording.\n        mediaRecorder.ignoreMutedMedia = config.ignoreMutedMedia || false;\n\n        // Dispatching OnDataAvailable Handler\n        mediaRecorder.ondataavailable = function(e) {\n            if (self.dontFireOnDataAvailableEvent) {\n                return;\n            }\n\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\n                // make sure that stopRecording always getting fired\n                // even if there is invalid data\n                if (self.recordingCallback) {\n                    self.recordingCallback(new Blob([], {\n                        type: recorderHints.mimeType || 'video/webm'\n                    }));\n                    self.recordingCallback = null;\n                }\n                return;\n            }\n\n            /**\n             * @property {Blob} blob - Recorded frames in video/webm blob.\n             * @memberof MediaStreamRecorder\n             * @example\n             * recorder.stop(function() {\n             *     var blob = recorder.blob;\n             * });\n             */\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n                type: recorderHints.mimeType || 'video/webm'\n            });\n\n            if (self.recordingCallback) {\n                self.recordingCallback(self.blob);\n                self.recordingCallback = null;\n            }\n        };\n\n        mediaRecorder.onerror = function(error) {\n            if (!config.disableLogs) {\n                if (error.name === 'InvalidState') {\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.');\n                } else if (error.name === 'OutOfMemory') {\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'IllegalStreamModification') {\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'OtherRecordingError') {\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.');\n                } else if (error.name === 'GenericError') {\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\n                } else {\n                    console.error('MediaRecorder Error', error);\n                }\n            }\n\n            // When the stream is \"ended\" set recording to 'inactive' \n            // and stop gathering data. Callers should not rely on \n            // exactness of the timeSlice value, especially \n            // if the timeSlice value is small. Callers should \n            // consider timeSlice as a minimum value\n\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\n                mediaRecorder.stop();\n            }\n        };\n\n        // void start(optional long mTimeSlice)\n        // The interval of passing encoded data from EncodedBufferCache to onDataAvailable\n        // handler. \"mTimeSlice < 0\" means Session object does not push encoded data to\n        // onDataAvailable, instead, it passive wait the client side pull encoded data\n        // by calling requestData API.\n        mediaRecorder.start(3.6e+6);\n\n        // Start recording. If timeSlice has been provided, mediaRecorder will\n        // raise a dataavailable event containing the Blob of collected data on every timeSlice milliseconds.\n        // If timeSlice isn't provided, UA should call the RequestData to obtain the Blob data, also set the mTimeSlice to zero.\n\n        if (config.onAudioProcessStarted) {\n            config.onAudioProcessStarted();\n        }\n\n        if (config.initCallback) {\n            config.initCallback();\n        }\n    };\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        this.recordingCallback = function(blob) {\n            mediaRecorder = null;\n\n            if (callback) {\n                callback(blob);\n            }\n        };\n\n        // mediaRecorder.state === 'recording' means that media recorder is associated with \"session\"\n        // mediaRecorder.state === 'stopped' means that media recorder is detached from the \"session\" ... in this case; \"session\" will also be deleted.\n\n        if (mediaRecorder.state === 'recording') {\n            // \"stop\" method auto invokes \"requestData\"!\n            // mediaRecorder.requestData();\n            mediaRecorder.stop();\n        }\n    };\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (this.dontFireOnDataAvailableEvent) {\n            this.dontFireOnDataAvailableEvent = false;\n\n            var disableLogs = config.disableLogs;\n            config.disableLogs = true;\n            this.record();\n            config.disableLogs = disableLogs;\n            return;\n        }\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'paused') {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        this.pause();\n\n        this.dontFireOnDataAvailableEvent = true;\n        this.stop();\n    };\n\n    // Reference to \"MediaRecorder\" object\n    var mediaRecorder;\n\n    function isMediaStreamActive() {\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var self = this;\n\n    // this method checks if media stream is stopped\n    // or any track is ended.\n    (function looper() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            if (!config.disableLogs) {\n                console.log('MediaStream seems stopped.');\n            }\n            self.stop();\n            return;\n        }\n\n        setTimeout(looper, 1000); // check every second\n    })();\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\n}\n\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\n// https://github.com/mattdiamond/Recorderjs#license-mit\n// ______________________\n// StereoAudioRecorder.js\n\n/**\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\n * @summary JavaScript standalone object for stereo audio recording.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef StereoAudioRecorder\n * @class\n * @example\n * var recorder = new StereoAudioRecorder(MediaStream, {\n *     sampleRate: 44100,\n *     bufferSize: 4096\n * });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\n */\n\nfunction StereoAudioRecorder(mediaStream, config) {\n    if (!mediaStream.getAudioTracks().length) {\n        throw 'Your stream has no audio tracks.';\n    }\n\n    config = config || {};\n\n    var self = this;\n\n    // variables\n    var leftchannel = [];\n    var rightchannel = [];\n    var recording = false;\n    var recordingLength = 0;\n    var jsAudioNode;\n\n    var numberOfAudioChannels = 2;\n\n    // backward compatibility\n    if (config.leftChannel === true) {\n        numberOfAudioChannels = 1;\n    }\n\n    if (config.numberOfAudioChannels === 1) {\n        numberOfAudioChannels = 1;\n    }\n\n    if (!config.disableLogs) {\n        console.debug('StereoAudioRecorder is set to record number of channels: ', numberOfAudioChannels);\n    }\n\n    function isMediaStreamActive() {\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (isMediaStreamActive() === false) {\n            throw 'Please make sure MediaStream is active.';\n        }\n\n        // reset the buffers for the new recording\n        leftchannel.length = rightchannel.length = 0;\n        recordingLength = 0;\n\n        if (audioInput) {\n            audioInput.connect(jsAudioNode);\n        }\n\n        // to prevent self audio to be connected with speakers\n        // jsAudioNode.connect(context.destination);\n\n        isAudioProcessStarted = isPaused = false;\n        recording = true;\n    };\n\n    function mergeLeftRightBuffers(config, callback) {\n        function mergeAudioBuffers(config, cb) {\n            var numberOfAudioChannels = config.numberOfAudioChannels;\n\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\n            var leftBuffers = config.leftBuffers.slice(0);\n            var rightBuffers = config.rightBuffers.slice(0);\n            var sampleRate = config.sampleRate;\n            var internalInterleavedLength = config.internalInterleavedLength;\n\n            if (numberOfAudioChannels === 2) {\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\n            }\n\n            if (numberOfAudioChannels === 1) {\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\n            }\n\n            function mergeBuffers(channelBuffer, rLength) {\n                var result = new Float64Array(rLength);\n                var offset = 0;\n                var lng = channelBuffer.length;\n\n                for (var i = 0; i < lng; i++) {\n                    var buffer = channelBuffer[i];\n                    result.set(buffer, offset);\n                    offset += buffer.length;\n                }\n\n                return result;\n            }\n\n            function interleave(leftChannel, rightChannel) {\n                var length = leftChannel.length + rightChannel.length;\n\n                var result = new Float64Array(length);\n\n                var inputIndex = 0;\n\n                for (var index = 0; index < length;) {\n                    result[index++] = leftChannel[inputIndex];\n                    result[index++] = rightChannel[inputIndex];\n                    inputIndex++;\n                }\n                return result;\n            }\n\n            function writeUTFBytes(view, offset, string) {\n                var lng = string.length;\n                for (var i = 0; i < lng; i++) {\n                    view.setUint8(offset + i, string.charCodeAt(i));\n                }\n            }\n\n            // interleave both channels together\n            var interleaved;\n\n            if (numberOfAudioChannels === 2) {\n                interleaved = interleave(leftBuffers, rightBuffers);\n            }\n\n            if (numberOfAudioChannels === 1) {\n                interleaved = leftBuffers;\n            }\n\n            var interleavedLength = interleaved.length;\n\n            // create wav file\n            var resultingBufferLength = 44 + interleavedLength * 2;\n\n            var buffer = new ArrayBuffer(resultingBufferLength);\n\n            var view = new DataView(buffer);\n\n            // RIFF chunk descriptor/identifier \n            writeUTFBytes(view, 0, 'RIFF');\n\n            // RIFF chunk length\n            view.setUint32(4, 44 + interleavedLength * 2, true);\n\n            // RIFF type \n            writeUTFBytes(view, 8, 'WAVE');\n\n            // format chunk identifier \n            // FMT sub-chunk\n            writeUTFBytes(view, 12, 'fmt ');\n\n            // format chunk length \n            view.setUint32(16, 16, true);\n\n            // sample format (raw)\n            view.setUint16(20, 1, true);\n\n            // stereo (2 channels)\n            view.setUint16(22, numberOfAudioChannels, true);\n\n            // sample rate \n            view.setUint32(24, sampleRate, true);\n\n            // byte rate (sample rate * block align)\n            view.setUint32(28, sampleRate * 2, true);\n\n            // block align (channel count * bytes per sample) \n            view.setUint16(32, numberOfAudioChannels * 2, true);\n\n            // bits per sample \n            view.setUint16(34, 16, true);\n\n            // data sub-chunk\n            // data chunk identifier \n            writeUTFBytes(view, 36, 'data');\n\n            // data chunk length \n            view.setUint32(40, interleavedLength * 2, true);\n\n            // write the PCM samples\n            var lng = interleavedLength;\n            var index = 44;\n            var volume = 1;\n            for (var i = 0; i < lng; i++) {\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\n                index += 2;\n            }\n\n            if (cb) {\n                return cb({\n                    buffer: buffer,\n                    view: view\n                });\n            }\n\n            postMessage({\n                buffer: buffer,\n                view: view\n            });\n        }\n\n        if (!isChrome) {\n            // its Microsoft Edge\n            mergeAudioBuffers(config, function(data) {\n                callback(data.buffer, data.view);\n            });\n            return;\n        }\n\n\n        var webWorker = processInWebWorker(mergeAudioBuffers);\n\n        webWorker.onmessage = function(event) {\n            callback(event.data.buffer, event.data.view);\n\n            // release memory\n            URL.revokeObjectURL(webWorker.workerURL);\n        };\n\n        webWorker.postMessage(config);\n    }\n\n    function processInWebWorker(_function) {\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\n            ';this.onmessage =  function (e) {' + _function.name + '(e.data);}'\n        ], {\n            type: 'application/javascript'\n        }));\n\n        var worker = new Worker(workerURL);\n        worker.workerURL = workerURL;\n        return worker;\n    }\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        // stop recording\n        recording = false;\n\n        // to make sure onaudioprocess stops firing\n        // audioInput.disconnect();\n\n        mergeLeftRightBuffers({\n            sampleRate: sampleRate,\n            numberOfAudioChannels: numberOfAudioChannels,\n            internalInterleavedLength: recordingLength,\n            leftBuffers: leftchannel,\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel\n        }, function(buffer, view) {\n            /**\n             * @property {Blob} blob - The recorded blob object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var blob = recorder.blob;\n             * });\n             */\n            self.blob = new Blob([view], {\n                type: 'audio/wav'\n            });\n\n            /**\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var buffer = recorder.buffer;\n             * });\n             */\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\n\n            /**\n             * @property {DataView} view - The recorded data-view object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var view = recorder.view;\n             * });\n             */\n            self.view = view;\n\n            self.sampleRate = sampleRate;\n            self.bufferSize = bufferSize;\n\n            // recorded audio length\n            self.length = recordingLength;\n\n            if (callback) {\n                callback();\n            }\n\n            isAudioProcessStarted = false;\n        });\n    };\n\n    if (!Storage.AudioContextConstructor) {\n        Storage.AudioContextConstructor = new Storage.AudioContext();\n    }\n\n    var context = Storage.AudioContextConstructor;\n\n    // creates an audio node from the microphone incoming stream\n    var audioInput = context.createMediaStreamSource(mediaStream);\n\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\n\n    /**\n     * From the spec: This value controls how frequently the audioprocess event is\n     * dispatched and how many sample-frames need to be processed each call.\n     * Lower values for buffer size will result in a lower (better) latency.\n     * Higher values will be necessary to avoid audio breakup and glitches\n     * The size of the buffer (in sample-frames) which needs to\n     * be processed each time onprocessaudio is called.\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder = new StereoAudioRecorder(mediaStream, {\n     *     bufferSize: 4096\n     * });\n     */\n\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\n\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\n        if (!config.disableLogs) {\n            console.warn('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\n        }\n    }\n\n    if (context.createJavaScriptNode) {\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\n    } else if (context.createScriptProcessor) {\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\n    } else {\n        throw 'WebAudio API has no support on this browser.';\n    }\n\n    // connect the stream to the gain node\n    audioInput.connect(jsAudioNode);\n\n    if (!config.bufferSize) {\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\n    }\n\n    /**\n     * The sample rate (in sample-frames per second) at which the\n     * AudioContext handles audio. It is assumed that all AudioNodes\n     * in the context run at this rate. In making this assumption,\n     * sample-rate converters or \"varispeed\" processors are not supported\n     * in real-time processing.\n     * The sampleRate parameter describes the sample-rate of the\n     * linear PCM audio data in the buffer in sample-frames per second.\n     * An implementation must support sample-rates in at least\n     * the range 22050 to 96000.\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder = new StereoAudioRecorder(mediaStream, {\n     *     sampleRate: 44100\n     * });\n     */\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\n\n    if (sampleRate < 22050 || sampleRate > 96000) {\n        // Ref: http://stackoverflow.com/a/26303918/552182\n        if (!config.disableLogs) {\n            console.warn('sample-rate must be under range 22050 and 96000.');\n        }\n    }\n\n    if (!config.disableLogs) {\n        console.log('sample-rate', sampleRate);\n        console.log('buffer-size', bufferSize);\n    }\n\n    var isPaused = false;\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (isMediaStreamActive() === false) {\n            throw 'Please make sure MediaStream is active.';\n        }\n\n        if (!recording) {\n            if (!config.disableLogs) {\n                console.info('Seems recording has been restarted.');\n            }\n            this.record();\n            return;\n        }\n\n        isPaused = false;\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        this.pause();\n\n        leftchannel.length = rightchannel.length = 0;\n        recordingLength = 0;\n    };\n\n    var isAudioProcessStarted = false;\n\n    function onAudioProcessDataAvailable(e) {\n        if (isPaused) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            if (!config.disableLogs) {\n                console.log('MediaStream seems stopped.');\n            }\n            jsAudioNode.disconnect();\n            recording = false;\n        }\n\n        if (!recording) {\n            audioInput.disconnect();\n            return;\n        }\n\n        /**\n         * This method is called on \"onaudioprocess\" event's first invocation.\n         * @method {function} onAudioProcessStarted\n         * @memberof StereoAudioRecorder\n         * @example\n         * recorder.onAudioProcessStarted: function() { };\n         */\n        if (!isAudioProcessStarted) {\n            isAudioProcessStarted = true;\n            if (config.onAudioProcessStarted) {\n                config.onAudioProcessStarted();\n            }\n\n            if (config.initCallback) {\n                config.initCallback();\n            }\n        }\n\n        var left = e.inputBuffer.getChannelData(0);\n\n        // we clone the samples\n        leftchannel.push(new Float32Array(left));\n\n        if (numberOfAudioChannels === 2) {\n            var right = e.inputBuffer.getChannelData(1);\n            rightchannel.push(new Float32Array(right));\n        }\n\n        recordingLength += bufferSize;\n    }\n\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\n\n    // to prevent self audio to be connected with speakers\n    jsAudioNode.connect(context.destination);\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\n}\n\n// _________________\n// CanvasRecorder.js\n\n/**\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\n * @summary HTML2Canvas recording into video WebM.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef CanvasRecorder\n * @class\n * @example\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\n * @param {object} config - {disableLogs:true, initCallback: function}\n */\n\nfunction CanvasRecorder(htmlElement, config) {\n    if (typeof html2canvas === 'undefined' && htmlElement.nodeName.toLowerCase() !== 'canvas') {\n        throw 'Please link: https://cdn.webrtc-experiment.com/screenshot.js';\n    }\n\n    config = config || {};\n    if (!config.frameInterval) {\n        config.frameInterval = 10;\n    }\n\n    // via DetectRTC.js\n    var isCanvasSupportsStreamCapturing = false;\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\n        if (item in document.createElement('canvas')) {\n            isCanvasSupportsStreamCapturing = true;\n        }\n    });\n\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\n\n    var chromeVersion = 50;\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (_isChrome && matchArray && matchArray[2]) {\n        chromeVersion = parseInt(matchArray[2], 10);\n    }\n\n    if (_isChrome && chromeVersion < 52) {\n        isCanvasSupportsStreamCapturing = false;\n    }\n\n    var globalCanvas, mediaStreamRecorder;\n\n    if (isCanvasSupportsStreamCapturing) {\n        if (!config.disableLogs) {\n            console.debug('Your browser supports both MediRecorder API and canvas.captureStream!');\n        }\n\n        if (htmlElement instanceof HTMLCanvasElement) {\n            globalCanvas = htmlElement;\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\n            globalCanvas = htmlElement.canvas;\n        } else {\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\n        }\n    } else if (!!navigator.mozGetUserMedia) {\n        if (!config.disableLogs) {\n            console.error('Canvas recording is NOT supported in Firefox.');\n        }\n    }\n\n    var isRecording;\n\n    /**\n     * This method records Canvas.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        isRecording = true;\n\n        if (isCanvasSupportsStreamCapturing) {\n            // CanvasCaptureMediaStream\n            var canvasMediaStream;\n            if ('captureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\n            } else if ('mozCaptureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\n            } else if ('webkitCaptureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\n            }\n\n            try {\n                var mdStream = new MediaStream();\n                mdStream.addTrack(canvasMediaStream.getVideoTracks()[0]);\n                canvasMediaStream = mdStream;\n            } catch (e) {}\n\n            if (!canvasMediaStream) {\n                throw 'captureStream API are NOT available.';\n            }\n\n            // Note: Jan 18, 2016 status is that, \n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\n                mimeType: 'video/webm'\n            });\n            mediaStreamRecorder.record();\n        } else {\n            whammy.frames = [];\n            lastTime = new Date().getTime();\n            drawCanvasFrame();\n        }\n\n        if (config.initCallback) {\n            config.initCallback();\n        }\n    };\n\n    this.getWebPImages = function(callback) {\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\n            callback();\n            return;\n        }\n\n        var framesLength = whammy.frames.length;\n        whammy.frames.forEach(function(frame, idx) {\n            var framesRemaining = framesLength - idx;\n            if (!config.disableLogs) {\n                console.debug(framesRemaining + '/' + framesLength + ' frames remaining');\n            }\n\n            if (config.onEncodingCallback) {\n                config.onEncodingCallback(framesRemaining, framesLength);\n            }\n\n            var webp = frame.image.toDataURL('image/webp', 1);\n            whammy.frames[idx].image = webp;\n        });\n\n        if (!config.disableLogs) {\n            console.debug('Generating WebM');\n        }\n\n        callback();\n    };\n\n    /**\n     * This method stops recording Canvas.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        isRecording = false;\n\n        var that = this;\n\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\n            mediaStreamRecorder.stop(callback);\n            return;\n        }\n\n        this.getWebPImages(function() {\n            /**\n             * @property {Blob} blob - Recorded frames in video/webm blob.\n             * @memberof CanvasRecorder\n             * @example\n             * recorder.stop(function() {\n             *     var blob = recorder.blob;\n             * });\n             */\n            whammy.compile(function(blob) {\n                if (!config.disableLogs) {\n                    console.debug('Recording finished!');\n                }\n\n                that.blob = blob;\n\n                if (that.blob.forEach) {\n                    that.blob = new Blob([], {\n                        type: 'video/webm'\n                    });\n                }\n\n                if (callback) {\n                    callback(that.blob);\n                }\n\n                whammy.frames = [];\n            });\n        });\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n\n        if (!isRecording) {\n            this.record();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        this.pause();\n        whammy.frames = [];\n    };\n\n    function cloneCanvas() {\n        //create a new canvas\n        var newCanvas = document.createElement('canvas');\n        var context = newCanvas.getContext('2d');\n\n        //set dimensions\n        newCanvas.width = htmlElement.width;\n        newCanvas.height = htmlElement.height;\n\n        //apply the old canvas to the new one\n        context.drawImage(htmlElement, 0, 0);\n\n        //return the new canvas\n        return newCanvas;\n    }\n\n    function drawCanvasFrame() {\n        if (isPausedRecording) {\n            lastTime = new Date().getTime();\n            return setTimeout(drawCanvasFrame, 500);\n        }\n\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\n            var duration = new Date().getTime() - lastTime;\n            // via #206, by Jack i.e. @Seymourr\n            lastTime = new Date().getTime();\n\n            whammy.frames.push({\n                image: cloneCanvas(),\n                duration: duration\n            });\n\n            if (isRecording) {\n                setTimeout(drawCanvasFrame, config.frameInterval);\n            }\n            return;\n        }\n\n        html2canvas(htmlElement, {\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\n            onrendered: function(canvas) {\n                var duration = new Date().getTime() - lastTime;\n                if (!duration) {\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\n                }\n\n                // via #206, by Jack i.e. @Seymourr\n                lastTime = new Date().getTime();\n\n                whammy.frames.push({\n                    image: canvas.toDataURL('image/webp', 1),\n                    duration: duration\n                });\n\n                if (isRecording) {\n                    setTimeout(drawCanvasFrame, config.frameInterval);\n                }\n            }\n        });\n    }\n\n    var lastTime = new Date().getTime();\n\n    var whammy = new Whammy.Video(100);\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.CanvasRecorder = CanvasRecorder;\n}\n\n// _________________\n// WhammyRecorder.js\n\n/**\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\n * @summary Video recording feature in Chrome.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef WhammyRecorder\n * @class\n * @example\n * var recorder = new WhammyRecorder(mediaStream);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\n */\n\nfunction WhammyRecorder(mediaStream, config) {\n\n    config = config || {};\n\n    if (!config.frameInterval) {\n        config.frameInterval = 10;\n    }\n\n    if (!config.disableLogs) {\n        console.log('Using frames-interval:', config.frameInterval);\n    }\n\n    /**\n     * This method records video.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (!config.width) {\n            config.width = 320;\n        }\n\n        if (!config.height) {\n            config.height = 240;\n        }\n\n        if (!config.video) {\n            config.video = {\n                width: config.width,\n                height: config.height\n            };\n        }\n\n        if (!config.canvas) {\n            config.canvas = {\n                width: config.width,\n                height: config.height\n            };\n        }\n\n        canvas.width = config.canvas.width || 320;\n        canvas.height = config.canvas.height || 240;\n\n        context = canvas.getContext('2d');\n\n        // setting defaults\n        if (config.video && config.video instanceof HTMLVideoElement) {\n            video = config.video.cloneNode();\n\n            if (config.initCallback) {\n                config.initCallback();\n            }\n        } else {\n            video = document.createElement('video');\n\n            if (typeof video.srcObject !== 'undefined') {\n                video.srcObject = mediaStream;\n            } else {\n                video.src = URL.createObjectURL(mediaStream);\n            }\n\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\n                if (config.initCallback) {\n                    config.initCallback();\n                }\n            };\n\n            video.width = config.video.width;\n            video.height = config.video.height;\n        }\n\n        video.muted = true;\n        video.play();\n\n        lastTime = new Date().getTime();\n        whammy = new Whammy.Video();\n\n        if (!config.disableLogs) {\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\n        }\n\n        drawFrames(config.frameInterval);\n    };\n\n    /**\n     * Draw and push frames to Whammy\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\n     */\n    function drawFrames(frameInterval) {\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\n\n        var duration = new Date().getTime() - lastTime;\n        if (!duration) {\n            return setTimeout(drawFrames, frameInterval, frameInterval);\n        }\n\n        if (isPausedRecording) {\n            lastTime = new Date().getTime();\n            return setTimeout(drawFrames, 100);\n        }\n\n        // via #206, by Jack i.e. @Seymourr\n        lastTime = new Date().getTime();\n\n        if (video.paused) {\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\n            // Tweak for Android Chrome\n            video.play();\n        }\n\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        whammy.frames.push({\n            duration: duration,\n            image: canvas.toDataURL('image/webp')\n        });\n\n        if (!isStopDrawing) {\n            setTimeout(drawFrames, frameInterval, frameInterval);\n        }\n    }\n\n    function asyncLoop(o) {\n        var i = -1,\n            length = o.length;\n\n        var loop = function() {\n            i++;\n            if (i === length) {\n                o.callback();\n                return;\n            }\n            o.functionToLoop(loop, i);\n        };\n        loop(); //init\n    }\n\n\n    /**\n     * remove black frames from the beginning to the specified frame\n     * @param {Array} _frames - array of frames to be checked\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\n     * @returns {Array} - array of frames\n     */\n    // pull#293 by @volodalexey\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\n        var localCanvas = document.createElement('canvas');\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext('2d');\n        var resultFrames = [];\n\n        var checkUntilNotBlack = _framesToCheck === -1;\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\n            _framesToCheck : _frames.length;\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(\n            Math.pow(255, 2) +\n            Math.pow(255, 2) +\n            Math.pow(255, 2)\n        );\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n        var doNotCheckNext = false;\n\n        asyncLoop({\n            length: endCheckFrame,\n            functionToLoop: function(loop, f) {\n                var matchPixCount, endPixCheck, maxPixCount;\n\n                var finishImage = function() {\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\n                    } else {\n                        // console.log('frame is passed : ' + f);\n                        if (checkUntilNotBlack) {\n                            doNotCheckNext = true;\n                        }\n                        resultFrames.push(_frames[f]);\n                    }\n                    loop();\n                };\n\n                if (!doNotCheckNext) {\n                    var image = new Image();\n                    image.onload = function() {\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n                        matchPixCount = 0;\n                        endPixCheck = imageData.data.length;\n                        maxPixCount = imageData.data.length / 4;\n\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\n                            var currentColor = {\n                                r: imageData.data[pix],\n                                g: imageData.data[pix + 1],\n                                b: imageData.data[pix + 2]\n                            };\n                            var colorDifference = Math.sqrt(\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\n                                Math.pow(currentColor.b - sampleColor.b, 2)\n                            );\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\n                                matchPixCount++;\n                            }\n                        }\n                        finishImage();\n                    };\n                    image.src = _frames[f].image;\n                } else {\n                    finishImage();\n                }\n            },\n            callback: function() {\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\n\n                if (resultFrames.length <= 0) {\n                    // at least one last frame should be available for next manipulation\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\n                    resultFrames.push(_frames[_frames.length - 1]);\n                }\n                callback(resultFrames);\n            }\n        });\n    }\n\n    var isStopDrawing = false;\n\n    /**\n     * This method stops recording video.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        isStopDrawing = true;\n\n        var _this = this;\n        // analyse of all frames takes some time!\n        setTimeout(function() {\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\n                whammy.frames = frames;\n\n                // to display advertisement images!\n                if (config.advertisement && config.advertisement.length) {\n                    whammy.frames = config.advertisement.concat(whammy.frames);\n                }\n\n                /**\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\n                 * @memberof WhammyRecorder\n                 * @example\n                 * recorder.stop(function() {\n                 *     var blob = recorder.blob;\n                 * });\n                 */\n                whammy.compile(function(blob) {\n                    _this.blob = blob;\n\n                    if (_this.blob.forEach) {\n                        _this.blob = new Blob([], {\n                            type: 'video/webm'\n                        });\n                    }\n\n                    if (callback) {\n                        callback(_this.blob);\n                    }\n                });\n            });\n        }, 10);\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n\n        if (isStopDrawing) {\n            this.record();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        this.pause();\n        whammy.frames = [];\n    };\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    var video;\n    var lastTime;\n    var whammy;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.WhammyRecorder = WhammyRecorder;\n}\n\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\n// _________\n// Whammy.js\n\n// todo: Firefox now supports webp for webm containers!\n// their MediaRecorder implementation works well!\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\n\n/**\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\n * @summary A real time javascript webm encoder based on a canvas hack.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef Whammy\n * @class\n * @example\n * var recorder = new Whammy().Video(15);\n * recorder.add(context || canvas || dataURL);\n * var output = recorder.compile();\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\nvar Whammy = (function() {\n    // a more abstract-ish API\n\n    function WhammyVideo(duration) {\n        this.frames = [];\n        this.duration = duration || 1;\n        this.quality = 0.8;\n    }\n\n    /**\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.add(canvas || context || 'image/webp');\n     * @param {string} frame - Canvas || Context || image/webp\n     * @param {number} duration - Stick a duration (in milliseconds)\n     */\n    WhammyVideo.prototype.add = function(frame, duration) {\n        if ('canvas' in frame) { //CanvasRenderingContext2D\n            frame = frame.canvas;\n        }\n\n        if ('toDataURL' in frame) {\n            frame = frame.toDataURL('image/webp', this.quality);\n        }\n\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\n        }\n        this.frames.push({\n            image: frame,\n            duration: duration || this.duration\n        });\n    };\n\n    function processInWebWorker(_function) {\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\n            'this.onmessage =  function (e) {' + _function.name + '(e.data);}'\n        ], {\n            type: 'application/javascript'\n        }));\n\n        var worker = new Worker(blob);\n        URL.revokeObjectURL(blob);\n        return worker;\n    }\n\n    function whammyInWebWorker(frames) {\n        function ArrayToWebM(frames) {\n            var info = checkFrames(frames);\n            if (!info) {\n                return [];\n            }\n\n            var clusterMaxDuration = 30000;\n\n            var EBML = [{\n                'id': 0x1a45dfa3, // EBML\n                'data': [{\n                    'data': 1,\n                    'id': 0x4286 // EBMLVersion\n                }, {\n                    'data': 1,\n                    'id': 0x42f7 // EBMLReadVersion\n                }, {\n                    'data': 4,\n                    'id': 0x42f2 // EBMLMaxIDLength\n                }, {\n                    'data': 8,\n                    'id': 0x42f3 // EBMLMaxSizeLength\n                }, {\n                    'data': 'webm',\n                    'id': 0x4282 // DocType\n                }, {\n                    'data': 2,\n                    'id': 0x4287 // DocTypeVersion\n                }, {\n                    'data': 2,\n                    'id': 0x4285 // DocTypeReadVersion\n                }]\n            }, {\n                'id': 0x18538067, // Segment\n                'data': [{\n                    'id': 0x1549a966, // Info\n                    'data': [{\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\n                        'id': 0x2ad7b1 // TimecodeScale\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x4d80 // MuxingApp\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x5741 // WritingApp\n                    }, {\n                        'data': doubleToString(info.duration),\n                        'id': 0x4489 // Duration\n                    }]\n                }, {\n                    'id': 0x1654ae6b, // Tracks\n                    'data': [{\n                        'id': 0xae, // TrackEntry\n                        'data': [{\n                            'data': 1,\n                            'id': 0xd7 // TrackNumber\n                        }, {\n                            'data': 1,\n                            'id': 0x73c5 // TrackUID\n                        }, {\n                            'data': 0,\n                            'id': 0x9c // FlagLacing\n                        }, {\n                            'data': 'und',\n                            'id': 0x22b59c // Language\n                        }, {\n                            'data': 'V_VP8',\n                            'id': 0x86 // CodecID\n                        }, {\n                            'data': 'VP8',\n                            'id': 0x258688 // CodecName\n                        }, {\n                            'data': 1,\n                            'id': 0x83 // TrackType\n                        }, {\n                            'id': 0xe0, // Video\n                            'data': [{\n                                'data': info.width,\n                                'id': 0xb0 // PixelWidth\n                            }, {\n                                'data': info.height,\n                                'id': 0xba // PixelHeight\n                            }]\n                        }]\n                    }]\n                }]\n            }];\n\n            //Generate clusters (max duration)\n            var frameNumber = 0;\n            var clusterTimecode = 0;\n            while (frameNumber < frames.length) {\n\n                var clusterFrames = [];\n                var clusterDuration = 0;\n                do {\n                    clusterFrames.push(frames[frameNumber]);\n                    clusterDuration += frames[frameNumber].duration;\n                    frameNumber++;\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\n\n                var clusterCounter = 0;\n                var cluster = {\n                    'id': 0x1f43b675, // Cluster\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\n                }; //Add cluster to segment\n                EBML[1].data.push(cluster);\n                clusterTimecode += clusterDuration;\n            }\n\n            return generateEBML(EBML);\n        }\n\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\n            return [{\n                'data': clusterTimecode,\n                'id': 0xe7 // Timecode\n            }].concat(clusterFrames.map(function(webp) {\n                var block = makeSimpleBlock({\n                    discardable: 0,\n                    frame: webp.data.slice(4),\n                    invisible: 0,\n                    keyframe: 1,\n                    lacing: 0,\n                    trackNum: 1,\n                    timecode: Math.round(clusterCounter)\n                });\n                clusterCounter += webp.duration;\n                return {\n                    data: block,\n                    id: 0xa3\n                };\n            }));\n        }\n\n        // sums the lengths of all the frames and gets the duration\n\n        function checkFrames(frames) {\n            if (!frames[0]) {\n                postMessage({\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\n                });\n                return;\n            }\n\n            var width = frames[0].width,\n                height = frames[0].height,\n                duration = frames[0].duration;\n\n            for (var i = 1; i < frames.length; i++) {\n                duration += frames[i].duration;\n            }\n            return {\n                duration: duration,\n                width: width,\n                height: height\n            };\n        }\n\n        function numToBuffer(num) {\n            var parts = [];\n            while (num > 0) {\n                parts.push(num & 0xff);\n                num = num >> 8;\n            }\n            return new Uint8Array(parts.reverse());\n        }\n\n        function strToBuffer(str) {\n            return new Uint8Array(str.split('').map(function(e) {\n                return e.charCodeAt(0);\n            }));\n        }\n\n        function bitsToBuffer(bits) {\n            var data = [];\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data.push(parseInt(bits.substr(i, 8), 2));\n            }\n            return new Uint8Array(data);\n        }\n\n        function generateEBML(json) {\n            var ebml = [];\n            for (var i = 0; i < json.length; i++) {\n                var data = json[i].data;\n\n                if (typeof data === 'object') {\n                    data = generateEBML(data);\n                }\n\n                if (typeof data === 'number') {\n                    data = bitsToBuffer(data.toString(2));\n                }\n\n                if (typeof data === 'string') {\n                    data = strToBuffer(data);\n                }\n\n                var len = data.size || data.byteLength || data.length;\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\n                var sizeToString = len.toString(2);\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\n\n                ebml.push(numToBuffer(json[i].id));\n                ebml.push(bitsToBuffer(size));\n                ebml.push(data);\n            }\n\n            return new Blob(ebml, {\n                type: 'video/webm'\n            });\n        }\n\n        function toBinStrOld(bits) {\n            var data = '';\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\n            }\n            return data;\n        }\n\n        function makeSimpleBlock(data) {\n            var flags = 0;\n\n            if (data.keyframe) {\n                flags |= 128;\n            }\n\n            if (data.invisible) {\n                flags |= 8;\n            }\n\n            if (data.lacing) {\n                flags |= (data.lacing << 1);\n            }\n\n            if (data.discardable) {\n                flags |= 1;\n            }\n\n            if (data.trackNum > 127) {\n                throw 'TrackNumber > 127 not supported';\n            }\n\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\n                return String.fromCharCode(e);\n            }).join('') + data.frame;\n\n            return out;\n        }\n\n        function parseWebP(riff) {\n            var VP8 = riff.RIFF[0].WEBP[0];\n\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\n            for (var i = 0, c = []; i < 4; i++) {\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\n            }\n\n            var width, height, tmp;\n\n            //the code below is literally copied verbatim from the bitstream spec\n            tmp = (c[1] << 8) | c[0];\n            width = tmp & 0x3FFF;\n            tmp = (c[3] << 8) | c[2];\n            height = tmp & 0x3FFF;\n            return {\n                width: width,\n                height: height,\n                data: VP8,\n                riff: riff\n            };\n        }\n\n        function getStrLength(string, offset) {\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\n                var unpadded = i.charCodeAt(0).toString(2);\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\n            }).join(''), 2);\n        }\n\n        function parseRIFF(string) {\n            var offset = 0;\n            var chunks = {};\n\n            while (offset < string.length) {\n                var id = string.substr(offset, 4);\n                var len = getStrLength(string, offset);\n                var data = string.substr(offset + 4 + 4, len);\n                offset += 4 + 4 + len;\n                chunks[id] = chunks[id] || [];\n\n                if (id === 'RIFF' || id === 'LIST') {\n                    chunks[id].push(parseRIFF(data));\n                } else {\n                    chunks[id].push(data);\n                }\n            }\n            return chunks;\n        }\n\n        function doubleToString(num) {\n            return [].slice.call(\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\n                return String.fromCharCode(e);\n            }).reverse().join('');\n        }\n\n        var webm = new ArrayToWebM(frames.map(function(frame) {\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\n            webp.duration = frame.duration;\n            return webp;\n        }));\n\n        postMessage(webm);\n    }\n\n    /**\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.compile(function(blob) {\n     *    // blob.size - blob.type\n     * });\n     */\n    WhammyVideo.prototype.compile = function(callback) {\n        var webWorker = processInWebWorker(whammyInWebWorker);\n\n        webWorker.onmessage = function(event) {\n            if (event.data.error) {\n                console.error(event.data.error);\n                return;\n            }\n            callback(event.data);\n        };\n\n        webWorker.postMessage(this.frames);\n    };\n\n    return {\n        /**\n         * A more abstract-ish API.\n         * @method\n         * @memberof Whammy\n         * @example\n         * recorder = new Whammy().Video(0.8, 100);\n         * @param {?number} speed - 0.8\n         * @param {?number} quality - 100\n         */\n        Video: WhammyVideo\n    };\n})();\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.Whammy = Whammy;\n}\n\n// ______________ (indexed-db)\n// DiskStorage.js\n\n/**\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\n * @summary Writing blobs into IndexedDB.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @example\n * DiskStorage.Store({\n *     audioBlob: yourAudioBlob,\n *     videoBlob: yourVideoBlob,\n *     gifBlob  : yourGifBlob\n * });\n * DiskStorage.Fetch(function(dataURL, type) {\n *     if(type === 'audioBlob') { }\n *     if(type === 'videoBlob') { }\n *     if(type === 'gifBlob')   { }\n * });\n * // DiskStorage.dataStoreName = 'recordRTC';\n * // DiskStorage.onError = function(error) { };\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\n * @property {function} Store - This method stores blobs in IndexedDB.\n * @property {function} onError - This function is invoked for any known/unknown error.\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\n\nvar DiskStorage = {\n    /**\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.init();\n     */\n    init: function() {\n        var self = this;\n\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\n            console.error('IndexedDB API are not available in this browser.');\n            return;\n        }\n\n        var dbVersion = 1;\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\n            db;\n        var request = indexedDB.open(dbName, dbVersion);\n\n        function createObjectStore(dataBase) {\n            dataBase.createObjectStore(self.dataStoreName);\n        }\n\n        function putInDB() {\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\n\n            if (self.videoBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\n            }\n\n            if (self.gifBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\n            }\n\n            if (self.audioBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\n            }\n\n            function getFromStore(portionName) {\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\n                    if (self.callback) {\n                        self.callback(event.target.result, portionName);\n                    }\n                };\n            }\n\n            getFromStore('audioBlob');\n            getFromStore('videoBlob');\n            getFromStore('gifBlob');\n        }\n\n        request.onerror = self.onError;\n\n        request.onsuccess = function() {\n            db = request.result;\n            db.onerror = self.onError;\n\n            if (db.setVersion) {\n                if (db.version !== dbVersion) {\n                    var setVersion = db.setVersion(dbVersion);\n                    setVersion.onsuccess = function() {\n                        createObjectStore(db);\n                        putInDB();\n                    };\n                } else {\n                    putInDB();\n                }\n            } else {\n                putInDB();\n            }\n        };\n        request.onupgradeneeded = function(event) {\n            createObjectStore(event.target.result);\n        };\n    },\n    /**\n     * This method fetches stored blobs from IndexedDB.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.Fetch(function(dataURL, type) {\n     *     if(type === 'audioBlob') { }\n     *     if(type === 'videoBlob') { }\n     *     if(type === 'gifBlob')   { }\n     * });\n     */\n    Fetch: function(callback) {\n        this.callback = callback;\n        this.init();\n\n        return this;\n    },\n    /**\n     * This method stores blobs in IndexedDB.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.Store({\n     *     audioBlob: yourAudioBlob,\n     *     videoBlob: yourVideoBlob,\n     *     gifBlob  : yourGifBlob\n     * });\n     */\n    Store: function(config) {\n        this.audioBlob = config.audioBlob;\n        this.videoBlob = config.videoBlob;\n        this.gifBlob = config.gifBlob;\n\n        this.init();\n\n        return this;\n    },\n    /**\n     * This function is invoked for any known/unknown error.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.onError = function(error){\n     *     alerot( JSON.stringify(error) );\n     * };\n     */\n    onError: function(error) {\n        console.error(JSON.stringify(error, null, '\\t'));\n    },\n\n    /**\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.dataStoreName = 'recordRTC';\n     */\n    dataStoreName: 'recordRTC',\n    dbName: null\n};\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.DiskStorage = DiskStorage;\n}\n\n// ______________\n// GifRecorder.js\n\n/**\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef GifRecorder\n * @class\n * @example\n * var recorder = new GifRecorder(mediaStream || canvas || context, { width: 1280, height: 720, frameRate: 200, quality: 10 });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     img.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\n */\n\nfunction GifRecorder(mediaStream, config) {\n    if (typeof GIFEncoder === 'undefined') {\n        throw 'Please link: https://cdn.webrtc-experiment.com/gif-recorder.js';\n    }\n\n    config = config || {};\n\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (!isHTMLObject) {\n            if (!config.width) {\n                config.width = video.offsetWidth || 320;\n            }\n\n            if (!this.height) {\n                config.height = video.offsetHeight || 240;\n            }\n\n            if (!config.video) {\n                config.video = {\n                    width: config.width,\n                    height: config.height\n                };\n            }\n\n            if (!config.canvas) {\n                config.canvas = {\n                    width: config.width,\n                    height: config.height\n                };\n            }\n\n            canvas.width = config.canvas.width || 320;\n            canvas.height = config.canvas.height || 240;\n\n            video.width = config.video.width || 320;\n            video.height = config.video.height || 240;\n        }\n\n        // external library to record as GIF images\n        gifEncoder = new GIFEncoder();\n\n        // void setRepeat(int iter) \n        // Sets the number of times the set of GIF frames should be played. \n        // Default is 1; 0 means play indefinitely.\n        gifEncoder.setRepeat(0);\n\n        // void setFrameRate(Number fps) \n        // Sets frame rate in frames per second. \n        // Equivalent to setDelay(1000/fps).\n        // Using \"setDelay\" instead of \"setFrameRate\"\n        gifEncoder.setDelay(config.frameRate || 200);\n\n        // void setQuality(int quality) \n        // Sets quality of color quantization (conversion of images to the \n        // maximum 256 colors allowed by the GIF specification). \n        // Lower values (minimum = 1) produce better colors, \n        // but slow processing significantly. 10 is the default, \n        // and produces good color mapping at reasonable speeds. \n        // Values greater than 20 do not yield significant improvements in speed.\n        gifEncoder.setQuality(config.quality || 10);\n\n        // Boolean start() \n        // This writes the GIF Header and returns false if it fails.\n        gifEncoder.start();\n\n        startTime = Date.now();\n\n        var self = this;\n\n        function drawVideoFrame(time) {\n            if (isPausedRecording) {\n                return setTimeout(function() {\n                    drawVideoFrame(time);\n                }, 100);\n            }\n\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n            if (typeof lastFrameTime === undefined) {\n                lastFrameTime = time;\n            }\n\n            // ~10 fps\n            if (time - lastFrameTime < 90) {\n                return;\n            }\n\n            if (!isHTMLObject && video.paused) {\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\n                // Tweak for Android Chrome\n                video.play();\n            }\n\n            if (!isHTMLObject) {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n            }\n\n            if (config.onGifPreview) {\n                config.onGifPreview(canvas.toDataURL('image/png'));\n            }\n\n            gifEncoder.addFrame(context);\n            lastFrameTime = time;\n        }\n\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n        if (config.initCallback) {\n            config.initCallback();\n        }\n    };\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     img.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function() {\n        if (lastAnimationFrame) {\n            cancelAnimationFrame(lastAnimationFrame);\n        }\n\n        endTime = Date.now();\n\n        /**\n         * @property {Blob} blob - The recorded blob object.\n         * @memberof GifRecorder\n         * @example\n         * recorder.stop(function(){\n         *     var blob = recorder.blob;\n         * });\n         */\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\n            type: 'image/gif'\n        });\n\n        // bug: find a way to clear old recorded blobs\n        gifEncoder.stream().bin = [];\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (!gifEncoder) {\n            return;\n        }\n\n        this.pause();\n\n        gifEncoder.stream().bin = [];\n    };\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    if (isHTMLObject) {\n        if (mediaStream instanceof CanvasRenderingContext2D) {\n            context = mediaStream;\n            canvas = context.canvas;\n        } else if (mediaStream instanceof HTMLCanvasElement) {\n            context = mediaStream.getContext('2d');\n            canvas = mediaStream;\n        }\n    }\n\n    if (!isHTMLObject) {\n        var video = document.createElement('video');\n        video.muted = true;\n        video.autoplay = true;\n\n        if (typeof video.srcObject !== 'undefined') {\n            video.srcObject = mediaStream;\n        } else {\n            video.src = URL.createObjectURL(mediaStream);\n        }\n\n        video.play();\n    }\n\n    var lastAnimationFrame = null;\n    var startTime, endTime, lastFrameTime;\n\n    var gifEncoder;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.GifRecorder = GifRecorder;\n}\n\n// ______________________\n// MultiStreamRecorder.js\n\n/*\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\n */\n\n/**\n * MultiStreamRecorder can record multiple videos in single container.\n * @summary Multi-videos recorder.\n * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}\n * @author {@link http://www.MuazKhan.com|Muaz Khan}\n * @typedef MultiStreamRecorder\n * @class\n * @example\n * var options = {\n *     mimeType: 'video/webm'\n * }\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\n * @param {object} config - {disableLogs:true, frameInterval: 10, mimeType: \"video/webm\"}\n */\n\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\n    var self = this;\n\n    options = options || {\n        mimeType: 'video/webm',\n        video: {\n            width: 320,\n            height: 240\n        }\n    };\n\n    if (!options.frameInterval) {\n        options.frameInterval = 10;\n    }\n\n    if (!options.video) {\n        options.video = {};\n    }\n\n    if (!options.video.width) {\n        options.video.width = 320;\n    }\n\n    if (!options.video.height) {\n        options.video.height = 240;\n    }\n\n    /**\n     * This method records all MediaStreams.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        isStoppedRecording = false;\n        var mixedVideoStream = getMixedVideoStream();\n\n        var mixedAudioStream = getMixedAudioStream();\n        if (mixedAudioStream) {\n            mixedAudioStream.getAudioTracks().forEach(function(track) {\n                mixedVideoStream.addTrack(track);\n            });\n        }\n\n        if (options.previewStream && typeof options.previewStream === 'function') {\n            options.previewStream(mixedVideoStream);\n        }\n\n        mediaRecorder = new MediaStreamRecorder(mixedVideoStream, {\n            mimeType: 'video/webm'\n        });\n\n        canvas.width = videos.length > 1 ? videos[0].width * 2 : videos[0].width;\n        canvas.height = videos.length > 2 ? videos[0].height * 2 : videos[0].height;\n\n        drawVideosToCanvas();\n\n        mediaRecorder.record();\n    };\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        isStoppedRecording = true;\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.stop(function(blob) {\n            callback(blob);\n        });\n    };\n\n    function getMixedAudioStream() {\n        // via: @pehrsons\n        var audioContext = new AudioContext();\n        var audioSources = [];\n\n        var audioTracksLength = 0;\n        arrayOfMediaStreams.forEach(function(stream) {\n            if (!stream.getAudioTracks().length) {\n                return;\n            }\n\n            audioTracksLength++;\n\n            audioSources.push(audioContext.createMediaStreamSource(stream));\n        });\n\n        if (!audioTracksLength) {\n            return;\n        }\n\n        var audioiDestination = audioContext.createMediaStreamDestination();\n        audioSources.forEach(function(audioSource) {\n            audioSource.connect(audioiDestination);\n        });\n        return audioiDestination.stream;\n    }\n\n    var videos = [];\n    var mediaRecorder;\n\n    function getMixedVideoStream() {\n        // via: @adrian-ber\n        arrayOfMediaStreams.forEach(function(stream) {\n            if (!stream.getVideoTracks().length) {\n                return;\n            }\n\n            var video = getVideo(stream);\n            video.width = options.video.width;\n            video.height = options.video.height;\n            videos.push(video);\n        });\n\n        var capturedStream;\n\n        if ('captureStream' in canvas) {\n            capturedStream = canvas.captureStream();\n        } else if ('mozCaptureStream' in canvas) {\n            capturedStream = canvas.mozCaptureStream();\n        } else if (!options.disableLogs) {\n            console.error('captureStream API requires this flag: chrome://flags/#enable-experimental-web-platform-features');\n        }\n\n        return capturedStream;\n    }\n\n    function getVideo(stream) {\n        var video = document.createElement('video');\n        video.src = URL.createObjectURL(stream);\n        video.play();\n        return video;\n    }\n\n    var isStoppedRecording = false;\n\n    function drawVideosToCanvas() {\n        if (isStoppedRecording) {\n            return;\n        }\n\n        var videosLength = videos.length;\n        videos.forEach(function(video, idx) {\n            if (videosLength === 1) {\n                context.drawImage(video, 0, 0, video.width, video.height);\n                return;\n            }\n\n            if (videosLength === 2) {\n                var x = 0;\n                var y = 0;\n\n                if (idx === 1) {\n                    x = video.width;\n                }\n\n                context.drawImage(video, x, y, video.width, video.height);\n                return;\n            }\n\n            if (videosLength === 3) {\n                var x = 0;\n                var y = 0;\n\n                if (idx === 1) {\n                    x = video.width;\n                }\n\n                if (idx === 2) {\n                    y = video.height;\n                }\n\n                context.drawImage(video, x, y, video.width, video.height);\n                return;\n            }\n\n            if (videosLength === 4) {\n                var x = 0;\n                var y = 0;\n\n                if (idx === 1) {\n                    x = video.width;\n                }\n\n                if (idx === 2) {\n                    y = video.height;\n                }\n\n                if (idx === 3) {\n                    x = video.width;\n                    y = video.height;\n                }\n\n                context.drawImage(video, x, y, video.width, video.height);\n                return;\n            }\n        });\n\n        setTimeout(drawVideosToCanvas, options.frameInterval);\n    }\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    canvas.style = 'opacity:0;position:absolute;z-index:-1;top: -100000000;left:-1000000000;';\n\n    document.body.appendChild(canvas);\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (mediaRecorder) {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (mediaRecorder) {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        videos = [];\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        isStoppedRecording = false;\n        mediaRecorder = null;\n\n        if (mediaRecorder) {\n            mediaRecorder.clearRecordedData();\n        }\n    };\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPathColorName = getPathColorName;\nexports.getColorName = getColorName;\nexports.getRandomPop = getRandomPop;\nexports.getIndexedPopColor = getIndexedPopColor;\nvar config = require('./../../config');\n\nvar transparent = exports.transparent = new Color(0, 0);\n\nfunction getPathColorName(path) {\n  var hexColor = path.parent.data.originalColor;\n  // let hexColor = path.strokeColor.toCSS(true); // This fails when it's a gradient\n  return getColorName(hexColor);\n}\n\nfunction getColorName(color) {\n  if (color) {\n    color = color.toUpperCase(); // make sure\n    if (color in config.palette.colorNames) {\n      return config.palette.colorNames[color];\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\nfunction getRandomPop() {\n  var pops = config.palette.pops;\n  return pops[Math.floor(Math.random() * pops.length)];\n}\n\nfunction getIndexedPopColor(index) {\n  var pops = config.palette.pops;\n  return pops[index % pops.length];\n}\n\n},{\"./../../config\":1}],8:[function(require,module,exports){\n\"use strict\";\n\n(function (root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.ShapeDetector = factory();\n  }\n})(undefined, function () {\n\n  var _nbSamplePoints;\n  var _squareSize = 250;\n  var _phi = 0.5 * (-1.0 + Math.sqrt(5.0));\n  var _angleRange = deg2Rad(45.0);\n  var _anglePrecision = deg2Rad(2.0);\n  var _halfDiagonal = Math.sqrt(_squareSize * _squareSize + _squareSize * _squareSize) * 0.5;\n  var _origin = {\n    x: 0,\n    y: 0\n  };\n\n  function deg2Rad(d) {\n\n    return d * Math.PI / 180.0;\n  };\n\n  function getDistance(a, b) {\n\n    var dx = b.x - a.x;\n    var dy = b.y - a.y;\n\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  function Stroke(points, name) {\n\n    this.points = points;\n    this.name = name;\n    this.processStroke();\n  };\n\n  Stroke.prototype.processStroke = function () {\n\n    this.points = this.resample();\n    this.setCentroid();\n    this.points = this.rotateBy(-this.indicativeAngle());\n    this.points = this.scaleToSquare();\n    this.setCentroid();\n    this.points = this.translateToOrigin();\n\n    return this;\n  };\n\n  Stroke.prototype.resample = function () {\n\n    var localDistance, q;\n    var interval = this.strokeLength() / (_nbSamplePoints - 1);\n    var distance = 0.0;\n    var newPoints = [this.points[0]];\n\n    for (var i = 1; i < this.points.length; i++) {\n      localDistance = getDistance(this.points[i - 1], this.points[i]);\n\n      if (distance + localDistance >= interval) {\n        q = {\n          x: this.points[i - 1].x + (interval - distance) / localDistance * (this.points[i].x - this.points[i - 1].x),\n          y: this.points[i - 1].y + (interval - distance) / localDistance * (this.points[i].y - this.points[i - 1].y)\n        };\n\n        newPoints.push(q);\n        this.points.splice(i, 0, q);\n        distance = 0.0;\n      } else {\n        distance += localDistance;\n      }\n    }\n\n    if (newPoints.length === _nbSamplePoints - 1) {\n      newPoints.push(this.points[this.points.length - 1]);\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.rotateBy = function (angle) {\n\n    var point;\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var newPoints = [];\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: (point.x - this.c.x) * cos - (point.y - this.c.y) * sin + this.c.x,\n        y: (point.x - this.c.x) * sin + (point.y - this.c.y) * cos + this.c.y\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.scaleToSquare = function () {\n\n    var point;\n    var newPoints = [];\n    var box = {\n      minX: +Infinity,\n      maxX: -Infinity,\n      minY: +Infinity,\n      maxY: -Infinity\n    };\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      box.minX = Math.min(box.minX, point.x);\n      box.minY = Math.min(box.minY, point.y);\n      box.maxX = Math.max(box.maxX, point.x);\n      box.maxY = Math.max(box.maxY, point.y);\n    }\n\n    box.width = box.maxX - box.minX;\n    box.height = box.maxY - box.minY;\n\n    for (i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: point.x * (_squareSize / box.width),\n        y: point.y * (_squareSize / box.height)\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.translateToOrigin = function (points) {\n\n    var point;\n    var newPoints = [];\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: point.x + _origin.x - this.c.x,\n        y: point.y + _origin.y - this.c.y\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.setCentroid = function () {\n\n    var point;\n    this.c = {\n      x: 0.0,\n      y: 0.0\n    };\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      this.c.x += point.x;\n      this.c.y += point.y;\n    }\n\n    this.c.x /= this.points.length;\n    this.c.y /= this.points.length;\n\n    return this;\n  };\n\n  Stroke.prototype.indicativeAngle = function () {\n\n    return Math.atan2(this.c.y - this.points[0].y, this.c.x - this.points[0].x);\n  };\n\n  Stroke.prototype.strokeLength = function () {\n\n    var d = 0.0;\n\n    for (var i = 1; i < this.points.length; i++) {\n      d += getDistance(this.points[i - 1], this.points[i]);\n    }\n\n    return d;\n  };\n\n  Stroke.prototype.distanceAtBestAngle = function (pattern) {\n\n    var a = -_angleRange;\n    var b = _angleRange;\n    var x1 = _phi * a + (1.0 - _phi) * b;\n    var f1 = this.distanceAtAngle(pattern, x1);\n    var x2 = (1.0 - _phi) * a + _phi * b;\n    var f2 = this.distanceAtAngle(pattern, x2);\n\n    while (Math.abs(b - a) > _anglePrecision) {\n\n      if (f1 < f2) {\n        b = x2;\n        x2 = x1;\n        f2 = f1;\n        x1 = _phi * a + (1.0 - _phi) * b;\n        f1 = this.distanceAtAngle(pattern, x1);\n      } else {\n        a = x1;\n        x1 = x2;\n        f1 = f2;\n        x2 = (1.0 - _phi) * a + _phi * b;\n        f2 = this.distanceAtAngle(pattern, x2);\n      }\n    }\n\n    return Math.min(f1, f2);\n  };\n\n  Stroke.prototype.distanceAtAngle = function (pattern, angle) {\n\n    var strokePoints = this.rotateBy(angle);\n    var patternPoints = pattern.points;\n    var d = 0.0;\n\n    for (var i = 0; i < strokePoints.length; i++) {\n      d += getDistance(strokePoints[i], patternPoints[i]);\n    }\n\n    return d / strokePoints.length;\n  };\n\n  function ShapeDetector(patterns, options) {\n\n    options = options || {};\n    this.threshold = options.threshold || 0;\n    _nbSamplePoints = options.nbSamplePoints || 64;\n\n    this.patterns = [];\n\n    for (var i = 0; i < patterns.length; i++) {\n      this.learn(patterns[i].name, patterns[i].points);\n    }\n  }\n\n  ShapeDetector.defaultShapes = [{\n    points: [{ x: 0, y: 50 }, { x: 100, y: 50 }],\n    name: \"line\"\n  }, {\n    points: [{ x: 50, y: 0 }, { x: 50, y: 100 }],\n    name: \"line\"\n  }, {\n    points: [{ x: 0, y: 0 }, { x: 100, y: 100 }],\n    name: \"line\"\n  }, {\n    points: [{ \"x\": 89, \"y\": 164 }, { \"x\": 90, \"y\": 162 }, { \"x\": 92, \"y\": 162 }, { \"x\": 94, \"y\": 164 }, { \"x\": 95, \"y\": 166 }, { \"x\": 96, \"y\": 169 }, { \"x\": 97, \"y\": 171 }, { \"x\": 99, \"y\": 175 }, { \"x\": 101, \"y\": 178 }, { \"x\": 103, \"y\": 182 }, { \"x\": 106, \"y\": 189 }, { \"x\": 108, \"y\": 194 }, { \"x\": 111, \"y\": 199 }, { \"x\": 114, \"y\": 204 }, { \"x\": 117, \"y\": 209 }, { \"x\": 119, \"y\": 214 }, { \"x\": 122, \"y\": 218 }, { \"x\": 124, \"y\": 222 }, { \"x\": 126, \"y\": 225 }, { \"x\": 128, \"y\": 228 }, { \"x\": 130, \"y\": 229 }, { \"x\": 133, \"y\": 233 }, { \"x\": 134, \"y\": 236 }, { \"x\": 136, \"y\": 239 }, { \"x\": 138, \"y\": 240 }, { \"x\": 139, \"y\": 242 }, { \"x\": 140, \"y\": 244 }, { \"x\": 142, \"y\": 242 }, { \"x\": 142, \"y\": 240 }, { \"x\": 142, \"y\": 237 }, { \"x\": 143, \"y\": 235 }, { \"x\": 143, \"y\": 233 }, { \"x\": 145, \"y\": 229 }, { \"x\": 146, \"y\": 226 }, { \"x\": 148, \"y\": 217 }, { \"x\": 149, \"y\": 208 }, { \"x\": 149, \"y\": 205 }, { \"x\": 151, \"y\": 196 }, { \"x\": 151, \"y\": 193 }, { \"x\": 153, \"y\": 182 }, { \"x\": 155, \"y\": 172 }, { \"x\": 157, \"y\": 165 }, { \"x\": 159, \"y\": 160 }, { \"x\": 162, \"y\": 155 }, { \"x\": 164, \"y\": 150 }, { \"x\": 165, \"y\": 148 }, { \"x\": 166, \"y\": 146 }],\n    name: \"line\"\n  }, {\n    points: [{ \"x\": 91, \"y\": 185 }, { \"x\": 93, \"y\": 185 }, { \"x\": 95, \"y\": 185 }, { \"x\": 97, \"y\": 185 }, { \"x\": 100, \"y\": 188 }, { \"x\": 102, \"y\": 189 }, { \"x\": 104, \"y\": 190 }, { \"x\": 106, \"y\": 193 }, { \"x\": 108, \"y\": 195 }, { \"x\": 110, \"y\": 198 }, { \"x\": 112, \"y\": 201 }, { \"x\": 114, \"y\": 204 }, { \"x\": 115, \"y\": 207 }, { \"x\": 117, \"y\": 210 }, { \"x\": 118, \"y\": 212 }, { \"x\": 120, \"y\": 214 }, { \"x\": 121, \"y\": 217 }, { \"x\": 122, \"y\": 219 }, { \"x\": 123, \"y\": 222 }, { \"x\": 124, \"y\": 224 }, { \"x\": 126, \"y\": 226 }, { \"x\": 127, \"y\": 229 }, { \"x\": 129, \"y\": 231 }, { \"x\": 130, \"y\": 233 }, { \"x\": 129, \"y\": 231 }, { \"x\": 129, \"y\": 228 }, { \"x\": 129, \"y\": 226 }, { \"x\": 129, \"y\": 224 }, { \"x\": 129, \"y\": 221 }, { \"x\": 129, \"y\": 218 }, { \"x\": 129, \"y\": 212 }, { \"x\": 129, \"y\": 208 }, { \"x\": 130, \"y\": 198 }, { \"x\": 132, \"y\": 189 }, { \"x\": 134, \"y\": 182 }, { \"x\": 137, \"y\": 173 }, { \"x\": 143, \"y\": 164 }, { \"x\": 147, \"y\": 157 }, { \"x\": 151, \"y\": 151 }, { \"x\": 155, \"y\": 144 }, { \"x\": 161, \"y\": 137 }, { \"x\": 165, \"y\": 131 }, { \"x\": 171, \"y\": 122 }, { \"x\": 174, \"y\": 118 }, { \"x\": 176, \"y\": 114 }, { \"x\": 177, \"y\": 112 }, { \"x\": 177, \"y\": 114 }, { \"x\": 175, \"y\": 116 }, { \"x\": 173, \"y\": 118 }],\n    name: \"line\"\n  }, {\n    points: [{ \"x\": 113, \"y\": 68 }, { \"x\": 86, \"y\": 79 }, { \"x\": 63, \"y\": 131 }, { \"x\": 78, \"y\": 147 }, { \"x\": 156, \"y\": 149 }, { \"x\": 195, \"y\": 100 }, { \"x\": 189, \"y\": 79 }, { \"x\": 125.73497, \"y\": 62.81168 }],\n    name: \"circle\"\n  }, {\n    points: [{ \"x\": 98, \"y\": 67 }, { \"x\": 77, \"y\": 85 }, { \"x\": 77, \"y\": 162 }, { \"x\": 179, \"y\": 156 }, { \"x\": 197, \"y\": 123 }, { \"x\": 167, \"y\": 63 }, { \"x\": 141, \"y\": 61 }, { \"x\": 110, \"y\": 59 }, { \"x\": 106.51192, \"y\": 59.70407 }],\n    name: \"circle\"\n  }, {\n    points: [{ \"x\": 60, \"y\": 47 }, { \"x\": 43, \"y\": 96 }, { \"x\": 52, \"y\": 206 }, { \"x\": 63, \"y\": 246 }, { \"x\": 118, \"y\": 296 }, { \"x\": 144, \"y\": 246 }, { \"x\": 141, \"y\": 147 }, { \"x\": 133, \"y\": 129 }, { \"x\": 113, \"y\": 80 }, { \"x\": 60.42738, \"y\": 45.76813 }],\n    name: \"circle\"\n  }, {\n    points: [{ \"x\": 127, \"y\": 141 }, { \"x\": 124, \"y\": 140 }, { \"x\": 120, \"y\": 139 }, { \"x\": 118, \"y\": 139 }, { \"x\": 116, \"y\": 139 }, { \"x\": 111, \"y\": 140 }, { \"x\": 109, \"y\": 141 }, { \"x\": 104, \"y\": 144 }, { \"x\": 100, \"y\": 147 }, { \"x\": 96, \"y\": 152 }, { \"x\": 93, \"y\": 157 }, { \"x\": 90, \"y\": 163 }, { \"x\": 87, \"y\": 169 }, { \"x\": 85, \"y\": 175 }, { \"x\": 83, \"y\": 181 }, { \"x\": 82, \"y\": 190 }, { \"x\": 82, \"y\": 195 }, { \"x\": 83, \"y\": 200 }, { \"x\": 84, \"y\": 205 }, { \"x\": 88, \"y\": 213 }, { \"x\": 91, \"y\": 216 }, { \"x\": 96, \"y\": 219 }, { \"x\": 103, \"y\": 222 }, { \"x\": 108, \"y\": 224 }, { \"x\": 111, \"y\": 224 }, { \"x\": 120, \"y\": 224 }, { \"x\": 133, \"y\": 223 }, { \"x\": 142, \"y\": 222 }, { \"x\": 152, \"y\": 218 }, { \"x\": 160, \"y\": 214 }, { \"x\": 167, \"y\": 210 }, { \"x\": 173, \"y\": 204 }, { \"x\": 178, \"y\": 198 }, { \"x\": 179, \"y\": 196 }, { \"x\": 182, \"y\": 188 }, { \"x\": 182, \"y\": 177 }, { \"x\": 178, \"y\": 167 }, { \"x\": 170, \"y\": 150 }, { \"x\": 163, \"y\": 138 }, { \"x\": 152, \"y\": 130 }, { \"x\": 143, \"y\": 129 }, { \"x\": 140, \"y\": 131 }, { \"x\": 129, \"y\": 136 }, { \"x\": 126, \"y\": 139 }],\n    name: \"circle\"\n  }, {\n    points: [{ \"x\": 516, \"y\": 284 }, { \"x\": 496, \"y\": 319 }, { \"x\": 496, \"y\": 329 }, { \"x\": 513, \"y\": 329 }, { \"x\": 550, \"y\": 324 }, { \"x\": 696, \"y\": 305 }, { \"x\": 737, \"y\": 298 }, { \"x\": 746, \"y\": 292 }, { \"x\": 734, \"y\": 278 }, { \"x\": 709, \"y\": 252 }, { \"x\": 664, \"y\": 193 }],\n    name: \"triangle\"\n  }, {\n    points: [{ \"x\": 179, \"y\": 159 }, { \"x\": 152, \"y\": 290 }, { \"x\": 143, \"y\": 336 }, { \"x\": 142, \"y\": 355 }, { \"x\": 160, \"y\": 348 }, { \"x\": 208, \"y\": 337 }, { \"x\": 241, \"y\": 330 }, { \"x\": 256, \"y\": 328 }, { \"x\": 254, \"y\": 315 }, { \"x\": 238, \"y\": 277 }, { \"x\": 210, \"y\": 200 }, { \"x\": 182.94356, \"y\": 110.45656 }],\n    name: \"triangle\"\n  }, {\n    points: [{ \"x\": 105, \"y\": 335 }, { \"x\": 115, \"y\": 362 }, { \"x\": 128, \"y\": 338 }, { \"x\": 163, \"y\": 271 }, { \"x\": 241, \"y\": 135 }, { \"x\": 261, \"y\": 104 }, { \"x\": 267, \"y\": 98 }, { \"x\": 261, \"y\": 102 }, { \"x\": 236, \"y\": 119 }, { \"x\": 151, \"y\": 195 }, { \"x\": 108, \"y\": 235 }, { \"x\": 83, \"y\": 267 }, { \"x\": 79.92616, \"y\": 270.93451 }],\n    name: \"triangle\"\n  }, {\n    points: [{ \"x\": 137, \"y\": 139 }, { \"x\": 135, \"y\": 141 }, { \"x\": 133, \"y\": 144 }, { \"x\": 132, \"y\": 146 }, { \"x\": 130, \"y\": 149 }, { \"x\": 128, \"y\": 151 }, { \"x\": 126, \"y\": 155 }, { \"x\": 123, \"y\": 160 }, { \"x\": 120, \"y\": 166 }, { \"x\": 116, \"y\": 171 }, { \"x\": 112, \"y\": 177 }, { \"x\": 107, \"y\": 183 }, { \"x\": 102, \"y\": 188 }, { \"x\": 100, \"y\": 191 }, { \"x\": 95, \"y\": 195 }, { \"x\": 90, \"y\": 199 }, { \"x\": 86, \"y\": 203 }, { \"x\": 82, \"y\": 206 }, { \"x\": 80, \"y\": 209 }, { \"x\": 75, \"y\": 213 }, { \"x\": 73, \"y\": 213 }, { \"x\": 70, \"y\": 216 }, { \"x\": 67, \"y\": 219 }, { \"x\": 64, \"y\": 221 }, { \"x\": 61, \"y\": 223 }, { \"x\": 60, \"y\": 225 }, { \"x\": 62, \"y\": 226 }, { \"x\": 65, \"y\": 225 }, { \"x\": 67, \"y\": 226 }, { \"x\": 74, \"y\": 226 }, { \"x\": 77, \"y\": 227 }, { \"x\": 85, \"y\": 229 }, { \"x\": 91, \"y\": 230 }, { \"x\": 99, \"y\": 231 }, { \"x\": 108, \"y\": 232 }, { \"x\": 116, \"y\": 233 }, { \"x\": 125, \"y\": 233 }, { \"x\": 134, \"y\": 234 }, { \"x\": 145, \"y\": 233 }, { \"x\": 153, \"y\": 232 }, { \"x\": 160, \"y\": 233 }, { \"x\": 170, \"y\": 234 }, { \"x\": 177, \"y\": 235 }, { \"x\": 179, \"y\": 236 }, { \"x\": 186, \"y\": 237 }, { \"x\": 193, \"y\": 238 }, { \"x\": 198, \"y\": 239 }, { \"x\": 200, \"y\": 237 }, { \"x\": 202, \"y\": 239 }, { \"x\": 204, \"y\": 238 }, { \"x\": 206, \"y\": 234 }, { \"x\": 205, \"y\": 230 }, { \"x\": 202, \"y\": 222 }, { \"x\": 197, \"y\": 216 }, { \"x\": 192, \"y\": 207 }, { \"x\": 186, \"y\": 198 }, { \"x\": 179, \"y\": 189 }, { \"x\": 174, \"y\": 183 }, { \"x\": 170, \"y\": 178 }, { \"x\": 164, \"y\": 171 }, { \"x\": 161, \"y\": 168 }, { \"x\": 154, \"y\": 160 }, { \"x\": 148, \"y\": 155 }, { \"x\": 143, \"y\": 150 }, { \"x\": 138, \"y\": 148 }, { \"x\": 136, \"y\": 148 }],\n    name: \"triangle\"\n  }, {\n    points: [{ x: 0, y: 0 }, { x: 0, y: 50 }, { x: 50, y: 50 }, { x: 50, y: 0 }],\n    name: \"square\"\n  }, {\n    points: [{ x: 0, y: 0 }, { x: 0, y: 100 }, { x: 50, y: 100 }, { x: 50, y: 0 }],\n    name: \"square\"\n  }, {\n    points: [{ \"x\": 78, \"y\": 149 }, { \"x\": 78, \"y\": 153 }, { \"x\": 78, \"y\": 157 }, { \"x\": 78, \"y\": 160 }, { \"x\": 79, \"y\": 162 }, { \"x\": 79, \"y\": 164 }, { \"x\": 79, \"y\": 167 }, { \"x\": 79, \"y\": 169 }, { \"x\": 79, \"y\": 173 }, { \"x\": 79, \"y\": 178 }, { \"x\": 79, \"y\": 183 }, { \"x\": 80, \"y\": 189 }, { \"x\": 80, \"y\": 193 }, { \"x\": 80, \"y\": 198 }, { \"x\": 80, \"y\": 202 }, { \"x\": 81, \"y\": 208 }, { \"x\": 81, \"y\": 210 }, { \"x\": 81, \"y\": 216 }, { \"x\": 82, \"y\": 222 }, { \"x\": 82, \"y\": 224 }, { \"x\": 82, \"y\": 227 }, { \"x\": 83, \"y\": 229 }, { \"x\": 83, \"y\": 231 }, { \"x\": 85, \"y\": 230 }, { \"x\": 88, \"y\": 232 }, { \"x\": 90, \"y\": 233 }, { \"x\": 92, \"y\": 232 }, { \"x\": 94, \"y\": 233 }, { \"x\": 99, \"y\": 232 }, { \"x\": 102, \"y\": 233 }, { \"x\": 106, \"y\": 233 }, { \"x\": 109, \"y\": 234 }, { \"x\": 117, \"y\": 235 }, { \"x\": 123, \"y\": 236 }, { \"x\": 126, \"y\": 236 }, { \"x\": 135, \"y\": 237 }, { \"x\": 142, \"y\": 238 }, { \"x\": 145, \"y\": 238 }, { \"x\": 152, \"y\": 238 }, { \"x\": 154, \"y\": 239 }, { \"x\": 165, \"y\": 238 }, { \"x\": 174, \"y\": 237 }, { \"x\": 179, \"y\": 236 }, { \"x\": 186, \"y\": 235 }, { \"x\": 191, \"y\": 235 }, { \"x\": 195, \"y\": 233 }, { \"x\": 197, \"y\": 233 }, { \"x\": 200, \"y\": 233 }, { \"x\": 201, \"y\": 235 }, { \"x\": 201, \"y\": 233 }, { \"x\": 199, \"y\": 231 }, { \"x\": 198, \"y\": 226 }, { \"x\": 198, \"y\": 220 }, { \"x\": 196, \"y\": 207 }, { \"x\": 195, \"y\": 195 }, { \"x\": 195, \"y\": 181 }, { \"x\": 195, \"y\": 173 }, { \"x\": 195, \"y\": 163 }, { \"x\": 194, \"y\": 155 }, { \"x\": 192, \"y\": 145 }, { \"x\": 192, \"y\": 143 }, { \"x\": 192, \"y\": 138 }, { \"x\": 191, \"y\": 135 }, { \"x\": 191, \"y\": 133 }, { \"x\": 191, \"y\": 130 }, { \"x\": 190, \"y\": 128 }, { \"x\": 188, \"y\": 129 }, { \"x\": 186, \"y\": 129 }, { \"x\": 181, \"y\": 132 }, { \"x\": 173, \"y\": 131 }, { \"x\": 162, \"y\": 131 }, { \"x\": 151, \"y\": 132 }, { \"x\": 149, \"y\": 132 }, { \"x\": 138, \"y\": 132 }, { \"x\": 136, \"y\": 132 }, { \"x\": 122, \"y\": 131 }, { \"x\": 120, \"y\": 131 }, { \"x\": 109, \"y\": 130 }, { \"x\": 107, \"y\": 130 }, { \"x\": 90, \"y\": 132 }, { \"x\": 81, \"y\": 133 }, { \"x\": 76, \"y\": 133 }],\n    name: \"square\"\n  }, {\n    points: [{ \"x\": 67, \"y\": 172 }, { \"x\": 80, \"y\": 85 }, { \"x\": 83, \"y\": 58 }, { \"x\": 83, \"y\": 54 }, { \"x\": 136, \"y\": 110 }, { \"x\": 157, \"y\": 136 }, { \"x\": 162, \"y\": 140 }, { \"x\": 166, \"y\": 143 }, { \"x\": 80, \"y\": 124 }, { \"x\": 45, \"y\": 116 }, { \"x\": 37, \"y\": 114 }, { \"x\": 31, \"y\": 113 }, { \"x\": 52, \"y\": 106 }, { \"x\": 101, \"y\": 86 }, { \"x\": 131, \"y\": 75 }, { \"x\": 157, \"y\": 63 }, { \"x\": 163, \"y\": 62 }, { \"x\": 158, \"y\": 64 }, { \"x\": 153, \"y\": 73 }, { \"x\": 128, \"y\": 103 }, { \"x\": 71, \"y\": 170 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 30, \"y\": 69 }, { \"x\": 116, \"y\": 118 }, { \"x\": 90, \"y\": 164 }, { \"x\": 75, \"y\": 117 }, { \"x\": 157, \"y\": 83 }, { \"x\": 182, \"y\": 140 }, { \"x\": 155, \"y\": 163 }, { \"x\": 144, \"y\": 119 }, { \"x\": 221, \"y\": 54 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 87, \"y\": 76 }, { \"x\": 62, \"y\": 73 }, { \"x\": 100, \"y\": 98 }, { \"x\": 107, \"y\": 57 }, { \"x\": 61, \"y\": 38 }, { \"x\": 73, \"y\": 137 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 123, \"y\": 129 }, { \"x\": 123, \"y\": 131 }, { \"x\": 124, \"y\": 133 }, { \"x\": 125, \"y\": 136 }, { \"x\": 127, \"y\": 140 }, { \"x\": 129, \"y\": 142 }, { \"x\": 133, \"y\": 148 }, { \"x\": 137, \"y\": 154 }, { \"x\": 143, \"y\": 158 }, { \"x\": 145, \"y\": 161 }, { \"x\": 148, \"y\": 164 }, { \"x\": 153, \"y\": 170 }, { \"x\": 158, \"y\": 176 }, { \"x\": 160, \"y\": 178 }, { \"x\": 164, \"y\": 183 }, { \"x\": 168, \"y\": 188 }, { \"x\": 171, \"y\": 191 }, { \"x\": 175, \"y\": 196 }, { \"x\": 178, \"y\": 200 }, { \"x\": 180, \"y\": 202 }, { \"x\": 181, \"y\": 205 }, { \"x\": 184, \"y\": 208 }, { \"x\": 186, \"y\": 210 }, { \"x\": 187, \"y\": 213 }, { \"x\": 188, \"y\": 215 }, { \"x\": 186, \"y\": 212 }, { \"x\": 183, \"y\": 211 }, { \"x\": 177, \"y\": 208 }, { \"x\": 169, \"y\": 206 }, { \"x\": 162, \"y\": 205 }, { \"x\": 154, \"y\": 207 }, { \"x\": 145, \"y\": 209 }, { \"x\": 137, \"y\": 210 }, { \"x\": 129, \"y\": 214 }, { \"x\": 122, \"y\": 217 }, { \"x\": 118, \"y\": 218 }, { \"x\": 111, \"y\": 221 }, { \"x\": 109, \"y\": 222 }, { \"x\": 110, \"y\": 219 }, { \"x\": 112, \"y\": 217 }, { \"x\": 118, \"y\": 209 }, { \"x\": 120, \"y\": 207 }, { \"x\": 128, \"y\": 196 }, { \"x\": 135, \"y\": 187 }, { \"x\": 138, \"y\": 183 }, { \"x\": 148, \"y\": 167 }, { \"x\": 157, \"y\": 153 }, { \"x\": 163, \"y\": 145 }, { \"x\": 165, \"y\": 142 }, { \"x\": 172, \"y\": 133 }, { \"x\": 177, \"y\": 127 }, { \"x\": 179, \"y\": 127 }, { \"x\": 180, \"y\": 125 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 81, \"y\": 219 }, { \"x\": 84, \"y\": 218 }, { \"x\": 86, \"y\": 220 }, { \"x\": 88, \"y\": 220 }, { \"x\": 90, \"y\": 220 }, { \"x\": 92, \"y\": 219 }, { \"x\": 95, \"y\": 220 }, { \"x\": 97, \"y\": 219 }, { \"x\": 99, \"y\": 220 }, { \"x\": 102, \"y\": 218 }, { \"x\": 105, \"y\": 217 }, { \"x\": 107, \"y\": 216 }, { \"x\": 110, \"y\": 216 }, { \"x\": 113, \"y\": 214 }, { \"x\": 116, \"y\": 212 }, { \"x\": 118, \"y\": 210 }, { \"x\": 121, \"y\": 208 }, { \"x\": 124, \"y\": 205 }, { \"x\": 126, \"y\": 202 }, { \"x\": 129, \"y\": 199 }, { \"x\": 132, \"y\": 196 }, { \"x\": 136, \"y\": 191 }, { \"x\": 139, \"y\": 187 }, { \"x\": 142, \"y\": 182 }, { \"x\": 144, \"y\": 179 }, { \"x\": 146, \"y\": 174 }, { \"x\": 148, \"y\": 170 }, { \"x\": 149, \"y\": 168 }, { \"x\": 151, \"y\": 162 }, { \"x\": 152, \"y\": 160 }, { \"x\": 152, \"y\": 157 }, { \"x\": 152, \"y\": 155 }, { \"x\": 152, \"y\": 151 }, { \"x\": 152, \"y\": 149 }, { \"x\": 152, \"y\": 146 }, { \"x\": 149, \"y\": 142 }, { \"x\": 148, \"y\": 139 }, { \"x\": 145, \"y\": 137 }, { \"x\": 141, \"y\": 135 }, { \"x\": 139, \"y\": 135 }, { \"x\": 134, \"y\": 136 }, { \"x\": 130, \"y\": 140 }, { \"x\": 128, \"y\": 142 }, { \"x\": 126, \"y\": 145 }, { \"x\": 122, \"y\": 150 }, { \"x\": 119, \"y\": 158 }, { \"x\": 117, \"y\": 163 }, { \"x\": 115, \"y\": 170 }, { \"x\": 114, \"y\": 175 }, { \"x\": 117, \"y\": 184 }, { \"x\": 120, \"y\": 190 }, { \"x\": 125, \"y\": 199 }, { \"x\": 129, \"y\": 203 }, { \"x\": 133, \"y\": 208 }, { \"x\": 138, \"y\": 213 }, { \"x\": 145, \"y\": 215 }, { \"x\": 155, \"y\": 218 }, { \"x\": 164, \"y\": 219 }, { \"x\": 166, \"y\": 219 }, { \"x\": 177, \"y\": 219 }, { \"x\": 182, \"y\": 218 }, { \"x\": 192, \"y\": 216 }, { \"x\": 196, \"y\": 213 }, { \"x\": 199, \"y\": 212 }, { \"x\": 201, \"y\": 211 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 75, \"y\": 250 }, { \"x\": 75, \"y\": 247 }, { \"x\": 77, \"y\": 244 }, { \"x\": 78, \"y\": 242 }, { \"x\": 79, \"y\": 239 }, { \"x\": 80, \"y\": 237 }, { \"x\": 82, \"y\": 234 }, { \"x\": 82, \"y\": 232 }, { \"x\": 84, \"y\": 229 }, { \"x\": 85, \"y\": 225 }, { \"x\": 87, \"y\": 222 }, { \"x\": 88, \"y\": 219 }, { \"x\": 89, \"y\": 216 }, { \"x\": 91, \"y\": 212 }, { \"x\": 92, \"y\": 208 }, { \"x\": 94, \"y\": 204 }, { \"x\": 95, \"y\": 201 }, { \"x\": 96, \"y\": 196 }, { \"x\": 97, \"y\": 194 }, { \"x\": 98, \"y\": 191 }, { \"x\": 100, \"y\": 185 }, { \"x\": 102, \"y\": 178 }, { \"x\": 104, \"y\": 173 }, { \"x\": 104, \"y\": 171 }, { \"x\": 105, \"y\": 164 }, { \"x\": 106, \"y\": 158 }, { \"x\": 107, \"y\": 156 }, { \"x\": 107, \"y\": 152 }, { \"x\": 108, \"y\": 145 }, { \"x\": 109, \"y\": 141 }, { \"x\": 110, \"y\": 139 }, { \"x\": 112, \"y\": 133 }, { \"x\": 113, \"y\": 131 }, { \"x\": 116, \"y\": 127 }, { \"x\": 117, \"y\": 125 }, { \"x\": 119, \"y\": 122 }, { \"x\": 121, \"y\": 121 }, { \"x\": 123, \"y\": 120 }, { \"x\": 125, \"y\": 122 }, { \"x\": 125, \"y\": 125 }, { \"x\": 127, \"y\": 130 }, { \"x\": 128, \"y\": 133 }, { \"x\": 131, \"y\": 143 }, { \"x\": 136, \"y\": 153 }, { \"x\": 140, \"y\": 163 }, { \"x\": 144, \"y\": 172 }, { \"x\": 145, \"y\": 175 }, { \"x\": 151, \"y\": 189 }, { \"x\": 156, \"y\": 201 }, { \"x\": 161, \"y\": 213 }, { \"x\": 166, \"y\": 225 }, { \"x\": 169, \"y\": 233 }, { \"x\": 171, \"y\": 236 }, { \"x\": 174, \"y\": 243 }, { \"x\": 177, \"y\": 247 }, { \"x\": 178, \"y\": 249 }, { \"x\": 179, \"y\": 251 }, { \"x\": 180, \"y\": 253 }, { \"x\": 180, \"y\": 255 }, { \"x\": 179, \"y\": 257 }, { \"x\": 177, \"y\": 257 }, { \"x\": 174, \"y\": 255 }, { \"x\": 169, \"y\": 250 }, { \"x\": 164, \"y\": 247 }, { \"x\": 160, \"y\": 245 }, { \"x\": 149, \"y\": 238 }, { \"x\": 138, \"y\": 230 }, { \"x\": 127, \"y\": 221 }, { \"x\": 124, \"y\": 220 }, { \"x\": 112, \"y\": 212 }, { \"x\": 110, \"y\": 210 }, { \"x\": 96, \"y\": 201 }, { \"x\": 84, \"y\": 195 }, { \"x\": 74, \"y\": 190 }, { \"x\": 64, \"y\": 182 }, { \"x\": 55, \"y\": 175 }, { \"x\": 51, \"y\": 172 }, { \"x\": 49, \"y\": 170 }, { \"x\": 51, \"y\": 169 }, { \"x\": 56, \"y\": 169 }, { \"x\": 66, \"y\": 169 }, { \"x\": 78, \"y\": 168 }, { \"x\": 92, \"y\": 166 }, { \"x\": 107, \"y\": 164 }, { \"x\": 123, \"y\": 161 }, { \"x\": 140, \"y\": 162 }, { \"x\": 156, \"y\": 162 }, { \"x\": 171, \"y\": 160 }, { \"x\": 173, \"y\": 160 }, { \"x\": 186, \"y\": 160 }, { \"x\": 195, \"y\": 160 }, { \"x\": 198, \"y\": 161 }, { \"x\": 203, \"y\": 163 }, { \"x\": 208, \"y\": 163 }, { \"x\": 206, \"y\": 164 }, { \"x\": 200, \"y\": 167 }, { \"x\": 187, \"y\": 172 }, { \"x\": 174, \"y\": 179 }, { \"x\": 172, \"y\": 181 }, { \"x\": 153, \"y\": 192 }, { \"x\": 137, \"y\": 201 }, { \"x\": 123, \"y\": 211 }, { \"x\": 112, \"y\": 220 }, { \"x\": 99, \"y\": 229 }, { \"x\": 90, \"y\": 237 }, { \"x\": 80, \"y\": 244 }, { \"x\": 73, \"y\": 250 }, { \"x\": 69, \"y\": 254 }, { \"x\": 69, \"y\": 252 }],\n    name: \"other\"\n  }];\n\n  ShapeDetector.prototype.spot = function (points, patternName) {\n\n    if (patternName == null) {\n      patternName = '';\n    }\n\n    var distance, pattern, score;\n    var stroke = new Stroke(points);\n    var bestDistance = +Infinity;\n    var bestPattern = null;\n    var bestScore = 0;\n\n    for (var i = 0; i < this.patterns.length; i++) {\n      pattern = this.patterns[i];\n\n      if (pattern.name.indexOf(patternName) > -1) {\n        distance = stroke.distanceAtBestAngle(pattern);\n        score = 1.0 - distance / _halfDiagonal;\n\n        if (distance < bestDistance && score > this.threshold) {\n          bestDistance = distance;\n          bestPattern = pattern.name;\n          bestScore = score;\n        }\n      }\n    }\n\n    return {\n      pattern: bestPattern,\n      score: bestScore\n    };\n  };\n\n  ShapeDetector.prototype.learn = function (name, points) {\n\n    return this.patterns.push(new Stroke(points, name));\n  };\n\n  return ShapeDetector;\n});\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetWindow = resetWindow;\nvar touch = require('./touch');\nvar ui = require('./ui');\nvar overlays = require('./overlays');\nvar video = require('./video');\nvar timing = require('./timing');\nvar util = require('./util');\nvar sound = require('./sound');\n\nfunction resetWindow() {\n  window.kan = {\n    currentColor: '#2B5E2E',\n    composition: [],\n    compositionInterval: null,\n    compositionTimeout: null,\n    soundTimeouts: [],\n    lastEvent: null,\n    interaction: false,\n    moves: [],\n    playing: false,\n    pinching: false,\n    pinchedGroup: null,\n    pinchedTut: null,\n    pathData: {},\n    shapePath: null,\n    prevAngle: null,\n    sides: [],\n    side: [],\n    corners: [],\n    lastScale: 1,\n    lastRotation: 0,\n    originalPosition: null,\n    tutorialCompletion: {\n      \"fill\": false,\n      \"pinch\": false,\n      \"swipe\": false\n    },\n    inactivityTimeout: null,\n    playPromptTimeout: null,\n    userHasDrawnFirstShape: false,\n    firstTimePlaying: true,\n    shapesSinceTut: 0,\n    refreshCheckInterval: null,\n    sha: null,\n    scheduledOverlay: null,\n    continueCountdownInterval: null,\n    shapeSounds: null\n  };\n}\n\n$(window).on('load', function () {\n  function run() {\n    resetWindow();\n    util.setSha();\n    ui.init();\n    overlays.init();\n    timing.init();\n    sound.init().then(function () {\n      // sound.init() is async because it loads in the sound files\n      touch.init();\n    }).fail(function (e) {\n      console.error('error initting shape sounds:', e);\n      location.reload();\n    });\n  }\n\n  try {\n    run();\n  } catch (e) {\n    console.error(e);\n    setTimeout(function () {\n      // wait 5 seconds then reload\n      location.reload();\n    }, 5 * 1000);\n  }\n});\n\n},{\"./overlays\":10,\"./sound\":13,\"./timing\":14,\"./touch\":15,\"./ui\":17,\"./util\":18,\"./video\":19}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.openOverlay = openOverlay;\nexports.resetContinueCountdown = resetContinueCountdown;\nexports.cardNavNext = cardNavNext;\nexports.closeAndResetOverlays = closeAndResetOverlays;\nexports.init = init;\nvar config = require('./../../config');\n\nvar touch = require('./touch');\nvar video = require('./video');\nvar timing = require('./timing');\nvar tutorial = require('./tutorial');\nvar util = require('./util');\n\nvar hammerCanvas = touch.hammerCanvas;\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar $cardsWrap = $body.find('.overlay.tips .card-wrap');\nvar $cardItems = $cardsWrap.find('article');\nvar cardsCount = $cardItems.length;\nvar $footer = $body.find('.overlay.tips .footer');\n\nvar $sharePhone = $body.find('#phone');\nvar $shareKeypad = $body.find('.keypad');\n\nvar allOverlays = ['intro', 'play-prompt', 'share-prompt', 'continue', 'tips', 'share'];\nvar overlayOpenClasses = allOverlays.map(function (overlay) {\n  return overlay + '-active';\n}).join(' ');\n\nvar overlayActiveClass = 'overlay-active';\n\nfunction openOverlay(overlayName) {\n  // console.log('attempting to open overlay', overlayName);\n  if (window.kan.overlays === false) return;\n  if (allOverlays.includes(overlayName)) {\n    if (window.kan.pinching === true || window.kan.panning === true) {\n      if (overlayName === 'continue') {\n        timing.preventInactivityTimeout();\n      } else {\n        // console.log('scheduling overlay', overlayName);\n        window.kan.scheduledOverlay = overlayName;\n      }\n      return;\n    }\n    closeAndResetOverlays();\n    tutorial.hideContextualTuts();\n    $body.addClass(overlayActiveClass);\n    $body.find('.overlay:not(.tips)').on(tapEvent, function () {\n      closeAndResetOverlays();\n    });\n\n    switch (overlayName) {\n      case 'intro':\n        openIntroOverlay();\n        break;\n      case 'play-prompt':\n        if (util.anyShapesOnCanvas()) {\n          openPlayPromptOverlay();\n        } else {\n          window.kan.playPromptTimeout = setTimeout(function () {\n            openOverlay('play-prompt');\n          }, timing.playPromptDelay / 2);\n        }\n        break;\n      case 'share-prompt':\n        openSharePromptOverlay();\n        break;\n      case 'continue':\n        openContinueOverlay();\n        break;\n      case 'tips':\n        openTipsOverlay();\n        break;\n      case 'share':\n        openShareOverlay();\n        break;\n    }\n  } else {\n    // console.log('unable to open unknown overlay', overlayName);\n  }\n}\n\nfunction openIntroOverlay() {\n  $body.addClass('intro-active');\n}\n\nfunction openPlayPromptOverlay() {\n  $body.addClass('play-prompt-active');\n}\n\nfunction openSharePromptOverlay() {\n  $body.addClass('share-prompt-active');\n}\n\nfunction resetContinueCountdown() {\n  $('.overlay.continue .countdown-num').html(parseInt(timing.continueInactivityDelay / 1000));\n  clearInterval(window.kan.continueCountdownInterval);\n}\n\nfunction openContinueOverlay() {\n  $body.addClass('continue-active');\n\n  resetContinueCountdown();\n  clearTimeout(window.kan.inactivityTimeout);\n  clearTimeout(window.kan.playPromptTimeout);\n\n  window.kan.continueCountdownInterval = setInterval(function () {\n    var $countdownNumWrap = $('.overlay.continue .countdown-num');\n    var count = parseInt($countdownNumWrap.html());\n    if (count > 1) {\n      $countdownNumWrap.html(count - 1);\n    }\n  }, 1000);\n\n  window.kan.inactivityTimeout = setTimeout(function () {\n    video.enterTutorialMode();\n  }, timing.continueInactivityDelay);\n}\n\nfunction openTipsOverlay() {\n  $body.addClass('tips-active');\n  activateTipsCards();\n}\n\nfunction openShareOverlay() {\n  $body.addClass('share-active');\n}\n\n// card slider navigation\nfunction cardNavNext() {\n  var $old = $body.find('.card-wrap .current');\n  var $new = $old.next().length ? $old.next() : $cardItems.first();\n  var $next = $new.next().length ? $new.next() : $cardItems.first();\n  var $third = $next.next().length ? $next.next() : $cardItems.first().next();\n  var slide = $new.index();\n  $old.removeClass().addClass('remove');\n  $new.removeClass().addClass('current');\n  $next.removeClass().addClass('next');\n  $third.removeClass().addClass('third');\n  updateCardCounter(slide + 1, cardsCount);\n  setTimeout(function () {\n    $old.removeClass();\n  }, 600);\n}\n\n// tips card interactions\nfunction cardInteractions() {\n  var timeOfLastInteraction = 0;\n\n  $body.find('.overlay').on(tapEvent, function (e) {\n    var currentTime = Date.now();\n    if (timeOfLastInteraction > currentTime - 250) {\n      return;\n    }\n    timeOfLastInteraction = currentTime;\n\n    if ($(e.target).closest('.card-wrap').length == 1) {\n      // directly on a card, navigate to the next one\n      cardNavNext();\n    } else {\n      // outside elements, close everything and reset\n      closeAndResetOverlays();\n    }\n  });\n}\n\nfunction resetTips() {\n  $cardItems.removeClass();\n  $sharePhone.html('');\n}\n\n// close and reset tips\nfunction closeAndResetOverlays() {\n  $body.removeClass('overlay-active');\n  $body.removeClass(overlayOpenClasses);\n  resetTips();\n}\n\n// deal a fresh stack of cards\nfunction activateTipsCards() {\n  var $new = $cardItems.first();\n  var $next = $new.next().length ? $new.next() : $cardItems.first();\n  var $third = $next.next().length ? $next.next() : $cardItems.first().next();\n  $cardItems.removeClass();\n  $new.removeClass().addClass('current');\n  $next.removeClass().addClass('next');\n  $third.removeClass().addClass('third');\n  updateCardCounter(1, cardsCount);\n}\n\n// counting cards\nfunction updateCardCounter(current, total) {\n  $footer.find('.current').html(current);\n  $footer.find('.next').html(total);\n}\n\n// phone inputs\nfunction phoneNumberInputs() {\n  // mask the output\n  $sharePhone.mask('000-000-0000');\n  // get interactions from the keypad\n  $shareKeypad.find('.num').on(tapEvent, function (e) {\n    var phoneNumber = $sharePhone.html().toString() + $(e.target).html().toString();\n    phoneNumber = $sharePhone.masked(phoneNumber);\n    $sharePhone.html(phoneNumber);\n  });\n  // clear the display\n  $shareKeypad.find('.clear').on(tapEvent, function (e) {\n    $sharePhone.html('');\n  });\n  // FIXME: send sms\n  // $shareKeypad.find('.send').on(tapEvent, e => {});\n}\n\n// \"randomly\" place fiddly bits on the cards\nfunction randomCardGraphics() {\n  $body.find('.card-wrap article').each(function (i, el) {\n    $(el).attr('data-bg', i);\n  });\n}\n\nfunction initTips() {\n  cardInteractions();\n}\n\nfunction initShare() {\n  phoneNumberInputs();\n  randomCardGraphics();\n}\n\nfunction init() {\n  initTips();\n  initShare();\n}\n\n},{\"./../../config\":1,\"./timing\":14,\"./touch\":15,\"./tutorial\":16,\"./util\":18,\"./video\":19}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.destroyGroupPops = destroyGroupPops;\nexports.fillInGroupPopsById = fillInGroupPopsById;\nexports.toggleFill = toggleFill;\nexports.cleanUpGroup = cleanUpGroup;\nexports.updatePops = updatePops;\nexports.getOutlineGroup = getOutlineGroup;\nexports.getTruedShape = getTruedShape;\nexports.getCompletedPath = getCompletedPath;\nexports.getShapePrediction = getShapePrediction;\nexports.getIntegerPoint = getIntegerPoint;\nexports.stringifyPoint = stringifyPoint;\nexports.parsePoint = parsePoint;\nexports.getClosestPointFromPathData = getClosestPointFromPathData;\nexports.processShapeData = processShapeData;\nexports.findInteriorCurves = findInteriorCurves;\nexports.getExtendedPath = getExtendedPath;\nexports.getBruteExtendedPath = getBruteExtendedPath;\nexports.getTrimmedPath = getTrimmedPath;\nexports.hitTestGroupBounds = hitTestGroupBounds;\nexports.hitTestBounds = hitTestBounds;\nvar ShapeDetector = require('./lib/shape-detector');\n\nvar config = require('./../../config');\n\nvar util = require('./util');\nvar color = require('./color');\n\nvar cornerThresholdDeg = exports.cornerThresholdDeg = 30;\nvar thresholdDistMultiplier = exports.thresholdDistMultiplier = 0.1;\n\nvar detector = exports.detector = new ShapeDetector(ShapeDetector.defaultShapes);\n\nvar shapeNames = exports.shapeNames = [\"line\", \"circle\", \"square\", \"triangle\", \"other\"];\n\nfunction clearPops() {\n  var pops = util.getAllPops();\n  pops.forEach(function (pop) {\n    return pop.remove();\n  });\n}\n\nfunction destroyGroupPops(group) {\n  // console.log('destroying pops');\n  var groupPopsBefore = util.getGroupPops(group);\n  // console.log('pops to be destroyed', groupPopsBefore);\n  if (groupPopsBefore.length > 0) {\n    groupPopsBefore.forEach(function (pop) {\n      return pop.remove();\n    });\n  }\n  var groupPopsAfter = util.getGroupPops(group);\n  // console.log('group pops after', groupPopsAfter);\n}\n\nfunction fillInGroupPopsById(groupId) {\n  var group = paper.project.getItem({\n    className: 'Group',\n    match: function match(el) {\n      return el.id === groupId;\n    }\n  });\n\n  if (!!group && group.children.length > 0) {\n    group.children.forEach(function (groupChild) {\n      if (groupChild.name === 'loop') {\n        toggleFill(groupChild);\n      }\n    });\n  }\n}\n\nfunction toggleFill(item) {\n  var transparent = color.transparent;\n  // console.log('hit');\n  var parent = item.parent;\n\n  // console.log('hit item', item);\n  // console.log('hit parent', parent);\n\n  if (item.data.interior) {\n    // console.log('interior');\n    item.data.transparent = !item.data.transparent;\n\n    if (item.data.transparent) {\n      // console.log('transparent');\n      item.fillColor = transparent;\n      item.strokeColor = transparent;\n    } else {\n      // console.log('not transparent');\n      item.fillColor = parent.data.color;\n      item.strokeColor = parent.data.color;\n    }\n\n    window.kan.moves.push({\n      type: 'fillChange',\n      id: item.id,\n      fill: parent.data.color,\n      transparent: item.data.transparent\n    });\n  } else {\n    // console.log('not interior');\n    // check if item is a pop, because then we'll fill the pop's parent\n    if (!!item.data && item.data.pop === true) {\n      if (!!item.parent) {\n        if (config.pop === true) {\n          fillInGroupPopsById(item.parent.id);\n        }\n      }\n    }\n  }\n}\n\nfunction cleanUpGroup(group) {\n  // console.log('cleaning up group');\n  var acceptableNames = ['mask', 'outer', 'shapePath', 'loop', 'pop'];\n\n  group.children.forEach(function (groupChild) {\n    if (groupChild.name === null || !acceptableNames.includes(groupChild.name) || !groupChild.length > 0) {\n      groupChild.remove();\n    }\n  });\n\n  return group;\n}\n\nfunction updatePops() {\n  var freshGroups = util.getFreshGroups();\n  var popCandidates = util.getPopCandidates();\n  var allPops = util.getAllPops();\n  popCandidates.reverse();\n  // console.log('freshGroups', freshGroups);\n  // console.log('popCandidates', popCandidates);\n  // clearPops();\n\n  freshGroups.forEach(function (freshGroup, i) {\n    // if (i >= 4) return;\n    // console.log('freshGroup', freshGroup);\n\n    var freshOuter = freshGroup._namedChildren.mask[0];\n    freshOuter.bringToFront();\n    // freshOuter.visible = true;\n    // freshOuter.fillColor = 'black';\n    // freshOuter.selected = true;\n    // console.log('freshOuter', freshOuter);\n    // freshOuter.selected = true;\n    popCandidates.forEach(function (otherGroup, j) {\n      var otherGroupOuter = otherGroup._namedChildren.mask[0];\n      if (freshGroup.id !== otherGroup.id) {\n        // console.log('otherGroup', otherGroup);\n        // console.log('otherGroupOuter', otherGroupOuter);\n        // otherGroupOuter.fillColor = 'white';\n        otherGroupOuter.bringToFront();\n        var thisPop = freshOuter.intersect(otherGroupOuter);\n        if (!!thisPop && thisPop.length > 0) {\n          // const popColor = color.getIndexedPopColor(i + j);\n          var popColor = color.getRandomPop();\n          thisPop.fillColor = popColor;\n          thisPop.strokeColor = popColor;\n          thisPop.data.pop = true;\n          thisPop.name = 'pop';\n          thisPop.data.popGroup = freshGroup.id;\n          thisPop.data.intersectingGroup = otherGroup.id;\n          thisPop.visible = true;\n          thisPop.closed = true;\n          thisPop.bringToFront();\n          freshGroup.addChild(thisPop);\n        }\n\n        cleanUpGroup(freshGroup);\n\n        // figure out if this pop intersects any other pops\n        // allPops.forEach((otherPop, k) => {\n        //   console.log('checking other pop', otherPop);\n        //   if (thisPop.id !== otherPop.id && thisPop.intersects(otherPop)) {\n        //     let popIntersection = thisPop.getIntersections(otherPop);\n        //     if (!!popIntersection && popIntersection.length > 0) {\n        //       popIntersection = new Path([popIntersection])\n        //       console.log('popIntersection', popIntersection);\n        //       // const popColor = color.getIndexedPopColor(i + j + k);\n        //       const popColor = color.getRandomPop();\n        //       popIntersection.data.pop = true;\n        //       popIntersection.fillColor = popColor\n        //       popIntersection.strokeColor = popColor;\n        //       popIntersection.visible = true;\n        //       popIntersection.closed = true;\n        //       popIntersection.bringToFront();\n        //     }\n        //   }\n        // });\n      }\n    });\n\n    freshGroup.data.fresh = false;\n  });\n}\n\nfunction getOutlineGroup(truedShape) {\n  // console.log('truedShape', truedShape);\n  var outerPath = new Path();\n  outerPath.name = 'outer';\n  outerPath.visible = true;\n\n  var middlePath = new Path();\n  middlePath.name = 'middle';\n  var sizes = [];\n  var angle = null,\n      lastAngle = null,\n      angleDelta = void 0;\n\n  var firstTop = null,\n      firstBottom = null;\n  var lastTop = null,\n      lastBottom = null;\n\n  if (!(truedShape.length > 0)) return new Group(outerPath, middlePath);\n\n  middlePath.add(truedShape.firstSegment.point);\n\n  for (var i = 0; i < truedShape.length; i += 10) {\n    while (sizes.length > 10) {\n      sizes.shift();\n    }\n\n    var size = Math.random() * 9; // This is just random variance\n    sizes.push(size);\n\n    var cumSize = 0;\n    for (var j = 0; j < sizes.length; j++) {\n      cumSize += sizes[j];\n    }\n    var avgSize = Math.max(5, (cumSize / sizes.length + size) / 2);\n\n    var point = truedShape.getPointAt(i);\n    var normal = truedShape.getNormalAt(i);\n\n    var top = new Point(point.x + normal.x * avgSize, point.y + normal.y * avgSize);\n    var bottom = new Point(point.x - normal.x * avgSize, point.y - normal.y * avgSize);\n\n    // console.log('point', point, 'normal', normal);\n    // console.log('top', top, 'bottom', bottom);\n\n    outerPath.add(top);\n    outerPath.insert(0, bottom);\n    middlePath.add(point);\n\n    lastAngle = angle;\n\n    if (i == 10) {\n      firstTop = top;\n      firstBottom = bottom;\n    } else {\n      lastTop = top;\n      lastBottom = bottom;\n    }\n  }\n\n  if (truedShape.closed === true) {\n    var centerTop = new Point((firstTop.x + lastTop.x) / 2, (firstTop.y + lastTop.y) / 2);\n    var centerBottom = new Point((firstBottom.x + lastBottom.x) / 2, (firstBottom.y + lastBottom.y) / 2);\n    var center = new Point((centerTop.x + centerBottom.x) / 2, (centerTop.y + centerBottom.y) / 2);\n\n    outerPath.add(centerTop);\n    outerPath.insert(0, centerBottom);\n    middlePath.add(center);\n\n    outerPath.add(firstTop);\n    outerPath.insert(0, firstBottom);\n    middlePath.closed = true;\n  }\n\n  outerPath.flatten(50);\n  middlePath.flatten(50);\n  outerPath.simplify();\n  middlePath.simplify();\n\n  outerPath.selected = false;\n  // middlePath.selected = true;\n  outerPath.name = 'outer';\n  middlePath.name = 'middle';\n  var returnGroup = new Group(outerPath, middlePath);\n  return returnGroup;\n}\n\nfunction getTruedShape(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n  // console.log('pathClone', pathClone);\n  var completedPath = getCompletedPath(pathClone);\n  // completedPath.reduce();\n\n  // true the path!\n  var truedPath = completedPath;\n  // console.log('truedPath', truedPath);\n\n  truedPath.strokeWidth = pathClone.strokeWidth;\n\n  pathClone.remove();\n  return truedPath;\n}\n\n// extend or trim path if the ends are close\nfunction getCompletedPath(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n  pathClone.reduce();\n  pathClone.simplify();\n\n  var intersections = pathClone.getIntersections();\n\n  if (intersections.length > 0) {\n    // trim path if ends are close\n    var trimmedPath = getTrimmedPath(pathClone);\n\n    pathClone.remove();\n\n    return trimmedPath;\n  } else {\n    // extend path to see if an intersection is near\n    var extendedPath = getExtendedPath(pathClone);\n    var _intersections = extendedPath.getIntersections();\n\n    // pathClone.remove();\n\n    if (_intersections.length > 0) {\n      // trim extra extended path\n      var _trimmedPath = getTrimmedPath(extendedPath);\n      extendedPath.remove();\n      return _trimmedPath;\n    } else {\n      // extended path does not intersect, return the original path\n      extendedPath.replaceWith(getBruteExtendedPath(pathClone));\n      if (extendedPath !== null) {\n        var _intersections2 = extendedPath.getIntersections();\n\n        if (_intersections2.length > 0) {\n          var _trimmedPath2 = getTrimmedPath(extendedPath);\n          extendedPath.remove();\n          return _trimmedPath2;\n        }\n\n        if (!!extendedPath && extendedPath.length > 0) {\n          extendedPath.remove();\n        }\n      }\n\n      pathClone.visible = true;\n      return pathClone;\n    }\n  }\n}\n\nfunction getShapePrediction(path) {\n  var prediction = {};\n\n  var shapeJSON = path.exportJSON();\n  var shapeData = processShapeData(shapeJSON);\n  // console.log(JSON.stringify(shapeData));\n  var shapePrediction = detector.spot(shapeData);\n\n  if (shapePrediction.score === 0) {\n    // algorithm doesn't like vertical lines for some reason\n    // if the certainty is 0 it's probably a line\n    prediction.pattern = \"line\";\n    prediction.score = 0.9;\n  } else {\n    if (shapePrediction.score > 0.5) {\n      prediction.pattern = shapePrediction.pattern;\n    } else {\n      prediction.pattern = \"other\";\n    }\n    prediction.score = shapePrediction.score;\n  }\n\n  if (path.closed === true) {\n    var closedShapes = ['triangle', 'square', 'circle'];\n    if (closedShapes.includes(prediction.pattern) === false) {\n      // closed shape should be one of the above, make a random pick\n      prediction.pattern = util.randomPick(closedShapes);\n    }\n  } else if (path.intersects(path) === true) {\n    prediction.pattern = 'other';\n    // const intersectingShapes = ['triangle', 'square', 'circle', 'other'];\n    // if (intersectingShapes.includes(prediction.pattern) === false) {\n    //   prediction.pattern = util.randomPick(intersectingShapes);\n    // }\n  } else {\n    prediction.pattern = 'line'; // lines are the only shape that is not closed and does not intersect\n  }\n\n  // console.log('shape prediction', prediction);\n\n  return prediction;\n}\n\n// floors the coordinates of a point\nfunction getIntegerPoint(point) {\n  return new Point(Math.floor(point.x), Math.floor(point.y));\n}\n\nfunction stringifyPoint(point) {\n  return Math.floor(point.x) + ',' + Math.floor(point.y);\n}\n\nfunction parsePoint(pointStr) {\n  var split = pointStr.split(',').map(function (num) {\n    return Math.floor(num);\n  });\n\n  if (split.length >= 2) {\n    return new Point(split[0], split[1]);\n  }\n\n  return null;\n}\n\nfunction getClosestPointFromPathData(point, pathData) {\n  var leastDistance = void 0,\n      closestPoint = void 0;\n\n  Base.each(pathData, function (datum, i) {\n    var distance = point.getDistance(datum.point);\n    if (!leastDistance || distance < leastDistance) {\n      leastDistance = distance;\n      closestPoint = datum.point;\n    }\n  });\n\n  return closestPoint || point;\n}\n\nfunction processShapeData(json) {\n  var returnShape = [];\n  var jsonObj = JSON.parse(json)[1]; // zero index is stringified type (e.g. \"Path\")\n\n  if ('segments' in jsonObj) {\n    var segments = jsonObj.segments;\n    Base.each(segments, function (segment, i) {\n      if (segment.length === 3) {\n        var positionInfo = segment[0]; // indexes 1 and 2 are superfluous matrix details\n        returnShape.push({\n          x: positionInfo[0],\n          y: positionInfo[1]\n        });\n      } else {\n        returnShape.push({\n          x: segment[0],\n          y: segment[1]\n        });\n      };\n    });\n  }\n  return returnShape;\n}\n\nfunction findInteriorCurves(path) {\n  var transparent = color.transparent;\n\n  var interiorCurves = [];\n\n  var pathClone = path.clone();\n  var intersections = pathClone.getIntersections();\n\n  if (intersections.length > 0) {\n    var dividedPath = pathClone.resolveCrossings();\n    // console.log(dividedPath);\n\n    if (dividedPath.className === 'CompoundPath') {\n      Base.each(dividedPath.children, function (child, i) {\n        if (child.length > 0 && child.closed) {\n          var enclosedLoop = child.clone();\n          if (pathClone.closed) {\n            enclosedLoop.fillColor = pathClone.strokeColor;\n            enclosedLoop.data.interior = true;\n            enclosedLoop.data.transparent = false;\n          } else {\n            enclosedLoop.fillColor = transparent;\n            enclosedLoop.data.transparent = true;\n          }\n          enclosedLoop.data.interior = true;\n          enclosedLoop.visible = true;\n          enclosedLoop.closed = true;\n          interiorCurves.push(enclosedLoop);\n        }\n      });\n    } else {\n      if (pathClone.closed) {\n        var enclosedLoop = pathClone.clone();\n        enclosedLoop.visible = true;\n        enclosedLoop.fillColor = pathClone.strokeColor;\n        enclosedLoop.data.interior = true;\n        enclosedLoop.data.transparent = false;\n        interiorCurves.push(enclosedLoop);\n      }\n    }\n  } else {\n    if (pathClone.closed) {\n      var _enclosedLoop = pathClone.clone();\n      _enclosedLoop.visible = true;\n      _enclosedLoop.fillColor = pathClone.strokeColor;\n      _enclosedLoop.data.interior = true;\n      _enclosedLoop.data.transparent = false;\n      interiorCurves.push(_enclosedLoop);\n    }\n  }\n\n  return interiorCurves;\n}\n\nfunction getExtendedPath(path) {\n  var bruteForce = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var extendedPath = path.clone();\n  extendedPath.visible = false;\n\n  var thresholdDist = thresholdDistMultiplier * extendedPath.length;\n\n  var firstSegment = extendedPath.firstSegment;\n  var nextSegment = firstSegment.next;\n  var startAngle = Math.atan2(nextSegment.point.y - firstSegment.point.y, nextSegment.point.x - firstSegment.point.x); // rad\n  var inverseStartAngle = startAngle + Math.PI;\n  var extendedStartPoint = new Point(firstSegment.point.x + Math.cos(inverseStartAngle) * thresholdDist / 2, firstSegment.point.y + Math.sin(inverseStartAngle) * thresholdDist / 2);\n  extendedPath.insert(0, extendedStartPoint);\n\n  var lastSegment = extendedPath.lastSegment;\n  var penSegment = lastSegment.previous; // penultimate\n  var endAngle = Math.atan2(lastSegment.point.y - penSegment.point.y, lastSegment.point.x - penSegment.point.x); // rad\n  var extendedEndPoint = new Point(lastSegment.point.x + Math.cos(endAngle) * thresholdDist / 2, lastSegment.point.y + Math.sin(endAngle) * thresholdDist / 2);\n  extendedPath.add(extendedEndPoint);\n\n  // extendedPath.visible = true;\n\n  return extendedPath;\n}\n\nfunction getBruteExtendedPath(path) {\n  var extendedPath = path.clone();\n  extendedPath.visible = false;\n\n  var thresholdDist = thresholdDistMultiplier * extendedPath.length;\n  var firstPoint = extendedPath.firstSegment.point;\n  var lastPoint = extendedPath.lastSegment.point;\n\n  if (firstPoint.getDistance(lastPoint) < thresholdDist) {\n    extendedPath.insert(0, lastPoint);\n    extendedPath.add(firstPoint);\n    extendedPath.closed = true;\n    extendedPath.unite();\n    var crossings = extendedPath.resolveCrossings();\n    if (!!crossings && !!crossings.children && crossings.children.length > 0) {\n      (function () {\n        var maxArea = 0,\n            maxChild = null;\n        crossings.children.forEach(function (child) {\n          if (child.area > maxArea) {\n            maxChild = child;\n            maxArea = child.area;\n          }\n        });\n\n        extendedPath = maxChild;\n      })();\n    }\n  }\n\n  return extendedPath;\n}\n\nfunction getTrimmedPath(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n\n  var firstPoint = pathClone.firstSegment.point;\n  var lastPoint = pathClone.lastSegment.point;\n  var thresholdDist = thresholdDistMultiplier * pathClone.length;\n\n  var intersections = pathClone.getIntersections();\n  intersections.forEach(function (intersection, i) {\n    if (intersection.offset === 0) {\n      intersections.splice(i, 1);\n    }\n  });\n\n  // console.log('intersections', intersections);\n\n  if (intersections.length == 1) {\n    for (var i = 0; i < intersections.length; i++) {\n      var intersectionPoint = intersections[i].point;\n\n      // if the average of the distance between the first and last points and the intersection point is within the threshold, trim\n      if (firstPoint.getDistance(intersectionPoint) + lastPoint.getDistance(intersectionPoint) < 2 * thresholdDist) {\n        // console.log('trimming path');\n        var dividedPath = pathClone.clone(); // resolve crossings seems to modify the path it was passed, so make an extra clone to be safe\n        dividedPath.visible = false;\n        var pathCrossings = dividedPath.resolveCrossings();\n\n        if (pathCrossings.className === 'CompoundPath' && pathCrossings.children.length > 0) {\n          for (var j = 0; j < pathCrossings.children.length; j++) {\n            var child = pathCrossings.children[j];\n            if (child.closed) {\n              // child.selected = true;\n              dividedPath = dividedPath.subtract(child);\n            }\n          }\n        }\n\n        // dividedPath.selected = true;\n\n        var trimmedPath = pathClone.subtract(dividedPath);\n        if (trimmedPath.length === 0) return pathClone;\n        if (trimmedPath.className === 'CompoundPath' && trimmedPath.children.length > 0) {\n          var _ret2 = function () {\n            var closedChildren = [];\n            trimmedPath.children.forEach(function (child, i) {\n              if (child.length > 0 && child.closed) {\n                var childClone = child.clone();\n                childClone.visible = false;\n                closedChildren.push(childClone);\n              }\n            });\n\n            if (closedChildren.length > 0) {\n              if (closedChildren.length > 1) {\n                // for some reason there are more than one closed children, merge them\n                var accumulator = closedChildren[0];\n\n                for (var _j = 1; _j < closedChildren.length; _j++) {\n                  accumulator = accumulator.unite(closedChildren[_j]);\n                }\n\n                if (accumulator.length > 0 && accumulator.className === 'Path') {\n                  // console.log('trimmed accumulator', accumulator);\n                  var newPath = new Path();\n                  newPath.copyContent(accumulator);\n                  newPath.copyAttributes(pathClone);\n                  accumulator.remove();\n                  pathClone.remove();\n                  dividedPath.remove();\n                  trimmedPath.remove();\n                  return {\n                    v: newPath\n                  };\n                }\n              }\n\n              pathClone.remove();\n              dividedPath.remove();\n              trimmedPath.remove();\n              // console.log('trimmed closedChildren[0]', closedChildren[0]);\n              return {\n                v: closedChildren[0]\n              };\n            }\n          }();\n\n          if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n        }\n\n        // console.log('trimmed path return', trimmedPath);\n        // console.log('path clone', pathClone);\n        // console.log('dividedPath', dividedPath);\n        pathClone.remove();\n        dividedPath.remove();\n        return trimmedPath;\n      }\n    }\n\n    // no close intersection were found so nothing can be trimmed\n    return pathClone;\n  } else {\n    return path;\n  }\n}\n\nfunction hitTestGroupBounds(point) {\n  var groups = util.getAllGroups();\n  return hitTestBounds(point, groups);\n}\n\nfunction hitTestBounds(point, children) {\n  if (!point) return null;\n\n  for (var i = children.length - 1; i >= 0; i--) {\n    var child = children[i];\n    var bounds = child.strokeBounds;\n    if (point.isInside(child.strokeBounds)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n\n},{\"./../../config\":1,\"./color\":7,\"./lib/shape-detector\":8,\"./util\":18}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.record = record;\nvar config = require('./../../config');\n\nvar RecordRTC = require('recordrtc');\n\nvar ui = require('./ui');\nvar sound = require('./sound');\n\nvar drawCanvas = document.getElementById(config.canvasId);\nvar canvasRecorder = RecordRTC(drawCanvas, {\n  type: 'canvas'\n});\n\nfunction record() {\n  startRecording();\n\n  var now = new Date().getTime();\n\n  sound.asyncPlayCompositionOnce().then(function () {\n    stopRecording();\n    // return sound.asyncPlayCompositionOnce().then(() => {\n    //   stopRecording();\n    // });\n  }).error(function (e) {\n    stopRecording();\n  });\n}\n//\n// let audioRecorder;\n// let chunks = [];\n// let buffer;\n// let offlineCtx;\n// let source;\n// let chunks = [];\n// let dest;\n// let audioRecorder;\nvar context = new AudioContext();\n// let offlineCtx;\n// let sourceNode;\n\nfunction startRecording() {\n  Howler.masterGain.connect(context.destination);\n  // dest = context.createMediaStreamDestination();\n  // Howler.ctx.connect(dest);\n  // audioRecorder = new MediaRecorder(dest.stream);\n  // audioRecorder.ondataavailable = function(e) {\n  //   // push each chunk (blobs) in an array\n  //   chunks.push(e.data);\n  // };\n  //\n  // audioRecorder.start();\n  // console.log('start recording');\n  // offlineCtx = new OfflineAudioContext(2, Howler.ctx.sampleRate * 40, Howler.ctx.sampleRate);\n  // sourceNode = offlineCtx.createMediaStreamSource\n  // source = offlineCtx.createBufferSource();\n  // console.log(offlineCtx);\n  // let processor = Howler.ctx.createScriptProcessor();\n  // console.log(processor);\n  // let otherNode = AudioNode.connect(node);\n  // console.log(otherNode);\n  // audioRecorder = new Recorder(processor);\n  // audioRecorder.record();\n  // navigator.getUserMedia({ audio: true }, function(audioStream) {\n  // audioRecorder = RecordRTC(processor);\n  // audioRecorder.startRecording();\n  //   // audioRecorder = new MediaRecorder(stream);\n  //   // console.log(audioRecorder.state);\n  //   // audioRecorder.ondataavailable = function(e) {\n  //   //   console.log('hi');\n  //   //   chunks.push(e.data);\n  //   // }\n  //   // audioRecorder.start();\n  //   // console.log(audioRecorder.state);\n  //   // audioRecorder = new Recorder(stream);\n  //   // audioRecorder.record();\n  //\n  //   // recordAudio.startRecording();\n  //   // mediaRecorder = new MediaStreamRecorder(stream);\n  //   // mediaRecorder.mimeType = 'video/webm';\n  //   // mediaRecorder.ondataavailable = function (blob) {\n  //   //   console.log('hi');\n  //   //     // POST/PUT \"Blob\" using FormData/XHR2\n  //   //     // let blobURL = URL.createObjectURL(blob);\n  //   //     // document.write('<a href=\"' + blobURL + '\">' + blobURL + '</a>');\n  //   //     // download(blob, 'foo.webm');\n  //   // };\n  //   // mediaRecorder.start();\n  //\n  // }, function(error) { console.log( JSON.stringify ( error ) ); });\n  // canvasRecorder.startRecording();\n}\n\nfunction stopRecording() {\n  console.log('stop recording');\n  audioRecorder.stop();\n  console.log(chunks);\n  // audioRecorder.exportWAV(function(blob) {\n  //   // Recorder.forceDownload(blob);\n  //   console.log(blob);\n  //   download(blob);\n  // });\n  // audioRecorder.stopRecording(function(audioURL) {\n  //   // audio.src = audioURL;\n  //\n  //   var recordedBlob = audioRecorder.getBlob();\n  //   download(recordedBlob);\n  //   // audioRecorder.getDataURL(function(dataURL) { });\n  // });\n  // audioRecorder.stop();\n  // console.log(chunks);\n  // var blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n  // // download(blob, 'foo.ogg');\n  // chunks = [];\n  // mediaRecorder.stop();\n  // mediaRecorder.save();\n  // audioRecorder.stop();\n  // audioRecorder.exportWAV(function(blob) {\n  //   download(blob, 'test.wav');\n  // });\n  // canvasRecorder.stopRecording(function() {\n  //   console.log('stopping recording');\n  //   const blob = canvasRecorder.getBlob();\n  //   download(blob, 'blob.webm');\n  // });\n}\n\n},{\"./../../config\":1,\"./sound\":13,\"./ui\":17,\"recordrtc\":6}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.init = init;\nexports.reinitShapeSounds = reinitShapeSounds;\nexports.getShapeSoundObj = getShapeSoundObj;\nexports.startPlaying = startPlaying;\nexports.stopPlaying = stopPlaying;\nexports.asyncInitShapeSounds = asyncInitShapeSounds;\nexports.formatShapeSoundData = formatShapeSoundData;\nexports.quantizeLength = quantizeLength;\nexports.quantizePosition = quantizePosition;\nexports.removeShapeFromComposition = removeShapeFromComposition;\nexports.clearSoundTimeouts = clearSoundTimeouts;\nexports.startComposition = startComposition;\nexports.asyncPlayCompositionMultipleTimes = asyncPlayCompositionMultipleTimes;\nexports.asyncPlayCompositionOnce = asyncPlayCompositionOnce;\nexports.stopComposition = stopComposition;\nexports.getTrimmedCompositionObj = getTrimmedCompositionObj;\nrequire('howler');\nvar Promise = require(\"bluebird\");\n\nvar ui = require('./ui');\nvar shape = require('./shape');\nvar color = require('./color');\nvar overlays = require('./overlays');\nvar tutorial = require('./tutorial');\nvar util = require('./util');\n\nvar $body = $('body');\n\nvar measures = 4;\nvar bpm = 120;\nvar beatLength = 60 / bpm * 1000; // ms\nvar measureLength = beatLength * 4;\nvar compositionLength = exports.compositionLength = measureLength * measures;\n\nvar playingClass = exports.playingClass = 'playing';\nvar playEnabledClass = exports.playEnabledClass = 'play-enabled';\n\nfunction init() {\n  return asyncInitShapeSounds();\n}\n\nfunction reinitShapeSounds() {\n  return asyncInitShapeSounds();\n}\n\nfunction getShapeSoundObj(path) {\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var shapeSounds = window.kan.shapeSounds || initShapeSounds();\n  // alert(JSON.stringify(window.kan.shapeSounds));\n  // console.log(JSON.stringify(window.kan.shapeSounds));\n\n  var shapePrediction = shape.getShapePrediction(path);\n  var colorName = color.getPathColorName(path);\n  if (colorName === null) colorName = 'black'; // just in case\n\n  var quantizedSoundStartTime = quantizeLength(path.bounds.x / viewWidth * compositionLength); // ms\n  var quantizedSoundDuration = quantizeLength(path.bounds.width / viewWidth * compositionLength); // ms\n\n  var soundObj = {};\n  soundObj.sound = shapeSounds[shapePrediction.pattern];\n  soundObj.startTime = quantizedSoundStartTime;\n  soundObj.duration = quantizedSoundDuration;\n  soundObj.pathId = path.id;\n  soundObj.spriteName = colorName;\n\n  if (!!path.parent && path.parent.className === 'Group') {\n    soundObj.groupId = path.parent.id;\n  }\n\n  return soundObj;\n}\n\nfunction startPlaying() {\n  // console.log('first time', window.kan.firstTimePlaying);\n  if ($body.hasClass(playEnabledClass)) {\n    $body.addClass(playingClass);\n\n    Howler.mute(false);\n\n    window.kan.playing = true;\n\n    if (window.kan.firstTimePlaying === true) {\n      window.kan.firstTimePlaying = false;\n      startComposition(window.kan.composition, false);\n    } else {\n      startComposition(window.kan.composition, true);\n    }\n  } else {\n    window.kan.playing = false;\n    $body.removeClass(playingClass);\n  }\n}\n\nfunction stopPlaying() {\n  var mute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (!!mute) {\n    Howler.mute(true);\n  }\n\n  window.kan.playing = false;\n  $body.removeClass(playingClass);\n\n  stopComposition();\n}\n\nfunction asyncGetShapeSoundFromShapeName(shapeName) {\n  var shapeSoundJSONPath = './audio/shapes/' + shapeName + '/' + shapeName + '.json';\n  return $.getJSON(shapeSoundJSONPath).then(function (resp) {\n    var shapeSoundData = formatShapeSoundData(shapeName, resp);\n    var sound = new Howl(shapeSoundData);\n    return {\n      shapeName: shapeName,\n      sound: sound\n    };\n  });\n}\n\nfunction asyncInitShapeSounds() {\n  var returnSounds = {};\n  var extensions = ['ogg', 'm4a', 'mp3', 'ac3'];\n\n  var shapeNames = shape.shapeNames;\n  var promises = [];\n  Base.each(shapeNames, function (shapeName) {\n    promises.push(asyncGetShapeSoundFromShapeName(shapeName));\n  });\n\n  return $.when.apply($, promises).done(function () {\n    var returnSounds = {};\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      returnSounds[arg.shapeName] = arg.sound;\n    }\n\n    window.kan.shapeSounds = returnSounds;\n    return returnSounds;\n  });\n}\n\nfunction formatShapeSoundData(shapeName, data) {\n  var returnData = {};\n\n  returnData.src = data.urls.map(function (url) {\n    return './audio/shapes/' + shapeName + '/' + url;\n  });\n  returnData.sprite = data.sprite;\n  returnData.html5 = true;\n  returnData.loop = false;\n\n  return returnData;\n}\n\nfunction quantizeLength(duration) {\n  var smallestDuration = 60 / bpm;\n  var returnDuration = Math.floor(duration / smallestDuration) * smallestDuration;\n\n  if (returnDuration > 0) {\n    return returnDuration;\n  } else {\n    // always return something greater than zero\n    return smallestDuration;\n  }\n}\n\nfunction quantizePosition(position, viewWidth) {\n  var smallestInterval = viewWidth / (4 * measures);\n  return returnPosition = Math.floor(position / smallestInterval) * smallestInterval;\n}\n\nfunction asyncPlayShape(shape) {\n  return new Promise(function (resolve, reject) {\n    Promise.all([asyncPlayShapeSound(shape), asyncPlayShapeAnimation(shape)]).then(function () {\n      resolve('Group ' + shape.groupId + ' fully done playing');\n    }).error(function (e) {\n      reject('Group ' + shape.groupId + ' errored while playing: ' + e);\n    });\n  });\n}\n\nfunction asyncPlayShapeSound(shape) {\n  return new Promise(function (resolve, reject) {\n    try {\n      // console.log('playing: ', shape.sound, shape.spriteName, shape.startTime);\n      shape.sound.play(shape.spriteName);\n      shape.sound.on('end', function () {\n        resolve('Group ' + shape.groupId + ' done playing sound');\n      });\n    } catch (e) {\n      reject('Error playing shape sound: ' + e);\n    }\n  });\n}\n\nfunction asyncPlayShapeAnimation(shape) {\n  return new Promise(function (resolve, reject) {\n    var item = paper.project.getItem({\n      className: 'Path',\n      match: function match(el) {\n        return el.id === shape.pathId;\n      }\n    });\n    if (!!item) {\n      (function () {\n        var group = item.parent;\n        group.data.animating = true;\n        var totalDuration = measureLength / 2;\n        group.animate([{\n          properties: {\n            scale: 1,\n            rotate: -5\n          },\n          settings: {\n            duration: totalDuration / 4,\n            easing: \"easeInOut\"\n          }\n        }, {\n          properties: {\n            scale: 1.15,\n            rotate: 5\n          },\n          settings: {\n            duration: totalDuration / 2,\n            easing: \"easeInOut\"\n          }\n        }, {\n          properties: {\n            scale: 1,\n            rotate: 0\n          },\n          settings: {\n            duration: totalDuration / 4,\n            easing: \"easeInOut\",\n            complete: function complete() {\n              this.data.animating = false;\n              resolve('Group ' + group.id + ' done animating');\n              // console.log('animation step 3')\n            }\n          }\n        }]);\n      })();\n    } else {\n      reject('Item not specified. Could not animate');\n    }\n  });\n}\n\nfunction removeShapeFromComposition(shapeGroup) {\n  var _loop = function _loop(i) {\n    var sound = window.kan.composition[i];\n\n    if ('groupId' in sound) {\n      if (sound.groupId === shapeGroup.id) {\n        window.kan.composition.splice(i, 1);\n        return {\n          v: void 0\n        };\n      }\n    } else if ('pathId' in sound) {\n      var item = getItems({\n        match: function match(el) {\n          return el.id === sound.pathId;\n        }\n      });\n      if (item.length > 0) {\n        if (!!item.parent && item.parent.className === 'Group' && item.parent.id === shapeGroup.id) {\n          window.kan.composition.splice(i, 1);\n          return {\n            v: void 0\n          };\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < window.kan.composition.length; i++) {\n    var _ret2 = _loop(i);\n\n    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n  }\n}\n\nfunction clearSoundTimeouts() {\n  if (window.kan.soundTimeouts.length > 0) {\n    window.kan.soundTimeouts.forEach(function (soundTimeout) {\n      clearTimeout(soundTimeout);\n    });\n  }\n\n  window.kan.soundTimeouts = [];\n}\n\nfunction startComposition(composition) {\n  var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  stopComposition();\n  tutorial.hideContextualTuts();\n\n  clearTimeout(window.kan.playPromptTimeout);\n\n  var iterations = 0;\n  playCompositionFirstTime();\n\n  function playCompositionFirstTime() {\n    clearSoundTimeouts();\n    // console.log('playing composition first time');\n    var trimmedCompositionObj = getTrimmedCompositionObj(composition);\n\n    Base.each(trimmedCompositionObj.composition, function (shape, i) {\n      var soundTimeout = setTimeout(function () {\n        if (!window.kan.playing) {\n          // console.log('not playing, returning');\n          return;\n        }\n\n        if (shape.spriteName === null) {\n          // console.log('%cshape is null', 'color:red', shape);\n          return;\n        }\n\n        asyncPlayShape(shape).then(function (res) {\n          console.log(res);\n        }).error(function (e) {\n          console.log('Error playing shape', e);\n        });\n      }, shape.startTime);\n      window.kan.soundTimeouts.push(soundTimeout);\n    });\n\n    iterations++;\n    window.kan.compositionTimeout = setTimeout(repeatComposition, compositionLength - trimmedCompositionObj.startTime);\n  }\n\n  function playCompositionOnce() {\n    clearSoundTimeouts();\n    // console.log('repeat');\n    Base.each(composition, function (shape, i) {\n      var soundTimeout = setTimeout(function () {\n        if (!window.kan.playing) {\n          // console.log('not playing, returing');\n          return;\n        }\n\n        // console.log('playing: ', shape.sound, shape.spriteName, shape.startTime);\n        asyncPlayShape(shape).then(function (res) {\n          console.log(res);\n        }).error(function (e) {\n          console.log('Error playing shape', e);\n        });\n      }, shape.startTime);\n      window.kan.soundTimeouts.push(soundTimeout);\n    });\n    iterations++;\n  }\n\n  function repeatComposition() {\n    if (loop === true) {\n      playCompositionOnce();\n      window.kan.compositionInterval = setInterval(playCompositionOnce, compositionLength);\n    } else {\n      if (iterations < 2) {\n        playCompositionOnce();\n        setTimeout(repeatComposition, compositionLength);\n      } else {\n        stopPlaying();\n        overlays.openOverlay('share-prompt');\n      }\n    }\n  }\n}\n\nfunction asyncPlayCompositionMultipleTimes() {\n  var repeats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n  return new Promise(function (resolve, reject) {\n    var promisedRepeats = [];\n\n    for (var i = 0; i < repeats; i++) {\n      promisedRepeats.push(asyncPlayCompositionOnce());\n    }\n\n    Promise.each(promisedRepeats, function () {\n      console.log('repeat');\n    }).then(function () {\n      resolve('Repeats done');\n    }).error(function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction asyncPlayCompositionOnce() {\n  return new Promise(function (resolve, reject) {\n    var composition = window.kan.composition;\n    var startTime = new Date().getTime();\n    clearSoundTimeouts();\n\n    var shapePromises = [];\n\n    Base.each(composition, function (shape, i) {\n      shapePromises.push(asyncPlayShapeWithDelay(shape));\n    });\n\n    Promise.all(shapePromises).then(function (res) {\n      var endTime = new Date().getTime();\n      var playTime = endTime - startTime;\n\n      // wait for composition to be fully done before repeating (play is naturally truncated when the last shape finishes playing)\n      if (playTime < compositionLength) {\n        return Promise.delay(compositionLength - playTime).then(function () {\n          resolve('Composition fully done, after a wait');\n        });\n      } else {\n        resolve('Composition fully done, with no wait');\n      }\n    }).error(function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction asyncPlayShapeWithDelay(shape) {\n  return new Promise(function (resolve, reject) {\n    var soundTimeout = setTimeout(function () {\n      // console.log('playing: ', shape.sound, shape.spriteName, shape.startTime);\n      asyncPlayShape(shape).then(function (res) {\n        resolve(res);\n      }).error(function (e) {\n        reject('Error playing shape with delay: ' + e);\n      });\n    }, shape.startTime);\n    window.kan.soundTimeouts.push(soundTimeout);\n  });\n}\n\nfunction stopComposition() {\n  clearInterval(window.kan.compositionInterval);\n  clearTimeout(window.kan.compositionTimeout);\n  clearSoundTimeouts();\n}\n\nfunction getTrimmedCompositionObj(composition) {\n  var firstTime = 0;\n  var trimmedComposition = [];\n  var startTime = getCompositionStartTime(composition);\n\n  composition.forEach(function (sound) {\n    var modifiedSound = util.shallowCopy(sound);\n    modifiedSound.startTime = sound.startTime - startTime;\n    if (modifiedSound.startTime < 0) modifiedSound.startTime = 0; // this shouldn't happen\n    trimmedComposition.push(modifiedSound);\n  });\n\n  return {\n    composition: trimmedComposition,\n    startTime: startTime\n  };\n}\n\nfunction getCompositionStartTime(composition) {\n  var startTime = compositionLength;\n\n  composition.forEach(function (sound) {\n    // console.log(sound);\n    // console.log(sound.startTime)\n    if ('startTime' in sound && sound.startTime < startTime) {\n      startTime = sound.startTime;\n    }\n  });\n\n  // console.log('start time', startTime);\n\n  if (startTime !== compositionLength) {\n    return startTime;\n  } else {\n    return 0;\n  }\n}\n\n},{\"./color\":7,\"./overlays\":10,\"./shape\":11,\"./tutorial\":16,\"./ui\":17,\"./util\":18,\"bluebird\":2,\"howler\":4}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nexports.preventInactivityTimeout = preventInactivityTimeout;\nvar overlays = require('./overlays');\nvar video = require('./video');\nvar util = require('./util');\n\nvar $body = $('body');\n\nvar drawInactivityDelay = exports.drawInactivityDelay = 40 * 1000; // ms\nvar continueInactivityDelay = exports.continueInactivityDelay = 30 * 1000; // ms\nvar playPromptDelay = exports.playPromptDelay = 60 * 1000; // ms;\nvar inputDelay = exports.inputDelay = 100; // ms\nvar refreshCheckDelay = exports.refreshCheckDelay = 60 * 1000; // ms\nvar overlayDelay = exports.overlayDelay = 1000; // ms\n\nfunction init() {\n  if (window.location.hash.length > 0 && window.location.hash == '#dev') {\n    window.kan.overlays = false;\n    video.pauseVideo();\n    video.exitTutorialMode();\n  } else {\n    video.enterTutorialMode();\n  }\n}\n\nfunction preventInactivityTimeout() {\n  console.log('prevent timeout: ' + util.getTime());\n  // overlays.closeAndResetOverlays();\n\n  clearTimeout(window.kan.inactivityTimeout);\n  clearInterval(window.kan.continueCountdownInterval);\n\n  window.kan.inactivityTimeout = setTimeout(function () {\n    overlays.openOverlay('continue');\n  }, drawInactivityDelay);\n}\n\n},{\"./overlays\":10,\"./util\":18,\"./video\":19}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nrequire('hammerjs');\n\nvar config = require('./../../config');\nvar sound = require('./sound');\nvar color = require('./color');\nvar shape = require('./shape');\nvar util = require('./util');\nvar tutorial = require('./tutorial');\nvar timing = require('./timing');\nvar overlays = require('./overlays');\nvar ui = require('./ui');\n\nvar $body = $('body');\n\nvar hitOptions = {\n  segments: false,\n  stroke: true,\n  fill: true,\n  tolerance: 5\n};\n\nvar minShapeSize = 100;\nvar maxShapeLength = 5000;\nvar maxScaleFactor = 0.8;\n\nvar outerPath = void 0;\nvar sizes = [];\nvar size = void 0;\nvar cumSize = void 0;\nvar prevPoint = void 0;\n\nvar hammerTips = exports.hammerTips = void 0;\nvar hammerCanvas = exports.hammerCanvas = void 0;\n\nfunction init() {\n  exports.hammerTips = hammerTips = new Hammer.Manager(ui.tipsOverlay);\n  hammerTips.add(new Hammer.Swipe({ direction: Hammer.DIRECTION_ALL }));\n  hammerTips.on('swipe', overlays.cardNavNext);\n\n  exports.hammerCanvas = hammerCanvas = new Hammer.Manager(ui.drawCanvas);\n  hammerCanvas.add(new Hammer.Tap({ event: 'doubletap', taps: 2, interval: 400, time: 150, posThreshold: 50 }));\n  hammerCanvas.add(new Hammer.Tap({ event: 'singletap' }));\n  hammerCanvas.add(new Hammer.Pan({ direction: Hammer.DIRECTION_ALL }));\n  hammerCanvas.add(new Hammer.Pinch());\n\n  hammerCanvas.get('doubletap').recognizeWith('singletap');\n  // hammerCanvas.get('singletap').requireFailure('doubletap');\n  hammerCanvas.get('pan').requireFailure('pinch');\n  hammerCanvas.get('pinch').requireFailure('pan');\n\n  // hammerCanvas.on('singletap', singleTap);\n  hammerCanvas.on('doubletap', doubleTap);\n\n  hammerCanvas.on('panstart', panStart);\n  hammerCanvas.on('panmove', panMove);\n  hammerCanvas.on('panend', panEnd);\n  // hammerCanvas.on('pancancel', panCancel);\n\n  hammerCanvas.on('pinchstart', pinchStart);\n  hammerCanvas.on('pinchmove', pinchMove);\n  hammerCanvas.on('pinchend', pinchEnd);\n  // hammerCanvas.on('pinchcancel', pinchCancel);\n}\n\nfunction enablePanAndPinchEvents() {\n  enablePanEvents();\n  enablePinchEvents();\n}\n\nfunction enableTapEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n  hammerCanvas.get('singletap').set({ enable: enable });\n  hammerCanvas.get('doubletap').set({ enable: enable });\n}\n\nfunction disableTapEvents() {\n  enableTapEvents(false);\n}\n\nfunction enablePanEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n\n  hammerCanvas.get('pan').set({ enable: enable });\n  // hammerCanvas.get('panstart').set({enable: enable});\n  // hammerCanvas.get('panmove').set({enable: enable});\n  // hammerCanvas.get('panend').set({enable: enable});\n}\n\nfunction disablePanEvents() {\n  enablePanEvents(false);\n}\n\nfunction enablePinchEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n\n  hammerCanvas.get('pinch').set({ enable: enable });\n  // hammerCanvas.get('pinchstart').set({enable: enable});\n  // hammerCanvas.get('pinchmove').set({enable: enable});\n  // hammerCanvas.get('pinchend').set({enable: enable});\n}\n\nfunction disablePinchEvents() {\n  enablePinchEvents(false);\n}\n\nfunction singleTap(event) {\n  // console.log(event.target);\n  // event.preventDefault();\n  // if (!eventTargetIsOnCanvas(event)) return;\n  tutorial.hideContextualTuts();\n  // $(event.target).click();\n\n  // sound.stopPlaying();\n  // if (!eventTargetIsOnCanvas(event)) return;\n  // console.log(event);\n  // tutorial.hideContextualTuts();\n  //\n  // sound.stopPlaying();\n  //\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = paper.project.hitTest(point, hitOptions);\n\n  if (hitResult) {\n    var item = hitResult.item;\n    // item.selected = !item.selected;\n    console.log(item);\n  }\n}\n\nfunction doubleTap(event) {\n  event.preventDefault();\n  // console.log('doubletap');\n\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = paper.project.hitTest(point, hitOptions);\n\n  if (!eventTargetIsOnCanvas(event)) return;\n\n  if (hitResult) {\n    shape.toggleFill(hitResult.item);\n    tutorial.hideContextualTutByName('fill');\n  } else {\n    window.kan.pinchedGroup = null;\n    // console.log('hit no item');\n  }\n}\n\nfunction panStart(event) {\n  // console.log(event);\n  // console.log('panstart');\n  // paper.project.activeLayer.removeChildren(); // REMOVE\n  // event.preventDefault();\n  timing.preventInactivityTimeout();\n\n  if (!eventTargetIsOnCanvas(event)) {\n    window.kan.panning = false;\n    // check if tips modal is up\n    if ($body.hasClass('overlay-active tips-active')) {\n      // if so, go to next tip card\n      overlays.cardNavNext();\n    }\n    event.srcEvent.stopPropagation();\n    return;\n  }\n\n  window.kan.panning = true;\n  tutorial.hideContextualTuts();\n\n  hammerCanvas.off('panstart');\n  // hammerCanvas.get('pan').set({enable: false});\n  disablePinchEvents();\n  disableTapEvents();\n\n  // ignore other touch inputs\n  // if (window.kan.pinching) return;\n  // if (!(event.changedPointers && event.changedPointers.length > 0)) return;\n  // if (event.changedPointers.length > 1) {\n  //   console.log('event.changedPointers > 1');\n  // }\n\n  sound.stopPlaying();\n\n  window.kan.prevAngle = Math.atan2(event.velocityY, event.velocityX);\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n\n  outerPath = new Path();\n  outerPath.fillColor = window.kan.currentColor;\n  // outerPath.fillColor = new Color(0, 0.5);\n\n  sizes = [];\n\n  var shapePath = new Path({\n    strokeColor: window.kan.currentColor,\n    name: 'shapePath',\n    strokeWidth: 5,\n    visible: false,\n    strokeCap: 'round'\n  });\n\n  shapePath.add(point);\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    first: true\n  };\n\n  window.kan.shapePath = shapePath;\n}\n\nfunction panMove(event) {\n  // console.log('panmove');\n  // event.preventDefault();\n  if (!eventTargetIsOnCanvas(event)) {\n    event.srcEvent.stopPropagation();\n    return;\n  }\n  if (window.kan.panning !== true) return;\n\n  // don't let the user draw past the max length\n  if (window.kan.shapePath.length <= maxShapeLength) {\n    var pointer = event.center;\n    var point = new Point(pointer.x, pointer.y);\n\n    var angle = Math.atan2(event.velocityY, event.velocityX);\n    var prevAngle = window.kan.prevAngle;\n    var angleDelta = util.angleDelta(angle, prevAngle);\n    window.kan.prevAngle = angle;\n\n    while (sizes.length > 10) {\n      sizes.shift();\n    }\n    if (sizes.length > 0) {\n      var dist = prevPoint.getDistance(point);\n\n      // These are based on acceleration\n      size = Math.random() * 10; // This is just random variance\n\n      cumSize = 0;\n      for (var j = 0; j < sizes.length; j++) {\n        cumSize += sizes[j];\n      }\n      // const avgSize = ((cumSize / sizes.length) + size) / 2;\n      var avgSize = Math.max(5, (cumSize / sizes.length + size) / 2);\n\n      var halfPointX = (point.x + prevPoint.x) / 2;\n      var halfPointY = (point.y + prevPoint.y) / 2;\n      var halfPoint = new Point(halfPointX, halfPointY);\n\n      var topX = halfPoint.x + Math.cos(angle - Math.PI / 2) * avgSize;\n      var topY = halfPoint.y + Math.sin(angle - Math.PI / 2) * avgSize;\n      var top = new Point(topX, topY);\n\n      var bottomX = halfPoint.x + Math.cos(angle + Math.PI / 2) * avgSize;\n      var bottomY = halfPoint.y + Math.sin(angle + Math.PI / 2) * avgSize;\n      var bottom = new Point(bottomX, bottomY);\n\n      outerPath.add(top);\n      outerPath.insert(0, bottom);\n      outerPath.smooth();\n    } else {\n      size = 5;\n    }\n\n    sizes.push(size);\n    prevPoint = point;\n\n    window.kan.pathData[shape.stringifyPoint(point)] = {\n      point: point,\n      speed: Math.abs(event.overallVelocity),\n      angle: angle\n    };\n\n    window.kan.shapePath.add(point);\n  } else {\n    window.kan.shapePath.data.tooLong = true;\n  }\n\n  paper.view.draw();\n}\n\nfunction panEnd(event) {\n  // console.log('panend');\n  // event.preventDefault();\n  if (!eventTargetIsOnCanvas(event)) {\n    event.srcEvent.stopPropagation();\n    return;\n  }\n  if (window.kan.panning !== true) return;\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n\n  var transparent = color.transparent;\n  var colorName = color.getColorName(window.kan.currentColor);\n\n  var shapePath = window.kan.shapePath;\n\n  if (shapePath.length <= maxShapeLength) {\n    shapePath.add(point);\n  }\n  outerPath.visible = false;\n\n  if (shapePath.length < minShapeSize || shapePath.data && shapePath.data.tooLong === true) {\n    // console.log('path is too short');\n    shapePath.remove();\n    hammerCanvas.on('panstart', panStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n    window.kan.panning = false;\n    return;\n  }\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    last: true\n  };\n\n  var group = new Group();\n\n  var truedShape = shape.getTruedShape(shapePath);\n\n  // group.data.color = truedShape.strokeColor;\n  // console.log('currentGradient:', config.palette.gradients[window.kan.currentColor]);\n\n  var shapeSize = truedShape.strokeBounds;\n  var centerPoint = new Point(shapeSize.width / 2, shapeSize.height / 2);\n  var angle = util.rad(Math.random() * 360);\n  var gradientSize = (shapeSize.width + shapeSize.height) / 4;\n  var originX = centerPoint.x + Math.cos(angle - Math.PI / 2) * gradientSize;\n  var originY = centerPoint.y + Math.sin(angle - Math.PI / 2) * gradientSize;\n  var destinationX = centerPoint.x + Math.cos(angle + Math.PI / 2) * gradientSize;\n  var destinationY = centerPoint.y + Math.sin(angle + Math.PI / 2) * gradientSize;\n\n  var origin = new Point(originX + shapeSize.x, originY + shapeSize.y);\n  var destination = new Point(destinationX + shapeSize.x, destinationY + shapeSize.y);\n  // group.addChild(new Path.Circle({\n  //   center: origin,\n  //   radius: 5,\n  //   fillColor: 'red',\n  // }));\n  // group.addChild(new Path.Circle({\n  //   center: destination,\n  //   radius: 5,\n  //   fillColor: 'green',\n  // }));\n  group.data.originalColor = window.kan.currentColor;\n  group.data.color = {\n    gradient: {\n      stops: config.palette.gradients[window.kan.currentColor]\n    },\n    origin: origin,\n    destination: destination\n  };\n  group.data.scale = 1; // init variable to track scale changes\n  group.data.rotation = 0; // init variable to track rotation changes\n  group.data.fresh = true;\n\n  shapePath.remove();\n  truedShape.visible = false;\n  truedShape.strokeColor = new Color(0, 0);\n  window.kan.shapePath = truedShape;\n  truedShape.name = 'shapePath';\n\n  if (!(truedShape.length > 0)) {\n    truedShape.remove();\n    group.remove();\n    window.kan.panning = false;\n    return;\n  }\n\n  group.addChild(truedShape);\n\n  var shapeSoundObj = sound.getShapeSoundObj(truedShape);\n  window.kan.composition.push(shapeSoundObj);\n\n  truedShape.visible = false;\n  var outlineGroup = shape.getOutlineGroup(truedShape);\n  var outline = outlineGroup._namedChildren.outer[0].clone();\n  outline.name = 'outer';\n  outline.fillColor = window.kan.currentColor;\n  outline.fillColor = group.data.color;\n\n  var outlineCenter = outlineGroup._namedChildren.middle[0].clone();\n  outlineCenter.strokeColor = group.data.color;\n  outlineCenter.visible = false;\n  group.addChild(outline);\n  outline.sendToBack();\n\n  outlineGroup.remove();\n\n  var shapeMask = outline.clone();\n  shapeMask.fillColor = outline.fillColor;\n  shapeMask.strokeColor = outline.strokeColor;\n  shapeMask.closed = true;\n\n  var enclosedLoops = shape.findInteriorCurves(outlineCenter);\n  if (enclosedLoops.length > 0 || truedShape.closed === true) {\n    group.data.line = false;\n  } else {\n    group.data.line = true;\n  }\n\n  enclosedLoops.forEach(function (loop) {\n    shapeMask.unite(loop);\n    shapeMask.sendToBack();\n    loop.name = 'loop';\n    loop.data.loop = true;\n    loop.visible = true;\n    group.addChild(loop);\n  });\n\n  shapeMask.unite();\n  var crossings = shapeMask.resolveCrossings();\n  if (!!crossings && !!crossings.children && crossings.children.length > 0) {\n    (function () {\n      var maxArea = 0,\n          maxChild = null;\n      crossings.children.forEach(function (child) {\n        if (child.area > maxArea) {\n          maxChild = child;\n          maxArea = child.area;\n        }\n      });\n\n      shapeMask = maxChild;\n    })();\n  }\n\n  outlineCenter.remove();\n  shapeMask.visible = false;\n  shapeMask.name = 'mask';\n  shapeMask.data.mask = true;\n  group.addChild(shapeMask);\n  shapeMask.sendToBack();\n\n  shape.cleanUpGroup(group);\n\n  window.kan.moves.push({\n    type: 'newGroup',\n    id: group.id\n  });\n\n  ui.unditherButtonsByName(['new', 'undo']);\n\n  if (window.kan.userHasDrawnFirstShape !== true) {\n    // first shape!\n    // set play prompt timeout\n    window.kan.playPromptTimeout = setTimeout(function () {\n      overlays.openOverlay('play-prompt');\n    }, timing.playPromptDelay);\n\n    window.kan.userHasDrawnFirstShape = true;\n  } else {\n    var groups = util.getAllGroups();\n    if (groups.length >= 3) {\n      $body.addClass(sound.playEnabledClass);\n      ui.unditherButtonsByName(['play-stop', 'share']);\n    }\n    // console.log(groups.length, $body.hasClass(sound.playEnabledClass));\n  }\n\n  if (config.runAnimations) {\n    var scaleFactor = 0.9;\n    group.animate([{\n      properties: {\n        scale: scaleFactor\n      },\n      settings: {\n        duration: 100,\n        easing: \"easeOut\"\n      }\n    }, {\n      properties: {\n        scale: 1 / scaleFactor\n      },\n      settings: {\n        duration: 100,\n        easing: \"easeIn\"\n      }\n    }]);\n  }\n\n  if (!tutorial.allTutsCompleted()) {\n    var tutorialCompletion = window.kan.tutorialCompletion;\n    var tutName = null;\n\n    if (!tutorialCompletion['fill'] && truedShape.closed) {\n      tutName = 'fill';\n    } else {\n      var _groups = paper.project.getItems({\n        match: function match(el) {\n          return el.className === 'Group';\n        }\n      });\n      if (!tutorialCompletion['pinch'] && _groups.length >= 3) {\n        tutName = 'pinch';\n      } else if (!tutorialCompletion['swipe'] && _groups.length >= 5) {\n        tutName = 'swipe';\n      }\n    }\n\n    if (tutName !== null) {\n      // console.log(`${tutName} tutorial`);\n      tutorial.addContextualTut(tutName);\n      window.kan.tutorialCompletion[tutName] = true;\n      group.data.tut = tutName;\n    }\n  }\n\n  if (window.kan.scheduledOverlay !== null) {\n    (function () {\n      var scheduledOverlay = window.kan.scheduledOverlay;\n      window.kan.scheduledOverlay = null;\n      setTimeout(function () {\n        overlays.openOverlay(scheduledOverlay);\n      }, timing.overlayDelay);\n    })();\n  }\n\n  // console.log('pan done');\n  hammerCanvas.set({ enable: false });\n  setTimeout(function () {\n    hammerCanvas.set({ enable: true });\n    console.log('touch enabled');\n    hammerCanvas.on('panstart', panStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n\n    window.kan.panning = false;\n  }, timing.inputDelay);\n\n  if (config.pop === true) {\n    shape.updatePops();\n  }\n}\n\nfunction panCancel(event) {\n  console.log('pancancel');\n  event.srcEvent.stopPropagation();\n  // event.preventDefault();\n\n  hammerCanvas.set({ enable: true });\n  hammerCanvas.on('panstart', panStart);\n  enablePanAndPinchEvents();\n  enableTapEvents();\n  window.kan.panning = false;\n}\n\nfunction pinchStart(event) {\n  // console.log('pinchstart');\n  timing.preventInactivityTimeout();\n  tutorial.hideContextualTuts();\n  window.kan.interacting = true;\n  window.kan.pinching = true;\n  // event.preventDefault();\n\n  // hammerCanvas.get('pinchstart').set({enable: false});\n  hammerCanvas.off('pinchstart');\n  disablePanEvents();\n  disableTapEvents();\n\n  if (!eventTargetIsOnCanvas(event)) return;\n\n  sound.stopPlaying();\n\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = shape.hitTestGroupBounds(point);\n\n  if (hitResult) {\n    window.kan.pinching = true;\n    window.kan.pinchedGroup = hitResult;\n    window.kan.lastScale = 1;\n    window.kan.lastRotation = event.rotation;\n\n    window.kan.originalPosition = hitResult.position;\n    window.kan.originalRotation = hitResult.data.rotation;\n    window.kan.originalScale = hitResult.data.scale;\n    hitResult.data.thrown = false;\n\n    if (config.pop === true) {\n      shape.destroyGroupPops(hitResult);\n    }\n\n    hitResult.bringToFront();\n\n    if (hitResult.data.tut && hitResult.data.tut.length > 0) {\n      var $tut = $('.tut[data-tut-type=\\'' + hitResult.data.tut + '\\']');\n      if ($tut) {\n        window.kan.pinchedTut = $tut;\n      } else {\n        window.kan.pinchedTut = null;\n      }\n    } else {\n      window.kan.pinchedTut = null;\n    }\n\n    // if (config.runAnimations) {\n    //   hitResult.animate({\n    //     properties: {\n    //       scale: 1.25\n    //     },\n    //     settings: {\n    //       duration: 100,\n    //       easing: \"easeOut\",\n    //     }\n    //   });\n    // }\n  } else {\n    window.kan.pinchedGroup = null;\n    window.kan.pinchedTut = null;\n    // console.log('hit no item');\n  }\n}\n\nfunction pinchMove(event) {\n  // console.log('pinchMove');\n  // event.preventDefault();\n\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var pinchedGroup = window.kan.pinchedGroup;\n  var $pinchedTut = window.kan.pinchedTut;\n\n  if (!!pinchedGroup) {\n    var currentScale = event.scale;\n    var scaleDelta = void 0;\n\n    tutorial.hideContextualTutByName('pinch');\n\n    if (pinchedGroup.bounds.width < minShapeSize || pinchedGroup.bounds.height < minShapeSize) {\n      // only allow a shape to scale down if it is larger than the minimum size\n      scaleDelta = 1.1;\n    } else if (pinchedGroup.bounds.width >= paper.view.viewSize.width || pinchedGroup.bounds.height >= paper.view.viewSize.height) {\n      // only allow shape to scale up if it fits in the viewport\n      scaleDelta = 0.9;\n    } else {\n      scaleDelta = currentScale / window.kan.lastScale;\n    }\n\n    window.kan.lastScale = currentScale;\n\n    var currentRotation = event.rotation;\n    var rotationDelta = currentRotation - window.kan.lastRotation;\n    window.kan.lastRotation = currentRotation;\n\n    // console.log(`scaling by ${scaleDelta}`);\n    // console.log(`rotating by ${rotationDelta}`);\n\n    var centerPoint = event.center;\n    pinchedGroup.position = centerPoint;\n    if (!!$pinchedTut) {\n      tutorial.moveContextualTut($pinchedTut, centerPoint);\n    }\n\n    if (scaleDelta !== 1) {\n      pinchedGroup.scale(scaleDelta);\n\n      // check if scaling went awry, cannot be too big or too small\n      // hypotenuse must fit within view bounds\n      var hypot = util.hypot(pinchedGroup.bounds.width, pinchedGroup.bounds.height);\n      var viewHypot = util.hypot(paper.view.viewSize.width, paper.view.viewSize.height);\n      if (hypot >= viewHypot) {\n        // shape is too big, bring it back down to size\n        scaleDelta = viewHypot * maxScaleFactor / hypot;\n        pinchedGroup.scale(scaleDelta);\n      } else if (hypot <= minShapeSize) {\n        scaleDelta = minShapeSize / hypot;\n        pinchedGroup.scale(scaleDelta);\n      }\n    }\n    pinchedGroup.rotate(rotationDelta);\n\n    pinchedGroup.data.scale *= scaleDelta;\n    pinchedGroup.data.rotation += rotationDelta;\n  }\n}\n\nfunction pinchEnd(event) {\n  // event.preventDefault();\n\n  window.kan.lastEvent = event;\n  var pinchedGroup = window.kan.pinchedGroup;\n  var $pinchedTut = window.kan.pinchedTut;\n  var originalPosition = window.kan.originalPosition;\n  var originalRotation = window.kan.originalRotation;\n  var originalScale = window.kan.originalScale;\n\n  if (!!pinchedGroup) {\n    pinchedGroup.data.fresh = true;\n    var move = {\n      id: pinchedGroup.id,\n      type: 'transform'\n    };\n    if (pinchedGroup.position != originalPosition) {\n      move.position = originalPosition;\n    }\n\n    if (pinchedGroup.data.rotation != originalRotation) {\n      move.rotation = originalRotation - pinchedGroup.data.rotation;\n    }\n\n    if (pinchedGroup.data.scale != originalScale) {\n      move.scale = originalScale / pinchedGroup.data.scale;\n    }\n\n    if (pinchedGroup.children.length > 0 && pinchedGroup._namedChildren.shapePath && pinchedGroup._namedChildren.shapePath.length > 0) {\n      // update shapePath sound object if possible\n      sound.removeShapeFromComposition(pinchedGroup); // sound is now wrong\n\n      var shapePath = pinchedGroup._namedChildren.shapePath[0];\n      var shapeSoundObj = sound.getShapeSoundObj(shapePath);\n      window.kan.composition.push(shapeSoundObj);\n    }\n\n    window.kan.moves.push(move);\n\n    if (Math.abs(event.velocity) > 1) {\n      tutorial.hideContextualTutByName('swipe');\n\n      // hide any connected tuts\n      if (!!$pinchedTut) {\n        tutorial.hideContextualTut($pinchedTut);\n      }\n      // dispose of group offscreen\n      if (config.pop === true) {\n        shape.destroyGroupPops(pinchedGroup);\n        pinchedGroup.data.fresh = false;\n      }\n\n      pinchedGroup.data.thrown = true;\n      throwPinchedGroup();\n    }\n\n    // if (config.runAnimations) {\n    //   pinchedGroup.animate({\n    //     properties: {\n    //       scale: 0.8\n    //     },\n    //     settings: {\n    //       duration: 100,\n    //       easing: \"easeOut\",\n    //     }\n    //   });\n    // }\n  } else {\n    window.kan.pinchedGroup = null;\n  }\n\n  // if an overlay was interrupted, open it up now\n  if (window.kan.scheduledOverlay !== null) {\n    (function () {\n      var scheduledOverlay = window.kan.scheduledOverlay;\n      window.kan.scheduledOverlay = null;\n      setTimeout(function () {\n        overlays.openOverlay(scheduledOverlay);\n      }, timing.overlayDelay);\n    })();\n  }\n\n  window.kan.pinching = false;\n\n  if (config.pop === true) {\n    shape.updatePops();\n  }\n\n  // console.log('pinch done');\n  // hammerCanvas.set({ enable: false });\n  setTimeout(function () {\n    console.log('touch enabled');\n    hammerCanvas.on('pinchstart', pinchStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n    // hammerCanvas.set({ enable: true });\n    // hammerCanvas.on('pinchstart', pinchStart);\n    // enablePanAndPinchEvents();\n    // enableTapEvents();\n    // window.kan.pinching = false;\n    // window.kan.pinchedGroup = null;\n  }, timing.inputDelay);\n}\n\nfunction pinchCancel(event) {\n  // console.log(event);\n  event.srcEvent.stopPropagation();\n  console.log('pinchcancel');\n  // event.preventDefault();\n\n  hammerCanvas.set({ enable: true });\n  hammerCanvas.on('pinchstart', pinchStart);\n  enablePanAndPinchEvents();\n  enableTapEvents();\n\n  window.kan.pinching = false;\n}\n\nfunction throwPinchedGroup() {\n\n  var velocityMultiplier = 25;\n  var lastEvent = window.kan.lastEvent;\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var pinchedGroup = window.kan.pinchedGroup;\n\n  if (pinchedGroup === null || pinchedGroup.data && pinchedGroup.data.thrown === false) return;\n  if (pinchedGroup.position.x <= 0 - pinchedGroup.bounds.width || pinchedGroup.position.x >= viewWidth + pinchedGroup.bounds.width || pinchedGroup.position.y <= 0 - pinchedGroup.bounds.height || pinchedGroup.position.y >= viewHeight + pinchedGroup.bounds.height) {\n    pinchedGroup.data.offScreen = true;\n    pinchedGroup.visible = false;\n    sound.removeShapeFromComposition(pinchedGroup);\n    window.kan.pinchedGroup = null;\n    return;\n  }\n  requestAnimationFrame(throwPinchedGroup);\n  var newX = pinchedGroup.position.x + lastEvent.velocityX * velocityMultiplier;\n  var newY = pinchedGroup.position.y + lastEvent.velocityY * velocityMultiplier;\n  var newPos = new Point(newX, newY);\n  pinchedGroup.position = newPos;\n}\n\nfunction eventTargetIsOnCanvas(event) {\n  if (!event) return false;\n  if (event.target != ui.drawCanvas) return false;\n  return true;\n}\n\n},{\"./../../config\":1,\"./color\":7,\"./overlays\":10,\"./shape\":11,\"./sound\":13,\"./timing\":14,\"./tutorial\":16,\"./ui\":17,\"./util\":18,\"hammerjs\":3}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTutByName = getTutByName;\nexports.allTutsCompleted = allTutsCompleted;\nexports.addContextualTut = addContextualTut;\nexports.hideContextualTut = hideContextualTut;\nexports.hideContextualTutByName = hideContextualTutByName;\nexports.hideContextualTuts = hideContextualTuts;\nexports.resetContextualTuts = resetContextualTuts;\nexports.moveContextualTut = moveContextualTut;\nexports.getTutPositionFromCenter = getTutPositionFromCenter;\nvar config = require('./../../config');\n\nvar contextualTuts = config.contextualTuts;\nvar tutArrowHeight = 16;\n\nfunction getTutByName(tutName) {\n  for (var i = 0; i < contextualTuts.length; i++) {\n    var tutObj = contextualTuts[i];\n\n    if (tutObj.type === tutName) {\n      return tutObj.copy;\n    }\n  }\n\n  return null;\n}\n\nfunction allTutsCompleted() {\n  var tutorialCompletionObj = window.kan.tutorialCompletion;\n  var completion = true;\n\n  Object.keys(tutorialCompletionObj).forEach(function (key, val) {\n    completion = completion && tutorialCompletionObj[key];\n  });\n\n  return completion === true;\n}\n\nfunction addContextualTut(tutName) {\n  if (!!window.kan.shapePath && window.kan.shapePath.length > 0) {\n    hideContextualTuts();\n    window.kan.shapesSinceTut = 0;\n\n    var shapePath = window.kan.shapePath;\n    var shapeCenter = shapePath.bounds.center;\n\n    var tutCopy = getTutByName(tutName);\n\n    if (tutCopy !== null) {\n      var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n      if ($tut.length > 0) {\n        var tutPos = getTutPositionFromCenter($tut, shapeCenter);\n        $tut.css({ top: tutPos.y + 'px', left: tutPos.x + 'px', visibility: 'visible' });\n        $tut.addClass('animated bounceIn');\n      }\n    }\n  }\n}\n\nfunction hideContextualTut($tut) {\n  $tut.css({ visibility: 'hidden' });\n}\n\nfunction hideContextualTutByName(tutName) {\n  var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n  hideContextualTut($tut);\n}\n\nfunction hideContextualTuts() {\n  var $tuts = $('.contextual-tuts .tut');\n  $tuts.css({ visibility: 'hidden' });\n}\n\nfunction resetContextualTuts() {\n  hideContextualTuts();\n  window.kan.tutorialCompletion = {\n    \"fill\": false,\n    \"pinch\": false,\n    \"swipe\": false\n  };\n}\n\nfunction moveContextualTut($tut, centerPoint) {\n  var tutPos = getTutPositionFromCenter($tut, centerPoint);\n  $tut.css({ top: tutPos.y + 'px', left: tutPos.x + 'px' });\n}\n\nfunction getTutPositionFromCenter($tut, centerPoint) {\n  var tutWidth = $tut.outerWidth();\n  var tutHeight = $tut.outerHeight();\n  var leftPos = centerPoint.x - tutWidth / 2;\n  var topPos = centerPoint.y - tutHeight - tutArrowHeight;\n  return new Point(leftPos, topPos);\n}\n\n},{\"./../../config\":1}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nexports.ditherButtonsByName = ditherButtonsByName;\nexports.unditherButtonsByName = unditherButtonsByName;\nexports.ditherButtonByName = ditherButtonByName;\nexports.unditherButtonByName = unditherButtonByName;\nexports.resetCanvas = resetCanvas;\nvar config = require('./../../config');\n\nvar sound = require('./sound');\nvar tutorial = require('./tutorial');\nvar overlays = require('./overlays');\nvar util = require('./util');\nvar color = require('./color');\nvar shape = require('./shape');\nvar share = require('./share');\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar playingClass = sound.playingClass;\nvar playEnabledClass = sound.playEnabledClass;\n\nvar $newButton = $('.controls .new');\nvar $undoButton = $('.controls .undo');\nvar $playButton = $('.controls .play-stop');\nvar $shareButton = $('.controls .share');\nvar $tipsButton = $('.controls .tips');\n\nvar drawCanvas = exports.drawCanvas = $('#canvas')[0];\nvar tipsOverlay = exports.tipsOverlay = $('.overlay.tips')[0];\n\nvar ditheredClass = 'dithered';\n\nfunction init() {\n  initLogoRefresh();\n  initColorPalette();\n  initNewButton();\n  initUndoButton();\n  initPlayButton();\n  initTipsButton();\n  initShareButton();\n  initContextualTuts();\n  resetCanvas();\n}\n\nfunction unditherAllButtons() {\n  $('.controls .' + ditheredClass).removeClass(ditheredClass);\n}\n\nfunction ditherButtonsByName(buttonNames) {\n  var undither = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (buttonNames.length > 0) {\n    if ($.isArray(buttonNames)) {\n      buttonNames.forEach(function (name) {\n        return ditherButtonByName(name, undither);\n      });\n    } else {\n      ditherButtonByName(buttonNames, undither);\n    }\n  }\n}\n\nfunction unditherButtonsByName(buttonNames) {\n  ditherButtonsByName(buttonNames, true);\n}\n\nfunction ditherButtonByName(buttonName) {\n  var undither = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var $button = $('.controls .' + buttonName);\n  // console.log($button);\n  if ($button.length > 0) {\n    if (undither !== true) {\n      $button.addClass(ditheredClass);\n    } else {\n      $button.removeClass(ditheredClass);\n    }\n  }\n}\n\nfunction unditherButtonByName(buttonName) {\n  ditherButtonByName(buttonName, true);\n}\n\nfunction unditherButtonsByName(buttonNames) {\n  ditherButtonsByName(buttonNames, true);\n}\n\nfunction newPressed() {\n  // console.log('new pressed');\n  window.kan.composition = [];\n  paper.project.activeLayer.removeChildren();\n  tutorial.hideContextualTuts();\n  ditherButtonsByName(['undo', 'new', 'play-stop', 'share']);\n  sound.stopPlaying();\n  // window.kan.userHasDrawnFirstShape = false;\n  // tutorial.resetContextualTuts();\n}\n\nfunction undoPressed() {\n  sound.stopPlaying();\n  tutorial.hideContextualTuts();\n\n  var transparent = new Color(0, 0);\n  // console.log('undo pressed');\n  if (!(window.kan.moves.length > 0)) {\n    // console.log('no moves yet');\n    window.kan.userHasDrawnFirstShape = false;\n    return;\n  }\n\n  var lastMove = window.kan.moves.pop();\n  var item = project.getItem({\n    id: lastMove.id\n  });\n\n  if (item) {\n    item.visible = true; // make sure\n    switch (lastMove.type) {\n      case 'newGroup':\n        // console.log('removing group');\n        sound.removeShapeFromComposition(item);\n        util.clearGroupPops(item);\n        item.remove();\n\n        var numGroups = util.getNumGroups();\n        // console.log('numGroups', numGroups);\n\n        if (numGroups <= 0) {\n          ditherButtonsByName(['undo', 'new']);\n        }\n\n        if (numGroups < 3) {\n          ditherButtonsByName(['play-stop', 'share']);\n          $body.removeClass(sound.playEnabledClass);\n        } else {\n          unditherButtonsByName(['play-stop', 'share']);\n          $body.addClass(sound.playEnabledClass);\n        }\n        break;\n      case 'fillChange':\n        if (lastMove.transparent) {\n          item.fillColor = lastMove.fill;\n          item.strokeColor = lastMove.fill;\n        } else {\n          item.fillColor = transparent;\n          item.strokeColor = transparent;\n        }\n      case 'transform':\n        item.data.fresh = true;\n        if (!!lastMove.position) {\n          item.position = lastMove.position;\n          if (item.data && item.data.tut && item.data.tut.length > 0) {\n            // item has connected contextual tut, move it to the right place\n            var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n            tutorial.moveContextualTut($tut, lastMove.position);\n          }\n        }\n        if (!!lastMove.rotation) {\n          item.rotation = lastMove.rotation;\n        }\n        if (!!lastMove.scale) {\n          item.scale(lastMove.scale);\n        }\n        if (config.pop === true) {\n          shape.updatePops();\n        }\n        break;\n      default:\n      // console.log('unknown case');\n    }\n  } else {\n      // console.log('could not find matching item');\n    }\n}\n\nfunction playPressed() {\n  // console.log('play pressed');\n  // sound.stopComposition();\n  // overlays.closeAndResetOverlays();\n  // tutorial.hideContextualTuts();\n  var playing = window.kan.playing;\n  // console.log(playing, util.getNumGroups() > 2, !playing && util.getNumGroups() > 2, $body);\n\n  clearTimeout(window.kan.playPromptTimeout);\n  if (!playing && util.getNumGroups() > 2) {\n    // console.log('starting playing');\n    sound.startPlaying();\n  } else {\n    // console.log('stopping playing');\n    sound.stopPlaying(true);\n  }\n}\n\nfunction tipsPressed() {\n  sound.stopPlaying();\n  overlays.openOverlay('tips');\n  // console.log('tips pressed');\n}\n\nfunction sharePressed() {\n  share.record();\n  // console.log('share pressed');\n  // sound.stopPlaying();\n  // if ($body.hasClass(sound.playEnabledClass)) {\n  //   overlays.openOverlay('share');\n  // }\n}\n\nfunction initLogoRefresh() {\n  $('.main-logo').on(tapEvent, function () {\n    location.reload();\n  });\n}\n\nfunction initColorPalette() {\n  var $paletteWrap = $('ul.palette-colors');\n  var $paletteColors = $paletteWrap.find('li');\n  var paletteColorSize = 20;\n  var paletteSelectedColorSize = 30;\n  var paletteSelectedClass = 'palette-selected';\n\n  // hook up click\n  $paletteColors.on('click tap touch', function () {\n    if (!$body.hasClass(playingClass)) {\n      var $svg = $(this).find('svg.palette-color');\n\n      if (!$svg.hasClass(paletteSelectedClass)) {\n        $('.' + paletteSelectedClass).removeClass(paletteSelectedClass).attr('width', paletteColorSize).attr('height', paletteColorSize).find('rect').attr('rx', 0).attr('ry', 0);\n\n        $svg.addClass(paletteSelectedClass).attr('width', paletteSelectedColorSize).attr('height', paletteSelectedColorSize).find('rect').attr('rx', paletteSelectedColorSize / 2).attr('ry', paletteSelectedColorSize / 2);\n\n        window.kan.currentColor = $svg.find('rect').attr('fill');\n        // console.log('%ccolor', 'color:red', color.getColorName(window.kan.currentColor));\n      }\n    };\n  });\n}\n\nfunction initNewButton() {\n  $('.main-controls .new').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      newPressed();\n    }\n  });\n}\n\nfunction initUndoButton() {\n  $('.main-controls .undo').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      undoPressed();\n    }\n  });\n}\n\nfunction initPlayButton() {\n  $('.main-controls .play-stop .play').on(tapEvent, sound.startPlaying);\n  $('.main-controls .play-stop .stop').on(tapEvent, sound.stopPlaying);\n}\n\nfunction initTipsButton() {\n  $('.controls .tips').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      tipsPressed();\n    }\n  });\n}\n\nfunction initShareButton() {\n  $('.controls .share').on(tapEvent, sharePressed);\n}\n\nfunction initContextualTuts() {\n  var $tuts = $('.contextual-tuts .tut');\n  $tuts.on(tapEvent, function () {\n    $(this).css({ visibility: 'hidden' });\n  });\n}\n\nfunction resetCanvas() {\n  paper.project.clear();\n\n  // add random background\n  paper.project.activeLayer.name = 'background';\n  var numCanvasses = 10;\n  var randomCanvasIndex = Math.round(Math.random() * (numCanvasses - 1)) + 1; // [1, numCanvasses]\n  var canvasBg = new Raster('canvas-' + randomCanvasIndex);\n  canvasBg.name = 'canvasBg';\n  canvasBg.position = paper.view.center;\n\n  // add canvas layer\n  var scaleFactorHorizontal = paper.view.viewSize.width / canvasBg.size.width;\n  var scaleFactorVertical = paper.view.viewSize.height / canvasBg.size.height;\n  canvasBg.scale(Math.max(scaleFactorHorizontal, scaleFactorVertical));\n  var layer = new Layer(); // init new layer that all other shapes will be drawn upon\n  paper.project.activeLayer.name = 'canvas';\n}\n\n},{\"./../../config\":1,\"./color\":7,\"./overlays\":10,\"./shape\":11,\"./share\":12,\"./sound\":13,\"./tutorial\":16,\"./util\":18}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rad = rad;\nexports.deg = deg;\nexports.hypot = hypot;\nexports.angleDelta = angleDelta;\nexports.delta = delta;\nexports.getTime = getTime;\nexports.getAllGroups = getAllGroups;\nexports.anyShapesOnCanvas = anyShapesOnCanvas;\nexports.getNumGroups = getNumGroups;\nexports.getFreshGroups = getFreshGroups;\nexports.getAllPops = getAllPops;\nexports.clearGroupPops = clearGroupPops;\nexports.getGroupPops = getGroupPops;\nexports.getPopCandidates = getPopCandidates;\nexports.setSha = setSha;\nexports.shallowCopy = shallowCopy;\nexports.randomPick = randomPick;\nvar config = require('./../../config');\n\n// Converts from degrees to radians.\nfunction rad(degrees) {\n  return degrees * Math.PI / 180;\n};\n\n// Converts from radians to degrees.\nfunction deg(radians) {\n  return radians * 180 / Math.PI;\n};\n\nfunction hypot(a, b) {\n  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)); // pythagorean!\n}\n\n// returns absolute value of the delta of two angles in radians\nfunction angleDelta(x, y) {\n  return Math.abs(Math.atan2(Math.sin(y - x), Math.cos(y - x)));;\n}\n\n// distance between two points\nfunction delta(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2)); // pythagorean!\n}\n\nfunction getTime() {\n  return new Date().toLocaleTimeString();\n}\n\nfunction getAllGroups() {\n  return paper.project.getItems({\n    className: 'Group'\n  });\n}\n\nfunction anyShapesOnCanvas() {\n  var groups = getAllGroups();\n  return groups.length > 0;\n}\n\nfunction getNumGroups() {\n  var groups = getAllGroups();\n  // console.log('numgroups', groups.length);\n  return groups.length;\n}\n\nfunction getFreshGroups() {\n  return paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return el.data && el.data.line === false && el.data.fresh === true;\n    }\n  });\n}\n\nfunction getAllPops() {\n  return paper.project.getItems({\n    match: function match(el) {\n      return el.data && el.data.pop === true;\n    }\n  });\n}\n\nfunction clearGroupPops(group) {\n  var pops = getGroupPops(group);\n  pops.forEach(function (pop) {\n    return pop.remove();\n  });\n}\n\nfunction getGroupPops(group) {\n  // console.log('group pop group', group.id, group);\n  var returnPops = [];\n\n  if (group.children.length > 0) {\n    var groupPops = group.getItems({\n      match: function match(el) {\n        return el.data && el.data.pop === true;\n      }\n    });\n    returnPops = returnPops.concat(groupPops);\n  }\n\n  var intersectingPops = paper.project.getItems({\n    match: function match(el) {\n      return el.data && el.data.pop === true && el.data.intersectingGroup === group.id;\n    }\n  });\n\n  if (intersectingPops.length > 0) {\n    returnPops = returnPops.concat(intersectingPops);\n  }\n\n  return returnPops;\n}\n\nfunction getPopCandidates() {\n  return paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return el.data && el.data.line === false;\n    }\n  });\n}\n\nfunction setSha() {\n  $.get('/hash').done(function (res) {\n    console.log('current hash:', res);\n    window.kan.hash = res;\n  }).fail(function (e) {\n    console.error('error getting hash:', e);\n  });\n}\n\n// http://blog.soulserv.net/understanding-object-cloning-in-javascript-part-i/\nfunction shallowCopy(original) {\n  // First create an empty object with\n  // same prototype of our original source\n  var clone = Object.create(Object.getPrototypeOf(original));\n\n  var i,\n      keys = Object.getOwnPropertyNames(original);\n\n  for (i = 0; i < keys.length; i++) {\n    // copy each property into the clone\n    Object.defineProperty(clone, keys[i], Object.getOwnPropertyDescriptor(original, keys[i]));\n  }\n\n  return clone;\n}\n\nfunction randomPick(array) {\n  if (array.length > 0) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  return null;\n}\n\n},{\"./../../config\":1}],19:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.enterTutorialMode = enterTutorialMode;\nexports.exitTutorialMode = exitTutorialMode;\nexports.pauseVideo = pauseVideo;\nexports.playVideo = playVideo;\nvar config = require('./../../config');\n\nvar main = require('./main');\nvar overlays = require('./overlays');\nvar timing = require('./timing');\nvar ui = require('./ui');\nvar sound = require('./sound');\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar videoPlayingClass = exports.videoPlayingClass = 'video-playing';\n\nvar $videoWrapper = $body.find('#video-wrap');\nvar $video = $videoWrapper.find('video');\n\nfunction enterTutorialMode() {\n  console.log('entering tutorial mode');\n  playVideo();\n  $body.addClass(videoPlayingClass);\n  clearTimeout(window.kan.inactivityTimeout);\n  clearInterval(window.kan.continueCountdownInterval);\n  $body.off(tapEvent, timing.preventInactivityTimeout);\n  $body.on(tapEvent, exitTutorialMode);\n  main.resetWindow();\n  ui.resetCanvas();\n  window.kan.refreshCheckInterval = setInterval(function () {\n    $.get('/hash').done(function (res) {\n      if (res !== window.kan.hash) {\n        console.log('different hash, reloading');\n        location.reload();\n      }\n    }).fail(function (e) {\n      console.error('error getting hash:', e);\n    });\n  }, timing.refreshCheckDelay);\n}\n\nfunction exitTutorialMode() {\n  console.log('exiting tutorial mode');\n  sound.reinitShapeSounds().then(function () {\n    clearInterval(window.kan.refreshCheckInterval);\n    Howler.mute(false);\n    pauseVideo();\n    $body.off(tapEvent, exitTutorialMode);\n    $body.on(tapEvent, timing.preventInactivityTimeout);\n    $body.removeClass(videoPlayingClass);\n    clearTimeout(window.kan.inactivityTimeout);\n    clearInterval(window.kan.continueCountdownInterval);\n\n    overlays.openOverlay('intro');\n\n    window.kan.inactivityTimeout = setTimeout(function () {\n      overlays.openOverlay('continue');\n    }, timing.continueInactivityDelay);\n  }).fail(function (e) {\n    console.error('error initting shape sounds:', e);\n    location.reload();\n  });\n}\n\nfunction pauseVideo() {\n  $video.get(0).pause();\n}\n\nfunction playVideo() {\n  $video.get(0).play();\n}\n\n},{\"./../../config\":1,\"./main\":9,\"./overlays\":10,\"./sound\":13,\"./timing\":14,\"./ui\":17}]},{},[9])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}