{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","./lib/axios","2","process","utils","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","window","bind","config","Promise","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","loadEvent","xDomain","env","NODE_ENV","XDomainRequest","url","onprogress","ontimeout","auth","username","password","Authorization","open","method","toUpperCase","params","paramsSerializer","timeout","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","response","responseText","statusText","onerror","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","this","../core/createError","./../core/settle","./../helpers/btoa","./../helpers/buildURL","./../helpers/cookies","./../helpers/isURLSameOrigin","./../helpers/parseHeaders","./../utils","_process","3","createInstance","defaultConfig","context","Axios","instance","prototype","extend","defaults","axios","create","instanceConfig","merge","Cancel","CancelToken","isCancel","all","promises","spread","default","./cancel/Cancel","./cancel/CancelToken","./cancel/isCancel","./core/Axios","./defaults","./helpers/bind","./helpers/spread","./utils","4","message","toString","__CANCEL__","5","executor","TypeError","resolvePromise","token","reason","throwIfRequested","source","c","./Cancel","6","value","7","interceptors","InterceptorManager","dispatchRequest","isAbsoluteURL","combineURLs","arguments","baseURL","chain","interceptor","unshift","fulfilled","rejected","push","shift","./../defaults","./../helpers/combineURLs","./../helpers/isAbsoluteURL","./InterceptorManager","./dispatchRequest","8","handlers","use","eject","id","fn","h","9","enhanceError","error","./enhanceError","10","throwIfCancellationRequested","transformData","transformRequest","common","adapter","transformResponse","../cancel/isCancel","../defaults","./transformData","11","12","validateStatus","./createError","13","fns","14","setContentTypeIfUnset","isUndefined","getDefaultAdapter","normalizeHeaderName","PROTECTION_PREFIX","DEFAULT_CONTENT_TYPE","Content-Type","isArrayBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","replace","parse","maxContentLength","Accept","./adapters/http","./adapters/xhr","./helpers/normalizeHeaderName","15","thisArg","args","Array","apply","16","E","input","block","charCode","str","String","output","idx","map","chars","charAt","charCodeAt","name","17","encode","encodeURIComponent","serializedParams","parts","isArray","v","isDate","toISOString","join","18","relativeURL","19","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","isString","document","match","RegExp","decodeURIComponent","remove","now","20","test","21","resolveURL","href","msie","urlParsingNode","setAttribute","protocol","host","search","hash","hostname","port","pathname","originURL","navigator","userAgent","createElement","location","requestURL","parsed","22","normalizedName","../utils","23","split","line","trim","substr","24","callback","arr","25","FormData","result","ArrayBuffer","isView","isFunction","pipe","URLSearchParams","obj","Object","hasOwnProperty","assignValue","b","26","global","define","amd","self","_dereq_","any","ret","SomePromiseArray","setHowMany","setUnwrap","init","_SomePromiseArray","Async","_customScheduler","_isTickUsed","_lateQueue","Queue","_normalQueue","_haveDrainedQueues","_trampolineEnabled","drainQueues","_drainQueues","_schedule","schedule","AsyncInvokeLater","receiver","arg","_queueTick","AsyncInvoke","AsyncSettlePromises","_pushOne","firstLineError","util","setScheduler","prev","hasCustomScheduler","enableTrampoline","disableTrampolineIfNecessary","hasDevTools","haveItemsQueued","fatalError","isNode","stderr","stack","exit","throwLater","setTimeout","invokeLater","invoke","settlePromises","_settlePromises","_drainQueue","queue","_reset","./queue","./schedule","./util","INTERNAL","tryConvertToPromise","debug","calledBind","rejectThis","_","_reject","targetRejected","promiseRejectionQueued","bindingPromise","_then","bindingResolved","_bitField","_resolveCallback","target","bindingRejected","_propagateFrom","propagateFromFunction","_boundValue","boundValueFunction","maybePromise","_target","_setBoundTo","_setOnCancel","_boundTo","_isBound","noConflict","bluebird","old","./promise","cr","callerCache","getterCache","ensureMethod","methodName","classString","caller","pop","namedGetter","indexedGetter","index","Math","max","getGetter","canEvaluate","isIdentifier","slice","get","propertyName","getter","isIndex","maybeGetter","PromiseArray","apiRejection","tryCatch","errorObj","async","_async","cancellation","_warn","child","_isCancellable","_cancelBy","_isFollowing","_followee","_cancelBranched","parent","_cancellationParent","_setWillBeCancelled","_branchHasCancelled","_branchesRemainingToCancel","_enoughBranchesHaveCancelled","canceller","_invokeOnCancel","_cancel","_setCancelled","_cancelPromises","_length","_unsetOnCancel","_onCancelField","isPending","_isCancelled","isCancellable","isCancelled","_doInvokeOnCancel","onCancelCallback","internalOnly","_attachExtraTrace","_resultCancelled","_onCancel","_invokeInternalOnCancel","NEXT_FILTER","catchFilter","instances","cb","boundTo","predicateLoop","item","matchesPredicate","keys","getKeys","j","./es5","Context","_trace","CapturedTrace","peekContext","createContext","longStackTraces","lastIndex","contextStack","_promiseCreated","_pushContext","_popContext","_peekContext","trace","deactivateLongStackTraces","activateLongStackTraces","Promise_pushContext","Promise_popContext","Promise_PeekContext","Promise_peekContext","Promise_promiseCreated","ctx","generatePromiseLifecycleEventObject","defaultFireEvent","cancellationExecute","onCancel","_attachCancellationCallback","cancellationAttachCancellationCallback","previousOnCancel","cancellationOnCancel","cancellationSetOnCancel","cancellationClearCancellationData","cancellationPropagateFrom","flags","branchesRemainingToCancel","bindingPropagateFrom","isFulfilled","longStackTracesCaptureStackTrace","longStackTracesAttachExtraTrace","ignoreSelf","canAttachTrace","_parent","attachExtraTrace","__stackCleaned__","parseStackAndMessage","notEnumerableProp","checkForgottenReturns","returnValue","promiseCreated","wForgottenReturn","_returnedNonUndefined","handlerLine","creatorLine","traceLines","cleanStack","nodeFramePattern","lineMatches","parseLinePattern","firstUserLine","msg","deprecated","replacement","warn","shouldUseOwnTrace","warnings","warning","Warning","activeFireEvent","formatAndLogError","reconstructStack","stacks","removeDuplicateOrEmptyJumps","splice","removeCommonRoots","current","currentLastIndex","currentLastLine","commonRootMeetPoint","isTraceLine","stackFramePattern","isInternalFrame","shouldIgnore","indentStackFrames","stackFramesAsArray","title","isSoft","console","formatStack","printWarning","log","fireRejectionEvent","localHandler","localEventFired","formatNonError","ruselessToString","newStr","snip","maxChars","longStackTracesIsSupported","captureStackTrace","parseLineInfo","matches","parseLineInfoRegex","fileName","parseInt","setBounds","lastLineError","firstFileName","lastFileName","firstStackLines","lastStackLines","firstIndex","bluebirdFramePattern","info","_promisesCreated","uncycle","unhandledRejectionHandled","possiblyUnhandledRejection","getDomain","_getDomain","debugging","suppressUnhandledRejections","_ensurePossibleRejectionHandled","_setRejectionIsUnhandled","_notifyUnhandledRejection","_notifyUnhandledRejectionIsHandled","_setReturnedNonUndefined","_isRejectionUnhandled","_settledValue","_setUnhandledRejectionIsNotified","_unsetUnhandledRejectionIsNotified","_isUnhandledRejectionNotified","_unsetRejectionIsUnhandled","onPossiblyUnhandledRejection","domainBind","onUnhandledRejectionHandled","disableLongStackTraces","Promise_captureStackTrace","_captureStackTrace","Promise_attachExtraTrace","hasLongStackTraces","fireDomEvent","CustomEvent","event","dispatchEvent","domEvent","detail","cancelable","Event","createEvent","initCustomEvent","fireGlobalEvent","emit","eventToObjectGenerator","promiseFulfilled","promiseRejected","promiseResolved","promiseCancelled","promiseChained","unhandledRejection","rejectionHandled","globalEventFired","domEventFired","opts","warningsOption","_clearCancellationData","_execute","monitoring","_fireEvent","handler","inherits","nodes","stackToIndex","node","currentStack","cycleEdgeNode","currentChildLength","v8stackFramePattern","v8stackFormatter","stackTraceLimit","ignoreUntil","err","hasStackAfterThrow","isTTY","color","./errors","returner","thrower","thenReturn","thenThrow","catchThrow","_reason","caught","catchReturn","_value","promiseAllThis","PromiseAll","PromiseMapSeries","PromiseReduce","reduce","each","mapSeries","subError","nameProperty","defaultMessage","SubError","constructor","OperationalError","cause","_TypeError","_RangeError","es5","Objectfreeze","freeze","CancellationError","TimeoutError","AggregateError","RangeError","methods","defineProperty","configurable","writable","enumerable","level","indent","lines","errorTypes","RejectionError","isES5","getDescriptor","getOwnPropertyDescriptor","names","getOwnPropertyNames","getPrototypeOf","propertyIsWritable","prop","descriptor","set","has","proto","ObjectKeys","ObjectGetDescriptor","ObjectDefineProperty","desc","ObjectFreeze","ObjectGetPrototypeOf","ArrayIsArray","PromiseMap","filter","options","PassThroughHandlerContext","type","called","cancelPromise","FinallyHandlerCancelReaction","finallyHandler","checkCancel","succeed","fail","reasonOrValue","isFinallyHandler","isRejected","_passThrough","success","lastly","tap","tapCatch","handlerOrPredicate","len","catchInstances","./catch_filter","Proxyable","promiseFromYieldHandler","yieldHandlers","traceParent","PromiseSpawn","generatorFunction","yieldHandler","internal","_finallyPromise","_promise","_stack","_generatorFunction","_receiver","_generator","_yieldHandlers","concat","_yieldedPromise","_cancellationPhase","errors","_isResolved","_cleanup","_fulfill","_promiseCancelled","implementsReturn","coroutine","returnSentinel","_continue","_promiseFulfilled","next","_promiseRejected","_run","_rejectCallback","done","bitField","_proxy","PromiseSpawn$","generator","spawn","addYieldHandler","last","MappingPromiseArray","limit","_filter","constructor$","_callback","_preservedValues","_limit","_inFlight","_queue","_asyncInit","concurrency","isFinite","_init$","_init","values","_values","preservedValues","totalResolved","_totalResolved","_resolve","booleans","_resolveFromSyncValue","attempt","isUntypedError","wrapAsOperationalError","rErrorKey","markAsOriginatingFromRejection","nodebackForPromise","multiArgs","wrapped","maybeWrapAsError","spreadAdapter","nodeback","successAdapter","errorAdapter","newReason","asCallback","nodeify","check","_fulfillmentHandler0","_rejectionHandler0","_promise0","_receiver0","_resolveFromExecutor","deferResolve","deferReject","fillTypes","p","makeSelfResolutionError","reflectHandler","PromiseInspection","UNDEFINED_BINDING","APPLY","reflect","didFulfill","didReject","_setIsFinal","toJSON","fulfillmentValue","rejectionReason","originatesFromRejection","getNewLibraryCopy","is","fromNode","fromCallback","_isFateSealed","_setAsyncGuaranteed","cast","_setFulfilled","internalData","haveInternalData","settler","_settlePromiseCtx","_settlePromiseLateCancellationObserver","_addCallbacks","_setLength","_setRejected","_setFollowing","_isFinal","_unsetCancelled","_receiverAt","_promiseAt","_fulfillmentHandlerAt","_rejectionHandlerAt","_migrateCallback0","follower","fulfill","_migrateCallbackAt","base","proxyable","shouldBind","_setFollowee","synchronous","ignoreNonErrorWarnings","ensureErrorObject","hasStack","_settlePromiseFromHandler","x","_settlePromise","isPromise","asyncGuaranteed","_settlePromise0","_clearCallbackDataAtIndex","_fulfillPromises","_rejectPromises","defer","pending","version","toFastProperties","./any.js","./async","./bind","./call_get.js","./cancel","./context","./debuggability","./direct_resolve","./each.js","./filter.js","./finally","./generators.js","./join","./map.js","./method","./nodeback","./nodeify.js","./promise_array","./promisify.js","./props.js","./race.js","./reduce.js","./settle.js","./some.js","./synchronous_inspection","./thenables","./timers.js","./using.js","toResolutionValue","Map","resolveValueIfEmpty","asArray","_resolveEmptyArray","_iterate","getActualLength","shouldCopyValues","isResolved","propsFilter","noCopyPropsPattern","isPromisified","__isPromisified__","hasPromisified","suffix","getDataPropertyOrDefault","defaultPromisified","checkValid","suffixRegexp","keyWithoutAsyncSuffix","promisifiableMethods","inheritedDataKeys","passesDefaultFilter","defaultFilter","makeNodePromisifiedClosure","__","promisified","THIS","defaultThis","withAppended","promisifyAll","promisifier","escapeIdentRegex","promisifiedKey","makeNodePromisified","promisify","makeNodePromisifiedEval","defaultSuffix","noCopyProps","copyDescriptors","isClass","PropertiesPromiseArray","entries","isMap","Es6Map","mapToEntries","_isMap","props","castValue","extractEntry","size","entriesToMap","keyOffset","arrayMove","src","srcIndex","dst","dstIndex","capacity","_capacity","_front","_willBeOverCapacity","_checkCapacity","wrapMask","front","_resizeTo","oldCapacity","moveItemsCount","27","race","raceLater","array","28","ReductionPromiseArray","initialValue","_each","_fn","_initialValue","_currentCancellable","_eachValues","completed","valueOrReason","gotAccum","accum","_gotAccum","gotValue","_eachComplete","sender","_resultCancelled$","29","noAsyncScheduler","NativePromise","getNativePromise","MutationObserver","GlobalSetImmediate","setImmediate","ProcessNextTick","nextTick","isRecentNode","nativePromise","standalone","cordova","div","attributes","toggleScheduled","div2","o2","classList","toggle","observe","scheduleToggle","disconnect","30","SettledPromiseArray","_promiseResolved","inspection","_settledValueField","31","_howMany","_unwrap","_initialized","some","howMany","CANCELLATION","isArrayResolved","_canPossiblyFulfill","_getRangeError","count","_addFulfilled","_fulfilled","_addRejected","_checkOutcome","_rejected","32","__isCancelled","33","getThen","isAnyBluebirdPromise","doThenable","doGetThen","hasProp","34","HandleWrapper","handle","successClear","clearTimeout","failureClear","afterValue","delay","ms","afterTimeout","handleWrapper","35","castPreservingDisposable","thenable","_isDisposable","_getDisposer","_setDisposable","dispose","resources","iterator","tryDispose","Disposer","_data","_context","FunctionDisposer","maybeUnwrapDisposer","isDisposer","ResourceList","NULL","resource","doDispose","_unsetDisposable","d","using","spreadArgs","disposer","reflectedResources","resultPromise","inspections","_disposer","36","tryCatcher","tryCatchTarget","isPrimitive","maybeError","safeToString","appendee","defaultValue","hasMethods","hasMethodsOtherThanConstructor","hasThisAssignmentAndStaticMethods","thisAssignmentPattern","FakeConstructor","rident","filledRange","prefix","isError","ignore","from","to","hasEnvVariables","globalObject","Child","Parent","T","excludedPrototypes","Function","isExcludedProto","visitedKeys","enumeration","Symbol","ArrayFrom","itResult","it","chrome","loadTimes","versions","Number","P","exportName","setTimeoutContext","bindFn","invokeArrayArg","deprecate","deprecationMessage","inherit","properties","childP","baseP","_super","assign","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","removeEventListener","hasParent","parentNode","inStr","find","inArray","findByKey","toArray","uniqueArray","sort","results","prefixed","property","camelProp","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","inputTarget","domHandler","ev","enable","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","lastInterval","COMPUTE_INTERVAL","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","touches","changed","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","dx","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","recognizers","preset","Manager","oldCssProps","touchAction","toggleCssProps","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","gestureEvent","initEvent","gesture","TEST_ELEMENT","nextKey","dest","MOBILE_REGEX","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","on","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","HowlerGlobal","Howler","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","mobileAutoEnable","_setup","volume","vol","parseFloat","setupAudioContext","gain","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","canPlayType","mpegTest","checkOpera","isOldOpera","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_enableMobileAudio","isMobile","maxTouchPoints","msMaxTouchPoints","_mobileEnabled","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","createBufferSource","connect","destination","noteOn","onended","suspend","_sounds","_paused","_suspendTimer","_resumeAfterSuspend","_autoResume","resume","_emit","Howl","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_duration","_state","_endTimers","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onresume","action","play","load","exec","Sound","loadBuffer","num","_ended","_id","_inactiveSound","seek","_seek","duration","_start","_stop","playWebAudio","_refreshBuffer","setValueAtTime","currentTime","_playStart","bufferSource","noteGrainOn","Infinity","isRunning","once","_clearTimer","playHtml5","playbackRate","loadedNoReadyState","ejecta","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","fade","diff","dir","steps","stepLen","ceil","linearRampToValueAtTime","_interval","setInterval","soundId","min","clearInterval","cancelScheduledValues","loopStart","loopEnd","realTime","playing","rateSeek","sounds","_errorFn","_loadFn","remCache","cache","_loadQueue","task","_drain","cnt","_panner","howl","random","createGain","createGainNode","paused","_errorListener","_loadListener","__default","loadSound","atob","dataView","Uint8Array","decodeAudioData","xhr","safeXhrSend","arraybuffer","AudioContext","webkitAudioContext","iOS","platform","appVersion","safari","_pos","_orientation","stereo","pan","pos","z","setPosition","orientation","xUp","yUp","zUp","or","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_panningModel","_refDistance","_rolloffFactor","pa","panner","createPanner","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","noop","browser","argv","addListener","removeListener","removeAllListeners","binding","cwd","chdir","umask","percentTwenties","formatters","RFC1738","RFC3986","formats","./formats","./parse","./stringify","allowDots","allowPrototypes","arrayLimit","decoder","decode","delimiter","depth","parameterLimit","plainObjects","strictNullHandling","parseValues","part","parseObject","root","cleanRoot","parseArrays","parseKeys","givenKey","segment","isRegExp","tempObj","newObj","compact","arrayPrefixGenerators","brackets","indices","repeat","toISO","encoder","serializeDate","date","skipNulls","object","generateArrayPrefix","formatter","isBuffer","objKeys","arrayFormat","hexTable","arrayToObject","mergeTarget","acc","string","out","references","refs","lookup","compacted","_interopRequireDefault","__esModule","_toDate","_toDate2","_toFloat","_toFloat2","_toInt","_toInt2","_toBoolean","_toBoolean2","_equals","_equals2","_contains","_contains2","_matches","_matches2","_isEmail","_isEmail2","_isURL","_isURL2","_isMACAddress","_isMACAddress2","_isIP","_isIP2","_isFQDN","_isFQDN2","_isBoolean","_isBoolean2","_isAlpha","_isAlpha2","_isAlphanumeric","_isAlphanumeric2","_isNumeric","_isNumeric2","_isLowercase","_isLowercase2","_isUppercase","_isUppercase2","_isAscii","_isAscii2","_isFullWidth","_isFullWidth2","_isHalfWidth","_isHalfWidth2","_isVariableWidth","_isVariableWidth2","_isMultibyte","_isMultibyte2","_isSurrogatePair","_isSurrogatePair2","_isInt","_isInt2","_isFloat","_isFloat2","_isDecimal","_isDecimal2","_isHexadecimal","_isHexadecimal2","_isDivisibleBy","_isDivisibleBy2","_isHexColor","_isHexColor2","_isMD","_isMD2","_isJSON","_isJSON2","_isEmpty","_isEmpty2","_isLength","_isLength2","_isByteLength","_isByteLength2","_isUUID","_isUUID2","_isMongoId","_isMongoId2","_isAfter","_isAfter2","_isBefore","_isBefore2","_isIn","_isIn2","_isCreditCard","_isCreditCard2","_isISIN","_isISIN2","_isISBN","_isISBN2","_isISSN","_isISSN2","_isMobilePhone","_isMobilePhone2","_isCurrency","_isCurrency2","_isISO","_isISO2","_isBase","_isBase2","_isDataURI","_isDataURI2","_ltrim","_ltrim2","_rtrim","_rtrim2","_trim","_trim2","_escape","_escape2","_unescape","_unescape2","_stripLow","_stripLow2","_whitelist","_whitelist2","_blacklist","_blacklist2","_isWhitelisted","_isWhitelisted2","_normalizeEmail","_normalizeEmail2","_toString","_toString2","validator","toDate","toFloat","toInt","toBoolean","equals","contains","isEmail","isURL","isMACAddress","isIP","isFQDN","isBoolean","isAlpha","isAlphanumeric","isNumeric","isLowercase","isUppercase","isAscii","isFullWidth","isHalfWidth","isVariableWidth","isMultibyte","isSurrogatePair","isInt","isFloat","isDecimal","isHexadecimal","isDivisibleBy","isHexColor","isMD5","isJSON","isEmpty","isLength","isByteLength","isUUID","isMongoId","isAfter","isBefore","isIn","isCreditCard","isISIN","isISBN","isISSN","isMobilePhone","isCurrency","isISO8601","isBase64","isDataURI","ltrim","rtrim","escape","unescape","stripLow","whitelist","blacklist","isWhitelisted","normalizeEmail","./lib/blacklist","./lib/contains","./lib/equals","./lib/escape","./lib/isAfter","./lib/isAlpha","./lib/isAlphanumeric","./lib/isAscii","./lib/isBase64","./lib/isBefore","./lib/isBoolean","./lib/isByteLength","./lib/isCreditCard","./lib/isCurrency","./lib/isDataURI","./lib/isDecimal","./lib/isDivisibleBy","./lib/isEmail","./lib/isEmpty","./lib/isFQDN","./lib/isFloat","./lib/isFullWidth","./lib/isHalfWidth","./lib/isHexColor","./lib/isHexadecimal","./lib/isIP","./lib/isISBN","./lib/isISIN","./lib/isISO8601","./lib/isISSN","./lib/isIn","./lib/isInt","./lib/isJSON","./lib/isLength","./lib/isLowercase","./lib/isMACAddress","./lib/isMD5","./lib/isMobilePhone","./lib/isMongoId","./lib/isMultibyte","./lib/isNumeric","./lib/isSurrogatePair","./lib/isURL","./lib/isUUID","./lib/isUppercase","./lib/isVariableWidth","./lib/isWhitelisted","./lib/ltrim","./lib/matches","./lib/normalizeEmail","./lib/rtrim","./lib/stripLow","./lib/toBoolean","./lib/toDate","./lib/toFloat","./lib/toInt","./lib/trim","./lib/unescape","./lib/util/toString","./lib/whitelist","locale","alpha","en-US","cs-CZ","da-DK","de-DE","es-ES","fr-FR","nl-NL","hu-HU","pl-PL","pt-PT","ru-RU","sr-RS@latin","sr-RS","tr-TR","uk-UA","ar","alphanumeric","englishLocales","_locale","arabicLocales","_i","37","_assertString2","_assertString","./util/assertString","38","elem","./util/toString","39","comparison","40","41","original","./toDate","42","_alpha","./alpha","43","44","ascii","45","notBase64","firstPaddingChar","46","47","48","_typeof","encodeURI","49","sanitized","creditCard","sum","digit","tmpNum","shouldDouble","substring","50","currencyRegex","symbol","require_symbol","negative","whole_dollar_amount_without_sep","whole_dollar_amount_with_sep","thousands_separator","valid_whole_dollar_amounts","whole_dollar_amount","decimal_amount","decimal_separator","pattern","allow_negatives","parens_for_negatives","negative_sign_after_digits","negative_sign_before_digits","allow_negative_sign_placeholder","allow_space_after_symbol","allow_space_after_digits","symbol_after_digits","_merge2","default_currency_options","_merge","./util/merge","51","dataURI","52","decimal","53","./toFloat","54","default_email_options","require_display_name","allow_display_name","display_email","displayName","user","lower_domain","require_tld","allow_utf8_local_part","quotedEmailUserUtf8","quotedEmailUser","emailUserUtf8Part","emailUserPart","user_parts","./isByteLength","./isFQDN","55","56","isFDQN","default_fqdn_options","allow_trailing_dot","tld","allow_underscores","57","float","lt","gt","58","fullWidth","59","halfWidth","60","hexcolor","61","hexadecimal","62","ipv4Maybe","blocks","foundOmissionBlock","foundIPv4TransitionBlock","expectedNumberOfBlocks","ipv6Block","63","checksum","isbn10Maybe","isbn13Maybe","factor","64","isin","checksumStr","character","65","iso8601","66","testIssn","issn","require_hyphen","case_sensitive","issnDigits","position","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","digitValue","return","67","68","regex","allow_leading_zeroes","int","intLeadingZeroes","minCheckPassed","maxCheckPassed","ltCheckPassed","gtCheckPassed","69","70","surrogatePairs","71","72","macAddress","73","md5","74","phones","ar-DZ","ar-SY","ar-SA","el-GR","en-AU","en-GB","en-HK","en-IN","en-NG","en-NZ","en-ZA","en-ZM","fi-FI","he-IL","it-IT","ja-JP","ms-MY","nb-NO","nl-BE","nn-NO","pt-BR","ro-RO","en-PK","vi-VN","zh-CN","zh-TW","75","./isHexadecimal","76","multibyte","77","numeric","78","surrogatePair","79","checkHost","default_url_options","port_str","ipv6","require_valid_protocol","protocols","require_protocol","allow_protocol_relative_urls","require_host","ipv6_match","wrapped_ipv6","host_whitelist","host_blacklist","./isIP","80","uuid","81","82","./isFullWidth","./isHalfWidth","83","84","85","modifiers","86","email","default_normalize_email_options","raw_parts","gmail_remove_subaddress","gmail_remove_dots","all_lowercase","gmail_lowercase","gmail_convert_googlemaildotcom","icloud_domains","icloud_remove_subaddress","icloud_lowercase","outlookdotcom_domains","outlookdotcom_remove_subaddress","outlookdotcom_lowercase","yahoo_domains","yahoo_remove_subaddress","components","yahoo_lowercase","./isEmail","87","88","keep_new_lines","./blacklist","89","strict","90","91","92","radix","93","./ltrim","./rtrim","94","95","assertString","96","97","98","99","asyncAnimateScale","totalDuration","animating","goToEnd","animate","settings","easing","complete","asyncPlayShapeAnimation","shapeId","paper","project","getItem","el","group","className","children","_namedChildren","measureLength","animationPromises","transparent","catch","./color","./sound","100","getPathColorName","hexColor","originalColor","getColorName","palette","colorNames","getRandomPop","randomPick","pops","getRandomColor","colors","getIndexedPopColor","getCurrentColor","$","getCurrentColorName","Color","./config","101","runAnimations","canvasId","maxShapes","postKey","#20171C","#1E2A43","#28377D","#352747","#CA2E26","#9A2A1F","#DA6C26","#453121","#916A47","#DAAD27","#7F7D31","#2B5E2E","gradients","colorSize","selectedColorSize","contextualTuts","copy","102","factory","ShapeDetector","deg2Rad","Stroke","points","processStroke","patterns","_nbSamplePoints","nbSamplePoints","learn","_squareSize","_phi","_angleRange","_anglePrecision","_halfDiagonal","_origin","resample","setCentroid","rotateBy","indicativeAngle","scaleToSquare","translateToOrigin","localDistance","q","strokeLength","newPoints","point","cos","sin","box","minX","maxX","minY","maxY","width","height","distanceAtBestAngle","x1","f1","distanceAtAngle","x2","f2","strokePoints","patternPoints","defaultShapes","spot","patternName","score","stroke","bestDistance","bestPattern","bestScore","103","resetWindow","kan","composition","compositionInterval","compositionTimeout","soundTimeouts","lastEvent","interaction","moves","pinching","pinchedGroup","pinchedTut","pathData","shapePath","prevAngle","sides","side","corners","lastScale","lastRotation","originalPosition","tutorialCompletion","fill","pinch","inactivityTimeout","playPromptTimeout","userHasDrawnFirstShape","firstTimePlaying","shapesSinceTut","refreshCheckInterval","sha","scheduledOverlay","continueCountdownInterval","shapeSounds","ui","overlays","timing","shape","setSha","reload","./overlays","./shape","./timing","./touch","./ui","./video","104","openOverlay","overlayName","allOverlays","includes","panning","preventInactivityTimeout","closeAndResetOverlays","tutorial","hideContextualTuts","$body","addClass","overlayActiveClass","tapEvent","openIntroOverlay","anyShapesOnCanvas","openPlayPromptOverlay","playPromptDelay","openSharePromptOverlay","openContinueOverlay","openTipsOverlay","openShareOverlay","openSharePrepareOverlay","openShareConfirmationOverlay","resetContinueCountdown","html","continueInactivityDelay","$countdownNumWrap","video","enterTutorialMode","selectRandomColorFromPalette","activateTipsCards","cardNavNext","$old","$new","$cardItems","first","$next","$third","slide","removeClass","updateCardCounter","cardsCount","cardInteractions","timeOfLastInteraction","closest","resetTips","$sharePhone","overlayOpenClasses","$sharePhoneWrap","invalidPhoneNumberClass","asyncCloseOverlaysAfterDuration","closeOverlayTimeout","total","$footer","asyncWaitForWellFormedPhoneNumber","s3Id","$shareKeypad","$shareSend","phoneNumWithHyphens","text","phoneNumRaw","phone","phoneNumberInputs","mask","phoneNumber","masked","randomCardGraphics","numBg","attr","initTips","initShare","hammerCanvas","$cardsWrap","overlay","./tutorial","105","initKeepaliveShape","keepaliveShape","Path","Rectangle","strokeColor","visible","startKeepaliveAnimation","keepaliveInterval","stopKeepaliveAnimation","destroyGroupPops","groupPopsBefore","getGroupPops","fillInGroupPopsById","groupId","groupChild","toggleFill","interior","fillColor","cleanUpGroup","acceptableNames","updatePops","freshGroups","getFreshGroups","popCandidates","getPopCandidates","getAllPops","reverse","freshGroup","freshOuter","bringToFront","otherGroup","otherGroupOuter","thisPop","intersect","popColor","popGroup","intersectingGroup","closed","addChild","fresh","getOutlineGroup","truedShape","outerPath","middlePath","sizes","lastAngle","firstTop","firstBottom","lastTop","lastBottom","Group","firstSegment","cumSize","avgSize","getPointAt","normal","getNormalAt","top","Point","bottom","insert","centerTop","centerBottom","flatten","simplify","selected","returnGroup","getTruedShape","pathClone","clone","completedPath","getCompletedPath","truedPath","strokeWidth","intersections","getIntersections","trimmedPath","getTrimmedPath","extendedPath","getExtendedPath","_intersections","_trimmedPath","replaceWith","getBruteExtendedPath","_intersections2","_trimmedPath2","getShapePrediction","prediction","shapeJSON","exportJSON","shapeData","processShapeData","shapePrediction","detector","closedShapes","intersects","getIntegerPoint","floor","stringifyPoint","parsePoint","pointStr","getClosestPointFromPathData","leastDistance","closestPoint","Base","datum","json","returnShape","jsonObj","segments","positionInfo","findInteriorCurves","interiorCurves","dividedPath","resolveCrossings","enclosedLoop","_enclosedLoop","thresholdDist","thresholdDistMultiplier","nextSegment","startAngle","inverseStartAngle","extendedStartPoint","lastSegment","penSegment","previous","endAngle","extendedEndPoint","firstPoint","lastPoint","unite","crossings","maxArea","maxChild","area","intersection","intersectionPoint","pathCrossings","subtract","_ret2","closedChildren","childClone","accumulator","_j","newPath","copyContent","copyAttributes","hitTestGroupBounds","groups","getVisibleGroups","hitTestBounds","strokeBounds","isInside","cornerThresholdDeg","shapeNames","./lib/shape-detector","106","asyncStopAudioRecordingAndExportBlob","recorder","exportWAV","blob","asyncStopVideoRecordingAndExportBlob","stopRecording","getBlob","asyncRecord","audioRecorder","Recorder","workerPath","canvasRecorder","RecordRTC","drawCanvas","startRecording","record","asyncPlayCompositionOnce","_slicedToArray","audioBlob","videoBlob","formData","append","post","resp","finally","asyncAddCompositionToDb","queryString","qs","handleSharePressed","enterShareMode","exitShareMode","sliceIterator","_arr","_n","_d","_e","_s","getElementById","107","asyncInitShapeSounds","reinitShapeSounds","getShapeSoundObj","viewWidth","view","viewSize","initShapeSounds","colorName","quantizedSoundStartTime","quantizeLength","bounds","compositionLength","quantizedSoundDuration","soundObj","startTime","pathId","spriteName","startPlaying","hasClass","playEnabledClass","playingClass","startComposition","stopPlaying","stopComposition","asyncGetShapeSoundFromShapeName","shapeName","shapeSoundJSONPath","getJSON","shapeSoundData","formatShapeSoundData","when","returnSounds","returnData","urls","smallestDuration","bpm","returnDuration","quantizePosition","smallestInterval","measures","returnPosition","asyncPlayShape","shapeSoundObj","asyncPlayShapeSound","animation","res","removeShapeFromComposition","shapeGroup","getItems","_ret","clearSoundTimeouts","soundTimeout","playCompositionFirstTime","trimmedCompositionObj","getTrimmedCompositionObj","iterations","repeatComposition","playCompositionOnce","asyncPlayCompositionMultipleTimes","repeats","promisedRepeats","getTime","shapePromises","asyncPlayShapeWithDelay","endTime","playTime","trimmedComposition","getCompositionStartTime","modifiedSound","shallowCopy","beatLength","./animation","howler","108","pauseVideo","exitTutorialMode","drawInactivityDelay","inputDelay","refreshCheckDelay","overlayDelay","109","hammerTips","tipsOverlay","doubleTap","panStart","panMove","panEnd","pinchStart","pinchMove","pinchEnd","enableAllEvents","enableTapEvents","enablePanAndPinchEvents","disableAllEvents","enablePanEvents","enablePinchEvents","disableTapEvents","disablePanEvents","disablePinchEvents","pointer","hitResult","hitTest","hitOptions","eventTargetIsOnCanvas","hideContextualTutByName","currentColor","stopPropagation","strokeCap","maxShapeLength","angleDelta","prevPoint","halfPointX","halfPointY","halfPoint","topX","topY","bottomX","bottomY","smooth","speed","tooLong","draw","move","minShapeSize","visibleGroups","firstGroup","removedGroup","shapeSize","centerPoint","rad","gradientSize","originX","originY","destinationX","destinationY","origin","gradient","stops","outlineGroup","outline","outer","outlineCenter","middle","sendToBack","shapeMask","enclosedLoops","shadowColor","shadowBlur","unditherButtonsByName","scaleFactor","allTutsCompleted","tutName","shapeLimit","addContextualTut","tut","hasTut","interacting","originalRotation","originalScale","thrown","$tut","$pinchedTut","currentScale","scaleDelta","currentRotation","rotationDelta","moveContextualTut","hypot","viewHypot","maxScaleFactor","rotate","hideContextualTut","throwPinchedGroup","velocityMultiplier","viewHeight","offScreen","requestAnimationFrame","newX","newY","newPos","tolerance","hammerjs","110","getTutByName","tutObj","tutorialCompletionObj","completion","shapeCenter","tutCopy","tutPos","getTutPositionFromCenter","css","left","visibility","$tuts","resetContextualTuts","tutWidth","outerWidth","tutHeight","outerHeight","leftPos","topPos","tutArrowHeight","111","initLogoRefresh","initColorPalette","initNewButton","initUndoButton","initPlayButton","initTipsButton","initShareButton","initContextualTuts","resetCanvas","ditherAllButtons","ditheredClass","unditherAllButtons","ditherButtonsByName","buttonNames","undither","ditherButtonByName","buttonName","$button","unditherButtonByName","newPressed","activeLayer","removeChildren","undoPressed","lastMove","clearGroupPops","numGroups","getNumGroups","tipsPressed","randomColorHex","$svg","selectColorFromPaletteUsingSvgElement","paletteColorSize","paletteSelectedColorSize","paletteSelectedClass","$paletteWrap","$paletteColors","share","clear","numCanvasses","randomCanvasIndex","canvasBg","Raster","scaleFactorHorizontal","scaleFactorVertical","Layer","./share","112","degrees","deg","radians","pow","delta","toLocaleTimeString","getNumVisibleGroups","getAllGroups","returnPops","groupPops","intersectingPops","113","playVideo","videoPlayingClass","main","$video","$videoWrapper","./main"],"mappings":"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AG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MACr2Bz+B,KAAM,WAENynE,SAAWr/C,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MACtxCz+B,KAAM,aAENynE,SAAWr/C,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,GAAIqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EAAG,MAASrW,EAAG,IAAKqW,EA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","file":"../main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = require('./lib/axios');\n},{\"./lib/axios\":3}],2:[function(require,module,exports){\n(function (process){\n'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        if (request.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n}).call(this,require('_process'))\n\n},{\"../core/createError\":9,\"./../core/settle\":12,\"./../helpers/btoa\":16,\"./../helpers/buildURL\":17,\"./../helpers/cookies\":19,\"./../helpers/isURLSameOrigin\":21,\"./../helpers/parseHeaders\":23,\"./../utils\":25,\"_process\":29}],3:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n},{\"./cancel/Cancel\":4,\"./cancel/CancelToken\":5,\"./cancel/isCancel\":6,\"./core/Axios\":7,\"./defaults\":14,\"./helpers/bind\":15,\"./helpers/spread\":24,\"./utils\":25}],4:[function(require,module,exports){\n'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n},{\"./Cancel\":4}],6:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n},{\"./../defaults\":14,\"./../helpers/combineURLs\":18,\"./../helpers/isAbsoluteURL\":20,\"./../utils\":25,\"./InterceptorManager\":8,\"./dispatchRequest\":10}],8:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n},{\"./../utils\":25}],9:[function(require,module,exports){\n'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, response);\n};\n\n},{\"./enhanceError\":11}],10:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n},{\"../cancel/isCancel\":6,\"../defaults\":14,\"./../utils\":25,\"./transformData\":13}],11:[function(require,module,exports){\n'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.response = response;\n  return error;\n};\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response\n    ));\n  }\n};\n\n},{\"./createError\":9}],13:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n},{\"./../utils\":25}],14:[function(require,module,exports){\n(function (process){\n'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n}).call(this,require('_process'))\n\n},{\"./adapters/http\":2,\"./adapters/xhr\":2,\"./helpers/normalizeHeaderName\":22,\"./utils\":25,\"_process\":29}],15:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n},{}],16:[function(require,module,exports){\n'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n},{\"./../utils\":25}],18:[function(require,module,exports){\n'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\n};\n\n},{}],19:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n},{\"./../utils\":25}],20:[function(require,module,exports){\n'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n},{\"./../utils\":25}],22:[function(require,module,exports){\n'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n},{\"../utils\":25}],23:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\n},{\"./../utils\":25}],24:[function(require,module,exports){\n'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n},{}],25:[function(require,module,exports){\n'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  typeof document.createElement -> undefined\n */\nfunction isStandardBrowserEnv() {\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined' &&\n    typeof document.createElement === 'function'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object' && !isArray(obj)) {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n},{\"./helpers/bind\":15}],26:[function(require,module,exports){\n(function (process,global){\n/* @preserve\n * The MIT License (MIT)\n * \n * Copyright (c) 2013-2017 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n/**\n * bluebird build version 3.5.0\n * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each\n*/\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar SomePromiseArray = Promise._SomePromiseArray;\nfunction any(promises) {\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function (promises) {\n    return any(promises);\n};\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n};\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\nvar firstLineError;\ntry {throw new Error(); } catch (e) {firstLineError = e;}\nvar schedule = _dereq_(\"./schedule\");\nvar Queue = _dereq_(\"./queue\");\nvar util = _dereq_(\"./util\");\n\nfunction Async() {\n    this._customScheduler = false;\n    this._isTickUsed = false;\n    this._lateQueue = new Queue(16);\n    this._normalQueue = new Queue(16);\n    this._haveDrainedQueues = false;\n    this._trampolineEnabled = true;\n    var self = this;\n    this.drainQueues = function () {\n        self._drainQueues();\n    };\n    this._schedule = schedule;\n}\n\nAsync.prototype.setScheduler = function(fn) {\n    var prev = this._schedule;\n    this._schedule = fn;\n    this._customScheduler = true;\n    return prev;\n};\n\nAsync.prototype.hasCustomScheduler = function() {\n    return this._customScheduler;\n};\n\nAsync.prototype.enableTrampoline = function() {\n    this._trampolineEnabled = true;\n};\n\nAsync.prototype.disableTrampolineIfNecessary = function() {\n    if (util.hasDevTools) {\n        this._trampolineEnabled = false;\n    }\n};\n\nAsync.prototype.haveItemsQueued = function () {\n    return this._isTickUsed || this._haveDrainedQueues;\n};\n\n\nAsync.prototype.fatalError = function(e, isNode) {\n    if (isNode) {\n        process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) +\n            \"\\n\");\n        process.exit(2);\n    } else {\n        this.throwLater(e);\n    }\n};\n\nAsync.prototype.throwLater = function(fn, arg) {\n    if (arguments.length === 1) {\n        arg = fn;\n        fn = function () { throw arg; };\n    }\n    if (typeof setTimeout !== \"undefined\") {\n        setTimeout(function() {\n            fn(arg);\n        }, 0);\n    } else try {\n        this._schedule(function() {\n            fn(arg);\n        });\n    } catch (e) {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n};\n\nfunction AsyncInvokeLater(fn, receiver, arg) {\n    this._lateQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncInvoke(fn, receiver, arg) {\n    this._normalQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncSettlePromises(promise) {\n    this._normalQueue._pushOne(promise);\n    this._queueTick();\n}\n\nif (!util.hasDevTools) {\n    Async.prototype.invokeLater = AsyncInvokeLater;\n    Async.prototype.invoke = AsyncInvoke;\n    Async.prototype.settlePromises = AsyncSettlePromises;\n} else {\n    Async.prototype.invokeLater = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvokeLater.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                setTimeout(function() {\n                    fn.call(receiver, arg);\n                }, 100);\n            });\n        }\n    };\n\n    Async.prototype.invoke = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvoke.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                fn.call(receiver, arg);\n            });\n        }\n    };\n\n    Async.prototype.settlePromises = function(promise) {\n        if (this._trampolineEnabled) {\n            AsyncSettlePromises.call(this, promise);\n        } else {\n            this._schedule(function() {\n                promise._settlePromises();\n            });\n        }\n    };\n}\n\nAsync.prototype._drainQueue = function(queue) {\n    while (queue.length() > 0) {\n        var fn = queue.shift();\n        if (typeof fn !== \"function\") {\n            fn._settlePromises();\n            continue;\n        }\n        var receiver = queue.shift();\n        var arg = queue.shift();\n        fn.call(receiver, arg);\n    }\n};\n\nAsync.prototype._drainQueues = function () {\n    this._drainQueue(this._normalQueue);\n    this._reset();\n    this._haveDrainedQueues = true;\n    this._drainQueue(this._lateQueue);\n};\n\nAsync.prototype._queueTick = function () {\n    if (!this._isTickUsed) {\n        this._isTickUsed = true;\n        this._schedule(this.drainQueues);\n    }\n};\n\nAsync.prototype._reset = function () {\n    this._isTickUsed = false;\n};\n\nmodule.exports = Async;\nmodule.exports.firstLineError = firstLineError;\n\n},{\"./queue\":26,\"./schedule\":29,\"./util\":36}],3:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {\nvar calledBind = false;\nvar rejectThis = function(_, e) {\n    this._reject(e);\n};\n\nvar targetRejected = function(e, context) {\n    context.promiseRejectionQueued = true;\n    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n};\n\nvar bindingResolved = function(thisArg, context) {\n    if (((this._bitField & 50397184) === 0)) {\n        this._resolveCallback(context.target);\n    }\n};\n\nvar bindingRejected = function(e, context) {\n    if (!context.promiseRejectionQueued) this._reject(e);\n};\n\nPromise.prototype.bind = function (thisArg) {\n    if (!calledBind) {\n        calledBind = true;\n        Promise.prototype._propagateFrom = debug.propagateFromFunction();\n        Promise.prototype._boundValue = debug.boundValueFunction();\n    }\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 1);\n    var target = this._target();\n    ret._setBoundTo(maybePromise);\n    if (maybePromise instanceof Promise) {\n        var context = {\n            promiseRejectionQueued: false,\n            promise: ret,\n            target: target,\n            bindingPromise: maybePromise\n        };\n        target._then(INTERNAL, targetRejected, undefined, ret, context);\n        maybePromise._then(\n            bindingResolved, bindingRejected, undefined, ret, context);\n        ret._setOnCancel(maybePromise);\n    } else {\n        ret._resolveCallback(target);\n    }\n    return ret;\n};\n\nPromise.prototype._setBoundTo = function (obj) {\n    if (obj !== undefined) {\n        this._bitField = this._bitField | 2097152;\n        this._boundTo = obj;\n    } else {\n        this._bitField = this._bitField & (~2097152);\n    }\n};\n\nPromise.prototype._isBound = function () {\n    return (this._bitField & 2097152) === 2097152;\n};\n\nPromise.bind = function (thisArg, value) {\n    return Promise.resolve(value).bind(thisArg);\n};\n};\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\nvar old;\nif (typeof Promise !== \"undefined\") old = Promise;\nfunction noConflict() {\n    try { if (Promise === bluebird) Promise = old; }\n    catch (e) {}\n    return bluebird;\n}\nvar bluebird = _dereq_(\"./promise\")();\nbluebird.noConflict = noConflict;\nmodule.exports = bluebird;\n\n},{\"./promise\":22}],5:[function(_dereq_,module,exports){\n\"use strict\";\nvar cr = Object.create;\nif (cr) {\n    var callerCache = cr(null);\n    var getterCache = cr(null);\n    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n}\n\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar isIdentifier = util.isIdentifier;\n\nvar getMethodCaller;\nvar getGetter;\nif (!true) {\nvar makeMethodCaller = function (methodName) {\n    return new Function(\"ensureMethod\", \"                                    \\n\\\n        return function(obj) {                                               \\n\\\n            'use strict'                                                     \\n\\\n            var len = this.length;                                           \\n\\\n            ensureMethod(obj, 'methodName');                                 \\n\\\n            switch(len) {                                                    \\n\\\n                case 1: return obj.methodName(this[0]);                      \\n\\\n                case 2: return obj.methodName(this[0], this[1]);             \\n\\\n                case 3: return obj.methodName(this[0], this[1], this[2]);    \\n\\\n                case 0: return obj.methodName();                             \\n\\\n                default:                                                     \\n\\\n                    return obj.methodName.apply(obj, this);                  \\n\\\n            }                                                                \\n\\\n        };                                                                   \\n\\\n        \".replace(/methodName/g, methodName))(ensureMethod);\n};\n\nvar makeGetter = function (propertyName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict';                                                        \\n\\\n        return obj.propertyName;                                             \\n\\\n        \".replace(\"propertyName\", propertyName));\n};\n\nvar getCompiled = function(name, compiler, cache) {\n    var ret = cache[name];\n    if (typeof ret !== \"function\") {\n        if (!isIdentifier(name)) {\n            return null;\n        }\n        ret = compiler(name);\n        cache[name] = ret;\n        cache[\" size\"]++;\n        if (cache[\" size\"] > 512) {\n            var keys = Object.keys(cache);\n            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n            cache[\" size\"] = keys.length - 256;\n        }\n    }\n    return ret;\n};\n\ngetMethodCaller = function(name) {\n    return getCompiled(name, makeMethodCaller, callerCache);\n};\n\ngetGetter = function(name) {\n    return getCompiled(name, makeGetter, getterCache);\n};\n}\n\nfunction ensureMethod(obj, methodName) {\n    var fn;\n    if (obj != null) fn = obj[methodName];\n    if (typeof fn !== \"function\") {\n        var message = \"Object \" + util.classString(obj) + \" has no method '\" +\n            util.toString(methodName) + \"'\";\n        throw new Promise.TypeError(message);\n    }\n    return fn;\n}\n\nfunction caller(obj) {\n    var methodName = this.pop();\n    var fn = ensureMethod(obj, methodName);\n    return fn.apply(obj, this);\n}\nPromise.prototype.call = function (methodName) {\n    var args = [].slice.call(arguments, 1);;\n    if (!true) {\n        if (canEvaluate) {\n            var maybeCaller = getMethodCaller(methodName);\n            if (maybeCaller !== null) {\n                return this._then(\n                    maybeCaller, undefined, undefined, args, undefined);\n            }\n        }\n    }\n    args.push(methodName);\n    return this._then(caller, undefined, undefined, args, undefined);\n};\n\nfunction namedGetter(obj) {\n    return obj[this];\n}\nfunction indexedGetter(obj) {\n    var index = +this;\n    if (index < 0) index = Math.max(0, index + obj.length);\n    return obj[index];\n}\nPromise.prototype.get = function (propertyName) {\n    var isIndex = (typeof propertyName === \"number\");\n    var getter;\n    if (!isIndex) {\n        if (canEvaluate) {\n            var maybeGetter = getGetter(propertyName);\n            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n        } else {\n            getter = namedGetter;\n        }\n    } else {\n        getter = indexedGetter;\n    }\n    return this._then(getter, undefined, undefined, propertyName, undefined);\n};\n};\n\n},{\"./util\":36}],6:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nPromise.prototype[\"break\"] = Promise.prototype.cancel = function() {\n    if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n\n    var promise = this;\n    var child = promise;\n    while (promise._isCancellable()) {\n        if (!promise._cancelBy(child)) {\n            if (child._isFollowing()) {\n                child._followee().cancel();\n            } else {\n                child._cancelBranched();\n            }\n            break;\n        }\n\n        var parent = promise._cancellationParent;\n        if (parent == null || !parent._isCancellable()) {\n            if (promise._isFollowing()) {\n                promise._followee().cancel();\n            } else {\n                promise._cancelBranched();\n            }\n            break;\n        } else {\n            if (promise._isFollowing()) promise._followee().cancel();\n            promise._setWillBeCancelled();\n            child = promise;\n            promise = parent;\n        }\n    }\n};\n\nPromise.prototype._branchHasCancelled = function() {\n    this._branchesRemainingToCancel--;\n};\n\nPromise.prototype._enoughBranchesHaveCancelled = function() {\n    return this._branchesRemainingToCancel === undefined ||\n           this._branchesRemainingToCancel <= 0;\n};\n\nPromise.prototype._cancelBy = function(canceller) {\n    if (canceller === this) {\n        this._branchesRemainingToCancel = 0;\n        this._invokeOnCancel();\n        return true;\n    } else {\n        this._branchHasCancelled();\n        if (this._enoughBranchesHaveCancelled()) {\n            this._invokeOnCancel();\n            return true;\n        }\n    }\n    return false;\n};\n\nPromise.prototype._cancelBranched = function() {\n    if (this._enoughBranchesHaveCancelled()) {\n        this._cancel();\n    }\n};\n\nPromise.prototype._cancel = function() {\n    if (!this._isCancellable()) return;\n    this._setCancelled();\n    async.invoke(this._cancelPromises, this, undefined);\n};\n\nPromise.prototype._cancelPromises = function() {\n    if (this._length() > 0) this._settlePromises();\n};\n\nPromise.prototype._unsetOnCancel = function() {\n    this._onCancelField = undefined;\n};\n\nPromise.prototype._isCancellable = function() {\n    return this.isPending() && !this._isCancelled();\n};\n\nPromise.prototype.isCancellable = function() {\n    return this.isPending() && !this.isCancelled();\n};\n\nPromise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {\n    if (util.isArray(onCancelCallback)) {\n        for (var i = 0; i < onCancelCallback.length; ++i) {\n            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n        }\n    } else if (onCancelCallback !== undefined) {\n        if (typeof onCancelCallback === \"function\") {\n            if (!internalOnly) {\n                var e = tryCatch(onCancelCallback).call(this._boundValue());\n                if (e === errorObj) {\n                    this._attachExtraTrace(e.e);\n                    async.throwLater(e.e);\n                }\n            }\n        } else {\n            onCancelCallback._resultCancelled(this);\n        }\n    }\n};\n\nPromise.prototype._invokeOnCancel = function() {\n    var onCancelCallback = this._onCancel();\n    this._unsetOnCancel();\n    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n};\n\nPromise.prototype._invokeInternalOnCancel = function() {\n    if (this._isCancellable()) {\n        this._doInvokeOnCancel(this._onCancel(), true);\n        this._unsetOnCancel();\n    }\n};\n\nPromise.prototype._resultCancelled = function() {\n    this.cancel();\n};\n\n};\n\n},{\"./util\":36}],7:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar getKeys = _dereq_(\"./es5\").keys;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction catchFilter(instances, cb, promise) {\n    return function(e) {\n        var boundTo = promise._boundValue();\n        predicateLoop: for (var i = 0; i < instances.length; ++i) {\n            var item = instances[i];\n\n            if (item === Error ||\n                (item != null && item.prototype instanceof Error)) {\n                if (e instanceof item) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (typeof item === \"function\") {\n                var matchesPredicate = tryCatch(item).call(boundTo, e);\n                if (matchesPredicate === errorObj) {\n                    return matchesPredicate;\n                } else if (matchesPredicate) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (util.isObject(e)) {\n                var keys = getKeys(item);\n                for (var j = 0; j < keys.length; ++j) {\n                    var key = keys[j];\n                    if (item[key] != e[key]) {\n                        continue predicateLoop;\n                    }\n                }\n                return tryCatch(cb).call(boundTo, e);\n            }\n        }\n        return NEXT_FILTER;\n    };\n}\n\nreturn catchFilter;\n};\n\n},{\"./es5\":13,\"./util\":36}],8:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar longStackTraces = false;\nvar contextStack = [];\n\nPromise.prototype._promiseCreated = function() {};\nPromise.prototype._pushContext = function() {};\nPromise.prototype._popContext = function() {return null;};\nPromise._peekContext = Promise.prototype._peekContext = function() {};\n\nfunction Context() {\n    this._trace = new Context.CapturedTrace(peekContext());\n}\nContext.prototype._pushContext = function () {\n    if (this._trace !== undefined) {\n        this._trace._promiseCreated = null;\n        contextStack.push(this._trace);\n    }\n};\n\nContext.prototype._popContext = function () {\n    if (this._trace !== undefined) {\n        var trace = contextStack.pop();\n        var ret = trace._promiseCreated;\n        trace._promiseCreated = null;\n        return ret;\n    }\n    return null;\n};\n\nfunction createContext() {\n    if (longStackTraces) return new Context();\n}\n\nfunction peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return undefined;\n}\nContext.CapturedTrace = null;\nContext.create = createContext;\nContext.deactivateLongStackTraces = function() {};\nContext.activateLongStackTraces = function() {\n    var Promise_pushContext = Promise.prototype._pushContext;\n    var Promise_popContext = Promise.prototype._popContext;\n    var Promise_PeekContext = Promise._peekContext;\n    var Promise_peekContext = Promise.prototype._peekContext;\n    var Promise_promiseCreated = Promise.prototype._promiseCreated;\n    Context.deactivateLongStackTraces = function() {\n        Promise.prototype._pushContext = Promise_pushContext;\n        Promise.prototype._popContext = Promise_popContext;\n        Promise._peekContext = Promise_PeekContext;\n        Promise.prototype._peekContext = Promise_peekContext;\n        Promise.prototype._promiseCreated = Promise_promiseCreated;\n        longStackTraces = false;\n    };\n    longStackTraces = true;\n    Promise.prototype._pushContext = Context.prototype._pushContext;\n    Promise.prototype._popContext = Context.prototype._popContext;\n    Promise._peekContext = Promise.prototype._peekContext = peekContext;\n    Promise.prototype._promiseCreated = function() {\n        var ctx = this._peekContext();\n        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n    };\n};\nreturn Context;\n};\n\n},{}],9:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, Context) {\nvar getDomain = Promise._getDomain;\nvar async = Promise._async;\nvar Warning = _dereq_(\"./errors\").Warning;\nvar util = _dereq_(\"./util\");\nvar canAttachTrace = util.canAttachTrace;\nvar unhandledRejectionHandled;\nvar possiblyUnhandledRejection;\nvar bluebirdFramePattern =\n    /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\nvar nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\nvar parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\nvar stackFramePattern = null;\nvar formatStack = null;\nvar indentStackFrames = false;\nvar printWarning;\nvar debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 &&\n                        (true ||\n                         util.env(\"BLUEBIRD_DEBUG\") ||\n                         util.env(\"NODE_ENV\") === \"development\"));\n\nvar warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n\nvar longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n\nvar wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 &&\n    (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\nPromise.prototype.suppressUnhandledRejections = function() {\n    var target = this._target();\n    target._bitField = ((target._bitField & (~1048576)) |\n                      524288);\n};\n\nPromise.prototype._ensurePossibleRejectionHandled = function () {\n    if ((this._bitField & 524288) !== 0) return;\n    this._setRejectionIsUnhandled();\n    async.invokeLater(this._notifyUnhandledRejection, this, undefined);\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n    fireRejectionEvent(\"rejectionHandled\",\n                                  unhandledRejectionHandled, undefined, this);\n};\n\nPromise.prototype._setReturnedNonUndefined = function() {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._returnedNonUndefined = function() {\n    return (this._bitField & 268435456) !== 0;\n};\n\nPromise.prototype._notifyUnhandledRejection = function () {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._settledValue();\n        this._setUnhandledRejectionIsNotified();\n        fireRejectionEvent(\"unhandledRejection\",\n                                      possiblyUnhandledRejection, reason, this);\n    }\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField | 262144;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField & (~262144);\n};\n\nPromise.prototype._isUnhandledRejectionNotified = function () {\n    return (this._bitField & 262144) > 0;\n};\n\nPromise.prototype._setRejectionIsUnhandled = function () {\n    this._bitField = this._bitField | 1048576;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled = function () {\n    this._bitField = this._bitField & (~1048576);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled = function () {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._warn = function(message, shouldUseOwnTrace, promise) {\n    return warn(message, shouldUseOwnTrace, promise || this);\n};\n\nPromise.onPossiblyUnhandledRejection = function (fn) {\n    var domain = getDomain();\n    possiblyUnhandledRejection =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nPromise.onUnhandledRejectionHandled = function (fn) {\n    var domain = getDomain();\n    unhandledRejectionHandled =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nvar disableLongStackTraces = function() {};\nPromise.longStackTraces = function () {\n    if (async.haveItemsQueued() && !config.longStackTraces) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (!config.longStackTraces && longStackTracesIsSupported()) {\n        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n        config.longStackTraces = true;\n        disableLongStackTraces = function() {\n            if (async.haveItemsQueued() && !config.longStackTraces) {\n                throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n            }\n            Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n            Context.deactivateLongStackTraces();\n            async.enableTrampoline();\n            config.longStackTraces = false;\n        };\n        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n        Context.activateLongStackTraces();\n        async.disableTrampolineIfNecessary();\n    }\n};\n\nPromise.hasLongStackTraces = function () {\n    return config.longStackTraces && longStackTracesIsSupported();\n};\n\nvar fireDomEvent = (function() {\n    try {\n        if (typeof CustomEvent === \"function\") {\n            var event = new CustomEvent(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new CustomEvent(name.toLowerCase(), {\n                    detail: event,\n                    cancelable: true\n                });\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else if (typeof Event === \"function\") {\n            var event = new Event(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new Event(name.toLowerCase(), {\n                    cancelable: true\n                });\n                domEvent.detail = event;\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else {\n            var event = document.createEvent(\"CustomEvent\");\n            event.initCustomEvent(\"testingtheevent\", false, true, {});\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = document.createEvent(\"CustomEvent\");\n                domEvent.initCustomEvent(name.toLowerCase(), false, true,\n                    event);\n                return !util.global.dispatchEvent(domEvent);\n            };\n        }\n    } catch (e) {}\n    return function() {\n        return false;\n    };\n})();\n\nvar fireGlobalEvent = (function() {\n    if (util.isNode) {\n        return function() {\n            return process.emit.apply(process, arguments);\n        };\n    } else {\n        if (!util.global) {\n            return function() {\n                return false;\n            };\n        }\n        return function(name) {\n            var methodName = \"on\" + name.toLowerCase();\n            var method = util.global[methodName];\n            if (!method) return false;\n            method.apply(util.global, [].slice.call(arguments, 1));\n            return true;\n        };\n    }\n})();\n\nfunction generatePromiseLifecycleEventObject(name, promise) {\n    return {promise: promise};\n}\n\nvar eventToObjectGenerator = {\n    promiseCreated: generatePromiseLifecycleEventObject,\n    promiseFulfilled: generatePromiseLifecycleEventObject,\n    promiseRejected: generatePromiseLifecycleEventObject,\n    promiseResolved: generatePromiseLifecycleEventObject,\n    promiseCancelled: generatePromiseLifecycleEventObject,\n    promiseChained: function(name, promise, child) {\n        return {promise: promise, child: child};\n    },\n    warning: function(name, warning) {\n        return {warning: warning};\n    },\n    unhandledRejection: function (name, reason, promise) {\n        return {reason: reason, promise: promise};\n    },\n    rejectionHandled: generatePromiseLifecycleEventObject\n};\n\nvar activeFireEvent = function (name) {\n    var globalEventFired = false;\n    try {\n        globalEventFired = fireGlobalEvent.apply(null, arguments);\n    } catch (e) {\n        async.throwLater(e);\n        globalEventFired = true;\n    }\n\n    var domEventFired = false;\n    try {\n        domEventFired = fireDomEvent(name,\n                    eventToObjectGenerator[name].apply(null, arguments));\n    } catch (e) {\n        async.throwLater(e);\n        domEventFired = true;\n    }\n\n    return domEventFired || globalEventFired;\n};\n\nPromise.config = function(opts) {\n    opts = Object(opts);\n    if (\"longStackTraces\" in opts) {\n        if (opts.longStackTraces) {\n            Promise.longStackTraces();\n        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n            disableLongStackTraces();\n        }\n    }\n    if (\"warnings\" in opts) {\n        var warningsOption = opts.warnings;\n        config.warnings = !!warningsOption;\n        wForgottenReturn = config.warnings;\n\n        if (util.isObject(warningsOption)) {\n            if (\"wForgottenReturn\" in warningsOption) {\n                wForgottenReturn = !!warningsOption.wForgottenReturn;\n            }\n        }\n    }\n    if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n        if (async.haveItemsQueued()) {\n            throw new Error(\n                \"cannot enable cancellation after promises are in use\");\n        }\n        Promise.prototype._clearCancellationData =\n            cancellationClearCancellationData;\n        Promise.prototype._propagateFrom = cancellationPropagateFrom;\n        Promise.prototype._onCancel = cancellationOnCancel;\n        Promise.prototype._setOnCancel = cancellationSetOnCancel;\n        Promise.prototype._attachCancellationCallback =\n            cancellationAttachCancellationCallback;\n        Promise.prototype._execute = cancellationExecute;\n        propagateFromFunction = cancellationPropagateFrom;\n        config.cancellation = true;\n    }\n    if (\"monitoring\" in opts) {\n        if (opts.monitoring && !config.monitoring) {\n            config.monitoring = true;\n            Promise.prototype._fireEvent = activeFireEvent;\n        } else if (!opts.monitoring && config.monitoring) {\n            config.monitoring = false;\n            Promise.prototype._fireEvent = defaultFireEvent;\n        }\n    }\n    return Promise;\n};\n\nfunction defaultFireEvent() { return false; }\n\nPromise.prototype._fireEvent = defaultFireEvent;\nPromise.prototype._execute = function(executor, resolve, reject) {\n    try {\n        executor(resolve, reject);\n    } catch (e) {\n        return e;\n    }\n};\nPromise.prototype._onCancel = function () {};\nPromise.prototype._setOnCancel = function (handler) { ; };\nPromise.prototype._attachCancellationCallback = function(onCancel) {\n    ;\n};\nPromise.prototype._captureStackTrace = function () {};\nPromise.prototype._attachExtraTrace = function () {};\nPromise.prototype._clearCancellationData = function() {};\nPromise.prototype._propagateFrom = function (parent, flags) {\n    ;\n    ;\n};\n\nfunction cancellationExecute(executor, resolve, reject) {\n    var promise = this;\n    try {\n        executor(resolve, reject, function(onCancel) {\n            if (typeof onCancel !== \"function\") {\n                throw new TypeError(\"onCancel must be a function, got: \" +\n                                    util.toString(onCancel));\n            }\n            promise._attachCancellationCallback(onCancel);\n        });\n    } catch (e) {\n        return e;\n    }\n}\n\nfunction cancellationAttachCancellationCallback(onCancel) {\n    if (!this._isCancellable()) return this;\n\n    var previousOnCancel = this._onCancel();\n    if (previousOnCancel !== undefined) {\n        if (util.isArray(previousOnCancel)) {\n            previousOnCancel.push(onCancel);\n        } else {\n            this._setOnCancel([previousOnCancel, onCancel]);\n        }\n    } else {\n        this._setOnCancel(onCancel);\n    }\n}\n\nfunction cancellationOnCancel() {\n    return this._onCancelField;\n}\n\nfunction cancellationSetOnCancel(onCancel) {\n    this._onCancelField = onCancel;\n}\n\nfunction cancellationClearCancellationData() {\n    this._cancellationParent = undefined;\n    this._onCancelField = undefined;\n}\n\nfunction cancellationPropagateFrom(parent, flags) {\n    if ((flags & 1) !== 0) {\n        this._cancellationParent = parent;\n        var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n        if (branchesRemainingToCancel === undefined) {\n            branchesRemainingToCancel = 0;\n        }\n        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n    }\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\n\nfunction bindingPropagateFrom(parent, flags) {\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\nvar propagateFromFunction = bindingPropagateFrom;\n\nfunction boundValueFunction() {\n    var ret = this._boundTo;\n    if (ret !== undefined) {\n        if (ret instanceof Promise) {\n            if (ret.isFulfilled()) {\n                return ret.value();\n            } else {\n                return undefined;\n            }\n        }\n    }\n    return ret;\n}\n\nfunction longStackTracesCaptureStackTrace() {\n    this._trace = new CapturedTrace(this._peekContext());\n}\n\nfunction longStackTracesAttachExtraTrace(error, ignoreSelf) {\n    if (canAttachTrace(error)) {\n        var trace = this._trace;\n        if (trace !== undefined) {\n            if (ignoreSelf) trace = trace._parent;\n        }\n        if (trace !== undefined) {\n            trace.attachExtraTrace(error);\n        } else if (!error.__stackCleaned__) {\n            var parsed = parseStackAndMessage(error);\n            util.notEnumerableProp(error, \"stack\",\n                parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n            util.notEnumerableProp(error, \"__stackCleaned__\", true);\n        }\n    }\n}\n\nfunction checkForgottenReturns(returnValue, promiseCreated, name, promise,\n                               parent) {\n    if (returnValue === undefined && promiseCreated !== null &&\n        wForgottenReturn) {\n        if (parent !== undefined && parent._returnedNonUndefined()) return;\n        if ((promise._bitField & 65535) === 0) return;\n\n        if (name) name = name + \" \";\n        var handlerLine = \"\";\n        var creatorLine = \"\";\n        if (promiseCreated._trace) {\n            var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n            var stack = cleanStack(traceLines);\n            for (var i = stack.length - 1; i >= 0; --i) {\n                var line = stack[i];\n                if (!nodeFramePattern.test(line)) {\n                    var lineMatches = line.match(parseLinePattern);\n                    if (lineMatches) {\n                        handlerLine  = \"at \" + lineMatches[1] +\n                            \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n                    }\n                    break;\n                }\n            }\n\n            if (stack.length > 0) {\n                var firstUserLine = stack[0];\n                for (var i = 0; i < traceLines.length; ++i) {\n\n                    if (traceLines[i] === firstUserLine) {\n                        if (i > 0) {\n                            creatorLine = \"\\n\" + traceLines[i - 1];\n                        }\n                        break;\n                    }\n                }\n\n            }\n        }\n        var msg = \"a promise was created in a \" + name +\n            \"handler \" + handlerLine + \"but was not returned from it, \" +\n            \"see http://goo.gl/rRqMUw\" +\n            creatorLine;\n        promise._warn(msg, true, promiseCreated);\n    }\n}\n\nfunction deprecated(name, replacement) {\n    var message = name +\n        \" is deprecated and will be removed in a future version.\";\n    if (replacement) message += \" Use \" + replacement + \" instead.\";\n    return warn(message);\n}\n\nfunction warn(message, shouldUseOwnTrace, promise) {\n    if (!config.warnings) return;\n    var warning = new Warning(message);\n    var ctx;\n    if (shouldUseOwnTrace) {\n        promise._attachExtraTrace(warning);\n    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n        ctx.attachExtraTrace(warning);\n    } else {\n        var parsed = parseStackAndMessage(warning);\n        warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n    }\n\n    if (!activeFireEvent(\"warning\", warning)) {\n        formatAndLogError(warning, \"\", true);\n    }\n}\n\nfunction reconstructStack(message, stacks) {\n    for (var i = 0; i < stacks.length - 1; ++i) {\n        stacks[i].push(\"From previous event:\");\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    if (i < stacks.length) {\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    return message + \"\\n\" + stacks.join(\"\\n\");\n}\n\nfunction removeDuplicateOrEmptyJumps(stacks) {\n    for (var i = 0; i < stacks.length; ++i) {\n        if (stacks[i].length === 0 ||\n            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n            stacks.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nfunction removeCommonRoots(stacks) {\n    var current = stacks[0];\n    for (var i = 1; i < stacks.length; ++i) {\n        var prev = stacks[i];\n        var currentLastIndex = current.length - 1;\n        var currentLastLine = current[currentLastIndex];\n        var commonRootMeetPoint = -1;\n\n        for (var j = prev.length - 1; j >= 0; --j) {\n            if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n            }\n        }\n\n        for (var j = commonRootMeetPoint; j >= 0; --j) {\n            var line = prev[j];\n            if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n            } else {\n                break;\n            }\n        }\n        current = prev;\n    }\n}\n\nfunction cleanStack(stack) {\n    var ret = [];\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        var isTraceLine = \"    (No stack trace)\" === line ||\n            stackFramePattern.test(line);\n        var isInternalFrame = isTraceLine && shouldIgnore(line);\n        if (isTraceLine && !isInternalFrame) {\n            if (indentStackFrames && line.charAt(0) !== \" \") {\n                line = \"    \" + line;\n            }\n            ret.push(line);\n        }\n    }\n    return ret;\n}\n\nfunction stackFramesAsArray(error) {\n    var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n            break;\n        }\n    }\n    if (i > 0 && error.name != \"SyntaxError\") {\n        stack = stack.slice(i);\n    }\n    return stack;\n}\n\nfunction parseStackAndMessage(error) {\n    var stack = error.stack;\n    var message = error.toString();\n    stack = typeof stack === \"string\" && stack.length > 0\n                ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n    return {\n        message: message,\n        stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n    };\n}\n\nfunction formatAndLogError(error, title, isSoft) {\n    if (typeof console !== \"undefined\") {\n        var message;\n        if (util.isObject(error)) {\n            var stack = error.stack;\n            message = title + formatStack(stack, error);\n        } else {\n            message = title + String(error);\n        }\n        if (typeof printWarning === \"function\") {\n            printWarning(message, isSoft);\n        } else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n}\n\nfunction fireRejectionEvent(name, localHandler, reason, promise) {\n    var localEventFired = false;\n    try {\n        if (typeof localHandler === \"function\") {\n            localEventFired = true;\n            if (name === \"rejectionHandled\") {\n                localHandler(promise);\n            } else {\n                localHandler(reason, promise);\n            }\n        }\n    } catch (e) {\n        async.throwLater(e);\n    }\n\n    if (name === \"unhandledRejection\") {\n        if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n            formatAndLogError(reason, \"Unhandled rejection \");\n        }\n    } else {\n        activeFireEvent(name, promise);\n    }\n}\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    } else {\n        str = obj && typeof obj.toString === \"function\"\n            ? obj.toString() : util.toString(obj);\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nfunction longStackTracesIsSupported() {\n    return typeof captureStackTrace === \"function\";\n}\n\nvar shouldIgnore = function() { return false; };\nvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\nfunction parseLineInfo(line) {\n    var matches = line.match(parseLineInfoRegex);\n    if (matches) {\n        return {\n            fileName: matches[1],\n            line: parseInt(matches[2], 10)\n        };\n    }\n}\n\nfunction setBounds(firstLineError, lastLineError) {\n    if (!longStackTracesIsSupported()) return;\n    var firstStackLines = firstLineError.stack.split(\"\\n\");\n    var lastStackLines = lastLineError.stack.split(\"\\n\");\n    var firstIndex = -1;\n    var lastIndex = -1;\n    var firstFileName;\n    var lastFileName;\n    for (var i = 0; i < firstStackLines.length; ++i) {\n        var result = parseLineInfo(firstStackLines[i]);\n        if (result) {\n            firstFileName = result.fileName;\n            firstIndex = result.line;\n            break;\n        }\n    }\n    for (var i = 0; i < lastStackLines.length; ++i) {\n        var result = parseLineInfo(lastStackLines[i]);\n        if (result) {\n            lastFileName = result.fileName;\n            lastIndex = result.line;\n            break;\n        }\n    }\n    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n        return;\n    }\n\n    shouldIgnore = function(line) {\n        if (bluebirdFramePattern.test(line)) return true;\n        var info = parseLineInfo(line);\n        if (info) {\n            if (info.fileName === firstFileName &&\n                (firstIndex <= info.line && info.line <= lastIndex)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n\nfunction CapturedTrace(parent) {\n    this._parent = parent;\n    this._promisesCreated = 0;\n    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n    captureStackTrace(this, CapturedTrace);\n    if (length > 32) this.uncycle();\n}\nutil.inherits(CapturedTrace, Error);\nContext.CapturedTrace = CapturedTrace;\n\nCapturedTrace.prototype.uncycle = function() {\n    var length = this._length;\n    if (length < 2) return;\n    var nodes = [];\n    var stackToIndex = {};\n\n    for (var i = 0, node = this; node !== undefined; ++i) {\n        nodes.push(node);\n        node = node._parent;\n    }\n    length = this._length = i;\n    for (var i = length - 1; i >= 0; --i) {\n        var stack = nodes[i].stack;\n        if (stackToIndex[stack] === undefined) {\n            stackToIndex[stack] = i;\n        }\n    }\n    for (var i = 0; i < length; ++i) {\n        var currentStack = nodes[i].stack;\n        var index = stackToIndex[currentStack];\n        if (index !== undefined && index !== i) {\n            if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n            }\n            nodes[i]._parent = undefined;\n            nodes[i]._length = 1;\n            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n            if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n                cycleEdgeNode._parent.uncycle();\n                cycleEdgeNode._length =\n                    cycleEdgeNode._parent._length + 1;\n            } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n            }\n            var currentChildLength = cycleEdgeNode._length + 1;\n            for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n            }\n            return;\n        }\n    }\n};\n\nCapturedTrace.prototype.attachExtraTrace = function(error) {\n    if (error.__stackCleaned__) return;\n    this.uncycle();\n    var parsed = parseStackAndMessage(error);\n    var message = parsed.message;\n    var stacks = [parsed.stack];\n\n    var trace = this;\n    while (trace !== undefined) {\n        stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n        trace = trace._parent;\n    }\n    removeCommonRoots(stacks);\n    removeDuplicateOrEmptyJumps(stacks);\n    util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n    util.notEnumerableProp(error, \"__stackCleaned__\", true);\n};\n\nvar captureStackTrace = (function stackDetection() {\n    var v8stackFramePattern = /^\\s*at\\s*/;\n    var v8stackFormatter = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if (error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        Error.stackTraceLimit += 6;\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        var captureStackTrace = Error.captureStackTrace;\n\n        shouldIgnore = function(line) {\n            return bluebirdFramePattern.test(line);\n        };\n        return function(receiver, ignoreUntil) {\n            Error.stackTraceLimit += 6;\n            captureStackTrace(receiver, ignoreUntil);\n            Error.stackTraceLimit -= 6;\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n        stackFramePattern = /@/;\n        formatStack = v8stackFormatter;\n        indentStackFrames = true;\n        return function captureStackTrace(o) {\n            o.stack = new Error().stack;\n        };\n    }\n\n    var hasStackAfterThrow;\n    try { throw new Error(); }\n    catch(e) {\n        hasStackAfterThrow = (\"stack\" in e);\n    }\n    if (!(\"stack\" in err) && hasStackAfterThrow &&\n        typeof Error.stackTraceLimit === \"number\") {\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        return function captureStackTrace(o) {\n            Error.stackTraceLimit += 6;\n            try { throw new Error(); }\n            catch(e) { o.stack = e.stack; }\n            Error.stackTraceLimit -= 6;\n        };\n    }\n\n    formatStack = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if ((typeof error === \"object\" ||\n            typeof error === \"function\") &&\n            error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    return null;\n\n})([]);\n\nif (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n    printWarning = function (message) {\n        console.warn(message);\n    };\n    if (util.isNode && process.stderr.isTTY) {\n        printWarning = function(message, isSoft) {\n            var color = isSoft ? \"\\u001b[33m\" : \"\\u001b[31m\";\n            console.warn(color + message + \"\\u001b[0m\\n\");\n        };\n    } else if (!util.isNode && typeof (new Error().stack) === \"string\") {\n        printWarning = function(message, isSoft) {\n            console.warn(\"%c\" + message,\n                        isSoft ? \"color: darkorange\" : \"color: red\");\n        };\n    }\n}\n\nvar config = {\n    warnings: warnings,\n    longStackTraces: false,\n    cancellation: false,\n    monitoring: false\n};\n\nif (longStackTraces) Promise.longStackTraces();\n\nreturn {\n    longStackTraces: function() {\n        return config.longStackTraces;\n    },\n    warnings: function() {\n        return config.warnings;\n    },\n    cancellation: function() {\n        return config.cancellation;\n    },\n    monitoring: function() {\n        return config.monitoring;\n    },\n    propagateFromFunction: function() {\n        return propagateFromFunction;\n    },\n    boundValueFunction: function() {\n        return boundValueFunction;\n    },\n    checkForgottenReturns: checkForgottenReturns,\n    setBounds: setBounds,\n    warn: warn,\n    deprecated: deprecated,\n    CapturedTrace: CapturedTrace,\n    fireDomEvent: fireDomEvent,\n    fireGlobalEvent: fireGlobalEvent\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],10:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction returner() {\n    return this.value;\n}\nfunction thrower() {\n    throw this.reason;\n}\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn = function (value) {\n    if (value instanceof Promise) value.suppressUnhandledRejections();\n    return this._then(\n        returner, undefined, undefined, {value: value}, undefined);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow = function (reason) {\n    return this._then(\n        thrower, undefined, undefined, {reason: reason}, undefined);\n};\n\nPromise.prototype.catchThrow = function (reason) {\n    if (arguments.length <= 1) {\n        return this._then(\n            undefined, thrower, undefined, {reason: reason}, undefined);\n    } else {\n        var _reason = arguments[1];\n        var handler = function() {throw _reason;};\n        return this.caught(reason, handler);\n    }\n};\n\nPromise.prototype.catchReturn = function (value) {\n    if (arguments.length <= 1) {\n        if (value instanceof Promise) value.suppressUnhandledRejections();\n        return this._then(\n            undefined, returner, undefined, {value: value}, undefined);\n    } else {\n        var _value = arguments[1];\n        if (_value instanceof Promise) _value.suppressUnhandledRejections();\n        var handler = function() {return _value;};\n        return this.caught(value, handler);\n    }\n};\n};\n\n},{}],11:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseReduce = Promise.reduce;\nvar PromiseAll = Promise.all;\n\nfunction promiseAllThis() {\n    return PromiseAll(this);\n}\n\nfunction PromiseMapSeries(promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n}\n\nPromise.prototype.each = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, this, undefined);\n};\n\nPromise.prototype.mapSeries = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n};\n\nPromise.each = function (promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, promises, undefined);\n};\n\nPromise.mapSeries = PromiseMapSeries;\n};\n\n\n},{}],12:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar Objectfreeze = es5.freeze;\nvar util = _dereq_(\"./util\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        notEnumerableProp(this, \"message\",\n            typeof message === \"string\" ? message : defaultMessage);\n        notEnumerableProp(this, \"name\", nameProperty);\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            Error.call(this);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar _TypeError, _RangeError;\nvar Warning = subError(\"Warning\", \"warning\");\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\nvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\ntry {\n    _TypeError = TypeError;\n    _RangeError = RangeError;\n} catch(e) {\n    _TypeError = subError(\"TypeError\", \"type error\");\n    _RangeError = subError(\"RangeError\", \"range error\");\n}\n\nvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\nfor (var i = 0; i < methods.length; ++i) {\n    if (typeof Array.prototype[methods[i]] === \"function\") {\n        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n    }\n}\n\nes5.defineProperty(AggregateError.prototype, \"length\", {\n    value: 0,\n    configurable: false,\n    writable: true,\n    enumerable: true\n});\nAggregateError.prototype[\"isOperational\"] = true;\nvar level = 0;\nAggregateError.prototype.toString = function() {\n    var indent = Array(level * 4 + 1).join(\" \");\n    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n    level++;\n    indent = Array(level * 4 + 1).join(\" \");\n    for (var i = 0; i < this.length; ++i) {\n        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n        var lines = str.split(\"\\n\");\n        for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n        }\n        str = lines.join(\"\\n\");\n        ret += str + \"\\n\";\n    }\n    level--;\n    return ret;\n};\n\nfunction OperationalError(message) {\n    if (!(this instanceof OperationalError))\n        return new OperationalError(message);\n    notEnumerableProp(this, \"name\", \"OperationalError\");\n    notEnumerableProp(this, \"message\", message);\n    this.cause = message;\n    this[\"isOperational\"] = true;\n\n    if (message instanceof Error) {\n        notEnumerableProp(this, \"message\", message.message);\n        notEnumerableProp(this, \"stack\", message.stack);\n    } else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(OperationalError, Error);\n\nvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        OperationalError: OperationalError,\n        RejectionError: OperationalError,\n        AggregateError: AggregateError\n    });\n    es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n        value: errorTypes,\n        writable: false,\n        enumerable: false,\n        configurable: false\n    });\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: _TypeError,\n    RangeError: _RangeError,\n    CancellationError: errorTypes.CancellationError,\n    OperationalError: errorTypes.OperationalError,\n    TimeoutError: errorTypes.TimeoutError,\n    AggregateError: errorTypes.AggregateError,\n    Warning: Warning\n};\n\n},{\"./es5\":13,\"./util\":36}],13:[function(_dereq_,module,exports){\nvar isES5 = (function(){\n    \"use strict\";\n    return this === undefined;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        getDescriptor: Object.getOwnPropertyDescriptor,\n        keys: Object.keys,\n        names: Object.getOwnPropertyNames,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5,\n        propertyIsWritable: function(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n        }\n    };\n} else {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function (o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    };\n\n    var ObjectGetDescriptor = function(o, key) {\n        return {value: o[key]};\n    };\n\n    var ObjectDefineProperty = function (o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    };\n\n    var ObjectFreeze = function (obj) {\n        return obj;\n    };\n\n    var ObjectGetPrototypeOf = function (obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    };\n\n    var ArrayIsArray = function (obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    };\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        names: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        getDescriptor: ObjectGetDescriptor,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5,\n        propertyIsWritable: function() {\n            return true;\n        }\n    };\n}\n\n},{}],14:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseMap = Promise.map;\n\nPromise.prototype.filter = function (fn, options) {\n    return PromiseMap(this, fn, options, INTERNAL);\n};\n\nPromise.filter = function (promises, fn, options) {\n    return PromiseMap(promises, fn, options, INTERNAL);\n};\n};\n\n},{}],15:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, tryConvertToPromise, NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar CancellationError = Promise.CancellationError;\nvar errorObj = util.errorObj;\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\n\nfunction PassThroughHandlerContext(promise, type, handler) {\n    this.promise = promise;\n    this.type = type;\n    this.handler = handler;\n    this.called = false;\n    this.cancelPromise = null;\n}\n\nPassThroughHandlerContext.prototype.isFinallyHandler = function() {\n    return this.type === 0;\n};\n\nfunction FinallyHandlerCancelReaction(finallyHandler) {\n    this.finallyHandler = finallyHandler;\n}\n\nFinallyHandlerCancelReaction.prototype._resultCancelled = function() {\n    checkCancel(this.finallyHandler);\n};\n\nfunction checkCancel(ctx, reason) {\n    if (ctx.cancelPromise != null) {\n        if (arguments.length > 1) {\n            ctx.cancelPromise._reject(reason);\n        } else {\n            ctx.cancelPromise._cancel();\n        }\n        ctx.cancelPromise = null;\n        return true;\n    }\n    return false;\n}\n\nfunction succeed() {\n    return finallyHandler.call(this, this.promise._target()._settledValue());\n}\nfunction fail(reason) {\n    if (checkCancel(this, reason)) return;\n    errorObj.e = reason;\n    return errorObj;\n}\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    if (!this.called) {\n        this.called = true;\n        var ret = this.isFinallyHandler()\n            ? handler.call(promise._boundValue())\n            : handler.call(promise._boundValue(), reasonOrValue);\n        if (ret === NEXT_FILTER) {\n            return ret;\n        } else if (ret !== undefined) {\n            promise._setReturnedNonUndefined();\n            var maybePromise = tryConvertToPromise(ret, promise);\n            if (maybePromise instanceof Promise) {\n                if (this.cancelPromise != null) {\n                    if (maybePromise._isCancelled()) {\n                        var reason =\n                            new CancellationError(\"late cancellation observer\");\n                        promise._attachExtraTrace(reason);\n                        errorObj.e = reason;\n                        return errorObj;\n                    } else if (maybePromise.isPending()) {\n                        maybePromise._attachCancellationCallback(\n                            new FinallyHandlerCancelReaction(this));\n                    }\n                }\n                return maybePromise._then(\n                    succeed, fail, undefined, this, undefined);\n            }\n        }\n    }\n\n    if (promise.isRejected()) {\n        checkCancel(this);\n        errorObj.e = reasonOrValue;\n        return errorObj;\n    } else {\n        checkCancel(this);\n        return reasonOrValue;\n    }\n}\n\nPromise.prototype._passThrough = function(handler, type, success, fail) {\n    if (typeof handler !== \"function\") return this.then();\n    return this._then(success,\n                      fail,\n                      undefined,\n                      new PassThroughHandlerContext(this, type, handler),\n                      undefined);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function (handler) {\n    return this._passThrough(handler,\n                             0,\n                             finallyHandler,\n                             finallyHandler);\n};\n\n\nPromise.prototype.tap = function (handler) {\n    return this._passThrough(handler, 1, finallyHandler);\n};\n\nPromise.prototype.tapCatch = function (handlerOrPredicate) {\n    var len = arguments.length;\n    if(len === 1) {\n        return this._passThrough(handlerOrPredicate,\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    } else {\n         var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return Promise.reject(new TypeError(\n                    \"tapCatch statement predicate: \"\n                    + \"expecting an object but got \" + util.classString(item)\n                ));\n            }\n        }\n        catchInstances.length = j;\n        var handler = arguments[i];\n        return this._passThrough(catchFilter(catchInstances, handler, this),\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    }\n\n};\n\nreturn PassThroughHandlerContext;\n};\n\n},{\"./catch_filter\":7,\"./util\":36}],16:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          apiRejection,\n                          INTERNAL,\n                          tryConvertToPromise,\n                          Proxyable,\n                          debug) {\nvar errors = _dereq_(\"./errors\");\nvar TypeError = errors.TypeError;\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n    for (var i = 0; i < yieldHandlers.length; ++i) {\n        traceParent._pushContext();\n        var result = tryCatch(yieldHandlers[i])(value);\n        traceParent._popContext();\n        if (result === errorObj) {\n            traceParent._pushContext();\n            var ret = Promise.reject(errorObj.e);\n            traceParent._popContext();\n            return ret;\n        }\n        var maybePromise = tryConvertToPromise(result, traceParent);\n        if (maybePromise instanceof Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n    if (debug.cancellation()) {\n        var internal = new Promise(INTERNAL);\n        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n        this._promise = internal.lastly(function() {\n            return _finallyPromise;\n        });\n        internal._captureStackTrace();\n        internal._setOnCancel(this);\n    } else {\n        var promise = this._promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n    }\n    this._stack = stack;\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = undefined;\n    this._yieldHandlers = typeof yieldHandler === \"function\"\n        ? [yieldHandler].concat(yieldHandlers)\n        : yieldHandlers;\n    this._yieldedPromise = null;\n    this._cancellationPhase = false;\n}\nutil.inherits(PromiseSpawn, Proxyable);\n\nPromiseSpawn.prototype._isResolved = function() {\n    return this._promise === null;\n};\n\nPromiseSpawn.prototype._cleanup = function() {\n    this._promise = this._generator = null;\n    if (debug.cancellation() && this._finallyPromise !== null) {\n        this._finallyPromise._fulfill();\n        this._finallyPromise = null;\n    }\n};\n\nPromiseSpawn.prototype._promiseCancelled = function() {\n    if (this._isResolved()) return;\n    var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n\n    var result;\n    if (!implementsReturn) {\n        var reason = new Promise.CancellationError(\n            \"generator .return() sentinel\");\n        Promise.coroutine.returnSentinel = reason;\n        this._promise._attachExtraTrace(reason);\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"throw\"]).call(this._generator,\n                                                         reason);\n        this._promise._popContext();\n    } else {\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"return\"]).call(this._generator,\n                                                          undefined);\n        this._promise._popContext();\n    }\n    this._cancellationPhase = true;\n    this._yieldedPromise = null;\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseFulfilled = function(value) {\n    this._yieldedPromise = null;\n    this._promise._pushContext();\n    var result = tryCatch(this._generator.next).call(this._generator, value);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseRejected = function(reason) {\n    this._yieldedPromise = null;\n    this._promise._attachExtraTrace(reason);\n    this._promise._pushContext();\n    var result = tryCatch(this._generator[\"throw\"])\n        .call(this._generator, reason);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._resultCancelled = function() {\n    if (this._yieldedPromise instanceof Promise) {\n        var promise = this._yieldedPromise;\n        this._yieldedPromise = null;\n        promise.cancel();\n    }\n};\n\nPromiseSpawn.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function () {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = undefined;\n    this._promiseFulfilled(undefined);\n};\n\nPromiseSpawn.prototype._continue = function (result) {\n    var promise = this._promise;\n    if (result === errorObj) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._rejectCallback(result.e, false);\n        }\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._resolveCallback(value);\n        }\n    } else {\n        var maybePromise = tryConvertToPromise(value, this._promise);\n        if (!(maybePromise instanceof Promise)) {\n            maybePromise =\n                promiseFromYieldHandler(maybePromise,\n                                        this._yieldHandlers,\n                                        this._promise);\n            if (maybePromise === null) {\n                this._promiseRejected(\n                    new TypeError(\n                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\\u000a\".replace(\"%s\", String(value)) +\n                        \"From coroutine:\\u000a\" +\n                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n                    )\n                );\n                return;\n            }\n        }\n        maybePromise = maybePromise._target();\n        var bitField = maybePromise._bitField;\n        ;\n        if (((bitField & 50397184) === 0)) {\n            this._yieldedPromise = maybePromise;\n            maybePromise._proxy(this, null);\n        } else if (((bitField & 33554432) !== 0)) {\n            Promise._async.invoke(\n                this._promiseFulfilled, this, maybePromise._value()\n            );\n        } else if (((bitField & 16777216) !== 0)) {\n            Promise._async.invoke(\n                this._promiseRejected, this, maybePromise._reason()\n            );\n        } else {\n            this._promiseCancelled();\n        }\n    }\n};\n\nPromise.coroutine = function (generatorFunction, options) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var yieldHandler = Object(options).yieldHandler;\n    var PromiseSpawn$ = PromiseSpawn;\n    var stack = new Error().stack;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                                      stack);\n        var ret = spawn.promise();\n        spawn._generator = generator;\n        spawn._promiseFulfilled(undefined);\n        return ret;\n    };\n};\n\nPromise.coroutine.addYieldHandler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    yieldHandlers.push(fn);\n};\n\nPromise.spawn = function (generatorFunction) {\n    debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],17:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,\n         getDomain) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar reject;\n\nif (!true) {\nif (canEvaluate) {\n    var thenCallback = function(i) {\n        return new Function(\"value\", \"holder\", \"                             \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = value;                                           \\n\\\n            holder.checkFulfillment(this);                                   \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var promiseSetter = function(i) {\n        return new Function(\"promise\", \"holder\", \"                           \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = promise;                                         \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var generateHolderClass = function(total) {\n        var props = new Array(total);\n        for (var i = 0; i < props.length; ++i) {\n            props[i] = \"this.p\" + (i+1);\n        }\n        var assignment = props.join(\" = \") + \" = null;\";\n        var cancellationCode= \"var promise;\\n\" + props.map(function(prop) {\n            return \"                                                         \\n\\\n                promise = \" + prop + \";                                      \\n\\\n                if (promise instanceof Promise) {                            \\n\\\n                    promise.cancel();                                        \\n\\\n                }                                                            \\n\\\n            \";\n        }).join(\"\\n\");\n        var passedArguments = props.join(\", \");\n        var name = \"Holder$\" + total;\n\n\n        var code = \"return function(tryCatch, errorObj, Promise, async) {    \\n\\\n            'use strict';                                                    \\n\\\n            function [TheName](fn) {                                         \\n\\\n                [TheProperties]                                              \\n\\\n                this.fn = fn;                                                \\n\\\n                this.asyncNeeded = true;                                     \\n\\\n                this.now = 0;                                                \\n\\\n            }                                                                \\n\\\n                                                                             \\n\\\n            [TheName].prototype._callFunction = function(promise) {          \\n\\\n                promise._pushContext();                                      \\n\\\n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \\n\\\n                promise._popContext();                                       \\n\\\n                if (ret === errorObj) {                                      \\n\\\n                    promise._rejectCallback(ret.e, false);                   \\n\\\n                } else {                                                     \\n\\\n                    promise._resolveCallback(ret);                           \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype.checkFulfillment = function(promise) {       \\n\\\n                var now = ++this.now;                                        \\n\\\n                if (now === [TheTotal]) {                                    \\n\\\n                    if (this.asyncNeeded) {                                  \\n\\\n                        async.invoke(this._callFunction, this, promise);     \\n\\\n                    } else {                                                 \\n\\\n                        this._callFunction(promise);                         \\n\\\n                    }                                                        \\n\\\n                                                                             \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype._resultCancelled = function() {              \\n\\\n                [CancellationCode]                                           \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            return [TheName];                                                \\n\\\n        }(tryCatch, errorObj, Promise, async);                               \\n\\\n        \";\n\n        code = code.replace(/\\[TheName\\]/g, name)\n            .replace(/\\[TheTotal\\]/g, total)\n            .replace(/\\[ThePassedArguments\\]/g, passedArguments)\n            .replace(/\\[TheProperties\\]/g, assignment)\n            .replace(/\\[CancellationCode\\]/g, cancellationCode);\n\n        return new Function(\"tryCatch\", \"errorObj\", \"Promise\", \"async\", code)\n                           (tryCatch, errorObj, Promise, async);\n    };\n\n    var holderClasses = [];\n    var thenCallbacks = [];\n    var promiseSetters = [];\n\n    for (var i = 0; i < 8; ++i) {\n        holderClasses.push(generateHolderClass(i + 1));\n        thenCallbacks.push(thenCallback(i + 1));\n        promiseSetters.push(promiseSetter(i + 1));\n    }\n\n    reject = function (reason) {\n        this._reject(reason);\n    };\n}}\n\nPromise.join = function () {\n    var last = arguments.length - 1;\n    var fn;\n    if (last > 0 && typeof arguments[last] === \"function\") {\n        fn = arguments[last];\n        if (!true) {\n            if (last <= 8 && canEvaluate) {\n                var ret = new Promise(INTERNAL);\n                ret._captureStackTrace();\n                var HolderClass = holderClasses[last - 1];\n                var holder = new HolderClass(fn);\n                var callbacks = thenCallbacks;\n\n                for (var i = 0; i < last; ++i) {\n                    var maybePromise = tryConvertToPromise(arguments[i], ret);\n                    if (maybePromise instanceof Promise) {\n                        maybePromise = maybePromise._target();\n                        var bitField = maybePromise._bitField;\n                        ;\n                        if (((bitField & 50397184) === 0)) {\n                            maybePromise._then(callbacks[i], reject,\n                                               undefined, ret, holder);\n                            promiseSetters[i](maybePromise, holder);\n                            holder.asyncNeeded = false;\n                        } else if (((bitField & 33554432) !== 0)) {\n                            callbacks[i].call(ret,\n                                              maybePromise._value(), holder);\n                        } else if (((bitField & 16777216) !== 0)) {\n                            ret._reject(maybePromise._reason());\n                        } else {\n                            ret._cancel();\n                        }\n                    } else {\n                        callbacks[i].call(ret, maybePromise, holder);\n                    }\n                }\n\n                if (!ret._isFateSealed()) {\n                    if (holder.asyncNeeded) {\n                        var domain = getDomain();\n                        if (domain !== null) {\n                            holder.fn = util.domainBind(domain, holder.fn);\n                        }\n                    }\n                    ret._setAsyncGuaranteed();\n                    ret._setOnCancel(holder);\n                }\n                return ret;\n            }\n        }\n    }\n    var args = [].slice.call(arguments);;\n    if (fn) args.pop();\n    var ret = new PromiseArray(args).promise();\n    return fn !== undefined ? ret.spread(fn) : ret;\n};\n\n};\n\n},{\"./util\":36}],18:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nfunction MappingPromiseArray(promises, fn, limit, _filter) {\n    this.constructor$(promises);\n    this._promise._captureStackTrace();\n    var domain = getDomain();\n    this._callback = domain === null ? fn : util.domainBind(domain, fn);\n    this._preservedValues = _filter === INTERNAL\n        ? new Array(this.length())\n        : null;\n    this._limit = limit;\n    this._inFlight = 0;\n    this._queue = [];\n    async.invoke(this._asyncInit, this, undefined);\n}\nutil.inherits(MappingPromiseArray, PromiseArray);\n\nMappingPromiseArray.prototype._asyncInit = function() {\n    this._init$(undefined, -2);\n};\n\nMappingPromiseArray.prototype._init = function () {};\n\nMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var limit = this._limit;\n\n    if (index < 0) {\n        index = (index * -1) - 1;\n        values[index] = value;\n        if (limit >= 1) {\n            this._inFlight--;\n            this._drainQueue();\n            if (this._isResolved()) return true;\n        }\n    } else {\n        if (limit >= 1 && this._inFlight >= limit) {\n            values[index] = value;\n            this._queue.push(index);\n            return false;\n        }\n        if (preservedValues !== null) preservedValues[index] = value;\n\n        var promise = this._promise;\n        var callback = this._callback;\n        var receiver = promise._boundValue();\n        promise._pushContext();\n        var ret = tryCatch(callback).call(receiver, value, index, length);\n        var promiseCreated = promise._popContext();\n        debug.checkForgottenReturns(\n            ret,\n            promiseCreated,\n            preservedValues !== null ? \"Promise.filter\" : \"Promise.map\",\n            promise\n        );\n        if (ret === errorObj) {\n            this._reject(ret.e);\n            return true;\n        }\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            var bitField = maybePromise._bitField;\n            ;\n            if (((bitField & 50397184) === 0)) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = maybePromise;\n                maybePromise._proxy(this, (index + 1) * -1);\n                return false;\n            } else if (((bitField & 33554432) !== 0)) {\n                ret = maybePromise._value();\n            } else if (((bitField & 16777216) !== 0)) {\n                this._reject(maybePromise._reason());\n                return true;\n            } else {\n                this._cancel();\n                return true;\n            }\n        }\n        values[index] = ret;\n    }\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= length) {\n        if (preservedValues !== null) {\n            this._filter(values, preservedValues);\n        } else {\n            this._resolve(values);\n        }\n        return true;\n    }\n    return false;\n};\n\nMappingPromiseArray.prototype._drainQueue = function () {\n    var queue = this._queue;\n    var limit = this._limit;\n    var values = this._values;\n    while (queue.length > 0 && this._inFlight < limit) {\n        if (this._isResolved()) return;\n        var index = queue.pop();\n        this._promiseFulfilled(values[index], index);\n    }\n};\n\nMappingPromiseArray.prototype._filter = function (booleans, values) {\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n    }\n    ret.length = j;\n    this._resolve(ret);\n};\n\nMappingPromiseArray.prototype.preservedValues = function () {\n    return this._preservedValues;\n};\n\nfunction map(promises, fn, options, _filter) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    var limit = 0;\n    if (options !== undefined) {\n        if (typeof options === \"object\" && options !== null) {\n            if (typeof options.concurrency !== \"number\") {\n                return Promise.reject(\n                    new TypeError(\"'concurrency' must be a number but it is \" +\n                                    util.classString(options.concurrency)));\n            }\n            limit = options.concurrency;\n        } else {\n            return Promise.reject(new TypeError(\n                            \"options argument must be an object but it is \" +\n                             util.classString(options)));\n        }\n    }\n    limit = typeof limit === \"number\" &&\n        isFinite(limit) && limit >= 1 ? limit : 0;\n    return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n}\n\nPromise.prototype.map = function (fn, options) {\n    return map(this, fn, options, null);\n};\n\nPromise.map = function (promises, fn, options, _filter) {\n    return map(promises, fn, options, _filter);\n};\n\n\n};\n\n},{\"./util\":36}],19:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n\n},{\"./util\":36}],20:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = _dereq_(\"./errors\");\nvar OperationalError = errors.OperationalError;\nvar es5 = _dereq_(\"./es5\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n    return function(err, value) {\n        if (promise === null) return;\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (!multiArgs) {\n            promise._fulfill(value);\n        } else {\n            var args = [].slice.call(arguments, 1);;\n            promise._fulfill(args);\n        }\n        promise = null;\n    };\n}\n\nmodule.exports = nodebackForPromise;\n\n},{\"./errors\":12,\"./es5\":13,\"./util\":36}],21:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar async = Promise._async;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction spreadAdapter(val, nodeback) {\n    var promise = this;\n    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n    var ret =\n        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nfunction successAdapter(val, nodeback) {\n    var promise = this;\n    var receiver = promise._boundValue();\n    var ret = val === undefined\n        ? tryCatch(nodeback).call(receiver, null)\n        : tryCatch(nodeback).call(receiver, null, val);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\nfunction errorAdapter(reason, nodeback) {\n    var promise = this;\n    if (!reason) {\n        var newReason = new Error(reason + \"\");\n        newReason.cause = reason;\n        reason = newReason;\n    }\n    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nPromise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,\n                                                                     options) {\n    if (typeof nodeback == \"function\") {\n        var adapter = successAdapter;\n        if (options !== undefined && Object(options).spread) {\n            adapter = spreadAdapter;\n        }\n        this._then(\n            adapter,\n            errorAdapter,\n            undefined,\n            this,\n            nodeback\n        );\n    }\n    return this;\n};\n};\n\n},{\"./util\":36}],22:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function() {\nvar makeSelfResolutionError = function () {\n    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar reflectHandler = function() {\n    return new Promise.PromiseInspection(this._target());\n};\nvar apiRejection = function(msg) {\n    return Promise.reject(new TypeError(msg));\n};\nfunction Proxyable() {}\nvar UNDEFINED_BINDING = {};\nvar util = _dereq_(\"./util\");\n\nvar getDomain;\nif (util.isNode) {\n    getDomain = function() {\n        var ret = process.domain;\n        if (ret === undefined) ret = null;\n        return ret;\n    };\n} else {\n    getDomain = function() {\n        return null;\n    };\n}\nutil.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\nvar es5 = _dereq_(\"./es5\");\nvar Async = _dereq_(\"./async\");\nvar async = new Async();\nes5.defineProperty(Promise, \"_async\", {value: async});\nvar errors = _dereq_(\"./errors\");\nvar TypeError = Promise.TypeError = errors.TypeError;\nPromise.RangeError = errors.RangeError;\nvar CancellationError = Promise.CancellationError = errors.CancellationError;\nPromise.TimeoutError = errors.TimeoutError;\nPromise.OperationalError = errors.OperationalError;\nPromise.RejectionError = errors.OperationalError;\nPromise.AggregateError = errors.AggregateError;\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {};\nvar tryConvertToPromise = _dereq_(\"./thenables\")(Promise, INTERNAL);\nvar PromiseArray =\n    _dereq_(\"./promise_array\")(Promise, INTERNAL,\n                               tryConvertToPromise, apiRejection, Proxyable);\nvar Context = _dereq_(\"./context\")(Promise);\n /*jshint unused:false*/\nvar createContext = Context.create;\nvar debug = _dereq_(\"./debuggability\")(Promise, Context);\nvar CapturedTrace = debug.CapturedTrace;\nvar PassThroughHandlerContext =\n    _dereq_(\"./finally\")(Promise, tryConvertToPromise, NEXT_FILTER);\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nfunction check(self, executor) {\n    if (self == null || self.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (typeof executor !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n    }\n\n}\n\nfunction Promise(executor) {\n    if (executor !== INTERNAL) {\n        check(this, executor);\n    }\n    this._bitField = 0;\n    this._fulfillmentHandler0 = undefined;\n    this._rejectionHandler0 = undefined;\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._resolveFromExecutor(executor);\n    this._promiseCreated();\n    this._fireEvent(\"promiseCreated\", this);\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return apiRejection(\"Catch statement predicate: \" +\n                    \"expecting an object but got \" + util.classString(item));\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n        return this.then(undefined, catchFilter(catchInstances, fn, this));\n    }\n    return this.then(undefined, fn);\n};\n\nPromise.prototype.reflect = function () {\n    return this._then(reflectHandler,\n        reflectHandler, undefined, this, undefined);\n};\n\nPromise.prototype.then = function (didFulfill, didReject) {\n    if (debug.warnings() && arguments.length > 0 &&\n        typeof didFulfill !== \"function\" &&\n        typeof didReject !== \"function\") {\n        var msg = \".then() only accepts functions but was passed: \" +\n                util.classString(didFulfill);\n        if (arguments.length > 1) {\n            msg += \", \" + util.classString(didReject);\n        }\n        this._warn(msg);\n    }\n    return this._then(didFulfill, didReject, undefined, undefined, undefined);\n};\n\nPromise.prototype.done = function (didFulfill, didReject) {\n    var promise =\n        this._then(didFulfill, didReject, undefined, undefined, undefined);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n};\n\nPromise.prototype.toJSON = function () {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: undefined,\n        rejectionReason: undefined\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this.value();\n        ret.isFulfilled = true;\n    } else if (this.isRejected()) {\n        ret.rejectionReason = this.reason();\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function () {\n    if (arguments.length > 0) {\n        this._warn(\".all() was passed arguments but it does not take any\");\n    }\n    return new PromiseArray(this).promise();\n};\n\nPromise.prototype.error = function (fn) {\n    return this.caught(util.originatesFromRejection, fn);\n};\n\nPromise.getNewLibraryCopy = module.exports;\n\nPromise.is = function (val) {\n    return val instanceof Promise;\n};\n\nPromise.fromNode = Promise.fromCallback = function(fn) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs\n                                         : false;\n    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n    if (result === errorObj) {\n        ret._rejectCallback(result.e, true);\n    }\n    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.all = function (promises) {\n    return new PromiseArray(promises).promise();\n};\n\nPromise.cast = function (obj) {\n    var ret = tryConvertToPromise(obj);\n    if (!(ret instanceof Promise)) {\n        ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._setFulfilled();\n        ret._rejectionHandler0 = obj;\n    }\n    return ret;\n};\n\nPromise.resolve = Promise.fulfilled = Promise.cast;\n\nPromise.reject = Promise.rejected = function (reason) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._rejectCallback(reason, true);\n    return ret;\n};\n\nPromise.setScheduler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return async.setScheduler(fn);\n};\n\nPromise.prototype._then = function (\n    didFulfill,\n    didReject,\n    _,    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== undefined;\n    var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n    var target = this._target();\n    var bitField = target._bitField;\n\n    if (!haveInternalData) {\n        promise._propagateFrom(this, 3);\n        promise._captureStackTrace();\n        if (receiver === undefined &&\n            ((this._bitField & 2097152) !== 0)) {\n            if (!((bitField & 50397184) === 0)) {\n                receiver = this._boundValue();\n            } else {\n                receiver = target === this ? undefined : this._boundTo;\n            }\n        }\n        this._fireEvent(\"promiseChained\", this, promise);\n    }\n\n    var domain = getDomain();\n    if (!((bitField & 50397184) === 0)) {\n        var handler, value, settler = target._settlePromiseCtx;\n        if (((bitField & 33554432) !== 0)) {\n            value = target._rejectionHandler0;\n            handler = didFulfill;\n        } else if (((bitField & 16777216) !== 0)) {\n            value = target._fulfillmentHandler0;\n            handler = didReject;\n            target._unsetRejectionIsUnhandled();\n        } else {\n            settler = target._settlePromiseLateCancellationObserver;\n            value = new CancellationError(\"late cancellation observer\");\n            target._attachExtraTrace(value);\n            handler = didReject;\n        }\n\n        async.invoke(settler, target, {\n            handler: domain === null ? handler\n                : (typeof handler === \"function\" &&\n                    util.domainBind(domain, handler)),\n            promise: promise,\n            receiver: receiver,\n            value: value\n        });\n    } else {\n        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n    }\n\n    return promise;\n};\n\nPromise.prototype._length = function () {\n    return this._bitField & 65535;\n};\n\nPromise.prototype._isFateSealed = function () {\n    return (this._bitField & 117506048) !== 0;\n};\n\nPromise.prototype._isFollowing = function () {\n    return (this._bitField & 67108864) === 67108864;\n};\n\nPromise.prototype._setLength = function (len) {\n    this._bitField = (this._bitField & -65536) |\n        (len & 65535);\n};\n\nPromise.prototype._setFulfilled = function () {\n    this._bitField = this._bitField | 33554432;\n    this._fireEvent(\"promiseFulfilled\", this);\n};\n\nPromise.prototype._setRejected = function () {\n    this._bitField = this._bitField | 16777216;\n    this._fireEvent(\"promiseRejected\", this);\n};\n\nPromise.prototype._setFollowing = function () {\n    this._bitField = this._bitField | 67108864;\n    this._fireEvent(\"promiseResolved\", this);\n};\n\nPromise.prototype._setIsFinal = function () {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._isFinal = function () {\n    return (this._bitField & 4194304) > 0;\n};\n\nPromise.prototype._unsetCancelled = function() {\n    this._bitField = this._bitField & (~65536);\n};\n\nPromise.prototype._setCancelled = function() {\n    this._bitField = this._bitField | 65536;\n    this._fireEvent(\"promiseCancelled\", this);\n};\n\nPromise.prototype._setWillBeCancelled = function() {\n    this._bitField = this._bitField | 8388608;\n};\n\nPromise.prototype._setAsyncGuaranteed = function() {\n    if (async.hasCustomScheduler()) return;\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._receiverAt = function (index) {\n    var ret = index === 0 ? this._receiver0 : this[\n            index * 4 - 4 + 3];\n    if (ret === UNDEFINED_BINDING) {\n        return undefined;\n    } else if (ret === undefined && this._isBound()) {\n        return this._boundValue();\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function (index) {\n    return this[\n            index * 4 - 4 + 2];\n};\n\nPromise.prototype._fulfillmentHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 0];\n};\n\nPromise.prototype._rejectionHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 1];\n};\n\nPromise.prototype._boundValue = function() {};\n\nPromise.prototype._migrateCallback0 = function (follower) {\n    var bitField = follower._bitField;\n    var fulfill = follower._fulfillmentHandler0;\n    var reject = follower._rejectionHandler0;\n    var promise = follower._promise0;\n    var receiver = follower._receiverAt(0);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._migrateCallbackAt = function (follower, index) {\n    var fulfill = follower._fulfillmentHandlerAt(index);\n    var reject = follower._rejectionHandlerAt(index);\n    var promise = follower._promiseAt(index);\n    var receiver = follower._receiverAt(index);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._addCallbacks = function (\n    fulfill,\n    reject,\n    promise,\n    receiver,\n    domain\n) {\n    var index = this._length();\n\n    if (index >= 65535 - 4) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        this._receiver0 = receiver;\n        if (typeof fulfill === \"function\") {\n            this._fulfillmentHandler0 =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this._rejectionHandler0 =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    } else {\n        var base = index * 4 - 4;\n        this[base + 2] = promise;\n        this[base + 3] = receiver;\n        if (typeof fulfill === \"function\") {\n            this[base + 0] =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this[base + 1] =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    }\n    this._setLength(index + 1);\n    return index;\n};\n\nPromise.prototype._proxy = function (proxyable, arg) {\n    this._addCallbacks(undefined, undefined, arg, proxyable, null);\n};\n\nPromise.prototype._resolveCallback = function(value, shouldBind) {\n    if (((this._bitField & 117506048) !== 0)) return;\n    if (value === this)\n        return this._rejectCallback(makeSelfResolutionError(), false);\n    var maybePromise = tryConvertToPromise(value, this);\n    if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n\n    if (shouldBind) this._propagateFrom(maybePromise, 2);\n\n    var promise = maybePromise._target();\n\n    if (promise === this) {\n        this._reject(makeSelfResolutionError());\n        return;\n    }\n\n    var bitField = promise._bitField;\n    if (((bitField & 50397184) === 0)) {\n        var len = this._length();\n        if (len > 0) promise._migrateCallback0(this);\n        for (var i = 1; i < len; ++i) {\n            promise._migrateCallbackAt(this, i);\n        }\n        this._setFollowing();\n        this._setLength(0);\n        this._setFollowee(promise);\n    } else if (((bitField & 33554432) !== 0)) {\n        this._fulfill(promise._value());\n    } else if (((bitField & 16777216) !== 0)) {\n        this._reject(promise._reason());\n    } else {\n        var reason = new CancellationError(\"late cancellation observer\");\n        promise._attachExtraTrace(reason);\n        this._reject(reason);\n    }\n};\n\nPromise.prototype._rejectCallback =\nfunction(reason, synchronous, ignoreNonErrorWarnings) {\n    var trace = util.ensureErrorObject(reason);\n    var hasStack = trace === reason;\n    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n        var message = \"a promise was rejected with a non-error: \" +\n            util.classString(reason);\n        this._warn(message, true);\n    }\n    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n    this._reject(reason);\n};\n\nPromise.prototype._resolveFromExecutor = function (executor) {\n    if (executor === INTERNAL) return;\n    var promise = this;\n    this._captureStackTrace();\n    this._pushContext();\n    var synchronous = true;\n    var r = this._execute(executor, function(value) {\n        promise._resolveCallback(value);\n    }, function (reason) {\n        promise._rejectCallback(reason, synchronous);\n    });\n    synchronous = false;\n    this._popContext();\n\n    if (r !== undefined) {\n        promise._rejectCallback(r, true);\n    }\n};\n\nPromise.prototype._settlePromiseFromHandler = function (\n    handler, receiver, value, promise\n) {\n    var bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n    promise._pushContext();\n    var x;\n    if (receiver === APPLY) {\n        if (!value || typeof value.length !== \"number\") {\n            x = errorObj;\n            x.e = new TypeError(\"cannot .spread() a non-array: \" +\n                                    util.classString(value));\n        } else {\n            x = tryCatch(handler).apply(this._boundValue(), value);\n        }\n    } else {\n        x = tryCatch(handler).call(receiver, value);\n    }\n    var promiseCreated = promise._popContext();\n    bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n\n    if (x === NEXT_FILTER) {\n        promise._reject(value);\n    } else if (x === errorObj) {\n        promise._rejectCallback(x.e, false);\n    } else {\n        debug.checkForgottenReturns(x, promiseCreated, \"\",  promise, this);\n        promise._resolveCallback(x);\n    }\n};\n\nPromise.prototype._target = function() {\n    var ret = this;\n    while (ret._isFollowing()) ret = ret._followee();\n    return ret;\n};\n\nPromise.prototype._followee = function() {\n    return this._rejectionHandler0;\n};\n\nPromise.prototype._setFollowee = function(promise) {\n    this._rejectionHandler0 = promise;\n};\n\nPromise.prototype._settlePromise = function(promise, handler, receiver, value) {\n    var isPromise = promise instanceof Promise;\n    var bitField = this._bitField;\n    var asyncGuaranteed = ((bitField & 134217728) !== 0);\n    if (((bitField & 65536) !== 0)) {\n        if (isPromise) promise._invokeInternalOnCancel();\n\n        if (receiver instanceof PassThroughHandlerContext &&\n            receiver.isFinallyHandler()) {\n            receiver.cancelPromise = promise;\n            if (tryCatch(handler).call(receiver, value) === errorObj) {\n                promise._reject(errorObj.e);\n            }\n        } else if (handler === reflectHandler) {\n            promise._fulfill(reflectHandler.call(receiver));\n        } else if (receiver instanceof Proxyable) {\n            receiver._promiseCancelled(promise);\n        } else if (isPromise || promise instanceof PromiseArray) {\n            promise._cancel();\n        } else {\n            receiver.cancel();\n        }\n    } else if (typeof handler === \"function\") {\n        if (!isPromise) {\n            handler.call(receiver, value, promise);\n        } else {\n            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (receiver instanceof Proxyable) {\n        if (!receiver._isResolved()) {\n            if (((bitField & 33554432) !== 0)) {\n                receiver._promiseFulfilled(value, promise);\n            } else {\n                receiver._promiseRejected(value, promise);\n            }\n        }\n    } else if (isPromise) {\n        if (asyncGuaranteed) promise._setAsyncGuaranteed();\n        if (((bitField & 33554432) !== 0)) {\n            promise._fulfill(value);\n        } else {\n            promise._reject(value);\n        }\n    }\n};\n\nPromise.prototype._settlePromiseLateCancellationObserver = function(ctx) {\n    var handler = ctx.handler;\n    var promise = ctx.promise;\n    var receiver = ctx.receiver;\n    var value = ctx.value;\n    if (typeof handler === \"function\") {\n        if (!(promise instanceof Promise)) {\n            handler.call(receiver, value, promise);\n        } else {\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (promise instanceof Promise) {\n        promise._reject(value);\n    }\n};\n\nPromise.prototype._settlePromiseCtx = function(ctx) {\n    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n};\n\nPromise.prototype._settlePromise0 = function(handler, value, bitField) {\n    var promise = this._promise0;\n    var receiver = this._receiverAt(0);\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._settlePromise(promise, handler, receiver, value);\n};\n\nPromise.prototype._clearCallbackDataAtIndex = function(index) {\n    var base = index * 4 - 4;\n    this[base + 2] =\n    this[base + 3] =\n    this[base + 0] =\n    this[base + 1] = undefined;\n};\n\nPromise.prototype._fulfill = function (value) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._reject(err);\n    }\n    this._setFulfilled();\n    this._rejectionHandler0 = value;\n\n    if ((bitField & 65535) > 0) {\n        if (((bitField & 134217728) !== 0)) {\n            this._settlePromises();\n        } else {\n            async.settlePromises(this);\n        }\n    }\n};\n\nPromise.prototype._reject = function (reason) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    this._setRejected();\n    this._fulfillmentHandler0 = reason;\n\n    if (this._isFinal()) {\n        return async.fatalError(reason, util.isNode);\n    }\n\n    if ((bitField & 65535) > 0) {\n        async.settlePromises(this);\n    } else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._fulfillPromises = function (len, value) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._fulfillmentHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, value);\n    }\n};\n\nPromise.prototype._rejectPromises = function (len, reason) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._rejectionHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, reason);\n    }\n};\n\nPromise.prototype._settlePromises = function () {\n    var bitField = this._bitField;\n    var len = (bitField & 65535);\n\n    if (len > 0) {\n        if (((bitField & 16842752) !== 0)) {\n            var reason = this._fulfillmentHandler0;\n            this._settlePromise0(this._rejectionHandler0, reason, bitField);\n            this._rejectPromises(len, reason);\n        } else {\n            var value = this._rejectionHandler0;\n            this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n            this._fulfillPromises(len, value);\n        }\n        this._setLength(0);\n    }\n    this._clearCancellationData();\n};\n\nPromise.prototype._settledValue = function() {\n    var bitField = this._bitField;\n    if (((bitField & 33554432) !== 0)) {\n        return this._rejectionHandler0;\n    } else if (((bitField & 16777216) !== 0)) {\n        return this._fulfillmentHandler0;\n    }\n};\n\nfunction deferResolve(v) {this.promise._resolveCallback(v);}\nfunction deferReject(v) {this.promise._rejectCallback(v, false);}\n\nPromise.defer = Promise.pending = function() {\n    debug.deprecated(\"Promise.defer\", \"new Promise\");\n    var promise = new Promise(INTERNAL);\n    return {\n        promise: promise,\n        resolve: deferResolve,\n        reject: deferReject\n    };\n};\n\nutil.notEnumerableProp(Promise,\n                       \"_makeSelfResolutionError\",\n                       makeSelfResolutionError);\n\n_dereq_(\"./method\")(Promise, INTERNAL, tryConvertToPromise, apiRejection,\n    debug);\n_dereq_(\"./bind\")(Promise, INTERNAL, tryConvertToPromise, debug);\n_dereq_(\"./cancel\")(Promise, PromiseArray, apiRejection, debug);\n_dereq_(\"./direct_resolve\")(Promise);\n_dereq_(\"./synchronous_inspection\")(Promise);\n_dereq_(\"./join\")(\n    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\nPromise.Promise = Promise;\nPromise.version = \"3.5.0\";\n_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./call_get.js')(Promise);\n_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\n_dereq_('./timers.js')(Promise, INTERNAL, debug);\n_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\n_dereq_('./nodeify.js')(Promise);\n_dereq_('./promisify.js')(Promise, INTERNAL);\n_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\n_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\n_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./settle.js')(Promise, PromiseArray, debug);\n_dereq_('./some.js')(Promise, PromiseArray, apiRejection);\n_dereq_('./filter.js')(Promise, INTERNAL);\n_dereq_('./each.js')(Promise, INTERNAL);\n_dereq_('./any.js')(Promise);\n                                                         \n    util.toFastProperties(Promise);                                          \n    util.toFastProperties(Promise.prototype);                                \n    function fillTypes(value) {                                              \n        var p = new Promise(INTERNAL);                                       \n        p._fulfillmentHandler0 = value;                                      \n        p._rejectionHandler0 = value;                                        \n        p._promise0 = value;                                                 \n        p._receiver0 = value;                                                \n    }                                                                        \n    // Complete slack tracking, opt out of field-type tracking and           \n    // stabilize map                                                         \n    fillTypes({a: 1});                                                       \n    fillTypes({b: 2});                                                       \n    fillTypes({c: 3});                                                       \n    fillTypes(1);                                                            \n    fillTypes(function(){});                                                 \n    fillTypes(undefined);                                                    \n    fillTypes(false);                                                        \n    fillTypes(new Promise(INTERNAL));                                        \n    debug.setBounds(Async.firstLineError, util.lastLineError);               \n    return Promise;                                                          \n\n};\n\n},{\"./any.js\":1,\"./async\":2,\"./bind\":3,\"./call_get.js\":5,\"./cancel\":6,\"./catch_filter\":7,\"./context\":8,\"./debuggability\":9,\"./direct_resolve\":10,\"./each.js\":11,\"./errors\":12,\"./es5\":13,\"./filter.js\":14,\"./finally\":15,\"./generators.js\":16,\"./join\":17,\"./map.js\":18,\"./method\":19,\"./nodeback\":20,\"./nodeify.js\":21,\"./promise_array\":23,\"./promisify.js\":24,\"./props.js\":25,\"./race.js\":27,\"./reduce.js\":28,\"./settle.js\":30,\"./some.js\":31,\"./synchronous_inspection\":32,\"./thenables\":33,\"./timers.js\":34,\"./using.js\":35,\"./util\":36}],23:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n    apiRejection, Proxyable) {\nvar util = _dereq_(\"./util\");\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -2: return [];\n    case -3: return {};\n    case -6: return new Map();\n    }\n}\n\nfunction PromiseArray(values) {\n    var promise = this._promise = new Promise(INTERNAL);\n    if (values instanceof Promise) {\n        promise._propagateFrom(values, 3);\n    }\n    promise._setOnCancel(this);\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(undefined, -2);\n}\nutil.inherits(PromiseArray, Proxyable);\n\nPromiseArray.prototype.length = function () {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n    var values = tryConvertToPromise(this._values, this._promise);\n    if (values instanceof Promise) {\n        values = values._target();\n        var bitField = values._bitField;\n        ;\n        this._values = values;\n\n        if (((bitField & 50397184) === 0)) {\n            this._promise._setAsyncGuaranteed();\n            return values._then(\n                init,\n                this._reject,\n                undefined,\n                this,\n                resolveValueIfEmpty\n           );\n        } else if (((bitField & 33554432) !== 0)) {\n            values = values._value();\n        } else if (((bitField & 16777216) !== 0)) {\n            return this._reject(values._reason());\n        } else {\n            return this._cancel();\n        }\n    }\n    values = util.asArray(values);\n    if (values === null) {\n        var err = apiRejection(\n            \"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n        this._promise._rejectCallback(err, false);\n        return;\n    }\n\n    if (values.length === 0) {\n        if (resolveValueIfEmpty === -5) {\n            this._resolveEmptyArray();\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    this._iterate(values);\n};\n\nPromiseArray.prototype._iterate = function(values) {\n    var len = this.getActualLength(values.length);\n    this._length = len;\n    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n    var result = this._promise;\n    var isResolved = false;\n    var bitField = null;\n    for (var i = 0; i < len; ++i) {\n        var maybePromise = tryConvertToPromise(values[i], result);\n\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            bitField = maybePromise._bitField;\n        } else {\n            bitField = null;\n        }\n\n        if (isResolved) {\n            if (bitField !== null) {\n                maybePromise.suppressUnhandledRejections();\n            }\n        } else if (bitField !== null) {\n            if (((bitField & 50397184) === 0)) {\n                maybePromise._proxy(this, i);\n                this._values[i] = maybePromise;\n            } else if (((bitField & 33554432) !== 0)) {\n                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n            } else if (((bitField & 16777216) !== 0)) {\n                isResolved = this._promiseRejected(maybePromise._reason(), i);\n            } else {\n                isResolved = this._promiseCancelled(i);\n            }\n        } else {\n            isResolved = this._promiseFulfilled(maybePromise, i);\n        }\n    }\n    if (!isResolved) result._setAsyncGuaranteed();\n};\n\nPromiseArray.prototype._isResolved = function () {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function (value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype._cancel = function() {\n    if (this._isResolved() || !this._promise._isCancellable()) return;\n    this._values = null;\n    this._promise._cancel();\n};\n\nPromiseArray.prototype._reject = function (reason) {\n    this._values = null;\n    this._promise._rejectCallback(reason, false);\n};\n\nPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nPromiseArray.prototype._promiseCancelled = function() {\n    this._cancel();\n    return true;\n};\n\nPromiseArray.prototype._promiseRejected = function (reason) {\n    this._totalResolved++;\n    this._reject(reason);\n    return true;\n};\n\nPromiseArray.prototype._resultCancelled = function() {\n    if (this._isResolved()) return;\n    var values = this._values;\n    this._cancel();\n    if (values instanceof Promise) {\n        values.cancel();\n    } else {\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] instanceof Promise) {\n                values[i].cancel();\n            }\n        }\n    }\n};\n\nPromiseArray.prototype.shouldCopyValues = function () {\n    return true;\n};\n\nPromiseArray.prototype.getActualLength = function (len) {\n    return len;\n};\n\nreturn PromiseArray;\n};\n\n},{\"./util\":36}],24:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = _dereq_(\"./util\");\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar TypeError = _dereq_(\"./errors\").TypeError;\nvar defaultSuffix = \"Async\";\nvar defaultPromisified = {__isPromisified__: true};\nvar noCopyProps = [\n    \"arity\",    \"length\",\n    \"name\",\n    \"arguments\",\n    \"caller\",\n    \"callee\",\n    \"prototype\",\n    \"__isPromisified__\"\n];\nvar noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\nvar defaultFilter = function(name) {\n    return util.isIdentifier(name) &&\n        name.charAt(0) !== \"_\" &&\n        name !== \"constructor\";\n};\n\nfunction propsFilter(key) {\n    return !noCopyPropsPattern.test(key);\n}\n\nfunction isPromisified(fn) {\n    try {\n        return fn.__isPromisified__ === true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction hasPromisified(obj, key, suffix) {\n    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n                                            defaultPromisified);\n    return val ? isPromisified(val) : false;\n}\nfunction checkValid(ret, suffix, suffixRegexp) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (suffixRegexp.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\"\n                        .replace(\"%s\", suffix));\n                }\n            }\n        }\n    }\n}\n\nfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n    var keys = util.inheritedDataKeys(obj);\n    var ret = [];\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var value = obj[key];\n        var passesDefaultFilter = filter === defaultFilter\n            ? true : defaultFilter(key, value, obj);\n        if (typeof value === \"function\" &&\n            !isPromisified(value) &&\n            !hasPromisified(obj, key, suffix) &&\n            filter(key, value, obj, passesDefaultFilter)) {\n            ret.push(key, value);\n        }\n    }\n    checkValid(ret, suffix, suffixRegexp);\n    return ret;\n}\n\nvar escapeIdentRegex = function(str) {\n    return str.replace(/([$])/, \"\\\\$\");\n};\n\nvar makeNodePromisifiedEval;\nif (!true) {\nvar switchCaseArgumentOrder = function(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 3);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {\n        ret.push(i);\n    }\n    return ret;\n};\n\nvar argumentSequence = function(argumentCount) {\n    return util.filledRange(argumentCount, \"_arg\", \"\");\n};\n\nvar parameterDeclaration = function(parameterCount) {\n    return util.filledRange(\n        Math.max(parameterCount, 3), \"_arg\", \"\");\n};\n\nvar parameterCount = function(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n};\n\nmakeNodePromisifiedEval =\nfunction(callback, receiver, originalName, fn, _, multiArgs) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n    var shouldProxyThis = typeof callback === \"string\" || receiver === THIS;\n\n    function generateCallForArgumentCount(count) {\n        var args = argumentSequence(count).join(\", \");\n        var comma = count > 0 ? \", \" : \"\";\n        var ret;\n        if (shouldProxyThis) {\n            ret = \"ret = callback.call(this, {{args}}, nodeback); break;\\n\";\n        } else {\n            ret = receiver === undefined\n                ? \"ret = callback({{args}}, nodeback); break;\\n\"\n                : \"ret = callback.call(receiver, {{args}}, nodeback); break;\\n\";\n        }\n        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for (var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n\n        ret += \"                                                             \\n\\\n        default:                                                             \\n\\\n            var args = new Array(len + 1);                                   \\n\\\n            var i = 0;                                                       \\n\\\n            for (var i = 0; i < len; ++i) {                                  \\n\\\n               args[i] = arguments[i];                                       \\n\\\n            }                                                                \\n\\\n            args[i] = nodeback;                                              \\n\\\n            [CodeForCall]                                                    \\n\\\n            break;                                                           \\n\\\n        \".replace(\"[CodeForCall]\", (shouldProxyThis\n                                ? \"ret = callback.apply(this, args);\\n\"\n                                : \"ret = callback.apply(receiver, args);\\n\"));\n        return ret;\n    }\n\n    var getFunctionCode = typeof callback === \"string\"\n                                ? (\"this != null ? this['\"+callback+\"'] : fn\")\n                                : \"fn\";\n    var body = \"'use strict';                                                \\n\\\n        var ret = function (Parameters) {                                    \\n\\\n            'use strict';                                                    \\n\\\n            var len = arguments.length;                                      \\n\\\n            var promise = new Promise(INTERNAL);                             \\n\\\n            promise._captureStackTrace();                                    \\n\\\n            var nodeback = nodebackForPromise(promise, \" + multiArgs + \");   \\n\\\n            var ret;                                                         \\n\\\n            var callback = tryCatch([GetFunctionCode]);                      \\n\\\n            switch(len) {                                                    \\n\\\n                [CodeForSwitchCase]                                          \\n\\\n            }                                                                \\n\\\n            if (ret === errorObj) {                                          \\n\\\n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\\n\\\n            }                                                                \\n\\\n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \\n\\\n            return promise;                                                  \\n\\\n        };                                                                   \\n\\\n        notEnumerableProp(ret, '__isPromisified__', true);                   \\n\\\n        return ret;                                                          \\n\\\n    \".replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase())\n        .replace(\"[GetFunctionCode]\", getFunctionCode);\n    body = body.replace(\"Parameters\", parameterDeclaration(newParameterCount));\n    return new Function(\"Promise\",\n                        \"fn\",\n                        \"receiver\",\n                        \"withAppended\",\n                        \"maybeWrapAsError\",\n                        \"nodebackForPromise\",\n                        \"tryCatch\",\n                        \"errorObj\",\n                        \"notEnumerableProp\",\n                        \"INTERNAL\",\n                        body)(\n                    Promise,\n                    fn,\n                    receiver,\n                    withAppended,\n                    maybeWrapAsError,\n                    nodebackForPromise,\n                    util.tryCatch,\n                    util.errorObj,\n                    util.notEnumerableProp,\n                    INTERNAL);\n};\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n    var defaultThis = (function() {return this;})();\n    var method = callback;\n    if (typeof method === \"string\") {\n        callback = fn;\n    }\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        var promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n        var cb = typeof method === \"string\" && this !== defaultThis\n            ? this[method] : callback;\n        var fn = nodebackForPromise(promise, multiArgs);\n        try {\n            cb.apply(_receiver, withAppended(arguments, fn));\n        } catch(e) {\n            promise._rejectCallback(maybeWrapAsError(e), true, true);\n        }\n        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n        return promise;\n    }\n    util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n    var methods =\n        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n    for (var i = 0, len = methods.length; i < len; i+= 2) {\n        var key = methods[i];\n        var fn = methods[i+1];\n        var promisifiedKey = key + suffix;\n        if (promisifier === makeNodePromisified) {\n            obj[promisifiedKey] =\n                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n        } else {\n            var promisified = promisifier(fn, function() {\n                return makeNodePromisified(key, THIS, key,\n                                           fn, suffix, multiArgs);\n            });\n            util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n            obj[promisifiedKey] = promisified;\n        }\n    }\n    util.toFastProperties(obj);\n    return obj;\n}\n\nfunction promisify(callback, receiver, multiArgs) {\n    return makeNodePromisified(callback, receiver, undefined,\n                                callback, null, multiArgs);\n}\n\nPromise.promisify = function (fn, options) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    options = Object(options);\n    var receiver = options.context === undefined ? THIS : options.context;\n    var multiArgs = !!options.multiArgs;\n    var ret = promisify(fn, receiver, multiArgs);\n    util.copyDescriptors(fn, ret, propsFilter);\n    return ret;\n};\n\nPromise.promisifyAll = function (target, options) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    options = Object(options);\n    var multiArgs = !!options.multiArgs;\n    var suffix = options.suffix;\n    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n    var filter = options.filter;\n    if (typeof filter !== \"function\") filter = defaultFilter;\n    var promisifier = options.promisifier;\n    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n    if (!util.isIdentifier(suffix)) {\n        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n\n    var keys = util.inheritedDataKeys(target);\n    for (var i = 0; i < keys.length; ++i) {\n        var value = target[keys[i]];\n        if (keys[i] !== \"constructor\" &&\n            util.isClass(value)) {\n            promisifyAll(value.prototype, suffix, filter, promisifier,\n                multiArgs);\n            promisifyAll(value, suffix, filter, promisifier, multiArgs);\n        }\n    }\n\n    return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n};\n};\n\n\n},{\"./errors\":12,\"./nodeback\":20,\"./util\":36}],25:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar isObject = util.isObject;\nvar es5 = _dereq_(\"./es5\");\nvar Es6Map;\nif (typeof Map === \"function\") Es6Map = Map;\n\nvar mapToEntries = (function() {\n    var index = 0;\n    var size = 0;\n\n    function extractEntry(value, key) {\n        this[index] = value;\n        this[index + size] = key;\n        index++;\n    }\n\n    return function mapToEntries(map) {\n        size = map.size;\n        index = 0;\n        var ret = new Array(map.size * 2);\n        map.forEach(extractEntry, ret);\n        return ret;\n    };\n})();\n\nvar entriesToMap = function(entries) {\n    var ret = new Es6Map();\n    var length = entries.length / 2 | 0;\n    for (var i = 0; i < length; ++i) {\n        var key = entries[length + i];\n        var value = entries[i];\n        ret.set(key, value);\n    }\n    return ret;\n};\n\nfunction PropertiesPromiseArray(obj) {\n    var isMap = false;\n    var entries;\n    if (Es6Map !== undefined && obj instanceof Es6Map) {\n        entries = mapToEntries(obj);\n        isMap = true;\n    } else {\n        var keys = es5.keys(obj);\n        var len = keys.length;\n        entries = new Array(len * 2);\n        for (var i = 0; i < len; ++i) {\n            var key = keys[i];\n            entries[i] = obj[key];\n            entries[i + len] = key;\n        }\n    }\n    this.constructor$(entries);\n    this._isMap = isMap;\n    this._init$(undefined, isMap ? -6 : -3);\n}\nutil.inherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init = function () {};\n\nPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val;\n        if (this._isMap) {\n            val = entriesToMap(this._values);\n        } else {\n            val = {};\n            var keyOffset = this.length();\n            for (var i = 0, len = this.length(); i < len; ++i) {\n                val[this._values[i + keyOffset]] = this._values[i];\n            }\n        }\n        this._resolve(val);\n        return true;\n    }\n    return false;\n};\n\nPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nPropertiesPromiseArray.prototype.getActualLength = function (len) {\n    return len >> 1;\n};\n\nfunction props(promises) {\n    var ret;\n    var castValue = tryConvertToPromise(promises);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    } else if (castValue instanceof Promise) {\n        ret = castValue._then(\n            Promise.props, undefined, undefined, undefined, undefined);\n    } else {\n        ret = new PropertiesPromiseArray(castValue).promise();\n    }\n\n    if (castValue instanceof Promise) {\n        ret._propagateFrom(castValue, 2);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function () {\n    return props(this);\n};\n\nPromise.props = function (promises) {\n    return props(promises);\n};\n};\n\n},{\"./es5\":13,\"./util\":36}],26:[function(_dereq_,module,exports){\n\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    var moveItemsCount = (front + length) & (oldCapacity - 1);\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;\n\n},{}],27:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else {\n        promises = util.asArray(promises);\n        if (promises === null)\n            return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 3);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n\n},{\"./util\":36}],28:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nfunction ReductionPromiseArray(promises, fn, initialValue, _each) {\n    this.constructor$(promises);\n    var domain = getDomain();\n    this._fn = domain === null ? fn : util.domainBind(domain, fn);\n    if (initialValue !== undefined) {\n        initialValue = Promise.resolve(initialValue);\n        initialValue._attachCancellationCallback(this);\n    }\n    this._initialValue = initialValue;\n    this._currentCancellable = null;\n    if(_each === INTERNAL) {\n        this._eachValues = Array(this._length);\n    } else if (_each === 0) {\n        this._eachValues = null;\n    } else {\n        this._eachValues = undefined;\n    }\n    this._promise._captureStackTrace();\n    this._init$(undefined, -5);\n}\nutil.inherits(ReductionPromiseArray, PromiseArray);\n\nReductionPromiseArray.prototype._gotAccum = function(accum) {\n    if (this._eachValues !== undefined && \n        this._eachValues !== null && \n        accum !== INTERNAL) {\n        this._eachValues.push(accum);\n    }\n};\n\nReductionPromiseArray.prototype._eachComplete = function(value) {\n    if (this._eachValues !== null) {\n        this._eachValues.push(value);\n    }\n    return this._eachValues;\n};\n\nReductionPromiseArray.prototype._init = function() {};\n\nReductionPromiseArray.prototype._resolveEmptyArray = function() {\n    this._resolve(this._eachValues !== undefined ? this._eachValues\n                                                 : this._initialValue);\n};\n\nReductionPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nReductionPromiseArray.prototype._resolve = function(value) {\n    this._promise._resolveCallback(value);\n    this._values = null;\n};\n\nReductionPromiseArray.prototype._resultCancelled = function(sender) {\n    if (sender === this._initialValue) return this._cancel();\n    if (this._isResolved()) return;\n    this._resultCancelled$();\n    if (this._currentCancellable instanceof Promise) {\n        this._currentCancellable.cancel();\n    }\n    if (this._initialValue instanceof Promise) {\n        this._initialValue.cancel();\n    }\n};\n\nReductionPromiseArray.prototype._iterate = function (values) {\n    this._values = values;\n    var value;\n    var i;\n    var length = values.length;\n    if (this._initialValue !== undefined) {\n        value = this._initialValue;\n        i = 0;\n    } else {\n        value = Promise.resolve(values[0]);\n        i = 1;\n    }\n\n    this._currentCancellable = value;\n\n    if (!value.isRejected()) {\n        for (; i < length; ++i) {\n            var ctx = {\n                accum: null,\n                value: values[i],\n                index: i,\n                length: length,\n                array: this\n            };\n            value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n        }\n    }\n\n    if (this._eachValues !== undefined) {\n        value = value\n            ._then(this._eachComplete, undefined, undefined, this, undefined);\n    }\n    value._then(completed, completed, undefined, value, this);\n};\n\nPromise.prototype.reduce = function (fn, initialValue) {\n    return reduce(this, fn, initialValue, null);\n};\n\nPromise.reduce = function (promises, fn, initialValue, _each) {\n    return reduce(promises, fn, initialValue, _each);\n};\n\nfunction completed(valueOrReason, array) {\n    if (this.isFulfilled()) {\n        array._resolve(valueOrReason);\n    } else {\n        array._reject(valueOrReason);\n    }\n}\n\nfunction reduce(promises, fn, initialValue, _each) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n    return array.promise();\n}\n\nfunction gotAccum(accum) {\n    this.accum = accum;\n    this.array._gotAccum(accum);\n    var value = tryConvertToPromise(this.value, this.array._promise);\n    if (value instanceof Promise) {\n        this.array._currentCancellable = value;\n        return value._then(gotValue, undefined, undefined, this, undefined);\n    } else {\n        return gotValue.call(this, value);\n    }\n}\n\nfunction gotValue(value) {\n    var array = this.array;\n    var promise = array._promise;\n    var fn = tryCatch(array._fn);\n    promise._pushContext();\n    var ret;\n    if (array._eachValues !== undefined) {\n        ret = fn.call(promise._boundValue(), value, this.index, this.length);\n    } else {\n        ret = fn.call(promise._boundValue(),\n                              this.accum, value, this.index, this.length);\n    }\n    if (ret instanceof Promise) {\n        array._currentCancellable = ret;\n    }\n    var promiseCreated = promise._popContext();\n    debug.checkForgottenReturns(\n        ret,\n        promiseCreated,\n        array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\",\n        promise\n    );\n    return ret;\n}\n};\n\n},{\"./util\":36}],29:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar schedule;\nvar noAsyncScheduler = function() {\n    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar NativePromise = util.getNativePromise();\nif (util.isNode && typeof MutationObserver === \"undefined\") {\n    var GlobalSetImmediate = global.setImmediate;\n    var ProcessNextTick = process.nextTick;\n    schedule = util.isRecentNode\n                ? function(fn) { GlobalSetImmediate.call(global, fn); }\n                : function(fn) { ProcessNextTick.call(process, fn); };\n} else if (typeof NativePromise === \"function\" &&\n           typeof NativePromise.resolve === \"function\") {\n    var nativePromise = NativePromise.resolve();\n    schedule = function(fn) {\n        nativePromise.then(fn);\n    };\n} else if ((typeof MutationObserver !== \"undefined\") &&\n          !(typeof window !== \"undefined\" &&\n            window.navigator &&\n            (window.navigator.standalone || window.cordova))) {\n    schedule = (function() {\n        var div = document.createElement(\"div\");\n        var opts = {attributes: true};\n        var toggleScheduled = false;\n        var div2 = document.createElement(\"div\");\n        var o2 = new MutationObserver(function() {\n            div.classList.toggle(\"foo\");\n            toggleScheduled = false;\n        });\n        o2.observe(div2, opts);\n\n        var scheduleToggle = function() {\n            if (toggleScheduled) return;\n            toggleScheduled = true;\n            div2.classList.toggle(\"foo\");\n        };\n\n        return function schedule(fn) {\n            var o = new MutationObserver(function() {\n                o.disconnect();\n                fn();\n            });\n            o.observe(div, opts);\n            scheduleToggle();\n        };\n    })();\n} else if (typeof setImmediate !== \"undefined\") {\n    schedule = function (fn) {\n        setImmediate(fn);\n    };\n} else if (typeof setTimeout !== \"undefined\") {\n    schedule = function (fn) {\n        setTimeout(fn, 0);\n    };\n} else {\n    schedule = noAsyncScheduler;\n}\nmodule.exports = schedule;\n\n},{\"./util\":36}],30:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray, debug) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = _dereq_(\"./util\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return Promise.settle(this);\n};\n};\n\n},{\"./util\":36}],31:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar RangeError = _dereq_(\"./errors\").RangeError;\nvar AggregateError = _dereq_(\"./errors\").AggregateError;\nvar isArray = util.isArray;\nvar CANCELLATION = {};\n\n\nfunction SomePromiseArray(values) {\n    this.constructor$(values);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\nutil.inherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function () {\n    if (!this._initialized) {\n        return;\n    }\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(undefined, -5);\n    var isArrayResolved = isArray(this._values);\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        this._reject(this._getRangeError(this.length()));\n    }\n};\n\nSomePromiseArray.prototype.init = function () {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function () {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function () {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany = function (count) {\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled = function (value) {\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        } else {\n            this._resolve(this._values);\n        }\n        return true;\n    }\n    return false;\n\n};\nSomePromiseArray.prototype._promiseRejected = function (reason) {\n    this._addRejected(reason);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._promiseCancelled = function () {\n    if (this._values instanceof Promise || this._values == null) {\n        return this._cancel();\n    }\n    this._addRejected(CANCELLATION);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._checkOutcome = function() {\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        var e = new AggregateError();\n        for (var i = this.length(); i < this._values.length; ++i) {\n            if (this._values[i] !== CANCELLATION) {\n                e.push(this._values[i]);\n            }\n        }\n        if (e.length > 0) {\n            this._reject(e);\n        } else {\n            this._cancel();\n        }\n        return true;\n    }\n    return false;\n};\n\nSomePromiseArray.prototype._fulfilled = function () {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function () {\n    return this._values.length - this.length();\n};\n\nSomePromiseArray.prototype._addRejected = function (reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled = function (value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill = function () {\n    return this.length() - this._rejected();\n};\n\nSomePromiseArray.prototype._getRangeError = function (count) {\n    var message = \"Input array must contain at least \" +\n            this._howMany + \" items but contains only \" + count + \" items\";\n    return new RangeError(message);\n};\n\nSomePromiseArray.prototype._resolveEmptyArray = function () {\n    this._reject(this._getRangeError(0));\n};\n\nfunction some(promises, howMany) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function (promises, howMany) {\n    return some(promises, howMany);\n};\n\nPromise.prototype.some = function (howMany) {\n    return some(this, howMany);\n};\n\nPromise._SomePromiseArray = SomePromiseArray;\n};\n\n},{\"./errors\":12,\"./util\":36}],32:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== undefined) {\n        promise = promise._target();\n        this._bitField = promise._bitField;\n        this._settledValueField = promise._isFateSealed()\n            ? promise._settledValue() : undefined;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValueField = undefined;\n    }\n}\n\nPromiseInspection.prototype._settledValue = function() {\n    return this._settledValueField;\n};\n\nvar value = PromiseInspection.prototype.value = function () {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar reason = PromiseInspection.prototype.error =\nPromiseInspection.prototype.reason = function () {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar isFulfilled = PromiseInspection.prototype.isFulfilled = function() {\n    return (this._bitField & 33554432) !== 0;\n};\n\nvar isRejected = PromiseInspection.prototype.isRejected = function () {\n    return (this._bitField & 16777216) !== 0;\n};\n\nvar isPending = PromiseInspection.prototype.isPending = function () {\n    return (this._bitField & 50397184) === 0;\n};\n\nvar isResolved = PromiseInspection.prototype.isResolved = function () {\n    return (this._bitField & 50331648) !== 0;\n};\n\nPromiseInspection.prototype.isCancelled = function() {\n    return (this._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.__isCancelled = function() {\n    return (this._bitField & 65536) === 65536;\n};\n\nPromise.prototype._isCancelled = function() {\n    return this._target().__isCancelled();\n};\n\nPromise.prototype.isCancelled = function() {\n    return (this._target()._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.isPending = function() {\n    return isPending.call(this._target());\n};\n\nPromise.prototype.isRejected = function() {\n    return isRejected.call(this._target());\n};\n\nPromise.prototype.isFulfilled = function() {\n    return isFulfilled.call(this._target());\n};\n\nPromise.prototype.isResolved = function() {\n    return isResolved.call(this._target());\n};\n\nPromise.prototype.value = function() {\n    return value.call(this._target());\n};\n\nPromise.prototype.reason = function() {\n    var target = this._target();\n    target._unsetRejectionIsUnhandled();\n    return reason.call(target);\n};\n\nPromise.prototype._value = function() {\n    return this._settledValue();\n};\n\nPromise.prototype._reason = function() {\n    this._unsetRejectionIsUnhandled();\n    return this._settledValue();\n};\n\nPromise.PromiseInspection = PromiseInspection;\n};\n\n},{}],33:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) return obj;\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n                obj._then(\n                    ret._fulfill,\n                    ret._reject,\n                    undefined,\n                    ret,\n                    null\n                );\n                return ret;\n            }\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction doGetThen(obj) {\n    return obj.then;\n}\n\nfunction getThen(obj) {\n    try {\n        return doGetThen(obj);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    try {\n        return hasProp.call(obj, \"_promise0\");\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x, resolve, reject);\n    synchronous = false;\n\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolve(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function reject(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n\n},{\"./util\":36}],34:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, debug) {\nvar util = _dereq_(\"./util\");\nvar TimeoutError = Promise.TimeoutError;\n\nfunction HandleWrapper(handle)  {\n    this.handle = handle;\n}\n\nHandleWrapper.prototype._resultCancelled = function() {\n    clearTimeout(this.handle);\n};\n\nvar afterValue = function(value) { return delay(+this).thenReturn(value); };\nvar delay = Promise.delay = function (ms, value) {\n    var ret;\n    var handle;\n    if (value !== undefined) {\n        ret = Promise.resolve(value)\n                ._then(afterValue, null, null, ms, undefined);\n        if (debug.cancellation() && value instanceof Promise) {\n            ret._setOnCancel(value);\n        }\n    } else {\n        ret = new Promise(INTERNAL);\n        handle = setTimeout(function() { ret._fulfill(); }, +ms);\n        if (debug.cancellation()) {\n            ret._setOnCancel(new HandleWrapper(handle));\n        }\n        ret._captureStackTrace();\n    }\n    ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.prototype.delay = function (ms) {\n    return delay(ms, this);\n};\n\nvar afterTimeout = function (promise, message, parent) {\n    var err;\n    if (typeof message !== \"string\") {\n        if (message instanceof Error) {\n            err = message;\n        } else {\n            err = new TimeoutError(\"operation timed out\");\n        }\n    } else {\n        err = new TimeoutError(message);\n    }\n    util.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._reject(err);\n\n    if (parent != null) {\n        parent.cancel();\n    }\n};\n\nfunction successClear(value) {\n    clearTimeout(this.handle);\n    return value;\n}\n\nfunction failureClear(reason) {\n    clearTimeout(this.handle);\n    throw reason;\n}\n\nPromise.prototype.timeout = function (ms, message) {\n    ms = +ms;\n    var ret, parent;\n\n    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n        if (ret.isPending()) {\n            afterTimeout(ret, message, parent);\n        }\n    }, ms));\n\n    if (debug.cancellation()) {\n        parent = this.then();\n        ret = parent._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n        ret._setOnCancel(handleWrapper);\n    } else {\n        ret = this._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n    }\n\n    return ret;\n};\n\n};\n\n},{\"./util\":36}],35:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n    createContext, INTERNAL, debug) {\n    var util = _dereq_(\"./util\");\n    var TypeError = _dereq_(\"./errors\").TypeError;\n    var inherits = _dereq_(\"./util\").inherits;\n    var errorObj = util.errorObj;\n    var tryCatch = util.tryCatch;\n    var NULL = {};\n\n    function thrower(e) {\n        setTimeout(function(){throw e;}, 0);\n    }\n\n    function castPreservingDisposable(thenable) {\n        var maybePromise = tryConvertToPromise(thenable);\n        if (maybePromise !== thenable &&\n            typeof thenable._isDisposable === \"function\" &&\n            typeof thenable._getDisposer === \"function\" &&\n            thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n        }\n        return maybePromise;\n    }\n    function dispose(resources, inspection) {\n        var i = 0;\n        var len = resources.length;\n        var ret = new Promise(INTERNAL);\n        function iterator() {\n            if (i >= len) return ret._fulfill();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n            if (maybePromise instanceof Promise &&\n                maybePromise._isDisposable()) {\n                try {\n                    maybePromise = tryConvertToPromise(\n                        maybePromise._getDisposer().tryDispose(inspection),\n                        resources.promise);\n                } catch (e) {\n                    return thrower(e);\n                }\n                if (maybePromise instanceof Promise) {\n                    return maybePromise._then(iterator, thrower,\n                                              null, null, null);\n                }\n            }\n            iterator();\n        }\n        iterator();\n        return ret;\n    }\n\n    function Disposer(data, promise, context) {\n        this._data = data;\n        this._promise = promise;\n        this._context = context;\n    }\n\n    Disposer.prototype.data = function () {\n        return this._data;\n    };\n\n    Disposer.prototype.promise = function () {\n        return this._promise;\n    };\n\n    Disposer.prototype.resource = function () {\n        if (this.promise().isFulfilled()) {\n            return this.promise().value();\n        }\n        return NULL;\n    };\n\n    Disposer.prototype.tryDispose = function(inspection) {\n        var resource = this.resource();\n        var context = this._context;\n        if (context !== undefined) context._pushContext();\n        var ret = resource !== NULL\n            ? this.doDispose(resource, inspection) : null;\n        if (context !== undefined) context._popContext();\n        this._promise._unsetDisposable();\n        this._data = null;\n        return ret;\n    };\n\n    Disposer.isDisposer = function (d) {\n        return (d != null &&\n                typeof d.resource === \"function\" &&\n                typeof d.tryDispose === \"function\");\n    };\n\n    function FunctionDisposer(fn, promise, context) {\n        this.constructor$(fn, promise, context);\n    }\n    inherits(FunctionDisposer, Disposer);\n\n    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n        var fn = this.data();\n        return fn.call(resource, resource, inspection);\n    };\n\n    function maybeUnwrapDisposer(value) {\n        if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n            return value.promise();\n        }\n        return value;\n    }\n\n    function ResourceList(length) {\n        this.length = length;\n        this.promise = null;\n        this[length-1] = null;\n    }\n\n    ResourceList.prototype._resultCancelled = function() {\n        var len = this.length;\n        for (var i = 0; i < len; ++i) {\n            var item = this[i];\n            if (item instanceof Promise) {\n                item.cancel();\n            }\n        }\n    };\n\n    Promise.using = function () {\n        var len = arguments.length;\n        if (len < 2) return apiRejection(\n                        \"you must pass at least 2 arguments to Promise.using\");\n        var fn = arguments[len - 1];\n        if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n        }\n        var input;\n        var spreadArgs = true;\n        if (len === 2 && Array.isArray(arguments[0])) {\n            input = arguments[0];\n            len = input.length;\n            spreadArgs = false;\n        } else {\n            input = arguments;\n            len--;\n        }\n        var resources = new ResourceList(len);\n        for (var i = 0; i < len; ++i) {\n            var resource = input[i];\n            if (Disposer.isDisposer(resource)) {\n                var disposer = resource;\n                resource = resource.promise();\n                resource._setDisposable(disposer);\n            } else {\n                var maybePromise = tryConvertToPromise(resource);\n                if (maybePromise instanceof Promise) {\n                    resource =\n                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n                            resources: resources,\n                            index: i\n                    }, undefined);\n                }\n            }\n            resources[i] = resource;\n        }\n\n        var reflectedResources = new Array(resources.length);\n        for (var i = 0; i < reflectedResources.length; ++i) {\n            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n        }\n\n        var resultPromise = Promise.all(reflectedResources)\n            .then(function(inspections) {\n                for (var i = 0; i < inspections.length; ++i) {\n                    var inspection = inspections[i];\n                    if (inspection.isRejected()) {\n                        errorObj.e = inspection.error();\n                        return errorObj;\n                    } else if (!inspection.isFulfilled()) {\n                        resultPromise.cancel();\n                        return;\n                    }\n                    inspections[i] = inspection.value();\n                }\n                promise._pushContext();\n\n                fn = tryCatch(fn);\n                var ret = spreadArgs\n                    ? fn.apply(undefined, inspections) : fn(inspections);\n                var promiseCreated = promise._popContext();\n                debug.checkForgottenReturns(\n                    ret, promiseCreated, \"Promise.using\", promise);\n                return ret;\n            });\n\n        var promise = resultPromise.lastly(function() {\n            var inspection = new Promise.PromiseInspection(resultPromise);\n            return dispose(resources, inspection);\n        });\n        resources.promise = promise;\n        promise._setOnCancel(resources);\n        return promise;\n    };\n\n    Promise.prototype._setDisposable = function (disposer) {\n        this._bitField = this._bitField | 131072;\n        this._disposer = disposer;\n    };\n\n    Promise.prototype._isDisposable = function () {\n        return (this._bitField & 131072) > 0;\n    };\n\n    Promise.prototype._getDisposer = function () {\n        return this._disposer;\n    };\n\n    Promise.prototype._unsetDisposable = function () {\n        this._bitField = this._bitField & (~131072);\n        this._disposer = undefined;\n    };\n\n    Promise.prototype.disposer = function (fn) {\n        if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n        }\n        throw new TypeError();\n    };\n\n};\n\n},{\"./errors\":12,\"./util\":36}],36:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar canEvaluate = typeof navigator == \"undefined\";\n\nvar errorObj = {e: {}};\nvar tryCatchTarget;\nvar globalObject = typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    this !== undefined ? this : null;\n\nfunction tryCatcher() {\n    try {\n        var target = tryCatchTarget;\n        tryCatchTarget = null;\n        return target.apply(this, arguments);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return typeof value === \"function\" ||\n           typeof value === \"object\" && value !== null;\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(safeToString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n    if (es5.isES5) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n        if (desc != null) {\n            return desc.get == null && desc.set == null\n                    ? desc.value\n                    : defaultValue;\n        }\n    } else {\n        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n    }\n}\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\nfunction thrower(r) {\n    throw r;\n}\n\nvar inheritedDataKeys = (function() {\n    var excludedPrototypes = [\n        Array.prototype,\n        Object.prototype,\n        Function.prototype\n    ];\n\n    var isExcludedProto = function(val) {\n        for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (excludedPrototypes[i] === val) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    if (es5.isES5) {\n        var getKeys = Object.getOwnPropertyNames;\n        return function(obj) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n            while (obj != null && !isExcludedProto(obj)) {\n                var keys;\n                try {\n                    keys = getKeys(obj);\n                } catch (e) {\n                    return ret;\n                }\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n                    if (desc != null && desc.get == null && desc.set == null) {\n                        ret.push(key);\n                    }\n                }\n                obj = es5.getPrototypeOf(obj);\n            }\n            return ret;\n        };\n    } else {\n        var hasProp = {}.hasOwnProperty;\n        return function(obj) {\n            if (isExcludedProto(obj)) return [];\n            var ret = [];\n\n            /*jshint forin:false */\n            enumeration: for (var key in obj) {\n                if (hasProp.call(obj, key)) {\n                    ret.push(key);\n                } else {\n                    for (var i = 0; i < excludedPrototypes.length; ++i) {\n                        if (hasProp.call(excludedPrototypes[i], key)) {\n                            continue enumeration;\n                        }\n                    }\n                    ret.push(key);\n                }\n            }\n            return ret;\n        };\n    }\n\n})();\n\nvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\nfunction isClass(fn) {\n    try {\n        if (typeof fn === \"function\") {\n            var keys = es5.names(fn.prototype);\n\n            var hasMethods = es5.isES5 && keys.length > 1;\n            var hasMethodsOtherThanConstructor = keys.length > 0 &&\n                !(keys.length === 1 && keys[0] === \"constructor\");\n            var hasThisAssignmentAndStaticMethods =\n                thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\n            if (hasMethods || hasMethodsOtherThanConstructor ||\n                hasThisAssignmentAndStaticMethods) {\n                return true;\n            }\n        }\n        return false;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction toFastProperties(obj) {\n    /*jshint -W027,-W055,-W031*/\n    function FakeConstructor() {}\n    FakeConstructor.prototype = obj;\n    var l = 8;\n    while (l--) new FakeConstructor();\n    return obj;\n    eval(obj);\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n    return rident.test(str);\n}\n\nfunction filledRange(count, prefix, suffix) {\n    var ret = new Array(count);\n    for(var i = 0; i < count; ++i) {\n        ret[i] = prefix + i + suffix;\n    }\n    return ret;\n}\n\nfunction safeToString(obj) {\n    try {\n        return obj + \"\";\n    } catch (e) {\n        return \"[no string representation]\";\n    }\n}\n\nfunction isError(obj) {\n    return obj !== null &&\n           typeof obj === \"object\" &&\n           typeof obj.message === \"string\" &&\n           typeof obj.name === \"string\";\n}\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isOperational\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n        e[\"isOperational\"] === true);\n}\n\nfunction canAttachTrace(obj) {\n    return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n}\n\nvar ensureErrorObject = (function() {\n    if (!(\"stack\" in new Error())) {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            try {throw new Error(safeToString(value));}\n            catch(err) {return err;}\n        };\n    } else {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n        };\n    }\n})();\n\nfunction classString(obj) {\n    return {}.toString.call(obj);\n}\n\nfunction copyDescriptors(from, to, filter) {\n    var keys = es5.names(from);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        if (filter(key)) {\n            try {\n                es5.defineProperty(to, key, es5.getDescriptor(from, key));\n            } catch (ignore) {}\n        }\n    }\n}\n\nvar asArray = function(v) {\n    if (es5.isArray(v)) {\n        return v;\n    }\n    return null;\n};\n\nif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n    var ArrayFrom = typeof Array.from === \"function\" ? function(v) {\n        return Array.from(v);\n    } : function(v) {\n        var ret = [];\n        var it = v[Symbol.iterator]();\n        var itResult;\n        while (!((itResult = it.next()).done)) {\n            ret.push(itResult.value);\n        }\n        return ret;\n    };\n\n    asArray = function(v) {\n        if (es5.isArray(v)) {\n            return v;\n        } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n            return ArrayFrom(v);\n        }\n        return null;\n    };\n}\n\nvar isNode = typeof process !== \"undefined\" &&\n        classString(process).toLowerCase() === \"[object process]\";\n\nvar hasEnvVariables = typeof process !== \"undefined\" &&\n    typeof process.env !== \"undefined\";\n\nfunction env(key) {\n    return hasEnvVariables ? process.env[key] : undefined;\n}\n\nfunction getNativePromise() {\n    if (typeof Promise === \"function\") {\n        try {\n            var promise = new Promise(function(){});\n            if ({}.toString.call(promise) === \"[object Promise]\") {\n                return Promise;\n            }\n        } catch (e) {}\n    }\n}\n\nfunction domainBind(self, cb) {\n    return self.bind(cb);\n}\n\nvar ret = {\n    isClass: isClass,\n    isIdentifier: isIdentifier,\n    inheritedDataKeys: inheritedDataKeys,\n    getDataPropertyOrDefault: getDataPropertyOrDefault,\n    thrower: thrower,\n    isArray: es5.isArray,\n    asArray: asArray,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    isError: isError,\n    canEvaluate: canEvaluate,\n    errorObj: errorObj,\n    tryCatch: tryCatch,\n    inherits: inherits,\n    withAppended: withAppended,\n    maybeWrapAsError: maybeWrapAsError,\n    toFastProperties: toFastProperties,\n    filledRange: filledRange,\n    toString: safeToString,\n    canAttachTrace: canAttachTrace,\n    ensureErrorObject: ensureErrorObject,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n    classString: classString,\n    copyDescriptors: copyDescriptors,\n    hasDevTools: typeof chrome !== \"undefined\" && chrome &&\n                 typeof chrome.loadTimes === \"function\",\n    isNode: isNode,\n    hasEnvVariables: hasEnvVariables,\n    env: env,\n    global: globalObject,\n    getNativePromise: getNativePromise,\n    domainBind: domainBind\n};\nret.isRecentNode = ret.isNode && (function() {\n    var version = process.versions.node.split(\".\").map(Number);\n    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);\n})();\n\nif (ret.isNode) ret.toFastProperties(process);\n\ntry {throw new Error(); } catch (e) {ret.lastLineError = e;}\nmodule.exports = ret;\n\n},{\"./es5\":13}]},{},[4])(4)\n});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":29}],27:[function(require,module,exports){\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n},{}],28:[function(require,module,exports){\n(function (global){\n/*!\n *  howler.js v2.0.2\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  // 'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto iOS enabler.\n      self.mobileAutoEnable = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.value = vol;\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.value = muted ? 0 : self._volume;\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Mobile browsers will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _enableMobileAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on mobile devices if audio isn't already eanbled.\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(self._navigator && self._navigator.userAgent);\n      var isTouch = !!(('ontouchend' in window) || (self._navigator && self._navigator.maxTouchPoints > 0) || (self._navigator && self._navigator.msMaxTouchPoints > 0));\n      if (self._mobileEnabled || !self.ctx || (!isMobile && !isTouch)) {\n        return;\n      }\n\n      self._mobileEnabled = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function() {\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._mobileEnabled = true;\n          self.mobileAutoEnable = false;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchend', unlock, true);\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchend', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.state = 'resuming';\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio on iOS.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\n        Howler._enableMobileAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Check if this extension is available.\n        if (Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        var num = 0;\n        for (var i=0; i<self._sounds.length; i++) {\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n            num++;\n            id = self._sounds[i]._id;\n          }\n        }\n\n        if (num === 1) {\n          sprite = null;\n        } else {\n          id = null;\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If we have no sprite and the sound hasn't loaded, we must wait\n      // for the sound to load to get our audio's duration.\n      if (self._state !== 'loaded' && !self._sprite[sprite]) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(self._soundById(sound._id) ? sound._id : undefined);\n          }\n        });\n\n        return sound._id;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          setTimeout(function() {\n            self._emit('play', sound._id);\n          }, 0);\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n      // Update the parameters of the sound\n      sound._paused = false;\n      sound._ended = false;\n      sound._sprite = sprite;\n      sound._seek = seek;\n      sound._start = self._sprite[sprite][0] / 1000;\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n            }, 0);\n          }\n        };\n\n        var isRunning = (Howler.state === 'running');\n        if (self._state === 'loaded' && isRunning) {\n          playWebAudio();\n        } else {\n          // Wait for the audio to load and then begin playback.\n          self.once(isRunning ? 'load' : 'resume', playWebAudio, isRunning ? sound._id : null);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          setTimeout(function() {\n            node.play();\n\n            // Setup the new end timer.\n            if (timeout !== Infinity) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            if (!internal) {\n              self._emit('play', sound._id);\n            }\n          }, 0);\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (self._state === 'loaded' && (window && window.ejecta || !node.readyState && Howler._navigator.isCocoonJS));\n        if (node.readyState === 4 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                if (!internal) {\n                  self._emit('stop', sound._id);\n                }\n\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n            }\n          }\n        }\n\n        if (sound && !internal) {\n          self._emit('stop', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n      var diff = Math.abs(from - to);\n      var dir = from > to ? 'out' : 'in';\n      var steps = diff / 0.01;\n      var stepLen = (steps > 0) ? len / steps : len;\n\n      // Since browsers clamp timeouts to 4ms, we need to clamp our steps to that too.\n      if (stepLen < 4) {\n        steps = Math.ceil(steps / (4 / stepLen));\n        stepLen = 4;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          var vol = from;\n          sound._interval = setInterval(function(soundId, sound) {\n            // Update the volume amount, but only if the volume should change.\n            if (steps > 0) {\n              vol += (dir === 'in' ? 0.01 : -0.01);\n            }\n\n            // Make sure the volume is in the right bounds.\n            vol = Math.max(0, vol);\n            vol = Math.min(1, vol);\n\n            // Round to within 2 decimal points.\n            vol = Math.round(vol * 100) / 100;\n\n            // Change the volume.\n            if (self._webAudio) {\n              if (typeof id === 'undefined') {\n                self._volume = vol;\n              }\n\n              sound._volume = vol;\n            } else {\n              self.volume(vol, soundId, true);\n            }\n\n            // When the fade is complete, stop it and fire event.\n            if (vol === to) {\n              clearInterval(sound._interval);\n              sound._interval = null;\n              self.volume(vol, soundId);\n              self._emit('fade', soundId);\n            }\n          }.bind(self, ids[i], sound), stepLen);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            sound._rateSeek = self.seek(id[i]);\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.value = rate;\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Restart the playback if the sound was playing.\n          if (playing) {\n            self.play(id, true);\n          }\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node) {\n            sound._node.currentTime = seek;\n          }\n\n          self._emit('seek', id);\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n          self._emit('end', sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading.\n          sounds[i]._node.src = 'data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQAAAAA=';\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n\n        // Remove the references in the global Howler object.\n        var index = Howler._howls.indexOf(self);\n        if (index >= 0) {\n          Howler._howls.splice(index, 1);\n        }\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      if (fn) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          if (fn === events[i].fn && id === events[i].id) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function() {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // don't move onto the next task until this one is done\n        self.once(task.event, function() {\n          self._queue.shift();\n          self._loadQueue();\n        });\n\n        task.action();\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        clearTimeout(self._endTimers[id]);\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop;\n      }\n      sound._node.bufferSource.playbackRate.value = sound._rate;\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n\n      if (self._scratchBuffer) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        try { node.bufferSource.buffer = self._scratchBuffer; } catch(e) {}\n      }\n      node.bufferSource = null;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        self._node = new Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorListener, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Decode the buffer into an audio source.\n    Howler.ctx.decodeAudioData(arraybuffer, function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      }\n    }, function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    });\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.value = 1;\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.0.2\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n  \n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n      self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n      self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              sound._panner.setPosition(pan, 0, 0);\n            } else {\n              sound._panner.pan.value = pan;\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or\n   * all in the group. The most common usage is to set the 'x' position for\n   * left/right panning. Setting any value higher than 1.0 will begin to\n   * decrease the volume of the sound as it moves further away.\n   * @param  {Number} x  The x-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} y  The y-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} z  The z-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setPosition(x, y, z);\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setOrientation(x, y, z);\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) There will be no volume reduction inside this angle.\n   *     coneOuterAngle - (360 by default) The volume will be reduced to a constant value of\n   *                      `coneOuterGain` outside this angle.\n   *     coneOuterGain - (0 by default) The amount of volume reduction outside of `coneOuterAngle`.\n   *     distanceModel - ('inverse' by default) Determines algorithm to use to reduce volume as audio moves\n   *                      away from listener. Can be `linear`, `inverse` or `exponential`.\n   *     maxDistance - (10000 by default) Volume won't reduce between source/listener beyond this distance.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *     refDistance - (1 by default) A reference distance for reducing volume as the source\n   *                    moves away from the listener.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener.\n   * \n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : self._distanceModel,\n            maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : self._maxDistance,\n            panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : self._panningModel,\n            refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : self._refDistance,\n            rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : self._rolloffFactor\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.panningModel = pa.panningModel;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.value = sound._stereo;\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id);\n    }\n  };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],29:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],30:[function(require,module,exports){\n'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n},{}],31:[function(require,module,exports){\n'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n},{\"./formats\":30,\"./parse\":32,\"./stringify\":33}],32:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var parent = /^([^[]*)/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = parent.exec(key);\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (segment[1]) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, segment[1])) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(segment[1]);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n},{\"./utils\":34}],33:[function(require,module,exports){\n'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            return [formatter(encoder(prefix)) + '=' + formatter(encoder(obj))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = encode ? (typeof options.encoder === 'function' ? options.encoder : defaults.encoder) : null;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter\n        ));\n    }\n\n    return keys.join(delimiter);\n};\n\n},{\"./formats\":30,\"./utils\":34}],34:[function(require,module,exports){\n'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            target[source] = true;\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]; // eslint-disable-line max-len\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n},{}],35:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _toDate = require('./lib/toDate');\n\nvar _toDate2 = _interopRequireDefault(_toDate);\n\nvar _toFloat = require('./lib/toFloat');\n\nvar _toFloat2 = _interopRequireDefault(_toFloat);\n\nvar _toInt = require('./lib/toInt');\n\nvar _toInt2 = _interopRequireDefault(_toInt);\n\nvar _toBoolean = require('./lib/toBoolean');\n\nvar _toBoolean2 = _interopRequireDefault(_toBoolean);\n\nvar _equals = require('./lib/equals');\n\nvar _equals2 = _interopRequireDefault(_equals);\n\nvar _contains = require('./lib/contains');\n\nvar _contains2 = _interopRequireDefault(_contains);\n\nvar _matches = require('./lib/matches');\n\nvar _matches2 = _interopRequireDefault(_matches);\n\nvar _isEmail = require('./lib/isEmail');\n\nvar _isEmail2 = _interopRequireDefault(_isEmail);\n\nvar _isURL = require('./lib/isURL');\n\nvar _isURL2 = _interopRequireDefault(_isURL);\n\nvar _isMACAddress = require('./lib/isMACAddress');\n\nvar _isMACAddress2 = _interopRequireDefault(_isMACAddress);\n\nvar _isIP = require('./lib/isIP');\n\nvar _isIP2 = _interopRequireDefault(_isIP);\n\nvar _isFQDN = require('./lib/isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nvar _isBoolean = require('./lib/isBoolean');\n\nvar _isBoolean2 = _interopRequireDefault(_isBoolean);\n\nvar _isAlpha = require('./lib/isAlpha');\n\nvar _isAlpha2 = _interopRequireDefault(_isAlpha);\n\nvar _isAlphanumeric = require('./lib/isAlphanumeric');\n\nvar _isAlphanumeric2 = _interopRequireDefault(_isAlphanumeric);\n\nvar _isNumeric = require('./lib/isNumeric');\n\nvar _isNumeric2 = _interopRequireDefault(_isNumeric);\n\nvar _isLowercase = require('./lib/isLowercase');\n\nvar _isLowercase2 = _interopRequireDefault(_isLowercase);\n\nvar _isUppercase = require('./lib/isUppercase');\n\nvar _isUppercase2 = _interopRequireDefault(_isUppercase);\n\nvar _isAscii = require('./lib/isAscii');\n\nvar _isAscii2 = _interopRequireDefault(_isAscii);\n\nvar _isFullWidth = require('./lib/isFullWidth');\n\nvar _isFullWidth2 = _interopRequireDefault(_isFullWidth);\n\nvar _isHalfWidth = require('./lib/isHalfWidth');\n\nvar _isHalfWidth2 = _interopRequireDefault(_isHalfWidth);\n\nvar _isVariableWidth = require('./lib/isVariableWidth');\n\nvar _isVariableWidth2 = _interopRequireDefault(_isVariableWidth);\n\nvar _isMultibyte = require('./lib/isMultibyte');\n\nvar _isMultibyte2 = _interopRequireDefault(_isMultibyte);\n\nvar _isSurrogatePair = require('./lib/isSurrogatePair');\n\nvar _isSurrogatePair2 = _interopRequireDefault(_isSurrogatePair);\n\nvar _isInt = require('./lib/isInt');\n\nvar _isInt2 = _interopRequireDefault(_isInt);\n\nvar _isFloat = require('./lib/isFloat');\n\nvar _isFloat2 = _interopRequireDefault(_isFloat);\n\nvar _isDecimal = require('./lib/isDecimal');\n\nvar _isDecimal2 = _interopRequireDefault(_isDecimal);\n\nvar _isHexadecimal = require('./lib/isHexadecimal');\n\nvar _isHexadecimal2 = _interopRequireDefault(_isHexadecimal);\n\nvar _isDivisibleBy = require('./lib/isDivisibleBy');\n\nvar _isDivisibleBy2 = _interopRequireDefault(_isDivisibleBy);\n\nvar _isHexColor = require('./lib/isHexColor');\n\nvar _isHexColor2 = _interopRequireDefault(_isHexColor);\n\nvar _isMD = require('./lib/isMD5');\n\nvar _isMD2 = _interopRequireDefault(_isMD);\n\nvar _isJSON = require('./lib/isJSON');\n\nvar _isJSON2 = _interopRequireDefault(_isJSON);\n\nvar _isEmpty = require('./lib/isEmpty');\n\nvar _isEmpty2 = _interopRequireDefault(_isEmpty);\n\nvar _isLength = require('./lib/isLength');\n\nvar _isLength2 = _interopRequireDefault(_isLength);\n\nvar _isByteLength = require('./lib/isByteLength');\n\nvar _isByteLength2 = _interopRequireDefault(_isByteLength);\n\nvar _isUUID = require('./lib/isUUID');\n\nvar _isUUID2 = _interopRequireDefault(_isUUID);\n\nvar _isMongoId = require('./lib/isMongoId');\n\nvar _isMongoId2 = _interopRequireDefault(_isMongoId);\n\nvar _isAfter = require('./lib/isAfter');\n\nvar _isAfter2 = _interopRequireDefault(_isAfter);\n\nvar _isBefore = require('./lib/isBefore');\n\nvar _isBefore2 = _interopRequireDefault(_isBefore);\n\nvar _isIn = require('./lib/isIn');\n\nvar _isIn2 = _interopRequireDefault(_isIn);\n\nvar _isCreditCard = require('./lib/isCreditCard');\n\nvar _isCreditCard2 = _interopRequireDefault(_isCreditCard);\n\nvar _isISIN = require('./lib/isISIN');\n\nvar _isISIN2 = _interopRequireDefault(_isISIN);\n\nvar _isISBN = require('./lib/isISBN');\n\nvar _isISBN2 = _interopRequireDefault(_isISBN);\n\nvar _isISSN = require('./lib/isISSN');\n\nvar _isISSN2 = _interopRequireDefault(_isISSN);\n\nvar _isMobilePhone = require('./lib/isMobilePhone');\n\nvar _isMobilePhone2 = _interopRequireDefault(_isMobilePhone);\n\nvar _isCurrency = require('./lib/isCurrency');\n\nvar _isCurrency2 = _interopRequireDefault(_isCurrency);\n\nvar _isISO = require('./lib/isISO8601');\n\nvar _isISO2 = _interopRequireDefault(_isISO);\n\nvar _isBase = require('./lib/isBase64');\n\nvar _isBase2 = _interopRequireDefault(_isBase);\n\nvar _isDataURI = require('./lib/isDataURI');\n\nvar _isDataURI2 = _interopRequireDefault(_isDataURI);\n\nvar _ltrim = require('./lib/ltrim');\n\nvar _ltrim2 = _interopRequireDefault(_ltrim);\n\nvar _rtrim = require('./lib/rtrim');\n\nvar _rtrim2 = _interopRequireDefault(_rtrim);\n\nvar _trim = require('./lib/trim');\n\nvar _trim2 = _interopRequireDefault(_trim);\n\nvar _escape = require('./lib/escape');\n\nvar _escape2 = _interopRequireDefault(_escape);\n\nvar _unescape = require('./lib/unescape');\n\nvar _unescape2 = _interopRequireDefault(_unescape);\n\nvar _stripLow = require('./lib/stripLow');\n\nvar _stripLow2 = _interopRequireDefault(_stripLow);\n\nvar _whitelist = require('./lib/whitelist');\n\nvar _whitelist2 = _interopRequireDefault(_whitelist);\n\nvar _blacklist = require('./lib/blacklist');\n\nvar _blacklist2 = _interopRequireDefault(_blacklist);\n\nvar _isWhitelisted = require('./lib/isWhitelisted');\n\nvar _isWhitelisted2 = _interopRequireDefault(_isWhitelisted);\n\nvar _normalizeEmail = require('./lib/normalizeEmail');\n\nvar _normalizeEmail2 = _interopRequireDefault(_normalizeEmail);\n\nvar _toString = require('./lib/util/toString');\n\nvar _toString2 = _interopRequireDefault(_toString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar version = '7.0.0';\n\nvar validator = {\n  version: version,\n  toDate: _toDate2.default,\n  toFloat: _toFloat2.default,\n  toInt: _toInt2.default,\n  toBoolean: _toBoolean2.default,\n  equals: _equals2.default,\n  contains: _contains2.default,\n  matches: _matches2.default,\n  isEmail: _isEmail2.default,\n  isURL: _isURL2.default,\n  isMACAddress: _isMACAddress2.default,\n  isIP: _isIP2.default,\n  isFQDN: _isFQDN2.default,\n  isBoolean: _isBoolean2.default,\n  isAlpha: _isAlpha2.default,\n  isAlphanumeric: _isAlphanumeric2.default,\n  isNumeric: _isNumeric2.default,\n  isLowercase: _isLowercase2.default,\n  isUppercase: _isUppercase2.default,\n  isAscii: _isAscii2.default,\n  isFullWidth: _isFullWidth2.default,\n  isHalfWidth: _isHalfWidth2.default,\n  isVariableWidth: _isVariableWidth2.default,\n  isMultibyte: _isMultibyte2.default,\n  isSurrogatePair: _isSurrogatePair2.default,\n  isInt: _isInt2.default,\n  isFloat: _isFloat2.default,\n  isDecimal: _isDecimal2.default,\n  isHexadecimal: _isHexadecimal2.default,\n  isDivisibleBy: _isDivisibleBy2.default,\n  isHexColor: _isHexColor2.default,\n  isMD5: _isMD2.default,\n  isJSON: _isJSON2.default,\n  isEmpty: _isEmpty2.default,\n  isLength: _isLength2.default,\n  isByteLength: _isByteLength2.default,\n  isUUID: _isUUID2.default,\n  isMongoId: _isMongoId2.default,\n  isAfter: _isAfter2.default,\n  isBefore: _isBefore2.default,\n  isIn: _isIn2.default,\n  isCreditCard: _isCreditCard2.default,\n  isISIN: _isISIN2.default,\n  isISBN: _isISBN2.default,\n  isISSN: _isISSN2.default,\n  isMobilePhone: _isMobilePhone2.default,\n  isCurrency: _isCurrency2.default,\n  isISO8601: _isISO2.default,\n  isBase64: _isBase2.default,\n  isDataURI: _isDataURI2.default,\n  ltrim: _ltrim2.default,\n  rtrim: _rtrim2.default,\n  trim: _trim2.default,\n  escape: _escape2.default,\n  unescape: _unescape2.default,\n  stripLow: _stripLow2.default,\n  whitelist: _whitelist2.default,\n  blacklist: _blacklist2.default,\n  isWhitelisted: _isWhitelisted2.default,\n  normalizeEmail: _normalizeEmail2.default,\n  toString: _toString2.default\n};\n\nexports.default = validator;\nmodule.exports = exports['default'];\n},{\"./lib/blacklist\":37,\"./lib/contains\":38,\"./lib/equals\":39,\"./lib/escape\":40,\"./lib/isAfter\":41,\"./lib/isAlpha\":42,\"./lib/isAlphanumeric\":43,\"./lib/isAscii\":44,\"./lib/isBase64\":45,\"./lib/isBefore\":46,\"./lib/isBoolean\":47,\"./lib/isByteLength\":48,\"./lib/isCreditCard\":49,\"./lib/isCurrency\":50,\"./lib/isDataURI\":51,\"./lib/isDecimal\":52,\"./lib/isDivisibleBy\":53,\"./lib/isEmail\":54,\"./lib/isEmpty\":55,\"./lib/isFQDN\":56,\"./lib/isFloat\":57,\"./lib/isFullWidth\":58,\"./lib/isHalfWidth\":59,\"./lib/isHexColor\":60,\"./lib/isHexadecimal\":61,\"./lib/isIP\":62,\"./lib/isISBN\":63,\"./lib/isISIN\":64,\"./lib/isISO8601\":65,\"./lib/isISSN\":66,\"./lib/isIn\":67,\"./lib/isInt\":68,\"./lib/isJSON\":69,\"./lib/isLength\":70,\"./lib/isLowercase\":71,\"./lib/isMACAddress\":72,\"./lib/isMD5\":73,\"./lib/isMobilePhone\":74,\"./lib/isMongoId\":75,\"./lib/isMultibyte\":76,\"./lib/isNumeric\":77,\"./lib/isSurrogatePair\":78,\"./lib/isURL\":79,\"./lib/isUUID\":80,\"./lib/isUppercase\":81,\"./lib/isVariableWidth\":82,\"./lib/isWhitelisted\":83,\"./lib/ltrim\":84,\"./lib/matches\":85,\"./lib/normalizeEmail\":86,\"./lib/rtrim\":87,\"./lib/stripLow\":88,\"./lib/toBoolean\":89,\"./lib/toDate\":90,\"./lib/toFloat\":91,\"./lib/toInt\":92,\"./lib/trim\":93,\"./lib/unescape\":94,\"./lib/util/toString\":97,\"./lib/whitelist\":98}],36:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar alpha = exports.alpha = {\n  'en-US': /^[A-Z]+$/i,\n  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[A-ZÆØÅ]+$/i,\n  'de-DE': /^[A-ZÄÖÜß]+$/i,\n  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'nl-NL': /^[A-ZÉËÏÓÖÜ]+$/i,\n  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\n  'ru-RU': /^[А-ЯЁ]+$/i,\n  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\n  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[А-ЯЄIЇҐ]+$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/\n};\n\nvar alphanumeric = exports.alphanumeric = {\n  'en-US': /^[0-9A-Z]+$/i,\n  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[0-9A-ZÆØÅ]$/i,\n  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\n  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'nl-NL': /^[0-9A-ZÉËÏÓÖÜ]+$/i,\n  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[0-9A-ZÃÁÀÂÇÉÊÍÕÓÔÚÜ]+$/i,\n  'ru-RU': /^[0-9А-ЯЁ]+$/i,\n  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\n  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[0-9А-ЯЄIЇҐ]+$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/\n};\n\nvar englishLocales = exports.englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\n\nfor (var locale, i = 0; i < englishLocales.length; i++) {\n  locale = 'en-' + englishLocales[i];\n  alpha[locale] = alpha['en-US'];\n  alphanumeric[locale] = alphanumeric['en-US'];\n}\n\nalpha['pt-BR'] = alpha['pt-PT'];\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\n\n// Source: http://www.localeplanet.com/java/\nvar arabicLocales = exports.arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\n\nfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\n  _locale = 'ar-' + arabicLocales[_i];\n  alpha[_locale] = alpha.ar;\n  alphanumeric[_locale] = alphanumeric.ar;\n}\n},{}],37:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = blacklist;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction blacklist(str, chars) {\n  (0, _assertString2.default)(str);\n  return str.replace(new RegExp('[' + chars + ']+', 'g'), '');\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],38:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = contains;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _toString = require('./util/toString');\n\nvar _toString2 = _interopRequireDefault(_toString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction contains(str, elem) {\n  (0, _assertString2.default)(str);\n  return str.indexOf((0, _toString2.default)(elem)) >= 0;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95,\"./util/toString\":97}],39:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = equals;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction equals(str, comparison) {\n  (0, _assertString2.default)(str);\n  return str === comparison;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],40:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n      value: true\n});\nexports.default = escape;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction escape(str) {\n      (0, _assertString2.default)(str);\n      return str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;').replace(/\\\\/g, '&#x5C;').replace(/`/g, '&#96;');\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],41:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAfter;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _toDate = require('./toDate');\n\nvar _toDate2 = _interopRequireDefault(_toDate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAfter(str) {\n  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());\n\n  (0, _assertString2.default)(str);\n  var comparison = (0, _toDate2.default)(date);\n  var original = (0, _toDate2.default)(str);\n  return !!(original && comparison && original > comparison);\n}\nmodule.exports = exports['default'];\n},{\"./toDate\":90,\"./util/assertString\":95}],42:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlpha;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _alpha = require('./alpha');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAlpha(str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n\n  (0, _assertString2.default)(str);\n  if (locale in _alpha.alpha) {\n    return _alpha.alpha[locale].test(str);\n  }\n  throw new Error('Invalid locale \\'' + locale + '\\'');\n}\nmodule.exports = exports['default'];\n},{\"./alpha\":36,\"./util/assertString\":95}],43:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlphanumeric;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _alpha = require('./alpha');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAlphanumeric(str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n\n  (0, _assertString2.default)(str);\n  if (locale in _alpha.alphanumeric) {\n    return _alpha.alphanumeric[locale].test(str);\n  }\n  throw new Error('Invalid locale \\'' + locale + '\\'');\n}\nmodule.exports = exports['default'];\n},{\"./alpha\":36,\"./util/assertString\":95}],44:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAscii;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-control-regex */\nvar ascii = /^[\\x00-\\x7F]+$/;\n/* eslint-enable no-control-regex */\n\nfunction isAscii(str) {\n  (0, _assertString2.default)(str);\n  return ascii.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],45:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase64;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar notBase64 = /[^A-Z0-9+\\/=]/i;\n\nfunction isBase64(str) {\n  (0, _assertString2.default)(str);\n  var len = str.length;\n  if (!len || len % 4 !== 0 || notBase64.test(str)) {\n    return false;\n  }\n  var firstPaddingChar = str.indexOf('=');\n  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],46:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBefore;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _toDate = require('./toDate');\n\nvar _toDate2 = _interopRequireDefault(_toDate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isBefore(str) {\n  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());\n\n  (0, _assertString2.default)(str);\n  var comparison = (0, _toDate2.default)(date);\n  var original = (0, _toDate2.default)(str);\n  return !!(original && comparison && original < comparison);\n}\nmodule.exports = exports['default'];\n},{\"./toDate\":90,\"./util/assertString\":95}],47:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBoolean;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isBoolean(str) {\n  (0, _assertString2.default)(str);\n  return ['true', 'false', '1', '0'].indexOf(str) >= 0;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],48:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isByteLength;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString2.default)(str);\n  var min = void 0;\n  var max = void 0;\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],49:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCreditCard;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})|62[0-9]{14}$/;\n/* eslint-enable max-len */\n\nfunction isCreditCard(str) {\n  (0, _assertString2.default)(str);\n  var sanitized = str.replace(/[^0-9]+/g, '');\n  if (!creditCard.test(sanitized)) {\n    return false;\n  }\n  var sum = 0;\n  var digit = void 0;\n  var tmpNum = void 0;\n  var shouldDouble = void 0;\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n  return !!(sum % 10 === 0 ? sanitized : false);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],50:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCurrency;\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction currencyRegex(options) {\n  var symbol = '(\\\\' + options.symbol.replace(/\\./g, '\\\\.') + ')' + (options.require_symbol ? '' : '?'),\n      negative = '-?',\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n      whole_dollar_amount_with_sep = '[1-9]\\\\d{0,2}(\\\\' + options.thousands_separator + '\\\\d{3})*',\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n      whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?',\n      decimal_amount = '(\\\\' + options.decimal_separator + '\\\\d{2})?';\n  var pattern = whole_dollar_amount + decimal_amount;\n\n  // default is negative sign before symbol, but there are two other options (besides parens)\n  if (options.allow_negatives && !options.parens_for_negatives) {\n    if (options.negative_sign_after_digits) {\n      pattern += negative;\n    } else if (options.negative_sign_before_digits) {\n      pattern = negative + pattern;\n    }\n  }\n\n  // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n  if (options.allow_negative_sign_placeholder) {\n    pattern = '( (?!\\\\-))?' + pattern;\n  } else if (options.allow_space_after_symbol) {\n    pattern = ' ?' + pattern;\n  } else if (options.allow_space_after_digits) {\n    pattern += '( (?!$))?';\n  }\n\n  if (options.symbol_after_digits) {\n    pattern += symbol;\n  } else {\n    pattern = symbol + pattern;\n  }\n\n  if (options.allow_negatives) {\n    if (options.parens_for_negatives) {\n      pattern = '(\\\\(' + pattern + '\\\\)|' + pattern + ')';\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n      pattern = negative + pattern;\n    }\n  }\n\n  /* eslint-disable prefer-template */\n  return new RegExp('^' +\n  // ensure there's a dollar and/or decimal amount, and that\n  // it doesn't start with a space or a negative sign followed by a space\n  '(?!-? )(?=.*\\\\d)' + pattern + '$');\n  /* eslint-enable prefer-template */\n}\n\nvar default_currency_options = {\n  symbol: '$',\n  require_symbol: false,\n  allow_space_after_symbol: false,\n  symbol_after_digits: false,\n  allow_negatives: true,\n  parens_for_negatives: false,\n  negative_sign_before_digits: false,\n  negative_sign_after_digits: false,\n  allow_negative_sign_placeholder: false,\n  thousands_separator: ',',\n  decimal_separator: '.',\n  allow_space_after_digits: false\n};\n\nfunction isCurrency(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_currency_options);\n  return currencyRegex(options).test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95,\"./util/merge\":96}],51:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDataURI;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dataURI = /^\\s*data:([a-z]+\\/[a-z0-9\\-\\+]+(;[a-z\\-]+=[a-z0-9\\-]+)?)?(;base64)?,[a-z0-9!\\$&',\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*\\s*$/i; // eslint-disable-line max-len\n\nfunction isDataURI(str) {\n  (0, _assertString2.default)(str);\n  return dataURI.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],52:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDecimal;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar decimal = /^[-+]?([0-9]+|\\.[0-9]+|[0-9]+\\.[0-9]+)$/;\n\nfunction isDecimal(str) {\n  (0, _assertString2.default)(str);\n  return str !== '' && decimal.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],53:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDivisibleBy;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _toFloat = require('./toFloat');\n\nvar _toFloat2 = _interopRequireDefault(_toFloat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isDivisibleBy(str, num) {\n  (0, _assertString2.default)(str);\n  return (0, _toFloat2.default)(str) % parseInt(num, 10) === 0;\n}\nmodule.exports = exports['default'];\n},{\"./toFloat\":91,\"./util/assertString\":95}],54:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _isByteLength = require('./isByteLength');\n\nvar _isByteLength2 = _interopRequireDefault(_isByteLength);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\nfunction isEmail(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(displayName);\n    if (display_email) {\n      str = display_email[1];\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var user = parts.join('@');\n\n  var lower_domain = domain.toLowerCase();\n  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n    user = user.replace(/\\./g, '').toLowerCase();\n  }\n\n  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 256 })) {\n    return false;\n  }\n\n  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {\n    return false;\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n\n  var user_parts = user.split('.');\n  for (var i = 0; i < user_parts.length; i++) {\n    if (!pattern.test(user_parts[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n},{\"./isByteLength\":48,\"./isFQDN\":56,\"./util/assertString\":95,\"./util/merge\":96}],55:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmpty;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isEmpty(str) {\n  (0, _assertString2.default)(str);\n  return str.length === 0;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],56:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFDQN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false\n};\n\nfunction isFDQN(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_fqdn_options);\n\n  /* Remove the optional trailing dot before checking validity */\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  var parts = str.split('.');\n  if (options.require_tld) {\n    var tld = parts.pop();\n    if (!parts.length || !/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    }\n  }\n  for (var part, i = 0; i < parts.length; i++) {\n    part = parts[i];\n    if (options.allow_underscores) {\n      part = part.replace(/_/g, '');\n    }\n    if (!/^[a-z\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    }\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      // disallow full-width chars\n      return false;\n    }\n    if (part[0] === '-' || part[part.length - 1] === '-') {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95,\"./util/merge\":96}],57:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFloat;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar float = /^(?:[-+])?(?:[0-9]+)?(?:\\.[0-9]*)?(?:[eE][\\+\\-]?(?:[0-9]+))?$/;\n\nfunction isFloat(str, options) {\n  (0, _assertString2.default)(str);\n  options = options || {};\n  if (str === '' || str === '.') {\n    return false;\n  }\n  return float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max) && (!options.hasOwnProperty('lt') || str < options.lt) && (!options.hasOwnProperty('gt') || str > options.gt);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],58:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fullWidth = undefined;\nexports.default = isFullWidth;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fullWidth = exports.fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\n\nfunction isFullWidth(str) {\n  (0, _assertString2.default)(str);\n  return fullWidth.test(str);\n}\n},{\"./util/assertString\":95}],59:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.halfWidth = undefined;\nexports.default = isHalfWidth;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar halfWidth = exports.halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\n\nfunction isHalfWidth(str) {\n  (0, _assertString2.default)(str);\n  return halfWidth.test(str);\n}\n},{\"./util/assertString\":95}],60:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexColor;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;\n\nfunction isHexColor(str) {\n  (0, _assertString2.default)(str);\n  return hexcolor.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],61:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexadecimal;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hexadecimal = /^[0-9A-F]+$/i;\n\nfunction isHexadecimal(str) {\n  (0, _assertString2.default)(str);\n  return hexadecimal.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],62:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ipv4Maybe = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\nvar ipv6Block = /^[0-9A-F]{1,4}$/i;\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  (0, _assertString2.default)(str);\n  version = String(version);\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  } else if (version === '4') {\n    if (!ipv4Maybe.test(str)) {\n      return false;\n    }\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  } else if (version === '6') {\n    var blocks = str.split(':');\n    var foundOmissionBlock = false; // marker to indicate ::\n\n    // At least some OS accept the last 32 bits of an IPv6 address\n    // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says\n    // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,\n    // and '::a.b.c.d' is deprecated, but also valid.\n    var foundIPv4TransitionBlock = isIP(blocks[blocks.length - 1], 4);\n    var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;\n\n    if (blocks.length > expectedNumberOfBlocks) {\n      return false;\n    }\n    // initial or final ::\n    if (str === '::') {\n      return true;\n    } else if (str.substr(0, 2) === '::') {\n      blocks.shift();\n      blocks.shift();\n      foundOmissionBlock = true;\n    } else if (str.substr(str.length - 2) === '::') {\n      blocks.pop();\n      blocks.pop();\n      foundOmissionBlock = true;\n    }\n\n    for (var i = 0; i < blocks.length; ++i) {\n      // test for a :: which can not be at the string start/end\n      // since those cases have been handled above\n      if (blocks[i] === '' && i > 0 && i < blocks.length - 1) {\n        if (foundOmissionBlock) {\n          return false; // multiple :: in address\n        }\n        foundOmissionBlock = true;\n      } else if (foundIPv4TransitionBlock && i === blocks.length - 1) {\n        // it has been checked before that the last\n        // block is a valid IPv4 address\n      } else if (!ipv6Block.test(blocks[i])) {\n        return false;\n      }\n    }\n    if (foundOmissionBlock) {\n      return blocks.length >= 1;\n    }\n    return blocks.length === expectedNumberOfBlocks;\n  }\n  return false;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],63:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISBN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar isbn13Maybe = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\n\nfunction isISBN(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  (0, _assertString2.default)(str);\n  version = String(version);\n  if (!version) {\n    return isISBN(str, 10) || isISBN(str, 13);\n  }\n  var sanitized = str.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n  var i = void 0;\n  if (version === '10') {\n    if (!isbn10Maybe.test(sanitized)) {\n      return false;\n    }\n    for (i = 0; i < 9; i++) {\n      checksum += (i + 1) * sanitized.charAt(i);\n    }\n    if (sanitized.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitized.charAt(9);\n    }\n    if (checksum % 11 === 0) {\n      return !!sanitized;\n    }\n  } else if (version === '13') {\n    if (!isbn13Maybe.test(sanitized)) {\n      return false;\n    }\n    for (i = 0; i < 12; i++) {\n      checksum += factor[i % 2] * sanitized.charAt(i);\n    }\n    if (sanitized.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return !!sanitized;\n    }\n  }\n  return false;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],64:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISIN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;\n\nfunction isISIN(str) {\n  (0, _assertString2.default)(str);\n  if (!isin.test(str)) {\n    return false;\n  }\n\n  var checksumStr = str.replace(/[A-Z]/g, function (character) {\n    return parseInt(character, 36);\n  });\n\n  var sum = 0;\n  var digit = void 0;\n  var tmpNum = void 0;\n  var shouldDouble = true;\n  for (var i = checksumStr.length - 2; i >= 0; i--) {\n    digit = checksumStr.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n    if (shouldDouble) {\n      tmpNum *= 2;\n      if (tmpNum >= 10) {\n        sum += tmpNum + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n    shouldDouble = !shouldDouble;\n  }\n\n  return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],65:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.iso8601 = undefined;\n\nexports.default = function (str) {\n  (0, _assertString2.default)(str);\n  return iso8601.test(str);\n};\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nvar iso8601 = exports.iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n},{\"./util/assertString\":95}],66:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISSN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\n\nfunction isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  (0, _assertString2.default)(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n  if (!testIssn.test(str)) {\n    return false;\n  }\n  var issnDigits = str.replace('-', '');\n  var position = 8;\n  var checksum = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = issnDigits[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var digit = _step.value;\n\n      var digitValue = digit.toUpperCase() === 'X' ? 10 : +digit;\n      checksum += digitValue * position;\n      --position;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return checksum % 11 === 0;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],67:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isIn;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _toString = require('./util/toString');\n\nvar _toString2 = _interopRequireDefault(_toString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isIn(str, options) {\n  (0, _assertString2.default)(str);\n  var i = void 0;\n  if (Object.prototype.toString.call(options) === '[object Array]') {\n    var array = [];\n    for (i in options) {\n      if ({}.hasOwnProperty.call(options, i)) {\n        array[i] = (0, _toString2.default)(options[i]);\n      }\n    }\n    return array.indexOf(str) >= 0;\n  } else if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n    return options.hasOwnProperty(str);\n  } else if (options && typeof options.indexOf === 'function') {\n    return options.indexOf(str) >= 0;\n  }\n  return false;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95,\"./util/toString\":97}],68:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInt;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\nvar intLeadingZeroes = /^[-+]?[0-9]+$/;\n\nfunction isInt(str, options) {\n  (0, _assertString2.default)(str);\n  options = options || {};\n\n  // Get the regex to use for testing, based on whether\n  // leading zeroes are allowed or not.\n  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes;\n\n  // Check min/max/lt/gt\n  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\n  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\n  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\n  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\n\n  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],69:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isJSON;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isJSON(str) {\n  (0, _assertString2.default)(str);\n  try {\n    var obj = JSON.parse(str);\n    return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n  } catch (e) {/* ignore */}\n  return false;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],70:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isLength;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable prefer-rest-params */\nfunction isLength(str, options) {\n  (0, _assertString2.default)(str);\n  var min = void 0;\n  var max = void 0;\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],71:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLowercase;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isLowercase(str) {\n  (0, _assertString2.default)(str);\n  return str === str.toLowerCase();\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],72:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMACAddress;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;\n\nfunction isMACAddress(str) {\n  (0, _assertString2.default)(str);\n  return macAddress.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],73:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMD5;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar md5 = /^[a-f0-9]{32}$/;\n\nfunction isMD5(str) {\n  (0, _assertString2.default)(str);\n  return md5.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],74:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMobilePhone;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar phones = {\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\n  'en-US': /^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'de-DE': /^(\\+?49[ \\.\\-])?([\\(]{1}[0-9]{1,6}[\\)])?([0-9 \\.\\-\\/]{3,20})((x|ext|extension)[ ]?[0-9]{1,4})?$/,\n  'da-DK': /^(\\+?45)?(\\d{8})$/,\n  'el-GR': /^(\\+?30)?(69\\d{8})$/,\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\n  'en-GB': /^(\\+?44|0)7\\d{9}$/,\n  'en-HK': /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\n  'en-IN': /^(\\+?91|0)?[789]\\d{9}$/,\n  'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\n  'en-NZ': /^(\\+?64|0)2\\d{7,9}$/,\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\n  'es-ES': /^(\\+?34)?(6\\d{1}|7[1234])\\d{7}$/,\n  'fi-FI': /^(\\+?358|0)\\s?(4(0|1|2|4|5)?|50)\\s?(\\d\\s?){4,8}\\d$/,\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n  'he-IL': /^(\\+972|0)([23489]|5[0248]|77)[1-9]\\d{6}/,\n  'hu-HU': /^(\\+?36)(20|30|70)\\d{7}$/,\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  'ja-JP': /^(\\+?81|0)\\d{1,4}[ \\-]?\\d{1,4}[ \\-]?\\d{4}$/,\n  'ms-MY': /^(\\+?6?01){1}(([145]{1}(\\-|\\s)?\\d{7,8})|([236789]{1}(\\s|\\-)?\\d{7}))$/,\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'nl-BE': /^(\\+?32|0)4?\\d{8}$/,\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'pl-PL': /^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\n  'pt-BR': /^(\\+?55|0)\\-?[1-9]{2}\\-?[2-9]{1}\\d{3,4}\\-?\\d{4}$/,\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\n  'ro-RO': /^(\\+?4?0)\\s?7\\d{2}(\\/|\\s|\\.|\\-)?\\d{3}(\\s|\\.|\\-)?\\d{3}$/,\n  'en-PK': /^((\\+92)|(0092))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$/,\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\n  'vi-VN': /^(\\+?84|0)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,\n  'zh-CN': /^(\\+?0?86\\-?)?1[345789]\\d{9}$/,\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/\n};\n/* eslint-enable max-len */\n\n// aliases\nphones['en-CA'] = phones['en-US'];\nphones['fr-BE'] = phones['nl-BE'];\nphones['zh-HK'] = phones['en-HK'];\n\nfunction isMobilePhone(str, locale) {\n  (0, _assertString2.default)(str);\n  if (locale in phones) {\n    return phones[locale].test(str);\n  }\n  return false;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],75:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMongoId;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _isHexadecimal = require('./isHexadecimal');\n\nvar _isHexadecimal2 = _interopRequireDefault(_isHexadecimal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isMongoId(str) {\n  (0, _assertString2.default)(str);\n  return (0, _isHexadecimal2.default)(str) && str.length === 24;\n}\nmodule.exports = exports['default'];\n},{\"./isHexadecimal\":61,\"./util/assertString\":95}],76:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMultibyte;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-control-regex */\nvar multibyte = /[^\\x00-\\x7F]/;\n/* eslint-enable no-control-regex */\n\nfunction isMultibyte(str) {\n  (0, _assertString2.default)(str);\n  return multibyte.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],77:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNumeric;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar numeric = /^[-+]?[0-9]+$/;\n\nfunction isNumeric(str) {\n  (0, _assertString2.default)(str);\n  return numeric.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],78:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSurrogatePair;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n\nfunction isSurrogatePair(str) {\n  (0, _assertString2.default)(str);\n  return surrogatePair.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],79:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nvar _isIP = require('./isIP');\n\nvar _isIP2 = _interopRequireDefault(_isIP);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false\n};\n\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString2.default)(url);\n  if (!url || url.length >= 2083 || /[\\s<>]/.test(url)) {\n    return false;\n  }\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n  options = (0, _merge2.default)(options, default_url_options);\n  var protocol = void 0,\n      auth = void 0,\n      host = void 0,\n      hostname = void 0,\n      port = void 0,\n      port_str = void 0,\n      split = void 0,\n      ipv6 = void 0;\n\n  split = url.split('#');\n  url = split.shift();\n\n  split = url.split('?');\n  url = split.shift();\n\n  split = url.split('://');\n  if (split.length > 1) {\n    protocol = split.shift();\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {\n    split[0] = url.substr(2);\n  }\n  url = split.join('://');\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n  if (split.length > 1) {\n    auth = split.shift();\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n  }\n  hostname = split.join('@');\n\n  port_str = ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null) {\n    port = parseInt(port_str, 10);\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  }\n\n  if (!(0, _isIP2.default)(host) && !(0, _isFQDN2.default)(host, options) && (!ipv6 || !(0, _isIP2.default)(ipv6, 6)) && host !== 'localhost') {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_whitelist && !checkHost(host, options.host_whitelist)) {\n    return false;\n  }\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n},{\"./isFQDN\":56,\"./isIP\":62,\"./util/assertString\":95,\"./util/merge\":96}],80:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUUID;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar uuid = {\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\n\nfunction isUUID(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'all';\n\n  (0, _assertString2.default)(str);\n  var pattern = uuid[version];\n  return pattern && pattern.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],81:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUppercase;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isUppercase(str) {\n  (0, _assertString2.default)(str);\n  return str === str.toUpperCase();\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],82:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVariableWidth;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _isFullWidth = require('./isFullWidth');\n\nvar _isHalfWidth = require('./isHalfWidth');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isVariableWidth(str) {\n  (0, _assertString2.default)(str);\n  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./isFullWidth\":58,\"./isHalfWidth\":59,\"./util/assertString\":95}],83:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isWhitelisted;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isWhitelisted(str, chars) {\n  (0, _assertString2.default)(str);\n  for (var i = str.length - 1; i >= 0; i--) {\n    if (chars.indexOf(str[i]) === -1) {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],84:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ltrim;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ltrim(str, chars) {\n  (0, _assertString2.default)(str);\n  var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\\s+/g;\n  return str.replace(pattern, '');\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],85:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matches;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction matches(str, pattern, modifiers) {\n  (0, _assertString2.default)(str);\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n  return pattern.test(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],86:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeEmail;\n\nvar _isEmail = require('./isEmail');\n\nvar _isEmail2 = _interopRequireDefault(_isEmail);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_normalize_email_options = {\n  // The following options apply to all email addresses\n  // Lowercases the local part of the email address.\n  // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).\n  // The domain is always lowercased, as per RFC 1035\n  all_lowercase: true,\n\n  // The following conversions are specific to GMail\n  // Lowercases the local part of the GMail address (known to be case-insensitive)\n  gmail_lowercase: true,\n  // Removes dots from the local part of the email address, as that's ignored by GMail\n  gmail_remove_dots: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  gmail_remove_subaddress: true,\n  // Conversts the googlemail.com domain to gmail.com\n  gmail_convert_googlemaildotcom: true,\n\n  // The following conversions are specific to Outlook.com / Windows Live / Hotmail\n  // Lowercases the local part of the Outlook.com address (known to be case-insensitive)\n  outlookdotcom_lowercase: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  outlookdotcom_remove_subaddress: true,\n\n  // The following conversions are specific to Yahoo\n  // Lowercases the local part of the Yahoo address (known to be case-insensitive)\n  yahoo_lowercase: true,\n  // Removes the subaddress (e.g. \"-foo\") from the email address\n  yahoo_remove_subaddress: true,\n\n  // The following conversions are specific to iCloud\n  // Lowercases the local part of the iCloud address (known to be case-insensitive)\n  icloud_lowercase: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  icloud_remove_subaddress: true\n};\n\n// List of domains used by iCloud\nvar icloud_domains = ['icloud.com', 'me.com'];\n\n// List of domains used by Outlook.com and its predecessors\n// This list is likely incomplete.\n// Partial reference:\n// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/\nvar outlookdotcom_domains = ['hotmail.at', 'hotmail.be', 'hotmail.ca', 'hotmail.cl', 'hotmail.co.il', 'hotmail.co.nz', 'hotmail.co.th', 'hotmail.co.uk', 'hotmail.com', 'hotmail.com.ar', 'hotmail.com.au', 'hotmail.com.br', 'hotmail.com.gr', 'hotmail.com.mx', 'hotmail.com.pe', 'hotmail.com.tr', 'hotmail.com.vn', 'hotmail.cz', 'hotmail.de', 'hotmail.dk', 'hotmail.es', 'hotmail.fr', 'hotmail.hu', 'hotmail.id', 'hotmail.ie', 'hotmail.in', 'hotmail.it', 'hotmail.jp', 'hotmail.kr', 'hotmail.lv', 'hotmail.my', 'hotmail.ph', 'hotmail.pt', 'hotmail.sa', 'hotmail.sg', 'hotmail.sk', 'live.be', 'live.co.uk', 'live.com', 'live.com.ar', 'live.com.mx', 'live.de', 'live.es', 'live.eu', 'live.fr', 'live.it', 'live.nl', 'msn.com', 'outlook.at', 'outlook.be', 'outlook.cl', 'outlook.co.il', 'outlook.co.nz', 'outlook.co.th', 'outlook.com', 'outlook.com.ar', 'outlook.com.au', 'outlook.com.br', 'outlook.com.gr', 'outlook.com.pe', 'outlook.com.tr', 'outlook.com.vn', 'outlook.cz', 'outlook.de', 'outlook.dk', 'outlook.es', 'outlook.fr', 'outlook.hu', 'outlook.id', 'outlook.ie', 'outlook.in', 'outlook.it', 'outlook.jp', 'outlook.kr', 'outlook.lv', 'outlook.my', 'outlook.ph', 'outlook.pt', 'outlook.sa', 'outlook.sg', 'outlook.sk', 'passport.com'];\n\n// List of domains used by Yahoo Mail\n// This list is likely incomplete\nvar yahoo_domains = ['rocketmail.com', 'yahoo.ca', 'yahoo.co.uk', 'yahoo.com', 'yahoo.de', 'yahoo.fr', 'yahoo.in', 'yahoo.it', 'ymail.com'];\n\nfunction normalizeEmail(email, options) {\n  options = (0, _merge2.default)(options, default_normalize_email_options);\n\n  if (!(0, _isEmail2.default)(email)) {\n    return false;\n  }\n\n  var raw_parts = email.split('@');\n  var domain = raw_parts.pop();\n  var user = raw_parts.join('@');\n  var parts = [user, domain];\n\n  // The domain is always lowercased, as it's case-insensitive per RFC 1035\n  parts[1] = parts[1].toLowerCase();\n\n  if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n    // Address is GMail\n    if (options.gmail_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (options.gmail_remove_dots) {\n      parts[0] = parts[0].replace(/\\./g, '');\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.gmail_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n    parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];\n  } else if (~icloud_domains.indexOf(parts[1])) {\n    // Address is iCloud\n    if (options.icloud_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.icloud_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (~outlookdotcom_domains.indexOf(parts[1])) {\n    // Address is Outlook.com\n    if (options.outlookdotcom_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.outlookdotcom_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (~yahoo_domains.indexOf(parts[1])) {\n    // Address is Yahoo\n    if (options.yahoo_remove_subaddress) {\n      var components = parts[0].split('-');\n      parts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];\n    }\n    if (!parts[0].length) {\n      return false;\n    }\n    if (options.all_lowercase || options.yahoo_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (options.all_lowercase) {\n    // Any other address\n    parts[0] = parts[0].toLowerCase();\n  }\n  return parts.join('@');\n}\nmodule.exports = exports['default'];\n},{\"./isEmail\":54,\"./util/merge\":96}],87:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rtrim;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rtrim(str, chars) {\n  (0, _assertString2.default)(str);\n  var pattern = chars ? new RegExp('[' + chars + ']') : /\\s/;\n\n  var idx = str.length - 1;\n  while (idx >= 0 && pattern.test(str[idx])) {\n    idx--;\n  }\n\n  return idx < str.length ? str.substr(0, idx + 1) : str;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],88:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stripLow;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _blacklist = require('./blacklist');\n\nvar _blacklist2 = _interopRequireDefault(_blacklist);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stripLow(str, keep_new_lines) {\n  (0, _assertString2.default)(str);\n  var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n  return (0, _blacklist2.default)(str, chars);\n}\nmodule.exports = exports['default'];\n},{\"./blacklist\":37,\"./util/assertString\":95}],89:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBoolean;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toBoolean(str, strict) {\n  (0, _assertString2.default)(str);\n  if (strict) {\n    return str === '1' || str === 'true';\n  }\n  return str !== '0' && str !== 'false' && str !== '';\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],90:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toDate;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toDate(date) {\n  (0, _assertString2.default)(date);\n  date = Date.parse(date);\n  return !isNaN(date) ? new Date(date) : null;\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],91:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toFloat;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toFloat(str) {\n  (0, _assertString2.default)(str);\n  return parseFloat(str);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],92:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toInt;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toInt(str, radix) {\n  (0, _assertString2.default)(str);\n  return parseInt(str, radix || 10);\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],93:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = trim;\n\nvar _rtrim = require('./rtrim');\n\nvar _rtrim2 = _interopRequireDefault(_rtrim);\n\nvar _ltrim = require('./ltrim');\n\nvar _ltrim2 = _interopRequireDefault(_ltrim);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction trim(str, chars) {\n  return (0, _rtrim2.default)((0, _ltrim2.default)(str, chars), chars);\n}\nmodule.exports = exports['default'];\n},{\"./ltrim\":84,\"./rtrim\":87}],94:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n      value: true\n});\nexports.default = unescape;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction unescape(str) {\n      (0, _assertString2.default)(str);\n      return str.replace(/&amp;/g, '&').replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#96;/g, '`');\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],95:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\nfunction assertString(input) {\n  if (typeof input !== 'string') {\n    throw new TypeError('This library (validator.js) validates strings only');\n  }\n}\nmodule.exports = exports['default'];\n},{}],96:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments[1];\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n  return obj;\n}\nmodule.exports = exports['default'];\n},{}],97:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = toString;\nfunction toString(input) {\n  if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input !== null) {\n    if (typeof input.toString === 'function') {\n      input = input.toString();\n    } else {\n      input = '[object Object]';\n    }\n  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\n    input = '';\n  }\n  return String(input);\n}\nmodule.exports = exports['default'];\n},{}],98:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = whitelist;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction whitelist(str, chars) {\n  (0, _assertString2.default)(str);\n  return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');\n}\nmodule.exports = exports['default'];\n},{\"./util/assertString\":95}],99:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asyncPlayShapeAnimation = asyncPlayShapeAnimation;\nvar sound = require('./sound');\nvar color = require('./color');\n\nvar Promise = require('bluebird');\n\nfunction asyncAnimateScale(item, totalDuration) {\n  return new Promise(function (resolve, reject) {\n    try {\n      if (item.data.animating === true) {\n        resolve('shape already animating, ignoring');\n      }\n      item.data.animating = true;\n      item.stop({\n        goToEnd: true\n      });\n      item.animate([{\n        properties: {\n          scale: 1.15\n        },\n        settings: {\n          duration: totalDuration / 4,\n          easing: \"easeOut\"\n        }\n      }, {\n        properties: {\n          scale: 1\n        },\n        settings: {\n          duration: totalDuration - totalDuration / 4,\n          easing: \"easeIn\",\n          complete: function complete() {\n            item.data.animating = false;\n            resolve('asyncAnimateScale done');\n          }\n        }\n      }]);\n    } catch (e) {\n      item.stop({\n        goToEnd: true\n      });\n      reject(e);\n    }\n  });\n}\n\nfunction asyncAnimateBrightness(item, totalDuration, finalColor) {\n  return new Promise(function (resolve, reject) {\n    try {\n      if (item.data.animating === true) {\n        resolve('shape already animating, ignoring');\n      }\n      item.data.animating = true;\n      item.data.originalFillColor = item.fillColor;\n      item.stop({\n        goToEnd: true\n      });\n      item.animate([{\n        properties: {\n          fillColor: {\n            brightness: \"+0.2\"\n          }\n        },\n        settings: {\n          duration: totalDuration / 4,\n          easing: \"easeInOut\"\n        }\n      }, {\n        properties: {\n          fillColor: {\n            brightness: \"-0.2\"\n          }\n        },\n        settings: {\n          duration: totalDuration - totalDuration / 4,\n          easing: \"easeInOut\",\n          complete: function complete() {\n            item.data.animating = false;\n            item.fillColor = finalColor;\n            resolve('asyncAnimateBrightness done');\n          }\n        }\n      }]);\n    } catch (e) {\n      item.stop({\n        goToEnd: true\n      });\n      reject(e);\n    }\n  });\n}\n\nfunction asyncPlayShapeAnimation(shapeId) {\n  return new Promise(function (resolve, reject, onCancel) {\n    try {\n      var item = paper.project.getItem({\n        match: function match(el) {\n          return el.id === shapeId;\n        }\n      });\n\n      if (!!item) {\n        var group = null;\n        if (item.className === 'Group') {\n          group = item;\n        } else {\n          if (item.parent.className === 'Group') {\n            group = item.parent;\n          }\n        }\n\n        if (group !== null && group.children.length > 0 && Object.keys(group._namedChildren).length > 0) {\n          if (group.data.animating === true) {\n            resolve('group already animating, ignoring');\n          }\n          var totalDuration = sound.measureLength;\n          var transparent = color.transparent;\n          var animationPromises = [];\n\n          var namedChildren = group._namedChildren;\n\n          animationPromises.push(asyncAnimateScale(group, totalDuration));\n          // if ('outer' in namedChildren && namedChildren.outer.length > 0) {\n          //   const outer = namedChildren.outer[0];\n          //   outer.fillColor = group.data.originalColor;\n          //   animationPromises.push(asyncAnimateBrightness(outer, totalDuration, group.data.color));\n          // }\n          //\n          // if ('loop' in namedChildren && namedChildren.loop.length > 0) {\n          //   namedChildren.loop.forEach(function(loop) {\n          //     if (!!loop.fillColor && loop.fillColor !== transparent) {\n          //       loop.fillColor = group.data.originalColor;\n          //       animationPromises.push(asyncAnimateBrightness(loop, totalDuration, group.data.color));\n          //     }\n          //   })\n          // }\n          //\n          // if ('pop' in namedChildren && namedChildren.pop.length > 0) {\n          //   namedChildren.pop.forEach(function(pop) {\n          //     animationPromises.push(asyncAnimateBrightness(pop, totalDuration, pop.fillColor));\n          //   })\n          // }\n\n          Promise.all(animationPromises).then(function () {\n            resolve('shape ' + shapeId + ' done animating');\n          }).catch(function (e) {\n            reject(e);\n          });\n        } else {\n          reject('could not find relevant group, cannot animate');\n        }\n      } else {\n        reject('could not find item with id ' + shapeId);\n      }\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n// function initAnimateShadowBlur() {\n//   animatePaper.extendPropHooks({\n//     \"shadowBlur\": {\n//       get: function(tween) {\n//         // console.log('get', tween);\n//         if (!tween.item.data._animatePaperVals) {\n//           tween.item.data._animatePaperVals = {};\n//         }\n//         if (typeof tween.item.data._animatePaperVals.shadowBlur === \"undefined\") {\n//             tween.item.data._animatePaperVals.shadowBlur = tween.item.shadowBlur;\n//         }\n//         // console.log('get', tween.item.shadowBlur);\n//         var output = tween.item.data._animatePaperVals.shadowBlur;\n//         return output;\n//       },\n//       set: function(tween) {\n//         // console.log('set', tween);\n//         var curBlur = tween.item.data._animatePaperVals.shadowBlur;\n//         var trueBlur = tween.now - curBlur;\n//         //\n//         tween.item.data._animatePaperVals.shadowBlur = tween.now;\n//         tween.item.shadowBlur += trueBlur;\n//         // console.log('set', tween.item.shadowBlur);\n//       },\n//     }\n//   })\n// }\n\n},{\"./color\":100,\"./sound\":107,\"bluebird\":26}],100:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPathColorName = getPathColorName;\nexports.getColorName = getColorName;\nexports.getRandomPop = getRandomPop;\nexports.getRandomColor = getRandomColor;\nexports.getIndexedPopColor = getIndexedPopColor;\nexports.getCurrentColor = getCurrentColor;\nexports.getCurrentColorName = getCurrentColorName;\nvar config = require('./config');\n\nvar util = require('./util');\n\nvar transparent = exports.transparent = new Color(0, 0);\n\nfunction getPathColorName(path) {\n  var hexColor = path.parent.data.originalColor;\n  // let hexColor = path.strokeColor.toCSS(true); // This fails when it's a gradient\n  return getColorName(hexColor);\n}\n\nfunction getColorName(color) {\n  if (color) {\n    color = color.toUpperCase(); // make sure\n    if (color in config.palette.colorNames) {\n      return config.palette.colorNames[color];\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\nfunction getRandomPop() {\n  return util.randomPick(config.palette.pops);\n}\n\nfunction getRandomColor() {\n  return util.randomPick(config.palette.colors);\n}\n\nfunction getIndexedPopColor(index) {\n  var pops = config.palette.pops;\n  return pops[index % pops.length];\n}\n\nfunction getCurrentColor() {\n  return $('.palette-color.palette-selected').data('color');\n}\n\nfunction getCurrentColorName() {\n  return getColorName(getCurrentColor());\n}\n\n},{\"./config\":101,\"./util\":112}],101:[function(require,module,exports){\n'use strict';\n\nexports.runAnimations = false;\nexports.pop = true;\nexports.canvasId = 'canvas';\nexports.maxShapes = 20;\nexports.postKey = 'mellon';\n\nexports.palette = {\n  colors: [\"#20171C\", \"#1E2A43\", \"#28377D\", \"#352747\", \"#CA2E26\", \"#9A2A1F\", \"#DA6C26\", \"#453121\", \"#916A47\", \"#DAAD27\", \"#7F7D31\", \"#2B5E2E\"],\n  colorNames: {\n    \"#20171C\": \"black\",\n    \"#1E2A43\": \"blue\",\n    \"#28377D\": \"blue\",\n    \"#352747\": \"blue\",\n    \"#CA2E26\": \"red\",\n    \"#9A2A1F\": \"red\",\n    \"#DA6C26\": \"orange\",\n    \"#453121\": \"brown\",\n    \"#916A47\": \"brown\",\n    \"#DAAD27\": \"orange\",\n    \"#7F7D31\": \"green\",\n    \"#2B5E2E\": \"green\"\n  },\n  gradients: {\n    '#20171C': ['#20171C', '#000000'],\n    '#1E2A43': ['#1E2A43', '#263166'],\n    '#28377D': ['#28377D', '#1E4695'],\n    '#352747': ['#352747', '#45005B'],\n    '#CA2E26': ['#CA2E26', '#9B352F'],\n    '#9A2A1F': ['#9A2A1F', '#CD3621'],\n    '#DA6C26': ['#DA6C26', '#BD4820'],\n    '#453121': ['#453121', '#281806'],\n    '#916A47': ['#916A47', '#623A22'],\n    '#DAAD27': ['#DAAD27', '#AF871D'],\n    '#7F7D31': ['#7F7D31', '#555827'],\n    '#2B5E2E': ['#2B5E2E', '#16451D']\n  },\n  pops: [\"#00ADEF\", \"#F285A5\", \"#7DC57F\", \"#F6EB16\", \"#F4EAE0\"],\n  colorSize: 20,\n  selectedColorSize: 30\n};\n\nexports.contextualTuts = [{\n  type: \"fill\",\n  copy: \"<strong>Double-tap</strong> a filled shape to <strong>unfill</strong> it. Repeat to <strong>FILL</strong> an unfilled shape.\"\n}, {\n  type: \"pinch\",\n  copy: \"<strong>Pinch</strong> shapes with <strong>two fingers</strong> to <strong>resize</strong> and <strong>move</strong> them.\"\n}];\n\n},{}],102:[function(require,module,exports){\n\"use strict\";\n\n(function (root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.ShapeDetector = factory();\n  }\n})(undefined, function () {\n\n  var _nbSamplePoints;\n  var _squareSize = 250;\n  var _phi = 0.5 * (-1.0 + Math.sqrt(5.0));\n  var _angleRange = deg2Rad(45.0);\n  var _anglePrecision = deg2Rad(2.0);\n  var _halfDiagonal = Math.sqrt(_squareSize * _squareSize + _squareSize * _squareSize) * 0.5;\n  var _origin = {\n    x: 0,\n    y: 0\n  };\n\n  function deg2Rad(d) {\n\n    return d * Math.PI / 180.0;\n  };\n\n  function getDistance(a, b) {\n\n    var dx = b.x - a.x;\n    var dy = b.y - a.y;\n\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  function Stroke(points, name) {\n\n    this.points = points;\n    this.name = name;\n    this.processStroke();\n  };\n\n  Stroke.prototype.processStroke = function () {\n\n    this.points = this.resample();\n    this.setCentroid();\n    this.points = this.rotateBy(-this.indicativeAngle());\n    this.points = this.scaleToSquare();\n    this.setCentroid();\n    this.points = this.translateToOrigin();\n\n    return this;\n  };\n\n  Stroke.prototype.resample = function () {\n\n    var localDistance, q;\n    var interval = this.strokeLength() / (_nbSamplePoints - 1);\n    var distance = 0.0;\n    var newPoints = [this.points[0]];\n\n    for (var i = 1; i < this.points.length; i++) {\n      localDistance = getDistance(this.points[i - 1], this.points[i]);\n\n      if (distance + localDistance >= interval) {\n        q = {\n          x: this.points[i - 1].x + (interval - distance) / localDistance * (this.points[i].x - this.points[i - 1].x),\n          y: this.points[i - 1].y + (interval - distance) / localDistance * (this.points[i].y - this.points[i - 1].y)\n        };\n\n        newPoints.push(q);\n        this.points.splice(i, 0, q);\n        distance = 0.0;\n      } else {\n        distance += localDistance;\n      }\n    }\n\n    if (newPoints.length === _nbSamplePoints - 1) {\n      newPoints.push(this.points[this.points.length - 1]);\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.rotateBy = function (angle) {\n\n    var point;\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var newPoints = [];\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: (point.x - this.c.x) * cos - (point.y - this.c.y) * sin + this.c.x,\n        y: (point.x - this.c.x) * sin + (point.y - this.c.y) * cos + this.c.y\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.scaleToSquare = function () {\n\n    var point;\n    var newPoints = [];\n    var box = {\n      minX: +Infinity,\n      maxX: -Infinity,\n      minY: +Infinity,\n      maxY: -Infinity\n    };\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      box.minX = Math.min(box.minX, point.x);\n      box.minY = Math.min(box.minY, point.y);\n      box.maxX = Math.max(box.maxX, point.x);\n      box.maxY = Math.max(box.maxY, point.y);\n    }\n\n    box.width = box.maxX - box.minX;\n    box.height = box.maxY - box.minY;\n\n    for (i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: point.x * (_squareSize / box.width),\n        y: point.y * (_squareSize / box.height)\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.translateToOrigin = function (points) {\n\n    var point;\n    var newPoints = [];\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: point.x + _origin.x - this.c.x,\n        y: point.y + _origin.y - this.c.y\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.setCentroid = function () {\n\n    var point;\n    this.c = {\n      x: 0.0,\n      y: 0.0\n    };\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      this.c.x += point.x;\n      this.c.y += point.y;\n    }\n\n    this.c.x /= this.points.length;\n    this.c.y /= this.points.length;\n\n    return this;\n  };\n\n  Stroke.prototype.indicativeAngle = function () {\n\n    return Math.atan2(this.c.y - this.points[0].y, this.c.x - this.points[0].x);\n  };\n\n  Stroke.prototype.strokeLength = function () {\n\n    var d = 0.0;\n\n    for (var i = 1; i < this.points.length; i++) {\n      d += getDistance(this.points[i - 1], this.points[i]);\n    }\n\n    return d;\n  };\n\n  Stroke.prototype.distanceAtBestAngle = function (pattern) {\n\n    var a = -_angleRange;\n    var b = _angleRange;\n    var x1 = _phi * a + (1.0 - _phi) * b;\n    var f1 = this.distanceAtAngle(pattern, x1);\n    var x2 = (1.0 - _phi) * a + _phi * b;\n    var f2 = this.distanceAtAngle(pattern, x2);\n\n    while (Math.abs(b - a) > _anglePrecision) {\n\n      if (f1 < f2) {\n        b = x2;\n        x2 = x1;\n        f2 = f1;\n        x1 = _phi * a + (1.0 - _phi) * b;\n        f1 = this.distanceAtAngle(pattern, x1);\n      } else {\n        a = x1;\n        x1 = x2;\n        f1 = f2;\n        x2 = (1.0 - _phi) * a + _phi * b;\n        f2 = this.distanceAtAngle(pattern, x2);\n      }\n    }\n\n    return Math.min(f1, f2);\n  };\n\n  Stroke.prototype.distanceAtAngle = function (pattern, angle) {\n\n    var strokePoints = this.rotateBy(angle);\n    var patternPoints = pattern.points;\n    var d = 0.0;\n\n    for (var i = 0; i < strokePoints.length; i++) {\n      d += getDistance(strokePoints[i], patternPoints[i]);\n    }\n\n    return d / strokePoints.length;\n  };\n\n  function ShapeDetector(patterns, options) {\n\n    options = options || {};\n    this.threshold = options.threshold || 0;\n    _nbSamplePoints = options.nbSamplePoints || 64;\n\n    this.patterns = [];\n\n    for (var i = 0; i < patterns.length; i++) {\n      this.learn(patterns[i].name, patterns[i].points);\n    }\n  }\n\n  ShapeDetector.defaultShapes = [{\n    points: [{ x: 127, y: 141 }, { x: 124, y: 140 }, { x: 120, y: 139 }, { x: 118, y: 139 }, { x: 116, y: 139 }, { x: 111, y: 140 }, { x: 109, y: 141 }, { x: 104, y: 144 }, { x: 100, y: 147 }, { x: 96, y: 152 }, { x: 93, y: 157 }, { x: 90, y: 163 }, { x: 87, y: 169 }, { x: 85, y: 175 }, { x: 83, y: 181 }, { x: 82, y: 190 }, { x: 82, y: 195 }, { x: 83, y: 200 }, { x: 84, y: 205 }, { x: 88, y: 213 }, { x: 91, y: 216 }, { x: 96, y: 219 }, { x: 103, y: 222 }, { x: 108, y: 224 }, { x: 111, y: 224 }, { x: 120, y: 224 }, { x: 133, y: 223 }, { x: 142, y: 222 }, { x: 152, y: 218 }, { x: 160, y: 214 }, { x: 167, y: 210 }, { x: 173, y: 204 }, { x: 178, y: 198 }, { x: 179, y: 196 }, { x: 182, y: 188 }, { x: 182, y: 177 }, { x: 178, y: 167 }, { x: 170, y: 150 }, { x: 163, y: 138 }, { x: 152, y: 130 }, { x: 143, y: 129 }, { x: 140, y: 131 }, { x: 129, y: 136 }, { x: 126, y: 139 }],\n    name: \"circle\"\n  }, {\n    points: [{ x: 137, y: 139 }, { x: 135, y: 141 }, { x: 133, y: 144 }, { x: 132, y: 146 }, { x: 130, y: 149 }, { x: 128, y: 151 }, { x: 126, y: 155 }, { x: 123, y: 160 }, { x: 120, y: 166 }, { x: 116, y: 171 }, { x: 112, y: 177 }, { x: 107, y: 183 }, { x: 102, y: 188 }, { x: 100, y: 191 }, { x: 95, y: 195 }, { x: 90, y: 199 }, { x: 86, y: 203 }, { x: 82, y: 206 }, { x: 80, y: 209 }, { x: 75, y: 213 }, { x: 73, y: 213 }, { x: 70, y: 216 }, { x: 67, y: 219 }, { x: 64, y: 221 }, { x: 61, y: 223 }, { x: 60, y: 225 }, { x: 62, y: 226 }, { x: 65, y: 225 }, { x: 67, y: 226 }, { x: 74, y: 226 }, { x: 77, y: 227 }, { x: 85, y: 229 }, { x: 91, y: 230 }, { x: 99, y: 231 }, { x: 108, y: 232 }, { x: 116, y: 233 }, { x: 125, y: 233 }, { x: 134, y: 234 }, { x: 145, y: 233 }, { x: 153, y: 232 }, { x: 160, y: 233 }, { x: 170, y: 234 }, { x: 177, y: 235 }, { x: 179, y: 236 }, { x: 186, y: 237 }, { x: 193, y: 238 }, { x: 198, y: 239 }, { x: 200, y: 237 }, { x: 202, y: 239 }, { x: 204, y: 238 }, { x: 206, y: 234 }, { x: 205, y: 230 }, { x: 202, y: 222 }, { x: 197, y: 216 }, { x: 192, y: 207 }, { x: 186, y: 198 }, { x: 179, y: 189 }, { x: 174, y: 183 }, { x: 170, y: 178 }, { x: 164, y: 171 }, { x: 161, y: 168 }, { x: 154, y: 160 }, { x: 148, y: 155 }, { x: 143, y: 150 }, { x: 138, y: 148 }, { x: 136, y: 148 }],\n    name: \"triangle\"\n  }, {\n    points: [{ x: 78, y: 149 }, { x: 78, y: 153 }, { x: 78, y: 157 }, { x: 78, y: 160 }, { x: 79, y: 162 }, { x: 79, y: 164 }, { x: 79, y: 167 }, { x: 79, y: 169 }, { x: 79, y: 173 }, { x: 79, y: 178 }, { x: 79, y: 183 }, { x: 80, y: 189 }, { x: 80, y: 193 }, { x: 80, y: 198 }, { x: 80, y: 202 }, { x: 81, y: 208 }, { x: 81, y: 210 }, { x: 81, y: 216 }, { x: 82, y: 222 }, { x: 82, y: 224 }, { x: 82, y: 227 }, { x: 83, y: 229 }, { x: 83, y: 231 }, { x: 85, y: 230 }, { x: 88, y: 232 }, { x: 90, y: 233 }, { x: 92, y: 232 }, { x: 94, y: 233 }, { x: 99, y: 232 }, { x: 102, y: 233 }, { x: 106, y: 233 }, { x: 109, y: 234 }, { x: 117, y: 235 }, { x: 123, y: 236 }, { x: 126, y: 236 }, { x: 135, y: 237 }, { x: 142, y: 238 }, { x: 145, y: 238 }, { x: 152, y: 238 }, { x: 154, y: 239 }, { x: 165, y: 238 }, { x: 174, y: 237 }, { x: 179, y: 236 }, { x: 186, y: 235 }, { x: 191, y: 235 }, { x: 195, y: 233 }, { x: 197, y: 233 }, { x: 200, y: 233 }, { x: 201, y: 235 }, { x: 201, y: 233 }, { x: 199, y: 231 }, { x: 198, y: 226 }, { x: 198, y: 220 }, { x: 196, y: 207 }, { x: 195, y: 195 }, { x: 195, y: 181 }, { x: 195, y: 173 }, { x: 195, y: 163 }, { x: 194, y: 155 }, { x: 192, y: 145 }, { x: 192, y: 143 }, { x: 192, y: 138 }, { x: 191, y: 135 }, { x: 191, y: 133 }, { x: 191, y: 130 }, { x: 190, y: 128 }, { x: 188, y: 129 }, { x: 186, y: 129 }, { x: 181, y: 132 }, { x: 173, y: 131 }, { x: 162, y: 131 }, { x: 151, y: 132 }, { x: 149, y: 132 }, { x: 138, y: 132 }, { x: 136, y: 132 }, { x: 122, y: 131 }, { x: 120, y: 131 }, { x: 109, y: 130 }, { x: 107, y: 130 }, { x: 90, y: 132 }, { x: 81, y: 133 }, { x: 76, y: 133 }],\n    name: \"square\"\n  }];\n\n  ShapeDetector.prototype.spot = function (points, patternName) {\n\n    if (patternName == null) {\n      patternName = '';\n    }\n\n    var distance, pattern, score;\n    var stroke = new Stroke(points);\n    var bestDistance = +Infinity;\n    var bestPattern = null;\n    var bestScore = 0;\n\n    for (var i = 0; i < this.patterns.length; i++) {\n      pattern = this.patterns[i];\n\n      if (pattern.name.indexOf(patternName) > -1) {\n        distance = stroke.distanceAtBestAngle(pattern);\n        score = 1.0 - distance / _halfDiagonal;\n\n        if (distance < bestDistance && score > this.threshold) {\n          bestDistance = distance;\n          bestPattern = pattern.name;\n          bestScore = score;\n        }\n      }\n    }\n\n    return {\n      pattern: bestPattern,\n      score: bestScore\n    };\n  };\n\n  ShapeDetector.prototype.learn = function (name, points) {\n\n    return this.patterns.push(new Stroke(points, name));\n  };\n\n  return ShapeDetector;\n});\n\n},{}],103:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetWindow = resetWindow;\nvar touch = require('./touch');\nvar ui = require('./ui');\nvar overlays = require('./overlays');\nvar video = require('./video');\nvar timing = require('./timing');\nvar util = require('./util');\nvar sound = require('./sound');\nvar shape = require('./shape');\n\nfunction resetWindow() {\n  window.kan = {\n    composition: [],\n    compositionInterval: null,\n    compositionTimeout: null,\n    soundTimeouts: [],\n    lastEvent: null,\n    interaction: false,\n    moves: [],\n    playing: false,\n    pinching: false,\n    pinchedGroup: null,\n    pinchedTut: null,\n    pathData: {},\n    shapePath: null,\n    prevAngle: null,\n    sides: [],\n    side: [],\n    corners: [],\n    lastScale: 1,\n    lastRotation: 0,\n    originalPosition: null,\n    tutorialCompletion: {\n      \"fill\": false,\n      \"pinch\": false\n    },\n    inactivityTimeout: null,\n    playPromptTimeout: null,\n    userHasDrawnFirstShape: false,\n    firstTimePlaying: true,\n    shapesSinceTut: 0,\n    refreshCheckInterval: null,\n    sha: null,\n    scheduledOverlay: null,\n    continueCountdownInterval: null,\n    shapeSounds: null\n  };\n}\n\n$(window).on('load', function () {\n  function run() {\n    resetWindow();\n    util.setSha();\n    ui.init();\n    overlays.init();\n    timing.init();\n    shape.init();\n    sound.init().then(function () {\n      // sound.init() is async because it loads in the sound files\n      touch.init();\n    }).fail(function (e) {\n      console.error('error initting shape sounds:', e);\n      location.reload();\n    });\n  }\n\n  try {\n    run();\n  } catch (e) {\n    console.error(e);\n    setTimeout(function () {\n      // wait 5 seconds then reload\n      location.reload();\n    }, 5 * 1000);\n  }\n});\n\n},{\"./overlays\":104,\"./shape\":105,\"./sound\":107,\"./timing\":108,\"./touch\":109,\"./ui\":111,\"./util\":112,\"./video\":113}],104:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.openOverlay = openOverlay;\nexports.resetContinueCountdown = resetContinueCountdown;\nexports.cardNavNext = cardNavNext;\nexports.closeAndResetOverlays = closeAndResetOverlays;\nexports.asyncCloseOverlaysAfterDuration = asyncCloseOverlaysAfterDuration;\nexports.asyncWaitForWellFormedPhoneNumber = asyncWaitForWellFormedPhoneNumber;\nexports.init = init;\nvar config = require('./config');\n\nvar validator = require('validator');\n\nvar touch = require('./touch');\nvar video = require('./video');\nvar timing = require('./timing');\nvar tutorial = require('./tutorial');\nvar util = require('./util');\nvar ui = require('./ui');\n\nvar hammerCanvas = touch.hammerCanvas;\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar $cardsWrap = $body.find('.overlay.tips .card-wrap');\nvar $cardItems = $cardsWrap.find('article');\nvar cardsCount = $cardItems.length;\nvar $footer = $body.find('.overlay.tips .footer');\n\nvar $sharePhone = $body.find('#phone');\nvar $shareKeypad = $body.find('.keypad');\nvar $shareSend = $shareKeypad.find('.send');\nvar $sharePhoneWrap = $('.share-phone .output');\nvar invalidPhoneNumberClass = 'invalid-number';\n\nvar allOverlays = ['intro', 'play-prompt', 'share-prompt', 'continue', 'tips', 'share', 'share-prepare', 'share-confirmation'];\nvar overlayOpenClasses = allOverlays.map(function (overlay) {\n  return overlay + '-active';\n}).join(' ');\n\nvar overlayActiveClass = 'overlay-active';\n\nfunction openOverlay(overlayName) {\n  // console.log('attempting to open overlay', overlayName);\n  if (window.kan.overlays === false) return;\n  if (allOverlays.includes(overlayName)) {\n    if (window.kan.pinching === true || window.kan.panning === true) {\n      if (overlayName === 'continue') {\n        timing.preventInactivityTimeout();\n      } else {\n        // console.log('scheduling overlay', overlayName);\n        window.kan.scheduledOverlay = overlayName;\n      }\n      return;\n    }\n    closeAndResetOverlays();\n    tutorial.hideContextualTuts();\n    $body.addClass(overlayActiveClass);\n    $body.find('.overlay.closeable:not(.tips):not(.share-phone)').on(tapEvent, function () {\n      closeAndResetOverlays();\n    });\n\n    switch (overlayName) {\n      case 'intro':\n        openIntroOverlay();\n        break;\n      case 'play-prompt':\n        if (util.anyShapesOnCanvas()) {\n          openPlayPromptOverlay();\n        } else {\n          window.kan.playPromptTimeout = setTimeout(function () {\n            openOverlay('play-prompt');\n          }, timing.playPromptDelay / 2);\n        }\n        break;\n      case 'share-prompt':\n        openSharePromptOverlay();\n        break;\n      case 'continue':\n        openContinueOverlay();\n        break;\n      case 'tips':\n        openTipsOverlay();\n        break;\n      case 'share':\n        openShareOverlay();\n        break;\n      case 'share-prepare':\n        openSharePrepareOverlay();\n        break;\n      case 'share-confirmation':\n        openShareConfirmationOverlay();\n        break;\n    }\n  } else {\n    // console.log('unable to open unknown overlay', overlayName);\n  }\n}\n\nfunction openIntroOverlay() {\n  $body.addClass('intro-active');\n}\n\nfunction openPlayPromptOverlay() {\n  $body.addClass('play-prompt-active');\n}\n\nfunction openSharePromptOverlay() {\n  $body.addClass('share-prompt-active');\n}\n\nfunction resetContinueCountdown() {\n  $('.overlay.continue .countdown-num').html(parseInt(timing.continueInactivityDelay / 1000));\n  clearInterval(window.kan.continueCountdownInterval);\n}\n\nfunction openContinueOverlay() {\n  $body.addClass('continue-active');\n\n  resetContinueCountdown();\n  clearTimeout(window.kan.inactivityTimeout);\n  clearTimeout(window.kan.playPromptTimeout);\n\n  window.kan.continueCountdownInterval = setInterval(function () {\n    var $countdownNumWrap = $('.overlay.continue .countdown-num');\n    var count = parseInt($countdownNumWrap.html());\n    if (count > 1) {\n      $countdownNumWrap.html(count - 1);\n    }\n  }, 1000);\n\n  window.kan.inactivityTimeout = setTimeout(function () {\n    video.enterTutorialMode();\n    ui.selectRandomColorFromPalette();\n  }, timing.continueInactivityDelay);\n}\n\nfunction openTipsOverlay() {\n  $body.addClass('tips-active');\n  activateTipsCards();\n}\n\nfunction openShareOverlay() {\n  $body.addClass('share-active');\n}\n\nfunction openSharePrepareOverlay() {\n  $body.addClass('share-prepare-active');\n}\n\nfunction openShareConfirmationOverlay() {\n  $body.addClass('share-confirmation-active');\n}\n\n// card slider navigation\nfunction cardNavNext() {\n  var $old = $body.find('.card-wrap .current');\n  var $new = $old.next().length ? $old.next() : $cardItems.first();\n  var $next = $new.next().length ? $new.next() : $cardItems.first();\n  var $third = $next.next().length ? $next.next() : $cardItems.first().next();\n  var slide = $new.index();\n  $old.removeClass().addClass('remove');\n  $new.removeClass().addClass('current');\n  $next.removeClass().addClass('next');\n  $third.removeClass().addClass('third');\n  updateCardCounter(slide + 1, cardsCount);\n  setTimeout(function () {\n    $old.removeClass();\n  }, 600);\n}\n\n// tips card interactions\nfunction cardInteractions() {\n  var timeOfLastInteraction = 0;\n\n  $body.find('.overlay.closeable').on(tapEvent, function (e) {\n    var currentTime = Date.now();\n    if (timeOfLastInteraction > currentTime - 250) {\n      return;\n    }\n    timeOfLastInteraction = currentTime;\n\n    if ($(e.target).closest('.card-wrap').length == 1) {\n      // directly on a card, navigate to the next one\n      // console.log('hi');\n      cardNavNext();\n    } else {\n      // console.log('no');\n      // outside elements, close everything and reset\n      closeAndResetOverlays();\n    }\n  });\n}\n\nfunction resetTips() {\n  $cardItems.removeClass();\n  $sharePhone.html('');\n}\n\n// close and reset tips\nfunction closeAndResetOverlays() {\n  $body.removeClass('overlay-active');\n  $body.removeClass(overlayOpenClasses);\n  $sharePhoneWrap.removeClass(invalidPhoneNumberClass);\n  resetTips();\n}\n\nfunction asyncCloseOverlaysAfterDuration(duration) {\n  return new Promise(function (resolve, reject) {\n    var closeOverlayTimeout = null;\n    try {\n      closeOverlayTimeout = setTimeout(function () {\n        closeAndResetOverlays();\n        resolve('asyncCloseOverlaysAfterDuration done');\n      }, duration);\n    } catch (e) {\n      clearTimeout(closeOverlayTimeout);\n      reject(e);\n    }\n  });\n}\n\n// deal a fresh stack of cards\nfunction activateTipsCards() {\n  var $new = $cardItems.first();\n  var $next = $new.next().length ? $new.next() : $cardItems.first();\n  var $third = $next.next().length ? $next.next() : $cardItems.first().next();\n  $cardItems.removeClass();\n  $new.removeClass().addClass('current');\n  $next.removeClass().addClass('next');\n  $third.removeClass().addClass('third');\n  updateCardCounter(1, cardsCount);\n}\n\n// counting cards\nfunction updateCardCounter(current, total) {\n  $footer.find('.current').html(current);\n  $footer.find('.next').html(total);\n}\n\nfunction asyncWaitForWellFormedPhoneNumber(s3Id) {\n  return new Promise(function (resolve, reject) {\n    // normal inactivity timeout is disabled, start an alternate one\n    var inactivityTimeout = setTimeout(function () {\n      reject('timeout');\n    }, timing.continueInactivityDelay / 2);\n\n    $shareKeypad.on(tapEvent, function (e) {\n      clearTimeout(inactivityTimeout);\n      inactivityTimeout = setTimeout(function () {\n        reject('timeout');\n      }, timing.continueInactivityDelay / 2);\n    });\n\n    $shareSend.on(tapEvent, function (e) {\n      var phoneNumWithHyphens = $sharePhone.text();\n      var phoneNumRaw = phoneNumWithHyphens.replace(/\\D/g, '');\n\n      if (validator.isMobilePhone(phoneNumRaw, 'en-US')) {\n        $sharePhoneWrap.removeClass(invalidPhoneNumberClass);\n        if (phoneNumRaw.length == 10) phoneNumRaw = '1' + phoneNumRaw;\n        clearTimeout(inactivityTimeout);\n        resolve({\n          phone: phoneNumRaw,\n          s3Id: s3Id\n        });\n      } else {\n        $sharePhoneWrap.addClass(invalidPhoneNumberClass);\n      }\n    });\n  });\n}\n\n// phone inputs\nfunction phoneNumberInputs() {\n  // mask the output\n  $sharePhone.mask('000-000-0000');\n  // get interactions from the keypad\n  $shareKeypad.find('.num').on(tapEvent, function (e) {\n    var phoneNumber = $sharePhone.html().toString() + $(e.target).html().toString();\n    phoneNumber = $sharePhone.masked(phoneNumber);\n    $sharePhone.html(phoneNumber);\n  });\n  // clear the display\n  $shareKeypad.find('.clear').on(tapEvent, function (e) {\n    $sharePhone.html('');\n  });\n\n  // $('body.share-active').on(tapEvent, function(e) {\n  //   if ($(e.target).closest(''))\n  // })\n}\n\n// \"randomly\" place fiddly bits on the cards\nfunction randomCardGraphics() {\n  $body.find('.card-wrap article').each(function (i, el) {\n    var numBg = 6; // 6 different bgs specified in css\n    $(el).attr('data-bg', i % numBg);\n  });\n}\n\nfunction initTips() {\n  cardInteractions();\n}\n\nfunction initShare() {\n  phoneNumberInputs();\n  randomCardGraphics();\n}\n\nfunction init() {\n  initTips();\n  initShare();\n}\n\n},{\"./config\":101,\"./timing\":108,\"./touch\":109,\"./tutorial\":110,\"./ui\":111,\"./util\":112,\"./video\":113,\"validator\":35}],105:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.startKeepaliveAnimation = startKeepaliveAnimation;\nexports.stopKeepaliveAnimation = stopKeepaliveAnimation;\nexports.destroyGroupPops = destroyGroupPops;\nexports.fillInGroupPopsById = fillInGroupPopsById;\nexports.toggleFill = toggleFill;\nexports.cleanUpGroup = cleanUpGroup;\nexports.updatePops = updatePops;\nexports.getOutlineGroup = getOutlineGroup;\nexports.getTruedShape = getTruedShape;\nexports.getCompletedPath = getCompletedPath;\nexports.getShapePrediction = getShapePrediction;\nexports.getIntegerPoint = getIntegerPoint;\nexports.stringifyPoint = stringifyPoint;\nexports.parsePoint = parsePoint;\nexports.getClosestPointFromPathData = getClosestPointFromPathData;\nexports.processShapeData = processShapeData;\nexports.findInteriorCurves = findInteriorCurves;\nexports.getExtendedPath = getExtendedPath;\nexports.getBruteExtendedPath = getBruteExtendedPath;\nexports.getTrimmedPath = getTrimmedPath;\nexports.hitTestGroupBounds = hitTestGroupBounds;\nexports.hitTestBounds = hitTestBounds;\nexports.init = init;\nvar ShapeDetector = require('./lib/shape-detector');\n\nvar config = require('./config');\n\nvar util = require('./util');\nvar color = require('./color');\n\nvar keepaliveShape = exports.keepaliveShape = void 0;\n\nvar cornerThresholdDeg = exports.cornerThresholdDeg = 30;\nvar thresholdDistMultiplier = exports.thresholdDistMultiplier = 0.1;\n\nvar detector = exports.detector = new ShapeDetector(ShapeDetector.defaultShapes);\n\nvar shapeNames = exports.shapeNames = [\"line\", \"circle\", \"square\", \"triangle\", \"other\"];\n\nvar transparent = color.transparent;\n\nfunction clearPops() {\n  var pops = util.getAllPops();\n  pops.forEach(function (pop) {\n    pop.remove();\n  });\n}\n\nvar keepaliveInterval = null;\n\n// the canvas recorder automatically trims 'still' frames, so I add a semitransparent 1px square to trick the recorder into recording :)\nfunction initKeepaliveShape() {\n  exports.keepaliveShape = keepaliveShape = Path.Rectangle({\n    point: [1, 1],\n    size: [1, 1],\n    strokeColor: new Color(0, 0.001),\n    visible: false,\n    name: 'keepalive'\n  });\n}\n\nfunction startKeepaliveAnimation() {\n  keepaliveShape.visible = true;\n  keepaliveInterval = setInterval(function () {\n    keepaliveShape.rotation += 5;\n  }, 40);\n};\n\nfunction stopKeepaliveAnimation() {\n  keepaliveShape.visible = false;\n  clearInterval(keepaliveInterval);\n}\n\nfunction destroyGroupPops(group) {\n  // console.log('destroying pops');\n  var groupPopsBefore = util.getGroupPops(group);\n  // console.log('pops to be destroyed', groupPopsBefore);\n  if (groupPopsBefore.length > 0) {\n    groupPopsBefore.forEach(function (pop) {\n      pop.remove();\n    });\n  }\n  var groupPopsAfter = util.getGroupPops(group);\n  // console.log('group pops after', groupPopsAfter);\n}\n\nfunction fillInGroupPopsById(groupId) {\n  var group = paper.project.getItem({\n    className: 'Group',\n    match: function match(el) {\n      return el.id === groupId;\n    }\n  });\n\n  if (!!group && group.children.length > 0) {\n    group.children.forEach(function (groupChild) {\n      if (groupChild.name === 'loop') {\n        toggleFill(groupChild);\n      }\n    });\n  }\n}\n\nfunction toggleFill(item) {\n  var transparent = color.transparent;\n  // console.log('hit');\n  var parent = item.parent;\n\n  // console.log('hit item', item);\n  // console.log('hit parent', parent);\n\n  if (item.data.interior) {\n    // console.log('interior');\n    item.data.transparent = !item.data.transparent;\n\n    if (item.data.transparent) {\n      // console.log('transparent');\n      item.fillColor = transparent;\n    } else {\n      // console.log('not transparent');\n      item.fillColor = parent.data.color;\n    }\n    item.strokeColor = transparent;\n\n    window.kan.moves.push({\n      type: 'fillChange',\n      id: item.id,\n      fill: parent.data.color,\n      transparent: item.data.transparent\n    });\n  } else {\n    // console.log('not interior');\n    // check if item is a pop, because then we'll fill the pop's parent\n    if (!!item.data && item.data.pop === true) {\n      if (!!item.parent) {\n        if (config.pop === true) {\n          fillInGroupPopsById(item.parent.id);\n        }\n      }\n    }\n  }\n}\n\nfunction cleanUpGroup(group) {\n  var acceptableNames = ['mask', 'outer', 'shapePath', 'loop', 'pop'];\n\n  group.children.forEach(function (groupChild) {\n    if (groupChild.className === 'CompoundPath' || groupChild.name === null || !acceptableNames.includes(groupChild.name) || !groupChild.length > 0) {\n      groupChild.remove();\n    }\n  });\n\n  // NO IDEA WHY I STILL HAVE TO DO THIS, IT SHOULD BE DELETED BY NOW\n  try {\n    if ('outer 1' in group._namedChildren) {\n      group._namedChildren['outer 1'].forEach(function (child) {\n        child.remove();\n      });\n      delete group._namedChildren['outer 1'];\n    }\n  } catch (e) {\n    console.log('issue deleting unwanted child');\n  }\n\n  return group;\n}\n\nfunction updatePops() {\n  var freshGroups = util.getFreshGroups();\n  var popCandidates = util.getPopCandidates();\n  var allPops = util.getAllPops();\n  popCandidates.reverse();\n  // console.log('freshGroups', freshGroups);\n  // console.log('popCandidates', popCandidates);\n  // clearPops();\n\n  freshGroups.forEach(function (freshGroup, i) {\n    // if (i >= 4) return;\n    // console.log('freshGroup', freshGroup);\n\n    var freshOuter = freshGroup._namedChildren.mask[0];\n    freshOuter.bringToFront();\n    // freshOuter.visible = true;\n    // freshOuter.fillColor = 'black';\n    // freshOuter.selected = true;\n    // console.log('freshOuter', freshOuter);\n    // freshOuter.selected = true;\n    popCandidates.forEach(function (otherGroup, j) {\n      var otherGroupOuter = otherGroup._namedChildren.mask[0];\n      if (freshGroup.id !== otherGroup.id) {\n        // console.log('otherGroup', otherGroup);\n        // console.log('otherGroupOuter', otherGroupOuter);\n        // otherGroupOuter.fillColor = 'white';\n        otherGroupOuter.bringToFront();\n        var thisPop = freshOuter.intersect(otherGroupOuter);\n        if (!!thisPop && thisPop.length > 0) {\n          // const popColor = color.getIndexedPopColor(i + j);\n          var popColor = color.getRandomPop();\n          thisPop.fillColor = popColor;\n          thisPop.strokeColor = transparent;\n          thisPop.data.pop = true;\n          thisPop.name = 'pop';\n          thisPop.data.popGroup = freshGroup.id;\n          thisPop.data.intersectingGroup = otherGroup.id;\n          thisPop.visible = true;\n          thisPop.closed = true;\n          thisPop.bringToFront();\n          freshGroup.addChild(thisPop);\n        }\n\n        cleanUpGroup(freshGroup);\n\n        // figure out if this pop intersects any other pops\n        // allPops.forEach(function(otherPop, k) {\n        //   console.log('checking other pop', otherPop);\n        //   if (thisPop.id !== otherPop.id && thisPop.intersects(otherPop)) {\n        //     let popIntersection = thisPop.getIntersections(otherPop);\n        //     if (!!popIntersection && popIntersection.length > 0) {\n        //       popIntersection = new Path([popIntersection])\n        //       console.log('popIntersection', popIntersection);\n        //       // const popColor = color.getIndexedPopColor(i + j + k);\n        //       const popColor = color.getRandomPop();\n        //       popIntersection.data.pop = true;\n        //       popIntersection.fillColor = popColor\n        //       popIntersection.strokeColor = popColor;\n        //       popIntersection.visible = true;\n        //       popIntersection.closed = true;\n        //       popIntersection.bringToFront();\n        //     }\n        //   }\n        // });\n      }\n    });\n\n    freshGroup.data.fresh = false;\n  });\n}\n\nfunction getOutlineGroup(truedShape) {\n  // console.log('truedShape', truedShape);\n  var outerPath = new Path();\n  outerPath.name = 'outer';\n  outerPath.visible = true;\n\n  var middlePath = new Path();\n  middlePath.name = 'middle';\n  var sizes = [];\n  var angle = null,\n      lastAngle = null,\n      angleDelta = void 0;\n\n  var firstTop = null,\n      firstBottom = null;\n  var lastTop = null,\n      lastBottom = null;\n\n  if (!(truedShape.length > 0)) return new Group(outerPath, middlePath);\n\n  middlePath.add(truedShape.firstSegment.point);\n\n  for (var i = 0; i < truedShape.length; i += 10) {\n    while (sizes.length > 10) {\n      sizes.shift();\n    }\n\n    var size = Math.random() * 9; // This is just random variance\n    sizes.push(size);\n\n    var cumSize = 0;\n    for (var j = 0; j < sizes.length; j++) {\n      cumSize += sizes[j];\n    }\n    var avgSize = Math.max(5, (cumSize / sizes.length + size) / 2);\n\n    var point = truedShape.getPointAt(i);\n    var normal = truedShape.getNormalAt(i);\n\n    var top = new Point(point.x + normal.x * avgSize, point.y + normal.y * avgSize);\n    var bottom = new Point(point.x - normal.x * avgSize, point.y - normal.y * avgSize);\n\n    // console.log('point', point, 'normal', normal);\n    // console.log('top', top, 'bottom', bottom);\n\n    outerPath.add(top);\n    outerPath.insert(0, bottom);\n    middlePath.add(point);\n\n    lastAngle = angle;\n\n    if (i == 10) {\n      firstTop = top;\n      firstBottom = bottom;\n    } else {\n      lastTop = top;\n      lastBottom = bottom;\n    }\n  }\n\n  if (truedShape.closed === true) {\n    var centerTop = new Point((firstTop.x + lastTop.x) / 2, (firstTop.y + lastTop.y) / 2);\n    var centerBottom = new Point((firstBottom.x + lastBottom.x) / 2, (firstBottom.y + lastBottom.y) / 2);\n    var center = new Point((centerTop.x + centerBottom.x) / 2, (centerTop.y + centerBottom.y) / 2);\n\n    outerPath.add(centerTop);\n    outerPath.insert(0, centerBottom);\n    middlePath.add(center);\n\n    outerPath.add(firstTop);\n    outerPath.insert(0, firstBottom);\n    middlePath.closed = true;\n  }\n\n  outerPath.flatten(50);\n  middlePath.flatten(50);\n  outerPath.simplify();\n  middlePath.simplify();\n\n  outerPath.selected = false;\n  // middlePath.selected = true;\n  outerPath.name = 'outer';\n  middlePath.name = 'middle';\n  var returnGroup = new Group(outerPath, middlePath);\n  return returnGroup;\n}\n\nfunction getTruedShape(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n  // console.log('pathClone', pathClone);\n  var completedPath = getCompletedPath(pathClone);\n  // completedPath.reduce();\n\n  // true the path!\n  var truedPath = completedPath;\n  // console.log('truedPath', truedPath);\n\n  truedPath.strokeWidth = pathClone.strokeWidth;\n\n  pathClone.remove();\n  return truedPath;\n}\n\n// extend or trim path if the ends are close\nfunction getCompletedPath(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n  pathClone.reduce();\n  pathClone.simplify();\n\n  var intersections = pathClone.getIntersections();\n\n  if (intersections.length > 0) {\n    // trim path if ends are close\n    var trimmedPath = getTrimmedPath(pathClone);\n\n    pathClone.remove();\n\n    return trimmedPath;\n  } else {\n    // extend path to see if an intersection is near\n    var extendedPath = getExtendedPath(pathClone);\n    var _intersections = extendedPath.getIntersections();\n\n    // pathClone.remove();\n\n    if (_intersections.length > 0) {\n      // trim extra extended path\n      var _trimmedPath = getTrimmedPath(extendedPath);\n      extendedPath.remove();\n      return _trimmedPath;\n    } else {\n      // extended path does not intersect, return the original path\n      extendedPath.replaceWith(getBruteExtendedPath(pathClone));\n      if (extendedPath !== null) {\n        var _intersections2 = extendedPath.getIntersections();\n\n        if (_intersections2.length > 0) {\n          var _trimmedPath2 = getTrimmedPath(extendedPath);\n          extendedPath.remove();\n          return _trimmedPath2;\n        }\n\n        if (!!extendedPath && extendedPath.length > 0) {\n          extendedPath.remove();\n        }\n      }\n\n      pathClone.visible = true;\n      return pathClone;\n    }\n  }\n}\n\nfunction getShapePrediction(path) {\n  var prediction = {};\n\n  var shapeJSON = path.exportJSON();\n  var shapeData = processShapeData(shapeJSON);\n  console.log(JSON.stringify(shapeData));\n  var shapePrediction = detector.spot(shapeData);\n\n  if (shapePrediction.score === 0) {\n    // algorithm doesn't like vertical lines for some reason\n    // if the certainty is 0 it's probably a line\n    prediction.pattern = \"line\";\n    prediction.score = 0.9;\n  } else {\n    if (shapePrediction.score > 0.5) {\n      prediction.pattern = shapePrediction.pattern;\n    } else {\n      prediction.pattern = \"other\";\n    }\n    prediction.score = shapePrediction.score;\n  }\n\n  if (path.closed === true) {\n    var closedShapes = ['triangle', 'square', 'circle'];\n    if (closedShapes.includes(prediction.pattern) === false) {\n      // closed shape should be one of the above, make a random pick\n      prediction.pattern = util.randomPick(closedShapes);\n    } else if (prediction.score < 0.65 && prediction.pattern !== 'circle') {\n      // for some reason triangles and squares are often confused. if the confidence is low enough, they're probably swapped\n      if (prediction.pattern === 'square') {\n        prediction.pattern = 'triangle';\n      } else if (prediction.pattern === 'triangle') {\n        prediction.pattern = 'square';\n      }\n    }\n  } else if (path.intersects(path) === true) {\n    prediction.pattern = 'other';\n    // const intersectingShapes = ['triangle', 'square', 'circle', 'other'];\n    // if (intersectingShapes.includes(prediction.pattern) === false) {\n    //   prediction.pattern = util.randomPick(intersectingShapes);\n    // }\n  } else {\n    prediction.pattern = 'line'; // lines are the only shape that is not closed and does not intersect\n  }\n\n  console.log('shape prediction', prediction);\n\n  return prediction;\n}\n\n// floors the coordinates of a point\nfunction getIntegerPoint(point) {\n  return new Point(Math.floor(point.x), Math.floor(point.y));\n}\n\nfunction stringifyPoint(point) {\n  return Math.floor(point.x) + ',' + Math.floor(point.y);\n}\n\nfunction parsePoint(pointStr) {\n  var split = pointStr.split(',').map(function (num) {\n    return Math.floor(num);\n  });\n\n  if (split.length >= 2) {\n    return new Point(split[0], split[1]);\n  }\n\n  return null;\n}\n\nfunction getClosestPointFromPathData(point, pathData) {\n  var leastDistance = void 0,\n      closestPoint = void 0;\n\n  Base.each(pathData, function (datum, i) {\n    var distance = point.getDistance(datum.point);\n    if (!leastDistance || distance < leastDistance) {\n      leastDistance = distance;\n      closestPoint = datum.point;\n    }\n  });\n\n  return closestPoint || point;\n}\n\nfunction processShapeData(json) {\n  var returnShape = [];\n  var jsonObj = JSON.parse(json)[1]; // zero index is stringified type (e.g. \"Path\")\n\n  if ('segments' in jsonObj) {\n    var segments = jsonObj.segments;\n    Base.each(segments, function (segment, i) {\n      if (segment.length === 3) {\n        var positionInfo = segment[0]; // indexes 1 and 2 are superfluous matrix details\n        returnShape.push({\n          x: positionInfo[0],\n          y: positionInfo[1]\n        });\n      } else {\n        returnShape.push({\n          x: segment[0],\n          y: segment[1]\n        });\n      };\n    });\n  }\n  return returnShape;\n}\n\nfunction findInteriorCurves(path) {\n  var transparent = color.transparent;\n\n  var interiorCurves = [];\n\n  var pathClone = path.clone();\n  var intersections = pathClone.getIntersections();\n  console.log('intersections', intersections);\n\n  if (intersections.length > 0) {\n    console.log('aaa');\n    var dividedPath = pathClone.resolveCrossings();\n    console.log('dividedPath', dividedPath);\n\n    if (dividedPath.className === 'CompoundPath') {\n      console.log('bbb');\n      dividedPath.children.forEach(function (child) {\n        console.log('child', child);\n        if (child.length > 0 && child.closed) {\n          console.log('ccc');\n          var enclosedLoop = child;\n          if (pathClone.closed) {\n            console.log('ddd');\n            enclosedLoop.fillColor = pathClone.strokeColor;\n            enclosedLoop.data.transparent = false;\n          } else {\n            console.log('eee');\n            enclosedLoop.fillColor = transparent;\n            enclosedLoop.data.transparent = true;\n          }\n          console.log('fff');\n          enclosedLoop.data.interior = true;\n          enclosedLoop.visible = true;\n          enclosedLoop.closed = true;\n          enclosedLoop.strokeColor = transparent;\n          interiorCurves.push(enclosedLoop);\n        } else {\n          console.log('kkk');\n        }\n\n        // child.remove();\n      });\n    } else {\n      console.log('ggg');\n      if (pathClone.closed) {\n        console.log('hhh');\n        var enclosedLoop = pathClone.clone();\n        enclosedLoop.visible = true;\n        enclosedLoop.fillColor = pathClone.strokeColor;\n        enclosedLoop.strokeColor = transparent;\n        enclosedLoop.data.interior = true;\n        enclosedLoop.data.transparent = false;\n        interiorCurves.push(enclosedLoop);\n      }\n    }\n  } else {\n    console.log('iii');\n    if (pathClone.closed) {\n      console.log('jjj');\n      var _enclosedLoop = pathClone.clone();\n      _enclosedLoop.visible = true;\n      _enclosedLoop.fillColor = pathClone.strokeColor;\n      _enclosedLoop.strokeColor = transparent;\n      _enclosedLoop.data.interior = true;\n      _enclosedLoop.data.transparent = false;\n      interiorCurves.push(_enclosedLoop);\n    }\n  }\n\n  return interiorCurves;\n}\n\nfunction getExtendedPath(path) {\n  var bruteForce = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var extendedPath = path.clone();\n  extendedPath.visible = false;\n\n  var thresholdDist = thresholdDistMultiplier * extendedPath.length;\n\n  var firstSegment = extendedPath.firstSegment;\n  var nextSegment = firstSegment.next;\n  var startAngle = Math.atan2(nextSegment.point.y - firstSegment.point.y, nextSegment.point.x - firstSegment.point.x); // rad\n  var inverseStartAngle = startAngle + Math.PI;\n  var extendedStartPoint = new Point(firstSegment.point.x + Math.cos(inverseStartAngle) * thresholdDist / 2, firstSegment.point.y + Math.sin(inverseStartAngle) * thresholdDist / 2);\n  extendedPath.insert(0, extendedStartPoint);\n\n  var lastSegment = extendedPath.lastSegment;\n  var penSegment = lastSegment.previous; // penultimate\n  var endAngle = Math.atan2(lastSegment.point.y - penSegment.point.y, lastSegment.point.x - penSegment.point.x); // rad\n  var extendedEndPoint = new Point(lastSegment.point.x + Math.cos(endAngle) * thresholdDist / 2, lastSegment.point.y + Math.sin(endAngle) * thresholdDist / 2);\n  extendedPath.add(extendedEndPoint);\n\n  // extendedPath.visible = true;\n\n  return extendedPath;\n}\n\nfunction getBruteExtendedPath(path) {\n  var extendedPath = path.clone();\n  extendedPath.visible = false;\n\n  var thresholdDist = thresholdDistMultiplier * extendedPath.length;\n  var firstPoint = extendedPath.firstSegment.point;\n  var lastPoint = extendedPath.lastSegment.point;\n\n  if (firstPoint.getDistance(lastPoint) < thresholdDist) {\n    extendedPath.insert(0, lastPoint);\n    extendedPath.add(firstPoint);\n    extendedPath.closed = true;\n    extendedPath.unite();\n    var crossings = extendedPath.resolveCrossings();\n    if (!!crossings && !!crossings.children && crossings.children.length > 0) {\n      (function () {\n        var maxArea = 0,\n            maxChild = null;\n        crossings.children.forEach(function (child) {\n          if (child.area > maxArea) {\n            maxChild = child;\n            maxArea = child.area;\n          }\n        });\n\n        extendedPath = maxChild;\n      })();\n    }\n  }\n\n  return extendedPath;\n}\n\nfunction getTrimmedPath(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n\n  var firstPoint = pathClone.firstSegment.point;\n  var lastPoint = pathClone.lastSegment.point;\n  var thresholdDist = thresholdDistMultiplier * pathClone.length;\n\n  var intersections = pathClone.getIntersections();\n  intersections.forEach(function (intersection, i) {\n    if (intersection.offset === 0) {\n      intersections.splice(i, 1);\n    }\n  });\n\n  // console.log('intersections', intersections);\n\n  if (intersections.length == 1) {\n    for (var i = 0; i < intersections.length; i++) {\n      var intersectionPoint = intersections[i].point;\n\n      // if the average of the distance between the first and last points and the intersection point is within the threshold, trim\n      if (firstPoint.getDistance(intersectionPoint) + lastPoint.getDistance(intersectionPoint) < 2 * thresholdDist) {\n        // console.log('trimming path');\n        var dividedPath = pathClone.clone(); // resolve crossings seems to modify the path it was passed, so make an extra clone to be safe\n        dividedPath.visible = false;\n        var pathCrossings = dividedPath.resolveCrossings();\n\n        if (pathCrossings.className === 'CompoundPath' && pathCrossings.children.length > 0) {\n          for (var j = 0; j < pathCrossings.children.length; j++) {\n            var child = pathCrossings.children[j];\n            if (child.closed) {\n              // child.selected = true;\n              dividedPath = dividedPath.subtract(child);\n            }\n          }\n        }\n\n        // dividedPath.selected = true;\n\n        var trimmedPath = pathClone.subtract(dividedPath);\n        if (trimmedPath.length === 0) return pathClone;\n        if (trimmedPath.className === 'CompoundPath' && trimmedPath.children.length > 0) {\n          var _ret2 = function () {\n            var closedChildren = [];\n            trimmedPath.children.forEach(function (child, i) {\n              if (child.length > 0 && child.closed) {\n                var childClone = child.clone();\n                childClone.visible = false;\n                closedChildren.push(childClone);\n              }\n            });\n\n            if (closedChildren.length > 0) {\n              if (closedChildren.length > 1) {\n                // for some reason there are more than one closed children, merge them\n                var accumulator = closedChildren[0];\n\n                for (var _j = 1; _j < closedChildren.length; _j++) {\n                  accumulator = accumulator.unite(closedChildren[_j]);\n                }\n\n                if (accumulator.length > 0 && accumulator.className === 'Path') {\n                  // console.log('trimmed accumulator', accumulator);\n                  var newPath = new Path();\n                  newPath.copyContent(accumulator);\n                  newPath.copyAttributes(pathClone);\n                  accumulator.remove();\n                  pathClone.remove();\n                  dividedPath.remove();\n                  trimmedPath.remove();\n                  return {\n                    v: newPath\n                  };\n                }\n              }\n\n              pathClone.remove();\n              dividedPath.remove();\n              trimmedPath.remove();\n              // console.log('trimmed closedChildren[0]', closedChildren[0]);\n              return {\n                v: closedChildren[0]\n              };\n            }\n          }();\n\n          if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n        }\n\n        // console.log('trimmed path return', trimmedPath);\n        // console.log('path clone', pathClone);\n        // console.log('dividedPath', dividedPath);\n        pathClone.remove();\n        dividedPath.remove();\n        return trimmedPath;\n      }\n    }\n\n    // no close intersection were found so nothing can be trimmed\n    return pathClone;\n  } else {\n    return path;\n  }\n}\n\nfunction hitTestGroupBounds(point) {\n  var groups = util.getVisibleGroups();\n  return hitTestBounds(point, groups);\n}\n\nfunction hitTestBounds(point, children) {\n  if (!point) return null;\n\n  for (var i = children.length - 1; i >= 0; i--) {\n    var child = children[i];\n    var bounds = child.strokeBounds;\n    if (point.isInside(child.strokeBounds)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n\nfunction init() {\n  initKeepaliveShape();\n}\n\n},{\"./color\":100,\"./config\":101,\"./lib/shape-detector\":102,\"./util\":112}],106:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.asyncRecord = asyncRecord;\nexports.asyncAddCompositionToDb = asyncAddCompositionToDb;\nexports.handleSharePressed = handleSharePressed;\nvar config = require('./config');\n\nvar Promise = require('bluebird');\nvar axios = require('axios');\nvar qs = require('qs');\n\nvar ui = require('./ui');\nvar timing = require('./timing');\nvar overlays = require('./overlays');\nvar sound = require('./sound');\nvar video = require('./video');\n\nvar drawCanvas = document.getElementById(config.canvasId);\n\nfunction asyncStopAudioRecordingAndExportBlob(recorder) {\n  return new Promise(function (resolve, reject) {\n    try {\n      recorder.stop();\n      recorder.exportWAV(function (blob) {\n        resolve(blob);\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nfunction asyncStopVideoRecordingAndExportBlob(recorder) {\n  return new Promise(function (resolve, reject) {\n    try {\n      recorder.stopRecording(function () {\n        var blob = recorder.getBlob();\n        resolve(blob);\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nfunction asyncRecord() {\n  return new Promise(function (resolve, reject) {\n    try {\n      (function () {\n        var audioRecorder = new Recorder(Howler.masterGain, {\n          workerPath: '/js/lib/recorderWorker.js'\n        });\n        var canvasRecorder = RecordRTC(drawCanvas, {\n          type: 'canvas'\n        });\n\n        Howler.mute(false);\n        canvasRecorder.startRecording();\n        audioRecorder.record();\n\n        sound.asyncPlayCompositionOnce().then(function () {\n          return Promise.all([asyncStopAudioRecordingAndExportBlob(audioRecorder), asyncStopVideoRecordingAndExportBlob(canvasRecorder)]).then(function (values) {\n            var _values = _slicedToArray(values, 2),\n                audioBlob = _values[0],\n                videoBlob = _values[1];\n            // console.log('audioBlob', audioBlob);\n            // console.log('videoBlob', videoBlob);\n\n            console.log('sending files');\n\n            var formData = new FormData();\n            formData.append('audio', audioBlob);\n            formData.append('video', videoBlob);\n\n            axios.post('/process', formData).then(function (resp) {\n              var s3Id = resp.data;\n              // fire share modal\n              resolve(s3Id);\n              // window.location.href = `/process?id=${videoId}`;\n            }).catch(function (e) {\n              // there was an error uploading!\n              console.error(e);\n              reject(e);\n            });\n          }).catch(function (e) {\n            console.error(e);\n            reject(e);\n          });\n        }).error(function (e) {\n          return Promise.all([asyncStopAudioRecordingAndExportBlob(audioRecorder), asyncStopVideoRecordingAndExportBlob(canvasRecorder)]).then(function (values) {\n            console.log(values);\n          }).catch(function (e) {\n            console.error(e);\n          }).finally(function () {\n            reject(e);\n          });\n        });\n      })();\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nfunction asyncAddCompositionToDb(data) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var s3Id = data.s3Id;\n      var phone = data.phone;\n      var queryString = qs.stringify({\n        s3Id: s3Id,\n        phone: phone,\n        postKey: config.postKey\n      });\n\n      return axios.post('/composition/new?' + queryString).then(function () {\n        resolve('composition successfully posted');\n      }).catch(function (e) {\n        reject(e);\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nfunction handleSharePressed() {\n  console.log('sharePressed');\n  overlays.openOverlay('share-prepare');\n  clearInterval(window.kan.inactivityTimeout);\n  ui.enterShareMode();\n  overlays.asyncCloseOverlaysAfterDuration(1000 * 1).then(function () {\n    return asyncRecord();\n  }).then(function (s3Id) {\n    console.log('recording done');\n    ui.exitShareMode();\n    overlays.openOverlay('share');\n    return overlays.asyncWaitForWellFormedPhoneNumber(s3Id);\n  }).then(function (resp) {\n    console.log('received well formed phone number');\n    return asyncAddCompositionToDb(resp);\n  }).then(function () {\n    // close overlay\n    overlays.openOverlay('share-confirmation');\n    setTimeout(function () {\n      video.enterTutorialMode();\n    }, 1000 * 4);\n    console.log('close overlay');\n  }).catch(function (e) {\n    // close overlay\n    console.log('error in share mode, going into tutorial');\n    ui.exitShareMode(); // make sure\n    video.enterTutorialMode();\n  });\n}\n\n},{\"./config\":101,\"./overlays\":104,\"./sound\":107,\"./timing\":108,\"./ui\":111,\"./video\":113,\"axios\":1,\"bluebird\":26,\"qs\":31}],107:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.init = init;\nexports.reinitShapeSounds = reinitShapeSounds;\nexports.getShapeSoundObj = getShapeSoundObj;\nexports.startPlaying = startPlaying;\nexports.stopPlaying = stopPlaying;\nexports.asyncInitShapeSounds = asyncInitShapeSounds;\nexports.formatShapeSoundData = formatShapeSoundData;\nexports.quantizeLength = quantizeLength;\nexports.quantizePosition = quantizePosition;\nexports.asyncPlayShape = asyncPlayShape;\nexports.asyncPlayShapeSound = asyncPlayShapeSound;\nexports.removeShapeFromComposition = removeShapeFromComposition;\nexports.clearSoundTimeouts = clearSoundTimeouts;\nexports.startComposition = startComposition;\nexports.asyncPlayCompositionMultipleTimes = asyncPlayCompositionMultipleTimes;\nexports.asyncPlayCompositionOnce = asyncPlayCompositionOnce;\nexports.stopComposition = stopComposition;\nexports.getTrimmedCompositionObj = getTrimmedCompositionObj;\nrequire('howler');\nvar Promise = require(\"bluebird\");\n\nvar ui = require('./ui');\nvar shape = require('./shape');\nvar color = require('./color');\nvar overlays = require('./overlays');\nvar tutorial = require('./tutorial');\nvar animation = require('./animation');\nvar util = require('./util');\n\nvar $body = $('body');\n\nvar measures = 4;\nvar bpm = 120;\nvar beatLength = 60 / bpm * 1000; // ms\nvar measureLength = exports.measureLength = beatLength * 4;\nvar compositionLength = exports.compositionLength = measureLength * measures;\n\nvar playingClass = exports.playingClass = 'playing';\nvar playEnabledClass = exports.playEnabledClass = 'play-enabled';\n\nfunction init() {\n  Howler.autoSuspend = false; // don't dump sounds from cache after inactivity (causes some issues in kiosk mode)\n  return asyncInitShapeSounds();\n}\n\nfunction reinitShapeSounds() {\n  return asyncInitShapeSounds();\n}\n\nfunction getShapeSoundObj(path) {\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var shapeSounds = window.kan.shapeSounds || initShapeSounds();\n  // alert(JSON.stringify(window.kan.shapeSounds));\n  // console.log(JSON.stringify(window.kan.shapeSounds));\n\n  var shapePrediction = shape.getShapePrediction(path);\n  var colorName = color.getPathColorName(path);\n  if (colorName === null) colorName = 'black'; // just in case\n\n  var quantizedSoundStartTime = quantizeLength(path.bounds.x / viewWidth * compositionLength); // ms\n  var quantizedSoundDuration = quantizeLength(path.bounds.width / viewWidth * compositionLength); // ms\n\n  var soundObj = {};\n  soundObj.sound = shapeSounds[shapePrediction.pattern];\n  soundObj.startTime = quantizedSoundStartTime;\n  soundObj.duration = quantizedSoundDuration;\n  soundObj.pathId = path.id;\n  soundObj.spriteName = colorName;\n  soundObj.groupId = path.parent.id;\n  soundObj.play = function () {\n    return new Promise(function (resolve, reject) {\n      soundObj.sound.play(soundObj.spriteName);\n      soundObj.sound.on('end', function () {\n        resolve('Group ' + soundObj.groupId + ' done playing sound');\n      });\n      soundObj.sound.on('loaderror', function () {\n        reject('Group ' + soundObj.groupId + ' failed to load sound');\n      });\n    });\n  };\n\n  return soundObj;\n}\n\nfunction startPlaying() {\n  // console.log('first time', window.kan.firstTimePlaying);\n  if ($body.hasClass(playEnabledClass)) {\n    $body.addClass(playingClass);\n\n    Howler.mute(false);\n\n    window.kan.playing = true;\n\n    if (window.kan.firstTimePlaying === true) {\n      window.kan.firstTimePlaying = false;\n      startComposition(window.kan.composition, false);\n    } else {\n      startComposition(window.kan.composition, true);\n    }\n  } else {\n    window.kan.playing = false;\n    $body.removeClass(playingClass);\n  }\n}\n\nfunction stopPlaying() {\n  var mute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (!!mute) {\n    Howler.mute(true);\n  }\n\n  window.kan.playing = false;\n  $body.removeClass(playingClass);\n\n  stopComposition();\n}\n\nfunction asyncGetShapeSoundFromShapeName(shapeName) {\n  var shapeSoundJSONPath = './audio/shapes/' + shapeName + '/' + shapeName + '.json';\n  return $.getJSON(shapeSoundJSONPath).then(function (resp) {\n    var shapeSoundData = formatShapeSoundData(shapeName, resp);\n    var sound = new Howl(shapeSoundData);\n    return {\n      shapeName: shapeName,\n      sound: sound\n    };\n  });\n}\n\nfunction asyncInitShapeSounds() {\n  var returnSounds = {};\n  var extensions = ['ogg', 'm4a', 'mp3', 'ac3'];\n\n  var shapeNames = shape.shapeNames;\n  var promises = [];\n  Base.each(shapeNames, function (shapeName) {\n    promises.push(asyncGetShapeSoundFromShapeName(shapeName));\n  });\n\n  return $.when.apply($, promises).done(function () {\n    var returnSounds = {};\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      returnSounds[arg.shapeName] = arg.sound;\n    }\n\n    window.kan.shapeSounds = returnSounds;\n    return returnSounds;\n  });\n}\n\nfunction formatShapeSoundData(shapeName, data) {\n  var returnData = {};\n\n  returnData.src = data.urls.map(function (url) {\n    return './audio/shapes/' + shapeName + '/' + url;\n  });\n  returnData.sprite = data.sprite;\n  returnData.html5 = false;\n  returnData.loop = false;\n\n  return returnData;\n}\n\nfunction quantizeLength(duration) {\n  var smallestDuration = 60 / bpm;\n  var returnDuration = Math.floor(duration / smallestDuration) * smallestDuration;\n\n  if (returnDuration > 0) {\n    return returnDuration;\n  } else {\n    // always return something greater than zero\n    return smallestDuration;\n  }\n}\n\nfunction quantizePosition(position, viewWidth) {\n  var smallestInterval = viewWidth / (4 * measures);\n  return returnPosition = Math.floor(position / smallestInterval) * smallestInterval;\n}\n\nfunction asyncPlayShape(shapeSoundObj) {\n  return new Promise(function (resolve, reject) {\n    Promise.all([asyncPlayShapeSound(shapeSoundObj), animation.asyncPlayShapeAnimation(shapeSoundObj.groupId)]).then(function () {\n      resolve('Group ' + shapeSoundObj.groupId + ' fully done playing');\n    }).error(function (e) {\n      reject('Group ' + shapeSoundObj.groupId + ' errored while playing: ' + e);\n    });\n  });\n}\n\nfunction asyncPlayShapeSound(shapeSoundObj) {\n  return new Promise(function (resolve, reject) {\n    try {\n      // console.log('playing: ', shapeSoundObj.sound, shapeSoundObj.spriteName, shapeSoundObj.startTime);\n      shapeSoundObj.play().then(function (res) {\n        resolve(res);\n      }).catch(function (e) {\n        reject(e);\n      });\n    } catch (e) {\n      reject('Error playing shapeSoundObj sound: ' + e);\n    }\n  });\n}\n\nfunction removeShapeFromComposition(shapeGroup) {\n  var _loop = function _loop(i) {\n    var sound = window.kan.composition[i];\n\n    if ('groupId' in sound) {\n      if (sound.groupId === shapeGroup.id) {\n        window.kan.composition.splice(i, 1);\n        return {\n          v: void 0\n        };\n      }\n    } else if ('pathId' in sound) {\n      var item = getItems({\n        match: function match(el) {\n          return el.id === sound.pathId;\n        }\n      });\n      if (item.length > 0) {\n        if (!!item.parent && item.parent.className === 'Group' && item.parent.id === shapeGroup.id) {\n          window.kan.composition.splice(i, 1);\n          return {\n            v: void 0\n          };\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < window.kan.composition.length; i++) {\n    var _ret = _loop(i);\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n}\n\nfunction clearSoundTimeouts() {\n  if (window.kan.soundTimeouts.length > 0) {\n    window.kan.soundTimeouts.forEach(function (soundTimeout) {\n      clearTimeout(soundTimeout);\n    });\n  }\n\n  window.kan.soundTimeouts = [];\n}\n\nfunction startComposition(composition) {\n  var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  stopComposition();\n  tutorial.hideContextualTuts();\n\n  clearTimeout(window.kan.playPromptTimeout);\n\n  var iterations = 0;\n  playCompositionFirstTime();\n\n  function playCompositionFirstTime() {\n    clearSoundTimeouts();\n    // console.log('playing composition first time');\n    var trimmedCompositionObj = getTrimmedCompositionObj(composition);\n\n    Base.each(trimmedCompositionObj.composition, function (shapeSoundObj, i) {\n      var soundTimeout = setTimeout(function () {\n        if (!window.kan.playing) {\n          // console.log('not playing, returning');\n          return;\n        }\n\n        if (shapeSoundObj.spriteName === null) {\n          // console.log('%cshapeSoundObj is null', 'color:red', shapeSoundObj);\n          return;\n        }\n\n        asyncPlayShape(shapeSoundObj).then(function (res) {\n          console.log(res);\n        }).error(function (e) {\n          console.log('Error playing shapeSoundObj', e);\n        });\n      }, shapeSoundObj.startTime);\n      window.kan.soundTimeouts.push(soundTimeout);\n    });\n\n    iterations++;\n    window.kan.compositionTimeout = setTimeout(repeatComposition, compositionLength - trimmedCompositionObj.startTime);\n  }\n\n  function playCompositionOnce() {\n    clearSoundTimeouts();\n    // console.log('repeat');\n    Base.each(composition, function (shapeSoundObj, i) {\n      var soundTimeout = setTimeout(function () {\n        if (!window.kan.playing) {\n          // console.log('not playing, returing');\n          return;\n        }\n\n        // console.log('playing: ', shapeSoundObj.sound, shapeSoundObj.spriteName, shapeSoundObj.startTime);\n        asyncPlayShape(shapeSoundObj).then(function (res) {\n          console.log(res);\n        }).error(function (e) {\n          console.log('Error playing shapeSoundObj', e);\n        });\n      }, shapeSoundObj.startTime);\n      window.kan.soundTimeouts.push(soundTimeout);\n    });\n    iterations++;\n  }\n\n  function repeatComposition() {\n    if (loop === true) {\n      playCompositionOnce();\n      window.kan.compositionInterval = setInterval(playCompositionOnce, compositionLength);\n    } else {\n      if (iterations < 2) {\n        playCompositionOnce();\n        setTimeout(repeatComposition, compositionLength);\n      } else {\n        stopPlaying();\n        overlays.openOverlay('share-prompt');\n      }\n    }\n  }\n}\n\nfunction asyncPlayCompositionMultipleTimes() {\n  var repeats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n  return new Promise(function (resolve, reject) {\n    var promisedRepeats = [];\n\n    for (var i = 0; i < repeats; i++) {\n      promisedRepeats.push(asyncPlayCompositionOnce());\n    }\n\n    Promise.each(promisedRepeats, function () {\n      console.log('repeat');\n    }).then(function () {\n      resolve('Repeats done');\n    }).error(function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction asyncPlayCompositionOnce() {\n  return new Promise(function (resolve, reject) {\n    var composition = window.kan.composition;\n    var startTime = new Date().getTime();\n    clearSoundTimeouts();\n\n    var shapePromises = [];\n\n    shape.startKeepaliveAnimation();\n\n    Base.each(composition, function (shape, i) {\n      shapePromises.push(asyncPlayShapeWithDelay(shape));\n    });\n\n    Promise.all(shapePromises).then(function (res) {\n      var endTime = new Date().getTime();\n      var playTime = endTime - startTime;\n\n      // wait for composition to be fully done before repeating (play is naturally truncated when the last shape finishes playing)\n      if (playTime < compositionLength) {\n        return Promise.delay(compositionLength - playTime).then(function () {\n          shape.stopKeepaliveAnimation();\n          resolve('Composition fully done, after a wait');\n        });\n      } else {\n        shape.stopKeepaliveAnimation();\n        resolve('Composition fully done, with no wait');\n      }\n    }).error(function (e) {\n      shape.stopKeepaliveAnimation();\n      reject(e);\n    });\n  });\n}\n\nfunction asyncPlayShapeWithDelay(shape) {\n  return new Promise(function (resolve, reject) {\n    var soundTimeout = setTimeout(function () {\n      // console.log('playing: ', shape.sound, shape.spriteName, shape.startTime);\n      asyncPlayShape(shape).then(function (res) {\n        resolve(res);\n      }).error(function (e) {\n        reject('Error playing shape with delay: ' + e);\n      });\n    }, shape.startTime);\n    window.kan.soundTimeouts.push(soundTimeout);\n  });\n}\n\nfunction stopComposition() {\n  clearInterval(window.kan.compositionInterval);\n  clearTimeout(window.kan.compositionTimeout);\n  clearSoundTimeouts();\n}\n\nfunction getTrimmedCompositionObj(composition) {\n  var firstTime = 0;\n  var trimmedComposition = [];\n  var startTime = getCompositionStartTime(composition);\n\n  composition.forEach(function (sound) {\n    var modifiedSound = util.shallowCopy(sound);\n    modifiedSound.startTime = sound.startTime - startTime;\n    if (modifiedSound.startTime < 0) modifiedSound.startTime = 0; // this shouldn't happen\n    trimmedComposition.push(modifiedSound);\n  });\n\n  return {\n    composition: trimmedComposition,\n    startTime: startTime\n  };\n}\n\nfunction getCompositionStartTime(composition) {\n  var startTime = compositionLength;\n\n  composition.forEach(function (sound) {\n    // console.log(sound);\n    // console.log(sound.startTime)\n    if ('startTime' in sound && sound.startTime < startTime) {\n      startTime = sound.startTime;\n    }\n  });\n\n  // console.log('start time', startTime);\n\n  if (startTime !== compositionLength) {\n    return startTime;\n  } else {\n    return 0;\n  }\n}\n\n},{\"./animation\":99,\"./color\":100,\"./overlays\":104,\"./shape\":105,\"./tutorial\":110,\"./ui\":111,\"./util\":112,\"bluebird\":26,\"howler\":28}],108:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nexports.preventInactivityTimeout = preventInactivityTimeout;\nvar overlays = require('./overlays');\nvar video = require('./video');\nvar util = require('./util');\n\nvar $body = $('body');\n\nvar drawInactivityDelay = exports.drawInactivityDelay = 40 * 1000; // ms\nvar continueInactivityDelay = exports.continueInactivityDelay = 30 * 1000; // ms\nvar playPromptDelay = exports.playPromptDelay = 60 * 1000; // ms;\nvar inputDelay = exports.inputDelay = 100; // ms\nvar refreshCheckDelay = exports.refreshCheckDelay = 60 * 1000; // ms\nvar overlayDelay = exports.overlayDelay = 1000; // ms\n\nfunction init() {\n  if (window.location.hash.length > 0 && window.location.hash == '#dev') {\n    window.kan.overlays = false;\n    video.pauseVideo();\n    video.exitTutorialMode();\n  } else {\n    video.enterTutorialMode();\n  }\n}\n\nfunction preventInactivityTimeout() {\n  console.log('prevent timeout: ' + util.getTime());\n  // overlays.closeAndResetOverlays();\n\n  // clearTimeout(window.kan.inactivityTimeout);\n  // clearInterval(window.kan.continueCountdownInterval);\n  //\n  // window.kan.inactivityTimeout = setTimeout(function() {\n  //   overlays.openOverlay('continue');\n  // }, drawInactivityDelay);\n}\n\n},{\"./overlays\":104,\"./util\":112,\"./video\":113}],109:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nexports.enableAllEvents = enableAllEvents;\nexports.disableAllEvents = disableAllEvents;\nrequire('hammerjs');\n\nvar config = require('./config');\nvar sound = require('./sound');\nvar color = require('./color');\nvar shape = require('./shape');\nvar util = require('./util');\nvar tutorial = require('./tutorial');\nvar timing = require('./timing');\nvar overlays = require('./overlays');\nvar ui = require('./ui');\nvar animation = require('./animation');\n\nvar $body = $('body');\n\nvar hitOptions = {\n  segments: false,\n  stroke: true,\n  fill: true,\n  tolerance: 5\n};\n\nvar minShapeSize = 100;\nvar maxShapeLength = 5000;\nvar maxScaleFactor = 0.8;\n\nvar outerPath = void 0;\nvar sizes = [];\nvar size = void 0;\nvar cumSize = void 0;\nvar prevPoint = void 0;\n\nvar hammerTips = exports.hammerTips = void 0;\nvar hammerCanvas = exports.hammerCanvas = void 0;\n\nfunction init() {\n  exports.hammerTips = hammerTips = new Hammer.Manager(ui.tipsOverlay);\n  hammerTips.add(new Hammer.Swipe({ direction: Hammer.DIRECTION_ALL }));\n  hammerTips.on('swipe', overlays.cardNavNext);\n\n  exports.hammerCanvas = hammerCanvas = new Hammer.Manager(ui.drawCanvas);\n  hammerCanvas.add(new Hammer.Tap({ event: 'doubletap', taps: 2, interval: 400, time: 150, posThreshold: 50 }));\n  hammerCanvas.add(new Hammer.Tap({ event: 'singletap' }));\n  hammerCanvas.add(new Hammer.Pan({ direction: Hammer.DIRECTION_ALL }));\n  hammerCanvas.add(new Hammer.Pinch());\n\n  hammerCanvas.get('doubletap').recognizeWith('singletap');\n  // hammerCanvas.get('singletap').requireFailure('doubletap');\n  hammerCanvas.get('pan').requireFailure('pinch');\n  hammerCanvas.get('pinch').requireFailure('pan');\n\n  // hammerCanvas.on('singletap', singleTap);\n  hammerCanvas.on('doubletap', doubleTap);\n\n  hammerCanvas.on('panstart', panStart);\n  hammerCanvas.on('panmove', panMove);\n  hammerCanvas.on('panend', panEnd);\n  // hammerCanvas.on('pancancel', panCancel);\n\n  hammerCanvas.on('pinchstart', pinchStart);\n  hammerCanvas.on('pinchmove', pinchMove);\n  hammerCanvas.on('pinchend', pinchEnd);\n  // hammerCanvas.on('pinchcancel', pinchCancel);\n}\n\nfunction enableAllEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enableTapEvents(enable);\n  enablePanAndPinchEvents(enable);\n}\n\nfunction disableAllEvents() {\n  enableAllEvents(false);\n}\n\nfunction enablePanAndPinchEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n  enablePanEvents(enable);\n  enablePinchEvents(enable);\n}\n\nfunction enableTapEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n  hammerCanvas.get('singletap').set({ enable: enable });\n  hammerCanvas.get('doubletap').set({ enable: enable });\n}\n\nfunction disableTapEvents() {\n  enableTapEvents(false);\n}\n\nfunction enablePanEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n\n  hammerCanvas.get('pan').set({ enable: enable });\n  // hammerCanvas.get('panstart').set({enable: enable});\n  // hammerCanvas.get('panmove').set({enable: enable});\n  // hammerCanvas.get('panend').set({enable: enable});\n}\n\nfunction disablePanEvents() {\n  enablePanEvents(false);\n}\n\nfunction enablePinchEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n\n  hammerCanvas.get('pinch').set({ enable: enable });\n  // hammerCanvas.get('pinchstart').set({enable: enable});\n  // hammerCanvas.get('pinchmove').set({enable: enable});\n  // hammerCanvas.get('pinchend').set({enable: enable});\n}\n\nfunction disablePinchEvents() {\n  enablePinchEvents(false);\n}\n\nfunction singleTap(event) {\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = paper.project.hitTest(point, hitOptions);\n\n  if (hitResult) {\n    var item = hitResult.item;\n    // item.selected = !item.selected;\n    console.log(item);\n  }\n}\n\nfunction doubleTap(event) {\n  event.preventDefault();\n  // console.log('doubletap');\n\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = paper.project.hitTest(point, hitOptions);\n\n  if (!eventTargetIsOnCanvas(event)) return;\n\n  if (hitResult) {\n    shape.toggleFill(hitResult.item);\n    tutorial.hideContextualTutByName('fill');\n  } else {\n    window.kan.pinchedGroup = null;\n    // console.log('hit no item');\n  }\n}\n\nfunction panStart(event) {\n  // console.log(event);\n  // console.log('panstart');\n  // paper.project.activeLayer.removeChildren(); // REMOVE\n  // event.preventDefault();\n  var currentColor = color.getCurrentColor();\n  timing.preventInactivityTimeout();\n\n  if (!eventTargetIsOnCanvas(event)) {\n    window.kan.panning = false;\n    // check if tips modal is up\n    if ($body.hasClass('overlay-active tips-active')) {\n      // if so, go to next tip card\n      overlays.cardNavNext();\n    }\n    event.srcEvent.stopPropagation();\n    return;\n  }\n\n  window.kan.panning = true;\n\n  hammerCanvas.off('panstart');\n  // hammerCanvas.get('pan').set({enable: false});\n  disablePinchEvents();\n  disableTapEvents();\n\n  // ignore other touch inputs\n  // if (window.kan.pinching) return;\n  // if (!(event.changedPointers && event.changedPointers.length > 0)) return;\n  // if (event.changedPointers.length > 1) {\n  //   console.log('event.changedPointers > 1');\n  // }\n\n  sound.stopPlaying();\n\n  window.kan.prevAngle = Math.atan2(event.velocityY, event.velocityX);\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n\n  outerPath = new Path();\n  outerPath.fillColor = currentColor;\n  // outerPath.fillColor = new Color(0, 0.5);\n\n  sizes = [];\n\n  var shapePath = new Path({\n    strokeColor: currentColor,\n    name: 'shapePath',\n    strokeWidth: 5,\n    visible: false,\n    strokeCap: 'round'\n  });\n\n  shapePath.add(point);\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    first: true\n  };\n\n  window.kan.shapePath = shapePath;\n}\n\nfunction panMove(event) {\n  // console.log('panmove');\n  // event.preventDefault();\n  if (!eventTargetIsOnCanvas(event)) {\n    event.srcEvent.stopPropagation();\n    return;\n  }\n  if (window.kan.panning !== true) return;\n\n  // don't let the user draw past the max length\n  if (window.kan.shapePath.length <= maxShapeLength) {\n    var pointer = event.center;\n    var point = new Point(pointer.x, pointer.y);\n\n    var angle = Math.atan2(event.velocityY, event.velocityX);\n    var prevAngle = window.kan.prevAngle;\n    var angleDelta = util.angleDelta(angle, prevAngle);\n    window.kan.prevAngle = angle;\n\n    while (sizes.length > 10) {\n      sizes.shift();\n    }\n    if (sizes.length > 0) {\n      var dist = prevPoint.getDistance(point);\n\n      // These are based on acceleration\n      size = Math.random() * 10; // This is just random variance\n\n      cumSize = 0;\n      for (var j = 0; j < sizes.length; j++) {\n        cumSize += sizes[j];\n      }\n      // const avgSize = ((cumSize / sizes.length) + size) / 2;\n      var avgSize = Math.max(5, (cumSize / sizes.length + size) / 2);\n\n      var halfPointX = (point.x + prevPoint.x) / 2;\n      var halfPointY = (point.y + prevPoint.y) / 2;\n      var halfPoint = new Point(halfPointX, halfPointY);\n\n      var topX = halfPoint.x + Math.cos(angle - Math.PI / 2) * avgSize;\n      var topY = halfPoint.y + Math.sin(angle - Math.PI / 2) * avgSize;\n      var top = new Point(topX, topY);\n\n      var bottomX = halfPoint.x + Math.cos(angle + Math.PI / 2) * avgSize;\n      var bottomY = halfPoint.y + Math.sin(angle + Math.PI / 2) * avgSize;\n      var bottom = new Point(bottomX, bottomY);\n\n      outerPath.add(top);\n      outerPath.insert(0, bottom);\n      outerPath.smooth();\n    } else {\n      size = 5;\n    }\n\n    sizes.push(size);\n    prevPoint = point;\n\n    window.kan.pathData[shape.stringifyPoint(point)] = {\n      point: point,\n      speed: Math.abs(event.overallVelocity),\n      angle: angle\n    };\n\n    window.kan.shapePath.add(point);\n  } else {\n    window.kan.shapePath.data.tooLong = true;\n  }\n\n  paper.view.draw();\n}\n\nfunction panEnd(event) {\n  // console.log('panend');\n  // event.preventDefault();\n  if (!eventTargetIsOnCanvas(event)) {\n    event.srcEvent.stopPropagation();\n    return;\n  }\n  if (window.kan.panning !== true) return;\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n\n  var currentColor = color.getCurrentColor();\n  var transparent = color.transparent;\n\n  var move = { type: 'newGroup' };\n\n  var shapePath = window.kan.shapePath;\n\n  if (shapePath.length <= maxShapeLength) {\n    shapePath.add(point);\n  }\n  outerPath.visible = false;\n\n  if (shapePath.length < minShapeSize || shapePath.data && shapePath.data.tooLong === true) {\n    // console.log('path is too short');\n    shapePath.remove();\n    hammerCanvas.on('panstart', panStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n    window.kan.panning = false;\n    return;\n  }\n\n  var visibleGroups = util.getVisibleGroups();\n  if (visibleGroups.length >= config.maxShapes) {\n    // too many shapes on canvas, remove first shape\n    // TODO: place on moves stack so that they can be restored with an undo\n    var firstGroup = visibleGroups[0];\n    shape.destroyGroupPops(firstGroup);\n    sound.removeShapeFromComposition(firstGroup);\n    move.removedGroup = firstGroup;\n    // firstGroup.remove();\n    firstGroup.visible = false;\n  }\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    last: true\n  };\n\n  var group = new Group();\n\n  var truedShape = shape.getTruedShape(shapePath);\n\n  // group.data.color = truedShape.strokeColor;\n\n  var shapeSize = truedShape.strokeBounds;\n  var centerPoint = new Point(shapeSize.width / 2, shapeSize.height / 2);\n  var angle = util.rad(Math.random() * 360);\n  var gradientSize = (shapeSize.width + shapeSize.height) / 4;\n  var originX = centerPoint.x + Math.cos(angle - Math.PI / 2) * gradientSize;\n  var originY = centerPoint.y + Math.sin(angle - Math.PI / 2) * gradientSize;\n  var destinationX = centerPoint.x + Math.cos(angle + Math.PI / 2) * gradientSize;\n  var destinationY = centerPoint.y + Math.sin(angle + Math.PI / 2) * gradientSize;\n\n  var origin = new Point(originX + shapeSize.x, originY + shapeSize.y);\n  var destination = new Point(destinationX + shapeSize.x, destinationY + shapeSize.y);\n  // group.addChild(new Path.Circle({\n  //   center: origin,\n  //   radius: 5,\n  //   fillColor: 'red',\n  // }));\n  // group.addChild(new Path.Circle({\n  //   center: destination,\n  //   radius: 5,\n  //   fillColor: 'green',\n  // }));\n  group.data.originalColor = currentColor;\n  group.data.color = {\n    gradient: {\n      stops: config.palette.gradients[currentColor]\n    },\n    origin: origin,\n    destination: destination\n  };\n  group.data.scale = 1; // init variable to track scale changes\n  group.data.rotation = 0; // init variable to track rotation changes\n  group.data.fresh = true;\n\n  shapePath.remove();\n  truedShape.visible = false;\n  truedShape.strokeColor = transparent;\n  window.kan.shapePath = truedShape;\n  truedShape.name = 'shapePath';\n\n  if (!(truedShape.length > 0)) {\n    truedShape.remove();\n    group.remove();\n    window.kan.panning = false;\n    return;\n  }\n\n  group.addChild(truedShape);\n\n  var shapeSoundObj = sound.getShapeSoundObj(truedShape);\n  window.kan.composition.push(shapeSoundObj);\n\n  truedShape.visible = false;\n  var outlineGroup = shape.getOutlineGroup(truedShape);\n  var outline = outlineGroup._namedChildren.outer[0].clone();\n  outline.name = 'outer';\n  outline.fillColor = currentColor;\n  outline.fillColor = group.data.color;\n\n  var outlineCenter = outlineGroup._namedChildren.middle[0].clone();\n  outlineCenter.strokeColor = group.data.color;\n  outlineCenter.visible = false;\n  group.addChild(outline);\n  outline.sendToBack();\n\n  outlineGroup.remove();\n\n  var shapeMask = outline.clone();\n  shapeMask.fillColor = outline.fillColor;\n  shapeMask.strokeColor = transparent;\n  shapeMask.closed = true;\n\n  var enclosedLoops = shape.findInteriorCurves(outlineCenter);\n  console.log('enclosedLoops', enclosedLoops);\n  if (enclosedLoops.length > 0 || truedShape.closed === true) {\n    group.data.line = false;\n  } else {\n    group.data.line = true;\n  }\n\n  enclosedLoops.forEach(function (loop) {\n    shapeMask.unite(loop);\n    shapeMask.sendToBack();\n    loop.name = 'loop';\n    loop.data.loop = true;\n    loop.visible = true;\n    group.addChild(loop);\n    loop.bringToFront();\n  });\n\n  shapeMask.unite();\n  var crossings = shapeMask.resolveCrossings();\n  if (!!crossings && !!crossings.children && crossings.children.length > 0) {\n    (function () {\n      var maxArea = 0,\n          maxChild = null;\n      crossings.children.forEach(function (child) {\n        if (child.area > maxArea) {\n          maxChild = child;\n          maxArea = child.area;\n        }\n      });\n\n      shapeMask = maxChild;\n    })();\n  }\n\n  outlineCenter.remove();\n  shapeMask.visible = false;\n  shapeMask.name = 'mask';\n  shapeMask.data.mask = true;\n  group.addChild(shapeMask);\n  shapeMask.sendToBack();\n\n  shape.cleanUpGroup(group);\n  group.shadowColor = group.data.originalColor;\n  group.shadowBlur = 0;\n\n  move.id = group.id;\n  window.kan.moves.push(move);\n\n  ui.unditherButtonsByName(['new', 'undo', 'play-stop', 'share']);\n  $body.addClass(sound.playEnabledClass);\n\n  if (window.kan.userHasDrawnFirstShape !== true) {\n    // first shape!\n    // set play prompt timeout\n    window.kan.playPromptTimeout = setTimeout(function () {\n      overlays.openOverlay('play-prompt');\n    }, timing.playPromptDelay);\n\n    window.kan.userHasDrawnFirstShape = true;\n  }\n\n  if (config.runAnimations) {\n    var scaleFactor = 0.9;\n    group.animate([{\n      properties: {\n        scale: scaleFactor\n      },\n      settings: {\n        duration: 100,\n        easing: \"easeOut\"\n      }\n    }, {\n      properties: {\n        scale: 1 / scaleFactor\n      },\n      settings: {\n        duration: 100,\n        easing: \"easeIn\"\n      }\n    }]);\n  }\n\n  if (!tutorial.allTutsCompleted()) {\n    var tutorialCompletion = window.kan.tutorialCompletion;\n    var tutName = null;\n\n    console.log('window.kan.shapesSinceTut', window.kan.shapesSinceTut);\n\n    if (!tutorialCompletion['fill'] && truedShape.closed) {\n      tutName = 'fill';\n    } else if (!tutorialCompletion['pinch'] && window.kan.shapesSinceTut === tutorial.shapeLimit) {\n      tutName = 'pinch';\n    }\n\n    if (tutName !== null) {\n      // console.log(`${tutName} tutorial`);\n      tutorial.addContextualTut(tutName);\n      window.kan.tutorialCompletion[tutName] = true;\n      group.data.tut = tutName;\n      group.data.hasTut = true;\n    }\n  }\n\n  if (window.kan.shapesSinceTut >= tutorial.shapeLimit) {\n    tutorial.hideContextualTuts();\n    window.kan.shapesSinceTut = 0;\n  } else {\n    window.kan.shapesSinceTut++;\n  }\n\n  if (window.kan.scheduledOverlay !== null) {\n    (function () {\n      var scheduledOverlay = window.kan.scheduledOverlay;\n      window.kan.scheduledOverlay = null;\n      setTimeout(function () {\n        overlays.openOverlay(scheduledOverlay);\n      }, timing.overlayDelay);\n    })();\n  }\n\n  sound.asyncPlayShapeSound(shapeSoundObj);\n\n  // console.log('pan done');\n  hammerCanvas.set({ enable: false });\n  setTimeout(function () {\n    hammerCanvas.set({ enable: true });\n    console.log('touch enabled');\n    hammerCanvas.on('panstart', panStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n\n    window.kan.panning = false;\n  }, timing.inputDelay);\n\n  if (config.pop === true) {\n    shape.updatePops();\n  }\n}\n\nfunction panCancel(event) {\n  console.log('pancancel');\n  event.srcEvent.stopPropagation();\n  // event.preventDefault();\n\n  hammerCanvas.set({ enable: true });\n  hammerCanvas.on('panstart', panStart);\n  enablePanAndPinchEvents();\n  enableTapEvents();\n  window.kan.panning = false;\n}\n\nfunction pinchStart(event) {\n  // console.log('pinchstart');\n  timing.preventInactivityTimeout();\n  window.kan.interacting = true;\n  window.kan.pinching = true;\n  // event.preventDefault();\n\n  // hammerCanvas.get('pinchstart').set({enable: false});\n  hammerCanvas.off('pinchstart');\n  disablePanEvents();\n  disableTapEvents();\n\n  if (!eventTargetIsOnCanvas(event)) return;\n\n  sound.stopPlaying();\n\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = shape.hitTestGroupBounds(point);\n\n  if (hitResult) {\n    if (!!hitResult && hitResult.data.hasTut) {\n      tutorial.hideContextualTuts();\n    }\n    window.kan.pinching = true;\n    window.kan.pinchedGroup = hitResult;\n    window.kan.lastScale = 1;\n    window.kan.lastRotation = event.rotation;\n\n    window.kan.originalPosition = hitResult.position;\n    window.kan.originalRotation = hitResult.data.rotation;\n    window.kan.originalScale = hitResult.data.scale;\n    hitResult.data.thrown = false;\n\n    if (config.pop === true) {\n      shape.destroyGroupPops(hitResult);\n    }\n\n    hitResult.bringToFront();\n\n    if (hitResult.data.tut && hitResult.data.tut.length > 0) {\n      var $tut = $('.tut[data-tut-type=\\'' + hitResult.data.tut + '\\']');\n      if ($tut) {\n        window.kan.pinchedTut = $tut;\n      } else {\n        window.kan.pinchedTut = null;\n      }\n    } else {\n      window.kan.pinchedTut = null;\n    }\n\n    // if (config.runAnimations) {\n    //   hitResult.animate({\n    //     properties: {\n    //       scale: 1.25\n    //     },\n    //     settings: {\n    //       duration: 100,\n    //       easing: \"easeOut\",\n    //     }\n    //   });\n    // }\n  } else {\n    window.kan.pinchedGroup = null;\n    window.kan.pinchedTut = null;\n    // console.log('hit no item');\n  }\n}\n\nfunction pinchMove(event) {\n  // console.log('pinchMove');\n  // event.preventDefault();\n\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var pinchedGroup = window.kan.pinchedGroup;\n  var $pinchedTut = window.kan.pinchedTut;\n\n  if (!!pinchedGroup) {\n    var currentScale = event.scale;\n    var scaleDelta = void 0;\n\n    tutorial.hideContextualTutByName('pinch');\n\n    if (pinchedGroup.bounds.width < minShapeSize || pinchedGroup.bounds.height < minShapeSize) {\n      // only allow a shape to scale down if it is larger than the minimum size\n      scaleDelta = 1.1;\n    } else if (pinchedGroup.bounds.width >= paper.view.viewSize.width || pinchedGroup.bounds.height >= paper.view.viewSize.height) {\n      // only allow shape to scale up if it fits in the viewport\n      scaleDelta = 0.9;\n    } else {\n      scaleDelta = currentScale / window.kan.lastScale;\n    }\n\n    window.kan.lastScale = currentScale;\n\n    var currentRotation = event.rotation;\n    var rotationDelta = currentRotation - window.kan.lastRotation;\n    window.kan.lastRotation = currentRotation;\n\n    // console.log(`scaling by ${scaleDelta}`);\n    // console.log(`rotating by ${rotationDelta}`);\n\n    var centerPoint = event.center;\n    pinchedGroup.position = centerPoint;\n    if (!!$pinchedTut) {\n      tutorial.moveContextualTut($pinchedTut, centerPoint);\n    }\n\n    if (scaleDelta !== 1) {\n      pinchedGroup.scale(scaleDelta);\n\n      // check if scaling went awry, cannot be too big or too small\n      // hypotenuse must fit within view bounds\n      var hypot = util.hypot(pinchedGroup.bounds.width, pinchedGroup.bounds.height);\n      var viewHypot = util.hypot(paper.view.viewSize.width, paper.view.viewSize.height);\n      if (hypot >= viewHypot) {\n        // shape is too big, bring it back down to size\n        scaleDelta = viewHypot * maxScaleFactor / hypot;\n        pinchedGroup.scale(scaleDelta);\n      } else if (hypot <= minShapeSize) {\n        scaleDelta = minShapeSize / hypot;\n        pinchedGroup.scale(scaleDelta);\n      }\n    }\n    pinchedGroup.rotate(rotationDelta);\n\n    pinchedGroup.data.scale *= scaleDelta;\n    pinchedGroup.data.rotation += rotationDelta;\n  }\n}\n\nfunction pinchEnd(event) {\n  // event.preventDefault();\n\n  window.kan.lastEvent = event;\n  var pinchedGroup = window.kan.pinchedGroup;\n  var $pinchedTut = window.kan.pinchedTut;\n  var originalPosition = window.kan.originalPosition;\n  var originalRotation = window.kan.originalRotation;\n  var originalScale = window.kan.originalScale;\n\n  if (!!pinchedGroup) {\n    pinchedGroup.data.fresh = true;\n    var move = {\n      id: pinchedGroup.id,\n      type: 'transform'\n    };\n    if (pinchedGroup.position != originalPosition) {\n      move.position = originalPosition;\n    }\n\n    if (pinchedGroup.data.rotation != originalRotation) {\n      move.rotation = originalRotation - pinchedGroup.data.rotation;\n    }\n\n    if (pinchedGroup.data.scale != originalScale) {\n      move.scale = originalScale / pinchedGroup.data.scale;\n    }\n\n    if (pinchedGroup.children.length > 0 && pinchedGroup._namedChildren.shapePath && pinchedGroup._namedChildren.shapePath.length > 0) {\n      // update shapePath sound object if possible\n      sound.removeShapeFromComposition(pinchedGroup); // sound is now wrong\n\n      var shapePath = pinchedGroup._namedChildren.shapePath[0];\n      var shapeSoundObj = sound.getShapeSoundObj(shapePath);\n      window.kan.composition.push(shapeSoundObj);\n    }\n\n    window.kan.moves.push(move);\n\n    if (Math.abs(event.velocity) > 1) {\n\n      // hide any connected tuts\n      if (!!$pinchedTut) {\n        tutorial.hideContextualTut($pinchedTut);\n      }\n      // dispose of group offscreen\n      if (config.pop === true) {\n        shape.destroyGroupPops(pinchedGroup);\n        pinchedGroup.data.fresh = false;\n      }\n\n      pinchedGroup.data.thrown = true;\n      throwPinchedGroup();\n    }\n\n    // if (config.runAnimations) {\n    //   pinchedGroup.animate({\n    //     properties: {\n    //       scale: 0.8\n    //     },\n    //     settings: {\n    //       duration: 100,\n    //       easing: \"easeOut\",\n    //     }\n    //   });\n    // }\n  } else {\n    window.kan.pinchedGroup = null;\n  }\n\n  // if an overlay was interrupted, open it up now\n  if (window.kan.scheduledOverlay !== null) {\n    (function () {\n      var scheduledOverlay = window.kan.scheduledOverlay;\n      window.kan.scheduledOverlay = null;\n      setTimeout(function () {\n        overlays.openOverlay(scheduledOverlay);\n      }, timing.overlayDelay);\n    })();\n  }\n\n  window.kan.pinching = false;\n\n  if (config.pop === true) {\n    shape.updatePops();\n  }\n\n  // console.log('pinch done');\n  // hammerCanvas.set({ enable: false });\n  setTimeout(function () {\n    console.log('touch enabled');\n    hammerCanvas.on('pinchstart', pinchStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n    // hammerCanvas.set({ enable: true });\n    // hammerCanvas.on('pinchstart', pinchStart);\n    // enablePanAndPinchEvents();\n    // enableTapEvents();\n    // window.kan.pinching = false;\n    // window.kan.pinchedGroup = null;\n  }, timing.inputDelay);\n}\n\nfunction pinchCancel(event) {\n  // console.log(event);\n  event.srcEvent.stopPropagation();\n  console.log('pinchcancel');\n  // event.preventDefault();\n\n  hammerCanvas.set({ enable: true });\n  hammerCanvas.on('pinchstart', pinchStart);\n  enablePanAndPinchEvents();\n  enableTapEvents();\n\n  window.kan.pinching = false;\n}\n\nfunction throwPinchedGroup() {\n\n  var velocityMultiplier = 25;\n  var lastEvent = window.kan.lastEvent;\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var pinchedGroup = window.kan.pinchedGroup;\n\n  if (pinchedGroup === null || pinchedGroup.data && pinchedGroup.data.thrown === false) return;\n  if (pinchedGroup.position.x <= 0 - pinchedGroup.bounds.width || pinchedGroup.position.x >= viewWidth + pinchedGroup.bounds.width || pinchedGroup.position.y <= 0 - pinchedGroup.bounds.height || pinchedGroup.position.y >= viewHeight + pinchedGroup.bounds.height) {\n    pinchedGroup.data.offScreen = true;\n    pinchedGroup.visible = false;\n    sound.removeShapeFromComposition(pinchedGroup);\n    window.kan.pinchedGroup = null;\n    return;\n  }\n  requestAnimationFrame(throwPinchedGroup);\n  var newX = pinchedGroup.position.x + lastEvent.velocityX * velocityMultiplier;\n  var newY = pinchedGroup.position.y + lastEvent.velocityY * velocityMultiplier;\n  var newPos = new Point(newX, newY);\n  pinchedGroup.position = newPos;\n}\n\nfunction eventTargetIsOnCanvas(event) {\n  if (!event) return false;\n  if (event.target != ui.drawCanvas) return false;\n  return true;\n}\n\n},{\"./animation\":99,\"./color\":100,\"./config\":101,\"./overlays\":104,\"./shape\":105,\"./sound\":107,\"./timing\":108,\"./tutorial\":110,\"./ui\":111,\"./util\":112,\"hammerjs\":27}],110:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTutByName = getTutByName;\nexports.allTutsCompleted = allTutsCompleted;\nexports.addContextualTut = addContextualTut;\nexports.hideContextualTut = hideContextualTut;\nexports.hideContextualTutByName = hideContextualTutByName;\nexports.hideContextualTuts = hideContextualTuts;\nexports.resetContextualTuts = resetContextualTuts;\nexports.moveContextualTut = moveContextualTut;\nexports.getTutPositionFromCenter = getTutPositionFromCenter;\nvar config = require('./config');\n\nvar shapeLimit = exports.shapeLimit = 2;\n\nvar contextualTuts = config.contextualTuts;\nvar tutArrowHeight = 16;\n\nfunction getTutByName(tutName) {\n  for (var i = 0; i < contextualTuts.length; i++) {\n    var tutObj = contextualTuts[i];\n\n    if (tutObj.type === tutName) {\n      return tutObj.copy;\n    }\n  }\n\n  return null;\n}\n\nfunction allTutsCompleted() {\n  var tutorialCompletionObj = window.kan.tutorialCompletion;\n  var completion = true;\n\n  Object.keys(tutorialCompletionObj).forEach(function (key, val) {\n    completion = completion && tutorialCompletionObj[key];\n  });\n\n  return completion === true;\n}\n\nfunction addContextualTut(tutName) {\n  if (!!window.kan.shapePath && window.kan.shapePath.length > 0) {\n    hideContextualTuts();\n    window.kan.shapesSinceTut = 0;\n\n    var shapePath = window.kan.shapePath;\n    var shapeCenter = shapePath.bounds.center;\n\n    var tutCopy = getTutByName(tutName);\n\n    if (tutCopy !== null) {\n      var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n      if ($tut.length > 0) {\n        var tutPos = getTutPositionFromCenter($tut, shapeCenter);\n        $tut.css({ top: tutPos.y + 'px', left: tutPos.x + 'px', visibility: 'visible' });\n        $tut.addClass('animated bounceIn');\n      }\n    }\n  }\n}\n\nfunction hideContextualTut($tut) {\n  $tut.css({ visibility: 'hidden' });\n}\n\nfunction hideContextualTutByName(tutName) {\n  var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n  hideContextualTut($tut);\n}\n\nfunction hideContextualTuts() {\n  var $tuts = $('.contextual-tuts .tut');\n  $tuts.css({ visibility: 'hidden' });\n}\n\nfunction resetContextualTuts() {\n  hideContextualTuts();\n  window.kan.tutorialCompletion = {\n    \"fill\": false,\n    \"pinch\": false\n  };\n}\n\nfunction moveContextualTut($tut, centerPoint) {\n  var tutPos = getTutPositionFromCenter($tut, centerPoint);\n  $tut.css({ top: tutPos.y + 'px', left: tutPos.x + 'px' });\n}\n\nfunction getTutPositionFromCenter($tut, centerPoint) {\n  var tutWidth = $tut.outerWidth();\n  var tutHeight = $tut.outerHeight();\n  var leftPos = centerPoint.x - tutWidth / 2;\n  var topPos = centerPoint.y - tutHeight - tutArrowHeight;\n  return new Point(leftPos, topPos);\n}\n\n},{\"./config\":101}],111:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nexports.ditherButtonsByName = ditherButtonsByName;\nexports.unditherButtonsByName = unditherButtonsByName;\nexports.ditherButtonByName = ditherButtonByName;\nexports.unditherButtonByName = unditherButtonByName;\nexports.enterShareMode = enterShareMode;\nexports.exitShareMode = exitShareMode;\nexports.selectRandomColorFromPalette = selectRandomColorFromPalette;\nexports.resetCanvas = resetCanvas;\nvar config = require('./config');\nrequire('howler');\n\nvar sound = require('./sound');\nvar tutorial = require('./tutorial');\nvar overlays = require('./overlays');\nvar util = require('./util');\nvar color = require('./color');\nvar shape = require('./shape');\nvar share = require('./share');\nvar touch = require('./touch');\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar playingClass = sound.playingClass;\nvar playEnabledClass = sound.playEnabledClass;\n\nvar $newButton = $('.controls .new');\nvar $undoButton = $('.controls .undo');\nvar $playButton = $('.controls .play-stop');\nvar $shareButton = $('.controls .share');\nvar $tipsButton = $('.controls .tips');\n\nvar drawCanvas = exports.drawCanvas = $('#canvas')[0];\nvar tipsOverlay = exports.tipsOverlay = $('.overlay.tips')[0];\n\nvar ditheredClass = 'dithered';\nvar shareModeClass = 'share-mode';\n\nfunction init() {\n  initLogoRefresh();\n  initColorPalette();\n  initNewButton();\n  initUndoButton();\n  initPlayButton();\n  initTipsButton();\n  initShareButton();\n  initContextualTuts();\n  resetCanvas();\n}\n\nfunction ditherAllButtons() {\n  $('.controls > *').addClass(ditheredClass);\n}\n\nfunction unditherAllButtons() {\n  $('.controls .' + ditheredClass).removeClass(ditheredClass);\n}\n\nfunction ditherButtonsByName(buttonNames) {\n  var undither = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (buttonNames.length > 0) {\n    if ($.isArray(buttonNames)) {\n      buttonNames.forEach(function (name) {\n        return ditherButtonByName(name, undither);\n      });\n    } else {\n      ditherButtonByName(buttonNames, undither);\n    }\n  }\n}\n\nfunction unditherButtonsByName(buttonNames) {\n  ditherButtonsByName(buttonNames, true);\n}\n\nfunction ditherButtonByName(buttonName) {\n  var undither = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var $button = $('.controls .' + buttonName);\n  // console.log($button);\n  if ($button.length > 0) {\n    if (undither !== true) {\n      $button.addClass(ditheredClass);\n    } else {\n      $button.removeClass(ditheredClass);\n    }\n  }\n}\n\nfunction unditherButtonByName(buttonName) {\n  ditherButtonByName(buttonName, true);\n}\n\nfunction unditherButtonsByName(buttonNames) {\n  ditherButtonsByName(buttonNames, true);\n}\n\nfunction enterShareMode() {\n  sound.stopPlaying(true);\n  ditherAllButtons();\n  clearTimeout(window.kan.playPromptTimeout);\n  touch.disableAllEvents();\n}\n\nfunction exitShareMode() {\n  unditherAllButtons();\n  Howler.mute(false);\n  touch.enableAllEvents();\n}\n\nfunction newPressed() {\n  // console.log('new pressed');\n  window.kan.composition = [];\n  paper.project.activeLayer.removeChildren();\n  tutorial.hideContextualTuts();\n  ditherButtonsByName(['undo', 'new', 'play-stop', 'share']);\n  sound.stopPlaying();\n  // window.kan.userHasDrawnFirstShape = false;\n  // tutorial.resetContextualTuts();\n}\n\nfunction undoPressed() {\n  sound.stopPlaying();\n  tutorial.hideContextualTuts();\n\n  var transparent = color.transparent;\n  // console.log('undo pressed');\n  if (!(window.kan.moves.length > 0)) {\n    // console.log('no moves yet');\n    window.kan.userHasDrawnFirstShape = false;\n    return;\n  }\n\n  var lastMove = window.kan.moves.pop();\n  var item = project.getItem({\n    id: lastMove.id\n  });\n\n  if (item) {\n    item.visible = true; // make sure\n    switch (lastMove.type) {\n      case 'newGroup':\n        // console.log('removing group');\n        sound.removeShapeFromComposition(item);\n        util.clearGroupPops(item);\n        item.remove();\n\n        if ('removedGroup' in lastMove) {\n          // bring back removed group\n          lastMove.removedGroup.visible = true;\n          lastMove.removedGroup.data.fresh = true;\n          shape.updatePops();\n        }\n\n        var numGroups = util.getNumGroups();\n        // console.log('numGroups', numGroups);\n\n        if (numGroups <= 0) {\n          ditherButtonsByName(['undo', 'new', 'play-stop', 'share']);\n          $body.removeClass(sound.playEnabledClass);\n        } else {\n          unditherButtonsByName(['undo', 'new', 'play-stop', 'share']);\n          $body.addClass(sound.playEnabledClass);\n        }\n\n        break;\n      case 'fillChange':\n        if (lastMove.transparent) {\n          item.fillColor = lastMove.fill;\n        } else {\n          item.fillColor = transparent;\n        }\n        item.strokeColor = transparent;\n      case 'transform':\n        item.data.fresh = true;\n        if (!!lastMove.position) {\n          item.position = lastMove.position;\n          if (item.data && item.data.tut && item.data.tut.length > 0) {\n            // item has connected contextual tut, move it to the right place\n            var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n            tutorial.moveContextualTut($tut, lastMove.position);\n          }\n        }\n        if (!!lastMove.rotation) {\n          item.rotation = lastMove.rotation;\n        }\n        if (!!lastMove.scale) {\n          item.scale(lastMove.scale);\n        }\n        if (config.pop === true) {\n          shape.updatePops();\n        }\n        break;\n      default:\n      // console.log('unknown case');\n    }\n  } else {\n      // console.log('could not find matching item');\n    }\n}\n\nfunction playPressed() {\n  // console.log('play pressed');\n  // sound.stopComposition();\n  // overlays.closeAndResetOverlays();\n  // tutorial.hideContextualTuts();\n  var playing = window.kan.playing;\n  // console.log(playing, util.getNumGroups() > 2, !playing && util.getNumGroups() > 2, $body);\n\n  clearTimeout(window.kan.playPromptTimeout);\n  if (!playing && util.getNumGroups() > 2) {\n    // console.log('starting playing');\n    sound.startPlaying();\n  } else {\n    // console.log('stopping playing');\n    sound.stopPlaying(true);\n  }\n}\n\nfunction tipsPressed() {\n  sound.stopPlaying();\n  overlays.openOverlay('tips');\n  // console.log('tips pressed');\n}\n\nfunction initLogoRefresh() {\n  $('.main-logo').on(tapEvent, function () {\n    location.reload();\n  });\n}\n\nfunction selectRandomColorFromPalette() {\n  var randomColorHex = color.getRandomColor();\n  var $svg = $('svg.palette-color[data-color=\\'' + randomColorHex + '\\']');\n\n  if (!!$svg && $svg.length > 0) {\n    selectColorFromPaletteUsingSvgElement($svg);\n  }\n}\n\nfunction selectColorFromPaletteUsingSvgElement($svg) {\n  var paletteColorSize = 20;\n  var paletteSelectedColorSize = 30;\n  var paletteSelectedClass = 'palette-selected';\n\n  if (!$svg.hasClass(paletteSelectedClass)) {\n    $('.' + paletteSelectedClass).removeClass(paletteSelectedClass).attr('width', paletteColorSize).attr('height', paletteColorSize).find('rect').attr('rx', 0).attr('ry', 0);\n\n    $svg.addClass(paletteSelectedClass).attr('width', paletteSelectedColorSize).attr('height', paletteSelectedColorSize).find('rect').attr('rx', paletteSelectedColorSize / 2).attr('ry', paletteSelectedColorSize / 2);\n  }\n}\n\nfunction initColorPalette() {\n  var $paletteWrap = $('ul.palette-colors');\n  var $paletteColors = $paletteWrap.find('li');\n\n  // hook up click\n  $paletteColors.on('click tap touch', function () {\n    if (!$body.hasClass(playingClass)) {\n      var $svg = $(this).find('svg.palette-color');\n      selectColorFromPaletteUsingSvgElement($svg);\n    };\n  });\n}\n\nfunction initNewButton() {\n  $('.main-controls .new').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      newPressed();\n    }\n  });\n}\n\nfunction initUndoButton() {\n  $('.main-controls .undo').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      undoPressed();\n    }\n  });\n}\n\nfunction initPlayButton() {\n  $('.main-controls .play-stop .play').on(tapEvent, sound.startPlaying);\n  $('.main-controls .play-stop .stop').on(tapEvent, sound.stopPlaying);\n}\n\nfunction initTipsButton() {\n  $('.controls .tips').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      tipsPressed();\n    }\n  });\n}\n\nfunction initShareButton() {\n  $('.controls .share').on(tapEvent, share.handleSharePressed);\n}\n\nfunction initContextualTuts() {\n  var $tuts = $('.contextual-tuts .tut');\n  $tuts.on(tapEvent, function () {\n    $(this).css({ visibility: 'hidden' });\n  });\n}\n\nfunction resetCanvas() {\n  paper.project.clear();\n\n  // add random background\n  paper.project.activeLayer.name = 'background';\n  var numCanvasses = 10;\n  var randomCanvasIndex = Math.round(Math.random() * (numCanvasses - 1)) + 1; // [1, numCanvasses]\n  var canvasBg = new Raster('canvas-' + randomCanvasIndex);\n  canvasBg.name = 'canvasBg';\n  canvasBg.position = paper.view.center;\n\n  // add canvas layer\n  var scaleFactorHorizontal = paper.view.viewSize.width / canvasBg.size.width;\n  var scaleFactorVertical = paper.view.viewSize.height / canvasBg.size.height;\n  canvasBg.scale(Math.max(scaleFactorHorizontal, scaleFactorVertical));\n  var layer = new Layer(); // init new layer that all other shapes will be drawn upon\n  paper.project.activeLayer.name = 'canvas';\n}\n\n},{\"./color\":100,\"./config\":101,\"./overlays\":104,\"./shape\":105,\"./share\":106,\"./sound\":107,\"./touch\":109,\"./tutorial\":110,\"./util\":112,\"howler\":28}],112:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rad = rad;\nexports.deg = deg;\nexports.hypot = hypot;\nexports.angleDelta = angleDelta;\nexports.delta = delta;\nexports.getTime = getTime;\nexports.getNumVisibleGroups = getNumVisibleGroups;\nexports.getVisibleGroups = getVisibleGroups;\nexports.getAllGroups = getAllGroups;\nexports.anyShapesOnCanvas = anyShapesOnCanvas;\nexports.getNumGroups = getNumGroups;\nexports.getFreshGroups = getFreshGroups;\nexports.getAllPops = getAllPops;\nexports.clearGroupPops = clearGroupPops;\nexports.getGroupPops = getGroupPops;\nexports.getPopCandidates = getPopCandidates;\nexports.setSha = setSha;\nexports.shallowCopy = shallowCopy;\nexports.randomPick = randomPick;\nvar config = require('./config');\n\n// Converts from degrees to radians.\nfunction rad(degrees) {\n  return degrees * Math.PI / 180;\n};\n\n// Converts from radians to degrees.\nfunction deg(radians) {\n  return radians * 180 / Math.PI;\n};\n\nfunction hypot(a, b) {\n  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)); // pythagorean!\n}\n\n// returns absolute value of the delta of two angles in radians\nfunction angleDelta(x, y) {\n  return Math.abs(Math.atan2(Math.sin(y - x), Math.cos(y - x)));;\n}\n\n// distance between two points\nfunction delta(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2)); // pythagorean!\n}\n\nfunction getTime() {\n  return new Date().toLocaleTimeString();\n}\n\nfunction getNumVisibleGroups() {\n  var groups = getVisibleGroups();\n  return groups.length;\n}\n\nfunction getVisibleGroups() {\n  return paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return el.visible === true;\n    }\n  });\n}\n\nfunction getAllGroups() {\n  return paper.project.getItems({\n    className: 'Group'\n  });\n}\n\nfunction anyShapesOnCanvas() {\n  var groups = getVisibleGroups();\n  return groups.length > 0;\n}\n\nfunction getNumGroups() {\n  var groups = getVisibleGroups();\n  // console.log('numgroups', groups.length);\n  return groups.length;\n}\n\nfunction getFreshGroups() {\n  return paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return el.data && el.data.line === false && el.data.fresh === true;\n    }\n  });\n}\n\nfunction getAllPops() {\n  return paper.project.getItems({\n    match: function match(el) {\n      return el.data && el.data.pop === true;\n    }\n  });\n}\n\nfunction clearGroupPops(group) {\n  var pops = getGroupPops(group);\n  pops.forEach(function (pop) {\n    return pop.remove();\n  });\n}\n\nfunction getGroupPops(group) {\n  // console.log('group pop group', group.id, group);\n  var returnPops = [];\n\n  if (group.children.length > 0) {\n    var groupPops = group.getItems({\n      match: function match(el) {\n        return el.data && el.data.pop === true;\n      }\n    });\n    returnPops = returnPops.concat(groupPops);\n  }\n\n  var intersectingPops = paper.project.getItems({\n    match: function match(el) {\n      return el.data && el.data.pop === true && el.data.intersectingGroup === group.id;\n    }\n  });\n\n  if (intersectingPops.length > 0) {\n    returnPops = returnPops.concat(intersectingPops);\n  }\n\n  return returnPops;\n}\n\nfunction getPopCandidates() {\n  return paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return el.data && el.data.line === false && el.visible === true;\n    }\n  });\n}\n\nfunction setSha() {\n  $.get('/hash').done(function (res) {\n    console.log('current hash:', res);\n    window.kan.hash = res;\n  }).fail(function (e) {\n    console.error('error getting hash:', e);\n  });\n}\n\n// http://blog.soulserv.net/understanding-object-cloning-in-javascript-part-i/\nfunction shallowCopy(original) {\n  // First create an empty object with\n  // same prototype of our original source\n  var clone = Object.create(Object.getPrototypeOf(original));\n\n  var i,\n      keys = Object.getOwnPropertyNames(original);\n\n  for (i = 0; i < keys.length; i++) {\n    // copy each property into the clone\n    Object.defineProperty(clone, keys[i], Object.getOwnPropertyDescriptor(original, keys[i]));\n  }\n\n  return clone;\n}\n\nfunction randomPick(array) {\n  if (!!array && array.length > 0) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  return null;\n}\n\n},{\"./config\":101}],113:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.enterTutorialMode = enterTutorialMode;\nexports.exitTutorialMode = exitTutorialMode;\nexports.pauseVideo = pauseVideo;\nexports.playVideo = playVideo;\nvar config = require('./config');\n\nvar main = require('./main');\nvar overlays = require('./overlays');\nvar timing = require('./timing');\nvar ui = require('./ui');\nvar sound = require('./sound');\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar videoPlayingClass = exports.videoPlayingClass = 'video-playing';\n\nvar $videoWrapper = $body.find('#video-wrap');\nvar $video = $videoWrapper.find('video');\n\nfunction enterTutorialMode() {\n  console.log('entering tutorial mode');\n  playVideo();\n  $body.addClass(videoPlayingClass);\n  clearTimeout(window.kan.inactivityTimeout);\n  clearInterval(window.kan.continueCountdownInterval);\n  $body.off(tapEvent, timing.preventInactivityTimeout);\n  $body.on(tapEvent, exitTutorialMode);\n  main.resetWindow();\n  ui.resetCanvas();\n  window.kan.refreshCheckInterval = setInterval(function () {\n    $.get('/hash').done(function (res) {\n      if (res !== window.kan.hash) {\n        console.log('different hash, reloading');\n        location.reload();\n      }\n    }).fail(function (e) {\n      console.error('error getting hash:', e);\n    });\n  }, timing.refreshCheckDelay);\n}\n\nfunction exitTutorialMode() {\n  console.log('exiting tutorial mode');\n  sound.reinitShapeSounds().then(function () {\n    clearInterval(window.kan.refreshCheckInterval);\n    Howler.mute(false);\n    pauseVideo();\n    $body.off(tapEvent, exitTutorialMode);\n    $body.on(tapEvent, timing.preventInactivityTimeout);\n    $body.removeClass(videoPlayingClass);\n    clearTimeout(window.kan.inactivityTimeout);\n    clearInterval(window.kan.continueCountdownInterval);\n\n    overlays.openOverlay('intro');\n\n    window.kan.inactivityTimeout = setTimeout(function () {\n      overlays.openOverlay('continue');\n    }, timing.continueInactivityDelay);\n  }).fail(function (e) {\n    console.error('error initting shape sounds:', e);\n    location.reload();\n  });\n}\n\nfunction pauseVideo() {\n  $video.get(0).pause();\n}\n\nfunction playVideo() {\n  $video.get(0).play();\n}\n\n},{\"./config\":101,\"./main\":103,\"./overlays\":104,\"./sound\":107,\"./timing\":108,\"./ui\":111}]},{},[103])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}