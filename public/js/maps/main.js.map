{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","runAnimations","pop","canvasId","maxShapes","palette","colors","colorNames","#20171C","#1E2A43","#28377D","#352747","#CA2E26","#9A2A1F","#DA6C26","#453121","#916A47","#DAAD27","#7F7D31","#2B5E2E","gradients","pops","colorSize","selectedColorSize","contextualTuts","type","copy","2","process","global","define","amd","window","self","Promise","_dereq_","any","promises","ret","SomePromiseArray","promise","setHowMany","setUnwrap","init","_SomePromiseArray","prototype","this","Async","_customScheduler","_isTickUsed","_lateQueue","Queue","_normalQueue","_haveDrainedQueues","_trampolineEnabled","drainQueues","_drainQueues","_schedule","schedule","AsyncInvokeLater","fn","receiver","arg","push","_queueTick","AsyncInvoke","AsyncSettlePromises","_pushOne","firstLineError","util","setScheduler","prev","hasCustomScheduler","enableTrampoline","disableTrampolineIfNecessary","hasDevTools","haveItemsQueued","fatalError","isNode","stderr","write","stack","exit","throwLater","arguments","setTimeout","invokeLater","invoke","settlePromises","_settlePromises","_drainQueue","queue","shift","_reset","./queue","./schedule","./util","3","INTERNAL","tryConvertToPromise","debug","calledBind","rejectThis","_","_reject","targetRejected","context","promiseRejectionQueued","bindingPromise","_then","bindingResolved","thisArg","_bitField","_resolveCallback","target","bindingRejected","bind","_propagateFrom","propagateFromFunction","_boundValue","boundValueFunction","maybePromise","_target","_setBoundTo","undefined","_setOnCancel","obj","_boundTo","_isBound","value","resolve","4","noConflict","bluebird","old","./promise","5","cr","Object","create","callerCache","getterCache","ensureMethod","methodName","message","classString","toString","TypeError","caller","apply","namedGetter","indexedGetter","index","Math","max","getGetter","canEvaluate","isIdentifier","args","slice","get","propertyName","getter","isIndex","maybeGetter","6","PromiseArray","apiRejection","tryCatch","errorObj","async","_async","cancel","cancellation","_warn","child","_isCancellable","_cancelBy","_isFollowing","_followee","_cancelBranched","parent","_cancellationParent","_setWillBeCancelled","_branchHasCancelled","_branchesRemainingToCancel","_enoughBranchesHaveCancelled","canceller","_invokeOnCancel","_cancel","_setCancelled","_cancelPromises","_length","_unsetOnCancel","_onCancelField","isPending","_isCancelled","isCancellable","isCancelled","_doInvokeOnCancel","onCancelCallback","internalOnly","isArray","_attachExtraTrace","_resultCancelled","_onCancel","_invokeInternalOnCancel","7","NEXT_FILTER","catchFilter","instances","cb","boundTo","predicateLoop","item","matchesPredicate","isObject","keys","getKeys","j","key","./es5","8","Context","_trace","CapturedTrace","peekContext","createContext","longStackTraces","lastIndex","contextStack","_promiseCreated","_pushContext","_popContext","_peekContext","trace","deactivateLongStackTraces","activateLongStackTraces","Promise_pushContext","Promise_popContext","Promise_PeekContext","Promise_peekContext","Promise_promiseCreated","ctx","9","generatePromiseLifecycleEventObject","name","defaultFireEvent","cancellationExecute","executor","reject","onCancel","_attachCancellationCallback","cancellationAttachCancellationCallback","previousOnCancel","cancellationOnCancel","cancellationSetOnCancel","cancellationClearCancellationData","cancellationPropagateFrom","flags","branchesRemainingToCancel","bindingPropagateFrom","isFulfilled","longStackTracesCaptureStackTrace","longStackTracesAttachExtraTrace","error","ignoreSelf","canAttachTrace","_parent","attachExtraTrace","__stackCleaned__","parsed","parseStackAndMessage","notEnumerableProp","join","checkForgottenReturns","returnValue","promiseCreated","wForgottenReturn","_returnedNonUndefined","handlerLine","creatorLine","traceLines","split","cleanStack","line","nodeFramePattern","test","lineMatches","match","parseLinePattern","firstUserLine","msg","deprecated","replacement","warn","shouldUseOwnTrace","config","warnings","warning","Warning","activeFireEvent","formatAndLogError","reconstructStack","stacks","removeDuplicateOrEmptyJumps","splice","removeCommonRoots","current","currentLastIndex","currentLastLine","commonRootMeetPoint","isTraceLine","stackFramePattern","isInternalFrame","shouldIgnore","indentStackFrames","charAt","stackFramesAsArray","replace","title","isSoft","console","formatStack","String","printWarning","log","fireRejectionEvent","localHandler","reason","localEventFired","formatNonError","str","ruselessToString","newStr","JSON","stringify","snip","maxChars","substr","longStackTracesIsSupported","captureStackTrace","parseLineInfo","matches","parseLineInfoRegex","fileName","parseInt","setBounds","lastLineError","firstFileName","lastFileName","firstStackLines","lastStackLines","firstIndex","result","bluebirdFramePattern","info","_promisesCreated","uncycle","unhandledRejectionHandled","possiblyUnhandledRejection","getDomain","_getDomain","debugging","env","suppressUnhandledRejections","_ensurePossibleRejectionHandled","_setRejectionIsUnhandled","_notifyUnhandledRejection","_notifyUnhandledRejectionIsHandled","_setReturnedNonUndefined","_isRejectionUnhandled","_settledValue","_setUnhandledRejectionIsNotified","_unsetUnhandledRejectionIsNotified","_isUnhandledRejectionNotified","_unsetRejectionIsUnhandled","onPossiblyUnhandledRejection","domain","domainBind","onUnhandledRejectionHandled","disableLongStackTraces","Promise_captureStackTrace","_captureStackTrace","Promise_attachExtraTrace","hasLongStackTraces","fireDomEvent","CustomEvent","event","dispatchEvent","domEvent","toLowerCase","detail","cancelable","Event","document","createEvent","initCustomEvent","fireGlobalEvent","emit","method","eventToObjectGenerator","promiseFulfilled","promiseRejected","promiseResolved","promiseCancelled","promiseChained","unhandledRejection","rejectionHandled","globalEventFired","domEventFired","opts","warningsOption","_clearCancellationData","_execute","monitoring","_fireEvent","handler","inherits","nodes","stackToIndex","node","currentStack","cycleEdgeNode","currentChildLength","v8stackFramePattern","v8stackFormatter","stackTraceLimit","ignoreUntil","err","indexOf","hasStackAfterThrow","isTTY","color","./errors","10","returner","thrower","thenReturn","thenThrow","catchThrow","_reason","caught","catchReturn","_value","11","promiseAllThis","PromiseAll","PromiseMapSeries","PromiseReduce","reduce","all","each","mapSeries","12","subError","nameProperty","defaultMessage","SubError","constructor","OperationalError","cause","_TypeError","_RangeError","es5","Objectfreeze","freeze","CancellationError","TimeoutError","AggregateError","RangeError","methods","Array","defineProperty","configurable","writable","enumerable","level","indent","lines","errorTypes","RejectionError","13","isES5","getDescriptor","getOwnPropertyDescriptor","names","getOwnPropertyNames","getPrototypeOf","propertyIsWritable","prop","descriptor","set","has","hasOwnProperty","proto","ObjectKeys","ObjectGetDescriptor","ObjectDefineProperty","desc","ObjectFreeze","ObjectGetPrototypeOf","ArrayIsArray","14","PromiseMap","map","filter","options","15","PassThroughHandlerContext","called","cancelPromise","FinallyHandlerCancelReaction","finallyHandler","checkCancel","succeed","fail","reasonOrValue","isFinallyHandler","isRejected","_passThrough","success","then","lastly","tap","tapCatch","handlerOrPredicate","len","catchInstances","./catch_filter","16","Proxyable","promiseFromYieldHandler","yieldHandlers","traceParent","PromiseSpawn","generatorFunction","yieldHandler","internal","_finallyPromise","_promise","_stack","_generatorFunction","_receiver","_generator","_yieldHandlers","concat","_yieldedPromise","_cancellationPhase","errors","_isResolved","_cleanup","_fulfill","_promiseCancelled","implementsReturn","coroutine","returnSentinel","_continue","_promiseFulfilled","next","_promiseRejected","_run","_rejectCallback","done","bitField","_proxy","PromiseSpawn$","generator","spawn","addYieldHandler","17","last","spread","18","MappingPromiseArray","limit","_filter","constructor$","_callback","_preservedValues","_limit","_inFlight","_queue","_asyncInit","concurrency","isFinite","_init$","_init","values","_values","preservedValues","callback","totalResolved","_totalResolved","_resolve","booleans","19","_resolveFromSyncValue","attempt","20","isUntypedError","wrapAsOperationalError","rErrorKey","markAsOriginatingFromRejection","nodebackForPromise","multiArgs","wrapped","maybeWrapAsError","21","spreadAdapter","val","nodeback","successAdapter","errorAdapter","newReason","asCallback","nodeify","adapter","22","check","_fulfillmentHandler0","_rejectionHandler0","_promise0","_receiver0","_resolveFromExecutor","deferResolve","v","deferReject","fillTypes","p","makeSelfResolutionError","reflectHandler","PromiseInspection","UNDEFINED_BINDING","APPLY","reflect","didFulfill","didReject","_setIsFinal","toJSON","fulfillmentValue","rejectionReason","originatesFromRejection","getNewLibraryCopy","is","fromNode","fromCallback","_isFateSealed","_setAsyncGuaranteed","cast","_setFulfilled","fulfilled","rejected","internalData","haveInternalData","settler","_settlePromiseCtx","_settlePromiseLateCancellationObserver","_addCallbacks","_setLength","_setRejected","_setFollowing","_isFinal","_unsetCancelled","_receiverAt","_promiseAt","_fulfillmentHandlerAt","_rejectionHandlerAt","_migrateCallback0","follower","fulfill","_migrateCallbackAt","base","proxyable","shouldBind","_setFollowee","synchronous","ignoreNonErrorWarnings","ensureErrorObject","hasStack","_settlePromiseFromHandler","x","_settlePromise","isPromise","asyncGuaranteed","_settlePromise0","_clearCallbackDataAtIndex","_fulfillPromises","_rejectPromises","defer","pending","version","toFastProperties","b","c","./any.js","./async","./bind","./call_get.js","./cancel","./context","./debuggability","./direct_resolve","./each.js","./filter.js","./finally","./generators.js","./join","./map.js","./method","./nodeback","./nodeify.js","./promise_array","./promisify.js","./props.js","./race.js","./reduce.js","./settle.js","./some.js","./synchronous_inspection","./thenables","./timers.js","./using.js","23","toResolutionValue","Map","resolveValueIfEmpty","asArray","_resolveEmptyArray","_iterate","getActualLength","shouldCopyValues","isResolved","24","propsFilter","noCopyPropsPattern","isPromisified","__isPromisified__","hasPromisified","suffix","getDataPropertyOrDefault","defaultPromisified","checkValid","suffixRegexp","keyWithoutAsyncSuffix","promisifiableMethods","inheritedDataKeys","passesDefaultFilter","defaultFilter","makeNodePromisifiedClosure","__","promisified","THIS","defaultThis","withAppended","promisifyAll","promisifier","RegExp","escapeIdentRegex","promisifiedKey","makeNodePromisified","promisify","makeNodePromisifiedEval","defaultSuffix","noCopyProps","copyDescriptors","isClass","25","PropertiesPromiseArray","entries","isMap","Es6Map","mapToEntries","_isMap","props","castValue","extractEntry","size","forEach","entriesToMap","keyOffset","26","arrayMove","src","srcIndex","dst","dstIndex","capacity","_capacity","_front","_willBeOverCapacity","_checkCapacity","wrapMask","front","_resizeTo","oldCapacity","moveItemsCount","27","race","raceLater","array","28","ReductionPromiseArray","initialValue","_each","_fn","_initialValue","_currentCancellable","_eachValues","completed","valueOrReason","gotAccum","accum","_gotAccum","gotValue","_eachComplete","sender","_resultCancelled$","29","noAsyncScheduler","NativePromise","getNativePromise","MutationObserver","GlobalSetImmediate","setImmediate","ProcessNextTick","nextTick","isRecentNode","nativePromise","navigator","standalone","cordova","div","createElement","attributes","toggleScheduled","div2","o2","classList","toggle","observe","scheduleToggle","disconnect","30","SettledPromiseArray","_promiseResolved","inspection","_settledValueField","settle","31","_howMany","_unwrap","_initialized","some","howMany","CANCELLATION","isArrayResolved","_canPossiblyFulfill","_getRangeError","count","_addFulfilled","_fulfilled","_addRejected","_checkOutcome","_rejected","32","__isCancelled","33","getThen","isAnyBluebirdPromise","doThenable","doGetThen","hasProp","34","HandleWrapper","handle","successClear","clearTimeout","failureClear","afterValue","delay","ms","afterTimeout","timeout","handleWrapper","35","castPreservingDisposable","thenable","_isDisposable","_getDisposer","_setDisposable","dispose","resources","iterator","tryDispose","Disposer","data","_data","_context","FunctionDisposer","maybeUnwrapDisposer","isDisposer","ResourceList","NULL","resource","doDispose","_unsetDisposable","d","using","input","spreadArgs","disposer","reflectedResources","resultPromise","inspections","_disposer","36","tryCatcher","tryCatchTarget","isPrimitive","maybeError","safeToString","appendee","defaultValue","hasMethods","hasMethodsOtherThanConstructor","hasThisAssignmentAndStaticMethods","thisAssignmentPattern","FakeConstructor","rident","filledRange","prefix","isError","ignore","from","to","hasEnvVariables","globalObject","Child","Parent","T","excludedPrototypes","Function","isExcludedProto","visitedKeys","enumeration","Symbol","ArrayFrom","itResult","it","chrome","loadTimes","versions","Number","P","_process","exportName","setTimeoutContext","bindFn","invokeArrayArg","deprecate","deprecationMessage","inherit","properties","childP","baseP","_super","assign","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","splitStr","addEventListener","removeEventListeners","removeEventListener","hasParent","parentNode","inStr","find","trim","inArray","findByKey","toArray","uniqueArray","sort","results","prefixed","property","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","inputTarget","domHandler","ev","enable","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","lastInterval","COMPUTE_INTERVAL","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","touches","changed","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","dx","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","defaults","id","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","gestureEvent","initEvent","gesture","TEST_ELEMENT","Date","output","source","nextKey","extend","dest","merge","MOBILE_REGEX","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","on","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","HowlerGlobal","Howler","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","mobileAutoEnable","_setup","volume","vol","parseFloat","setupAudioContext","gain","_webAudio","ids","_getSoundIds","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","canPlayType","mpegTest","checkOpera","isOldOpera","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_enableMobileAudio","isMobile","maxTouchPoints","msMaxTouchPoints","_mobileEnabled","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","createBufferSource","buffer","connect","destination","noteOn","onended","suspend","_sounds","_paused","_suspendTimer","_resumeAfterSuspend","_autoResume","resume","_emit","Howl","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_duration","_state","_endTimers","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onresume","action","play","load","url","exec","location","protocol","Sound","loadBuffer","num","_ended","_id","_inactiveSound","seek","_seek","duration","_start","_stop","playWebAudio","_refreshBuffer","setValueAtTime","currentTime","_playStart","bufferSource","noteGrainOn","Infinity","isRunning","once","_clearTimer","playHtml5","playbackRate","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","fade","diff","dir","steps","stepLen","ceil","linearRampToValueAtTime","_interval","setInterval","soundId","min","clearInterval","cancelScheduledValues","loopStart","loopEnd","realTime","playing","rateSeek","sounds","_errorFn","_loadFn","remCache","cache","_loadQueue","task","_drain","cnt","_panner","howl","random","createGain","createGainNode","paused","_errorListener","_loadListener","__default","loadSound","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","AudioContext","webkitAudioContext","iOS","platform","appVersion","safari","_pos","_orientation","stereo","pan","pos","z","setPosition","orientation","xUp","yUp","zUp","or","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_panningModel","_refDistance","_rolloffFactor","pa","panner","createPanner","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","noop","browser","argv","addListener","removeListener","removeAllListeners","binding","cwd","chdir","umask","getPathColorName","path","hexColor","originalColor","getColorName","getRandomPop","floor","getIndexedPopColor","transparent","Color","./../../config","root","factory","ShapeDetector","deg2Rad","Stroke","points","processStroke","patterns","_nbSamplePoints","nbSamplePoints","learn","_squareSize","_phi","_angleRange","_anglePrecision","_halfDiagonal","_origin","resample","setCentroid","rotateBy","indicativeAngle","scaleToSquare","translateToOrigin","localDistance","q","strokeLength","newPoints","point","cos","sin","box","minX","maxX","minY","maxY","width","height","distanceAtBestAngle","pattern","x1","f1","distanceAtAngle","x2","f2","strokePoints","patternPoints","defaultShapes","spot","patternName","score","stroke","bestDistance","bestPattern","bestScore","resetWindow","kan","currentColor","composition","compositionInterval","compositionTimeout","soundTimeouts","lastEvent","interaction","moves","pinching","pinchedGroup","pinchedTut","pathData","shapePath","prevAngle","sides","side","corners","lastScale","lastRotation","originalPosition","tutorialCompletion","fill","pinch","swipe","inactivityTimeout","playPromptTimeout","userHasDrawnFirstShape","firstTimePlaying","shapesSinceTut","refreshCheckInterval","sha","scheduledOverlay","continueCountdownInterval","shapeSounds","ui","overlays","timing","shape","$","setSha","reload","./overlays","./shape","./sound","./timing","./touch","./ui","./video","openOverlay","overlayName","allOverlays","includes","panning","preventInactivityTimeout","closeAndResetOverlays","tutorial","hideContextualTuts","$body","addClass","overlayActiveClass","tapEvent","openIntroOverlay","anyShapesOnCanvas","openPlayPromptOverlay","playPromptDelay","openSharePromptOverlay","openContinueOverlay","openTipsOverlay","openShareOverlay","resetContinueCountdown","html","continueInactivityDelay","$countdownNumWrap","video","enterTutorialMode","activateTipsCards","cardNavNext","$old","$new","$cardItems","first","$next","$third","slide","removeClass","updateCardCounter","cardsCount","cardInteractions","timeOfLastInteraction","closest","resetTips","$sharePhone","overlayOpenClasses","total","$footer","phoneNumberInputs","mask","$shareKeypad","phoneNumber","masked","randomCardGraphics","el","attr","initTips","initShare","hammerCanvas","$cardsWrap","overlay","./tutorial","initKeepaliveShape","keepaliveShape","Path","Rectangle","strokeColor","visible","startKeepaliveAnimation","keepaliveInterval","stopKeepaliveAnimation","destroyGroupPops","group","groupPopsBefore","getGroupPops","fillInGroupPopsById","groupId","paper","project","getItem","className","children","groupChild","toggleFill","interior","fillColor","cleanUpGroup","acceptableNames","updatePops","freshGroups","getFreshGroups","popCandidates","getPopCandidates","getAllPops","reverse","freshGroup","freshOuter","_namedChildren","bringToFront","otherGroup","otherGroupOuter","thisPop","intersect","popColor","popGroup","intersectingGroup","closed","addChild","fresh","getOutlineGroup","truedShape","outerPath","middlePath","sizes","lastAngle","firstTop","firstBottom","lastTop","lastBottom","Group","firstSegment","cumSize","avgSize","getPointAt","normal","getNormalAt","top","Point","bottom","insert","centerTop","centerBottom","flatten","simplify","selected","returnGroup","getTruedShape","pathClone","clone","completedPath","getCompletedPath","truedPath","strokeWidth","intersections","getIntersections","trimmedPath","getTrimmedPath","extendedPath","getExtendedPath","_intersections","_trimmedPath","replaceWith","getBruteExtendedPath","_intersections2","_trimmedPath2","getShapePrediction","prediction","shapeJSON","exportJSON","shapeData","processShapeData","shapePrediction","detector","closedShapes","randomPick","intersects","getIntegerPoint","stringifyPoint","parsePoint","pointStr","getClosestPointFromPathData","leastDistance","closestPoint","Base","datum","json","returnShape","jsonObj","parse","segments","segment","positionInfo","findInteriorCurves","interiorCurves","dividedPath","resolveCrossings","enclosedLoop","_enclosedLoop","thresholdDist","thresholdDistMultiplier","nextSegment","startAngle","inverseStartAngle","extendedStartPoint","lastSegment","penSegment","previous","endAngle","extendedEndPoint","firstPoint","lastPoint","unite","crossings","maxArea","maxChild","area","intersection","intersectionPoint","pathCrossings","subtract","_ret2","closedChildren","childClone","accumulator","_j","newPath","copyContent","copyAttributes","_typeof","hitTestGroupBounds","groups","getVisibleGroups","hitTestBounds","strokeBounds","isInside","cornerThresholdDeg","shapeNames","./color","./lib/shape-detector","record","audioRecorder","Recorder","workerPath","canvasRecorder","startRecording","asyncPlayCompositionOnce","exportWAV","blob","download","stopRecording","getBlob","drawCanvas","getElementById","RecordRTC","asyncInitShapeSounds","reinitShapeSounds","getShapeSoundObj","viewWidth","view","viewSize","initShapeSounds","colorName","quantizedSoundStartTime","quantizeLength","bounds","compositionLength","quantizedSoundDuration","soundObj","startTime","pathId","spriteName","startPlaying","hasClass","playEnabledClass","playingClass","startComposition","stopPlaying","stopComposition","asyncGetShapeSoundFromShapeName","shapeName","shapeSoundJSONPath","getJSON","resp","shapeSoundData","formatShapeSoundData","when","returnSounds","returnData","urls","smallestDuration","bpm","returnDuration","quantizePosition","position","smallestInterval","measures","returnPosition","asyncPlayShape","asyncPlayShapeSound","asyncPlayShapeAnimation","res","catch","animating","totalDuration","measureLength","animate","rotate","settings","easing","complete","removeShapeFromComposition","shapeGroup","getItems","clearSoundTimeouts","soundTimeout","playCompositionFirstTime","trimmedCompositionObj","getTrimmedCompositionObj","iterations","repeatComposition","playCompositionOnce","asyncPlayCompositionMultipleTimes","repeats","promisedRepeats","getTime","shapePromises","asyncPlayShapeWithDelay","endTime","playTime","trimmedComposition","getCompositionStartTime","modifiedSound","shallowCopy","beatLength","howler","hash","pauseVideo","exitTutorialMode","drawInactivityDelay","inputDelay","refreshCheckDelay","overlayDelay","hammerTips","tipsOverlay","doubleTap","panStart","panMove","panEnd","pinchStart","pinchMove","pinchEnd","enablePanAndPinchEvents","enablePanEvents","enablePinchEvents","enableTapEvents","disableTapEvents","disablePanEvents","disablePinchEvents","pointer","hitResult","hitTest","hitOptions","eventTargetIsOnCanvas","hideContextualTutByName","stopPropagation","strokeCap","maxShapeLength","angleDelta","prevPoint","halfPointX","halfPointY","halfPoint","topX","topY","bottomX","bottomY","smooth","speed","tooLong","draw","move","minShapeSize","visibleGroups","firstGroup","removedGroup","shapeSize","centerPoint","rad","gradientSize","originX","originY","destinationX","destinationY","origin","gradient","stops","shapeSoundObj","outlineGroup","outline","outer","outlineCenter","middle","sendToBack","shapeMask","enclosedLoops","unditherButtonsByName","scaleFactor","allTutsCompleted","tutName","addContextualTut","tut","interacting","originalRotation","originalScale","thrown","$tut","$pinchedTut","currentScale","scaleDelta","currentRotation","rotationDelta","moveContextualTut","hypot","viewHypot","maxScaleFactor","hideContextualTut","throwPinchedGroup","velocityMultiplier","viewHeight","offScreen","requestAnimationFrame","newX","newY","newPos","tolerance","hammerjs","getTutByName","tutObj","tutorialCompletionObj","completion","shapeCenter","tutCopy","tutPos","getTutPositionFromCenter","css","left","visibility","$tuts","resetContextualTuts","tutWidth","outerWidth","tutHeight","outerHeight","leftPos","topPos","tutArrowHeight","initLogoRefresh","initColorPalette","initNewButton","initUndoButton","initPlayButton","initTipsButton","initShareButton","initContextualTuts","resetCanvas","ditherButtonsByName","buttonNames","undither","ditherButtonByName","buttonName","$button","ditheredClass","unditherButtonByName","newPressed","activeLayer","removeChildren","undoPressed","lastMove","clearGroupPops","numGroups","getNumGroups","tipsPressed","sharePressed","share","$paletteWrap","$paletteColors","paletteColorSize","paletteSelectedColorSize","paletteSelectedClass","$svg","clear","numCanvasses","randomCanvasIndex","canvasBg","Raster","scaleFactorHorizontal","scaleFactorVertical","Layer","./share","degrees","deg","radians","pow","delta","toLocaleTimeString","getNumVisibleGroups","getAllGroups","returnPops","groupPops","intersectingPops","original","playVideo","videoPlayingClass","main","$video","$videoWrapper","./main"],"mappings":"CAAA,QAAUA,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIK,GAAE,GAAIC,OAAM,uBAAuBN,EAAE,IAAK,MAAMK,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEX,EAAEG,IAAIS,WAAYb,GAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGS,QAAkD,IAAI,GAA1CL,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKa,GAAG,SAAST,EAAQU,EAAOJ,GACvd,YAEAA,GAAQK,eAAgB,EACxBL,EAAQM,KAAM,EACdN,EAAQO,SAAW,SACnBP,EAAQQ,UAAY,GAEpBR,EAAQS,SACNC,QAAS,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAClIC,YACEC,UAAW,QACXC,UAAW,OACXC,UAAW,OACXC,UAAW,OACXC,UAAW,MACXC,UAAW,MACXC,UAAW,SACXC,UAAW,QACXC,UAAW,QACXC,UAAW,SACXC,UAAW,QACXC,UAAW,SAEbC,WACEZ,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,WACvBC,WAAY,UAAW,YAEzBE,MAAO,UAAW,UAAW,UAAW,UAAW,WACnDC,UAAW,GACXC,kBAAmB,IAGrB3B,EAAQ4B,iBACNC,KAAM,OACNC,KAAM,iIAEND,KAAM,QACNC,KAAM,+HAEND,KAAM,QACNC,KAAM,+JAGFC,GAAG,SAASrC,EAAQU,EAAOJ,IACjC,SAAWgC,EAAQC,IA6BlB,SAAS/C,GAAG,GAAG,gBAAiBc,IAAS,mBAAoBI,GAAOA,EAAOJ,QAAQd,QAAS,IAAG,kBAAmBgD,SAAQA,OAAOC,IAAID,UAAUhD,OAAO,CAAC,GAAIU,EAAE,oBAAoBwC,QAAOxC,EAAEwC,OAAO,mBAAoBH,GAAOrC,EAAEqC,EAAO,mBAAoBI,QAAOzC,EAAEyC,MAAMzC,EAAE0C,QAAQpD,MAAM,WAAW,GAAIgD,GAAO9B,EAAOJ,CAAQ,OAAO,SAAUd,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAAT8C,UAAqBA,OAAQ,KAAI/C,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIK,GAAE,GAAIC,OAAM,uBAAuBN,EAAE,IAAK,MAAMK,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEX,EAAEG,IAAIS,WAAYb,GAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGS,QAAkD,IAAI,GAA1CL,GAAkB,kBAAT4C,UAAqBA,QAAgBhD,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKa,GAAG,SAASoC,EAAQnC,EAAOJ,GAC5xB,YACAI,GAAOJ,QAAU,SAASsC,GAE1B,QAASE,GAAIC,GACT,GAAIC,GAAM,GAAIC,GAAiBF,GAC3BG,EAAUF,EAAIE,SAIlB,OAHAF,GAAIG,WAAW,GACfH,EAAII,YACJJ,EAAIK,OACGH,EAPX,GAAID,GAAmBL,EAAQU,iBAU/BV,GAAQE,IAAM,SAAUC,GACpB,MAAOD,GAAIC,IAGfH,EAAQW,UAAUT,IAAM,WACpB,MAAOA,GAAIU,aAKTnB,GAAG,SAASQ,EAAQnC,EAAOJ,GACjC,YAOA,SAASmD,KACLD,KAAKE,kBAAmB,EACxBF,KAAKG,aAAc,EACnBH,KAAKI,WAAa,GAAIC,GAAM,IAC5BL,KAAKM,aAAe,GAAID,GAAM,IAC9BL,KAAKO,oBAAqB,EAC1BP,KAAKQ,oBAAqB,CAC1B,IAAIrB,GAAOa,IACXA,MAAKS,YAAc,WACftB,EAAKuB,gBAETV,KAAKW,UAAYC,EAyDrB,QAASC,GAAiBC,EAAIC,EAAUC,GACpChB,KAAKI,WAAWa,KAAKH,EAAIC,EAAUC,GACnChB,KAAKkB,aAGT,QAASC,GAAYL,EAAIC,EAAUC,GAC/BhB,KAAKM,aAAaW,KAAKH,EAAIC,EAAUC,GACrChB,KAAKkB,aAGT,QAASE,GAAoB1B,GACzBM,KAAKM,aAAae,SAAS3B,GAC3BM,KAAKkB,aAtFT,GAAII,EACJ,KAAK,KAAM,IAAI3E,OAAW,MAAOX,GAAIsF,EAAiBtF,EACtD,GAAI4E,GAAWvB,EAAQ,cACnBgB,EAAQhB,EAAQ,WAChBkC,EAAOlC,EAAQ,SAgBnBY,GAAMF,UAAUyB,aAAe,SAASV,GACpC,GAAIW,GAAOzB,KAAKW,SAGhB,OAFAX,MAAKW,UAAYG,EACjBd,KAAKE,kBAAmB,EACjBuB,GAGXxB,EAAMF,UAAU2B,mBAAqB,WACjC,MAAO1B,MAAKE,kBAGhBD,EAAMF,UAAU4B,iBAAmB,WAC/B3B,KAAKQ,oBAAqB,GAG9BP,EAAMF,UAAU6B,6BAA+B,WACvCL,EAAKM,cACL7B,KAAKQ,oBAAqB,IAIlCP,EAAMF,UAAU+B,gBAAkB,WAC9B,MAAO9B,MAAKG,aAAeH,KAAKO,oBAIpCN,EAAMF,UAAUgC,WAAa,SAAS/F,EAAGgG,GACjCA,GACAlD,EAAQmD,OAAOC,MAAM,UAAYlG,YAAaW,OAAQX,EAAEmG,MAAQnG,GAC5D,MACJ8C,EAAQsD,KAAK,IAEbpC,KAAKqC,WAAWrG,IAIxBiE,EAAMF,UAAUsC,WAAa,SAASvB,EAAIE,GAKtC,GAJyB,IAArBsB,UAAUtF,SACVgE,EAAMF,EACNA,EAAK,WAAc,KAAME,KAEH,mBAAfuB,YACPA,WAAW,WACPzB,EAAGE,IACJ,OACA,KACHhB,KAAKW,UAAU,WACXG,EAAGE,KAET,MAAOhF,GACL,KAAM,IAAIW,OAAM,oEAmBnB4E,EAAKM,aAKN5B,EAAMF,UAAUyC,YAAc,SAAU1B,EAAIC,EAAUC,GAC9ChB,KAAKQ,mBACLK,EAAiB9D,KAAKiD,KAAMc,EAAIC,EAAUC,GAE1ChB,KAAKW,UAAU,WACX4B,WAAW,WACPzB,EAAG/D,KAAKgE,EAAUC,IACnB,QAKff,EAAMF,UAAU0C,OAAS,SAAU3B,EAAIC,EAAUC,GACzChB,KAAKQ,mBACLW,EAAYpE,KAAKiD,KAAMc,EAAIC,EAAUC,GAErChB,KAAKW,UAAU,WACXG,EAAG/D,KAAKgE,EAAUC,MAK9Bf,EAAMF,UAAU2C,eAAiB,SAAShD,GAClCM,KAAKQ,mBACLY,EAAoBrE,KAAKiD,KAAMN,GAE/BM,KAAKW,UAAU,WACXjB,EAAQiD,uBA/BpB1C,EAAMF,UAAUyC,YAAc3B,EAC9BZ,EAAMF,UAAU0C,OAAStB,EACzBlB,EAAMF,UAAU2C,eAAiBtB,GAmCrCnB,EAAMF,UAAU6C,YAAc,SAASC,GACnC,KAAOA,EAAM7F,SAAW,GAAG,CACvB,GAAI8D,GAAK+B,EAAMC,OACf,IAAkB,kBAAPhC,GAAX,CAIA,GAAIC,GAAW8B,EAAMC,QACjB9B,EAAM6B,EAAMC,OAChBhC,GAAG/D,KAAKgE,EAAUC,OALdF,GAAG6B,oBASf1C,EAAMF,UAAUW,aAAe,WAC3BV,KAAK4C,YAAY5C,KAAKM,cACtBN,KAAK+C,SACL/C,KAAKO,oBAAqB,EAC1BP,KAAK4C,YAAY5C,KAAKI,aAG1BH,EAAMF,UAAUmB,WAAa,WACpBlB,KAAKG,cACNH,KAAKG,aAAc,EACnBH,KAAKW,UAAUX,KAAKS,eAI5BR,EAAMF,UAAUgD,OAAS,WACrB/C,KAAKG,aAAc,GAGvBjD,EAAOJ,QAAUmD,EACjB/C,EAAOJ,QAAQwE,eAAiBA,IAE7B0B,UAAU,GAAGC,aAAa,GAAGC,SAAS,KAAKC,GAAG,SAAS9D,EAAQnC,EAAOJ,GACzE,YACAI,GAAOJ,QAAU,SAASsC,EAASgE,EAAUC,EAAqBC,GAClE,GAAIC,IAAa,EACbC,EAAa,SAASC,EAAGzH,GACzBgE,KAAK0D,QAAQ1H,IAGb2H,EAAiB,SAAS3H,EAAG4H,GAC7BA,EAAQC,wBAAyB,EACjCD,EAAQE,eAAeC,MAAMP,EAAYA,EAAY,KAAMxD,KAAMhE,IAGjEgI,EAAkB,SAASC,EAASL,GACC,KAAd,SAAjB5D,KAAKkE,YACPlE,KAAKmE,iBAAiBP,EAAQQ,SAIlCC,EAAkB,SAASrI,EAAG4H,GACzBA,EAAQC,wBAAwB7D,KAAK0D,QAAQ1H,GAGtDoD,GAAQW,UAAUuE,KAAO,SAAUL,GAC1BV,IACDA,GAAa,EACbnE,EAAQW,UAAUwE,eAAiBjB,EAAMkB,wBACzCpF,EAAQW,UAAU0E,YAAcnB,EAAMoB,qBAE1C,IAAIC,GAAetB,EAAoBY,GACnCzE,EAAM,GAAIJ,GAAQgE,EACtB5D,GAAI+E,eAAevE,KAAM,EACzB,IAAIoE,GAASpE,KAAK4E,SAElB,IADApF,EAAIqF,YAAYF,GACZA,YAAwBvF,GAAS,CACjC,GAAIwE,IACAC,wBAAwB,EACxBnE,QAASF,EACT4E,OAAQA,EACRN,eAAgBa,EAEpBP,GAAOL,MAAMX,EAAUO,EAAgBmB,OAAWtF,EAAKoE,GACvDe,EAAaZ,MACTC,EAAiBK,EAAiBS,OAAWtF,EAAKoE,GACtDpE,EAAIuF,aAAaJ,OAEjBnF,GAAI2E,iBAAiBC,EAEzB,OAAO5E,IAGXJ,EAAQW,UAAU8E,YAAc,SAAUG,GAC1BF,SAARE,GACAhF,KAAKkE,UAA6B,QAAjBlE,KAAKkE,UACtBlE,KAAKiF,SAAWD,GAEhBhF,KAAKkE,UAAYlE,KAAKkE,WAAY,SAI1C9E,EAAQW,UAAUmF,SAAW,WACzB,MAAsC,YAAb,QAAjBlF,KAAKkE,YAGjB9E,EAAQkF,KAAO,SAAUL,EAASkB,GAC9B,MAAO/F,GAAQgG,QAAQD,GAAOb,KAAKL,UAIjCoB,GAAG,SAAShG,EAAQnC,EAAOJ,GACjC,YAGA,SAASwI,KACL,IAAUlG,UAAYmG,IAAUnG,QAAUoG,GAC1C,MAAOxJ,IACP,MAAOuJ,GALX,GAAIC,EACmB,oBAAZpG,WAAyBoG,EAAMpG,QAM1C,IAAImG,GAAWlG,EAAQ,cACvBkG,GAASD,WAAaA,EACtBpI,EAAOJ,QAAUyI,IAEdE,YAAY,KAAKC,GAAG,SAASrG,EAAQnC,EAAOJ,GAC/C,YACA,IAAI6I,GAAKC,OAAOC,MAChB,IAAIF,EAAI,CACJ,GAAIG,GAAcH,EAAG,MACjBI,EAAcJ,EAAG,KACrBG,GAAY,SAAWC,EAAY,SAAW,EAGlD7I,EAAOJ,QAAU,SAASsC,GA4D1B,QAAS4G,GAAahB,EAAKiB,GACvB,GAAInF,EAEJ,IADW,MAAPkE,IAAalE,EAAKkE,EAAIiB,IACR,kBAAPnF,GAAmB,CAC1B,GAAIoF,GAAU,UAAY3E,EAAK4E,YAAYnB,GAAO,mBAC9CzD,EAAK6E,SAASH,GAAc,GAChC,MAAM,IAAI7G,GAAQiH,UAAUH,GAEhC,MAAOpF,GAGX,QAASwF,GAAOtB,GACZ,GAAIiB,GAAajG,KAAK5C,MAClB0D,EAAKkF,EAAahB,EAAKiB,EAC3B,OAAOnF,GAAGyF,MAAMvB,EAAKhF,MAiBzB,QAASwG,GAAYxB,GACjB,MAAOA,GAAIhF,MAEf,QAASyG,GAAczB,GACnB,GAAI0B,IAAS1G,IAEb,OADI0G,GAAQ,IAAGA,EAAQC,KAAKC,IAAI,EAAGF,EAAQ1B,EAAIhI,SACxCgI,EAAI0B,GAhGf,GAKIG,GALAtF,EAAOlC,EAAQ,UACfyH,EAAcvF,EAAKuF,WACJvF,GAAKwF,YAyExB3H,GAAQW,UAAUhD,KAAO,SAAUkJ,GAC/B,GAAIe,MAAUC,MAAMlK,KAAKuF,UAAW,EAWpC,OADA0E,GAAK/F,KAAKgF,GACHjG,KAAK+D,MAAMuC,EAAQxB,OAAWA,OAAWkC,EAAMlC,SAW1D1F,EAAQW,UAAUmH,IAAM,SAAUC,GAC9B,GACIC,GADAC,EAAmC,gBAAjBF,EAEtB,IAAKE,EAQDD,EAASX,MAPT,IAAIK,EAAa,CACb,GAAIQ,GAAcT,EAAUM,EAC5BC,GAAyB,OAAhBE,EAAuBA,EAAcd,MAE9CY,GAASZ,CAKjB,OAAOxG,MAAK+D,MAAMqD,EAAQtC,OAAWA,OAAWqC,EAAcrC,YAI/D5B,SAAS,KAAKqE,GAAG,SAASlI,EAAQnC,EAAOJ,GAC5C,YACAI,GAAOJ,QAAU,SAASsC,EAASoI,EAAcC,EAAcnE,GAC/D,GAAI/B,GAAOlC,EAAQ,UACfqI,EAAWnG,EAAKmG,SAChBC,EAAWpG,EAAKoG,SAChBC,EAAQxI,EAAQyI,MAEpBzI,GAAQW,UAAiB,MAAIX,EAAQW,UAAU+H,OAAS,WACpD,IAAKxE,EAAMyE,eAAgB,MAAO/H,MAAKgI,MAAM,2BAI7C,KAFA,GAAItI,GAAUM,KACViI,EAAQvI,EACLA,EAAQwI,kBAAkB,CAC7B,IAAKxI,EAAQyI,UAAUF,GAAQ,CACvBA,EAAMG,eACNH,EAAMI,YAAYP,SAElBG,EAAMK,iBAEV,OAGJ,GAAIC,GAAS7I,EAAQ8I,mBACrB,IAAc,MAAVD,IAAmBA,EAAOL,iBAAkB,CACxCxI,EAAQ0I,eACR1I,EAAQ2I,YAAYP,SAEpBpI,EAAQ4I,iBAEZ,OAEI5I,EAAQ0I,gBAAgB1I,EAAQ2I,YAAYP,SAChDpI,EAAQ+I,sBACRR,EAAQvI,EACRA,EAAU6I,IAKtBnJ,EAAQW,UAAU2I,oBAAsB,WACpC1I,KAAK2I,8BAGTvJ,EAAQW,UAAU6I,6BAA+B,WAC7C,MAA2C9D,UAApC9E,KAAK2I,4BACL3I,KAAK2I,4BAA8B,GAG9CvJ,EAAQW,UAAUoI,UAAY,SAASU,GACnC,MAAIA,KAAc7I,MACdA,KAAK2I,2BAA6B,EAClC3I,KAAK8I,mBACE,IAEP9I,KAAK0I,wBACD1I,KAAK4I,iCACL5I,KAAK8I,mBACE,KAMnB1J,EAAQW,UAAUuI,gBAAkB,WAC5BtI,KAAK4I,gCACL5I,KAAK+I,WAIb3J,EAAQW,UAAUgJ,QAAU,WACnB/I,KAAKkI,mBACVlI,KAAKgJ,gBACLpB,EAAMnF,OAAOzC,KAAKiJ,gBAAiBjJ,KAAM8E,UAG7C1F,EAAQW,UAAUkJ,gBAAkB,WAC5BjJ,KAAKkJ,UAAY,GAAGlJ,KAAK2C,mBAGjCvD,EAAQW,UAAUoJ,eAAiB,WAC/BnJ,KAAKoJ,eAAiBtE,QAG1B1F,EAAQW,UAAUmI,eAAiB,WAC/B,MAAOlI,MAAKqJ,cAAgBrJ,KAAKsJ,gBAGrClK,EAAQW,UAAUwJ,cAAgB,WAC9B,MAAOvJ,MAAKqJ,cAAgBrJ,KAAKwJ,eAGrCpK,EAAQW,UAAU0J,kBAAoB,SAASC,EAAkBC,GAC7D,GAAIpI,EAAKqI,QAAQF,GACb,IAAK,GAAIjN,GAAI,EAAGA,EAAIiN,EAAiB1M,SAAUP,EAC3CuD,KAAKyJ,kBAAkBC,EAAiBjN,GAAIkN,OAE7C,IAAyB7E,SAArB4E,EACP,GAAgC,kBAArBA,IACP,IAAKC,EAAc,CACf,GAAI3N,GAAI0L,EAASgC,GAAkB3M,KAAKiD,KAAKyE,cACzCzI,KAAM2L,IACN3H,KAAK6J,kBAAkB7N,EAAEA,GACzB4L,EAAMvF,WAAWrG,EAAEA,SAI3B0N,GAAiBI,iBAAiB9J,OAK9CZ,EAAQW,UAAU+I,gBAAkB,WAChC,GAAIY,GAAmB1J,KAAK+J,WAC5B/J,MAAKmJ,iBACLvB,EAAMnF,OAAOzC,KAAKyJ,kBAAmBzJ,KAAM0J,IAG/CtK,EAAQW,UAAUiK,wBAA0B,WACpChK,KAAKkI,mBACLlI,KAAKyJ,kBAAkBzJ,KAAK+J,aAAa,GACzC/J,KAAKmJ,mBAIb/J,EAAQW,UAAU+J,iBAAmB,WACjC9J,KAAK8H,aAKN5E,SAAS,KAAK+G,GAAG,SAAS5K,EAAQnC,EAAOJ,GAC5C,YACAI,GAAOJ,QAAU,SAASoN,GAM1B,QAASC,GAAYC,EAAWC,EAAI3K,GAChC,MAAO,UAAS1D,GACZ,GAAIsO,GAAU5K,EAAQ+E,aACtB8F,GAAe,IAAK,GAAI9N,GAAI,EAAGA,EAAI2N,EAAUpN,SAAUP,EAAG,CACtD,GAAI+N,GAAOJ,EAAU3N,EAErB,IAAI+N,IAAS7N,OACA,MAAR6N,GAAgBA,EAAKzK,oBAAqBpD,QAC3C,GAAIX,YAAawO,GACb,MAAO9C,GAAS2C,GAAItN,KAAKuN,EAAStO,OAEnC,IAAoB,kBAATwO,GAAqB,CACnC,GAAIC,GAAmB/C,EAAS8C,GAAMzN,KAAKuN,EAAStO,EACpD,IAAIyO,IAAqB9C,EACrB,MAAO8C,EACJ,IAAIA,EACP,MAAO/C,GAAS2C,GAAItN,KAAKuN,EAAStO,OAEnC,IAAIuF,EAAKmJ,SAAS1O,GAAI,CAEzB,IAAK,GADD2O,GAAOC,EAAQJ,GACVK,EAAI,EAAGA,EAAIF,EAAK3N,SAAU6N,EAAG,CAClC,GAAIC,GAAMH,EAAKE,EACf,IAAIL,EAAKM,IAAQ9O,EAAE8O,GACf,QAASP,GAGjB,MAAO7C,GAAS2C,GAAItN,KAAKuN,EAAStO,IAG1C,MAAOkO,IAlCf,GAAI3I,GAAOlC,EAAQ,UACfuL,EAAUvL,EAAQ,SAASsL,KAC3BjD,EAAWnG,EAAKmG,SAChBC,EAAWpG,EAAKoG,QAmCpB,OAAOwC,MAGJY,QAAQ,GAAG7H,SAAS,KAAK8H,GAAG,SAAS3L,EAAQnC,EAAOJ,GACvD,YACAI,GAAOJ,QAAU,SAASsC,GAS1B,QAAS6L,KACLjL,KAAKkL,OAAS,GAAID,GAAQE,cAAcC,KAmB5C,QAASC,KACL,GAAIC,EAAiB,MAAO,IAAIL,GAGpC,QAASG,KACL,GAAIG,GAAYC,EAAaxO,OAAS,CACtC,IAAIuO,GAAa,EACb,MAAOC,GAAaD,GAnC5B,GAAID,IAAkB,EAClBE,IAgEJ,OA9DApM,GAAQW,UAAU0L,gBAAkB,aACpCrM,EAAQW,UAAU2L,aAAe,aACjCtM,EAAQW,UAAU4L,YAAc,WAAY,MAAO,OACnDvM,EAAQwM,aAAexM,EAAQW,UAAU6L,aAAe,aAKxDX,EAAQlL,UAAU2L,aAAe,WACT5G,SAAhB9E,KAAKkL,SACLlL,KAAKkL,OAAOO,gBAAkB,KAC9BD,EAAavK,KAAKjB,KAAKkL,UAI/BD,EAAQlL,UAAU4L,YAAc,WAC5B,GAAoB7G,SAAhB9E,KAAKkL,OAAsB,CAC3B,GAAIW,GAAQL,EAAapO,MACrBoC,EAAMqM,EAAMJ,eAEhB,OADAI,GAAMJ,gBAAkB,KACjBjM,EAEX,MAAO,OAcXyL,EAAQE,cAAgB,KACxBF,EAAQpF,OAASwF,EACjBJ,EAAQa,0BAA4B,aACpCb,EAAQc,wBAA0B,WAC9B,GAAIC,GAAsB5M,EAAQW,UAAU2L,aACxCO,EAAqB7M,EAAQW,UAAU4L,YACvCO,EAAsB9M,EAAQwM,aAC9BO,EAAsB/M,EAAQW,UAAU6L,aACxCQ,EAAyBhN,EAAQW,UAAU0L,eAC/CR,GAAQa,0BAA4B,WAChC1M,EAAQW,UAAU2L,aAAeM,EACjC5M,EAAQW,UAAU4L,YAAcM,EAChC7M,EAAQwM,aAAeM,EACvB9M,EAAQW,UAAU6L,aAAeO,EACjC/M,EAAQW,UAAU0L,gBAAkBW,EACpCd,GAAkB,GAEtBA,GAAkB,EAClBlM,EAAQW,UAAU2L,aAAeT,EAAQlL,UAAU2L,aACnDtM,EAAQW,UAAU4L,YAAcV,EAAQlL,UAAU4L,YAClDvM,EAAQwM,aAAexM,EAAQW,UAAU6L,aAAeR,EACxDhM,EAAQW,UAAU0L,gBAAkB,WAChC,GAAIY,GAAMrM,KAAK4L,cACXS,IAA8B,MAAvBA,EAAIZ,kBAAyBY,EAAIZ,gBAAkBzL,QAG/DiL,QAGDqB,GAAG,SAASjN,EAAQnC,EAAOJ,GACjC,YACAI,GAAOJ,QAAU,SAASsC,EAAS6L,GA0MnC,QAASsB,GAAoCC,EAAM9M,GAC/C,OAAQA,QAASA,GA0FrB,QAAS+M,KAAqB,OAAO,EAuBrC,QAASC,GAAoBC,EAAUvH,EAASwH,GAC5C,GAAIlN,GAAUM,IACd,KACI2M,EAASvH,EAASwH,EAAQ,SAASC,GAC/B,GAAwB,kBAAbA,GACP,KAAM,IAAIxG,WAAU,qCACA9E,EAAK6E,SAASyG,GAEtCnN,GAAQoN,4BAA4BD,KAE1C,MAAO7Q,GACL,MAAOA,IAIf,QAAS+Q,GAAuCF,GAC5C,IAAK7M,KAAKkI,iBAAkB,MAAOlI,KAEnC,IAAIgN,GAAmBhN,KAAK+J,WACHjF,UAArBkI,EACIzL,EAAKqI,QAAQoD,GACbA,EAAiB/L,KAAK4L,GAEtB7M,KAAK+E,cAAciI,EAAkBH,IAGzC7M,KAAK+E,aAAa8H,GAI1B,QAASI,KACL,MAAOjN,MAAKoJ,eAGhB,QAAS8D,GAAwBL,GAC7B7M,KAAKoJ,eAAiByD,EAG1B,QAASM,KACLnN,KAAKwI,oBAAsB1D,OAC3B9E,KAAKoJ,eAAiBtE,OAG1B,QAASsI,GAA0B7E,EAAQ8E,GACvC,GAAoB,KAAP,EAARA,GAAkB,CACnBrN,KAAKwI,oBAAsBD,CAC3B,IAAI+E,GAA4B/E,EAAOI,0BACL7D,UAA9BwI,IACAA,EAA4B,GAEhC/E,EAAOI,2BAA6B2E,EAA4B,EAEhD,KAAP,EAARD,IAAoB9E,EAAOrD,YAC5BlF,KAAK6E,YAAY0D,EAAOtD,UAIhC,QAASsI,GAAqBhF,EAAQ8E,GACd,KAAP,EAARA,IAAoB9E,EAAOrD,YAC5BlF,KAAK6E,YAAY0D,EAAOtD,UAKhC,QAASP,KACL,GAAIlF,GAAMQ,KAAKiF,QACf,OAAYH,UAARtF,GACIA,YAAeJ,GACXI,EAAIgO,cACGhO,EAAI2F,QAEX,OAIL3F,EAGX,QAASiO,KACLzN,KAAKkL,OAAS,GAAIC,GAAcnL,KAAK4L,gBAGzC,QAAS8B,GAAgCC,EAAOC,GAC5C,GAAIC,EAAeF,GAAQ,CACvB,GAAI9B,GAAQ7L,KAAKkL,MAIjB,IAHcpG,SAAV+G,GACI+B,IAAY/B,EAAQA,EAAMiC,SAEpBhJ,SAAV+G,EACAA,EAAMkC,iBAAiBJ,OACpB,KAAKA,EAAMK,iBAAkB,CAChC,GAAIC,GAASC,EAAqBP,EAClCpM,GAAK4M,kBAAkBR,EAAO,QAC1BM,EAAO/H,QAAU,KAAO+H,EAAO9L,MAAMiM,KAAK,OAC9C7M,EAAK4M,kBAAkBR,EAAO,oBAAoB,KAK9D,QAASU,GAAsBC,EAAaC,EAAgB/B,EAAM9M,EACnC6I,GAC3B,GAAoBzD,SAAhBwJ,GAAgD,OAAnBC,GAC7BC,EAAkB,CAClB,GAAe1J,SAAXyD,GAAwBA,EAAOkG,wBAAyB,MAC5D,IAAoC,KAAX,MAApB/O,EAAQwE,WAA0B,MAEnCsI,KAAMA,GAAc,IACxB,IAAIkC,GAAc,GACdC,EAAc,EAClB,IAAIJ,EAAerD,OAAQ,CAGvB,IAAK,GAFD0D,GAAaL,EAAerD,OAAO/I,MAAM0M,MAAM,MAC/C1M,EAAQ2M,EAAWF,GACdnS,EAAI0F,EAAMnF,OAAS,EAAGP,GAAK,IAAKA,EAAG,CACxC,GAAIsS,GAAO5M,EAAM1F,EACjB,KAAKuS,EAAiBC,KAAKF,GAAO,CAC9B,GAAIG,GAAcH,EAAKI,MAAMC,EACzBF,KACAR,EAAe,MAAQQ,EAAY,GAC/B,IAAMA,EAAY,GAAK,IAAMA,EAAY,GAAK,IAEtD,QAIR,GAAI/M,EAAMnF,OAAS,EAEf,IAAK,GADDqS,GAAgBlN,EAAM,GACjB1F,EAAI,EAAGA,EAAImS,EAAW5R,SAAUP,EAErC,GAAImS,EAAWnS,KAAO4S,EAAe,CAC7B5S,EAAI,IACJkS,EAAc,KAAOC,EAAWnS,EAAI,GAExC,QAMhB,GAAI6S,GAAM,8BAAgC9C,EACtC,WAAakC,EAAc,yDAE3BC,CACJjP,GAAQsI,MAAMsH,GAAK,EAAMf,IAIjC,QAASgB,GAAW/C,EAAMgD,GACtB,GAAItJ,GAAUsG,EACV,yDAEJ,OADIgD,KAAatJ,GAAW,QAAUsJ,EAAc,aAC7CC,EAAKvJ,GAGhB,QAASuJ,GAAKvJ,EAASwJ,EAAmBhQ,GACtC,GAAKiQ,GAAOC,SAAZ,CACA,GACIvD,GADAwD,EAAU,GAAIC,GAAQ5J,EAE1B,IAAIwJ,EACAhQ,EAAQmK,kBAAkBgG,OACvB,IAAIF,GAAOrE,kBAAoBe,EAAMjN,EAAQwM,gBAChDS,EAAI0B,iBAAiB8B,OAClB,CACH,GAAI5B,GAASC,EAAqB2B,EAClCA,GAAQ1N,MAAQ8L,EAAO/H,QAAU,KAAO+H,EAAO9L,MAAMiM,KAAK,MAGzD2B,GAAgB,UAAWF,IAC5BG,EAAkBH,EAAS,IAAI,IAIvC,QAASI,GAAiB/J,EAASgK,GAC/B,IAAK,GAAIzT,GAAI,EAAGA,EAAIyT,EAAOlT,OAAS,IAAKP,EACrCyT,EAAOzT,GAAGwE,KAAK,wBACfiP,EAAOzT,GAAKyT,EAAOzT,GAAG2R,KAAK,KAK/B,OAHI3R,GAAIyT,EAAOlT,SACXkT,EAAOzT,GAAKyT,EAAOzT,GAAG2R,KAAK,OAExBlI,EAAU,KAAOgK,EAAO9B,KAAK,MAGxC,QAAS+B,GAA4BD,GACjC,IAAK,GAAIzT,GAAI,EAAGA,EAAIyT,EAAOlT,SAAUP,GACR,IAArByT,EAAOzT,GAAGO,QACRP,EAAI,EAAIyT,EAAOlT,QAAWkT,EAAOzT,GAAG,KAAOyT,EAAOzT,EAAE,GAAG,MACzDyT,EAAOE,OAAO3T,EAAG,GACjBA,KAKZ,QAAS4T,GAAkBH,GAEvB,IAAK,GADDI,GAAUJ,EAAO,GACZzT,EAAI,EAAGA,EAAIyT,EAAOlT,SAAUP,EAAG,CAMpC,IAAK,GALDgF,GAAOyO,EAAOzT,GACd8T,EAAmBD,EAAQtT,OAAS,EACpCwT,EAAkBF,EAAQC,GAC1BE,GAAsB,EAEjB5F,EAAIpJ,EAAKzE,OAAS,EAAG6N,GAAK,IAAKA,EACpC,GAAIpJ,EAAKoJ,KAAO2F,EAAiB,CAC7BC,EAAsB5F,CACtB,OAIR,IAAK,GAAIA,GAAI4F,EAAqB5F,GAAK,IAAKA,EAAG,CAC3C,GAAIkE,GAAOtN,EAAKoJ,EAChB,IAAIyF,EAAQC,KAAsBxB,EAI9B,KAHAuB,GAAQlT,MACRmT,IAKRD,EAAU7O,GAIlB,QAASqN,GAAW3M,GAEhB,IAAK,GADD3C,MACK/C,EAAI,EAAGA,EAAI0F,EAAMnF,SAAUP,EAAG,CACnC,GAAIsS,GAAO5M,EAAM1F,GACbiU,EAAc,yBAA2B3B,GACzC4B,EAAkB1B,KAAKF,GACvB6B,EAAkBF,GAAeG,GAAa9B,EAC9C2B,KAAgBE,IACZE,GAAwC,MAAnB/B,EAAKgC,OAAO,KACjChC,EAAO,OAASA,GAEpBvP,EAAIyB,KAAK8N,IAGjB,MAAOvP,GAGX,QAASwR,GAAmBrD,GAExB,IAAK,GADDxL,GAAQwL,EAAMxL,MAAM8O,QAAQ,QAAS,IAAIpC,MAAM,MAC1CpS,EAAI,EAAGA,EAAI0F,EAAMnF,SAAUP,EAAG,CACnC,GAAIsS,GAAO5M,EAAM1F,EACjB,IAAI,yBAA2BsS,GAAQ4B,EAAkB1B,KAAKF,GAC1D,MAMR,MAHItS,GAAI,GAAmB,eAAdkR,EAAMnB,OACfrK,EAAQA,EAAM8E,MAAMxK,IAEjB0F,EAGX,QAAS+L,GAAqBP,GAC1B,GAAIxL,GAAQwL,EAAMxL,MACd+D,EAAUyH,EAAMvH,UAGpB,OAFAjE,GAAyB,gBAAVA,IAAsBA,EAAMnF,OAAS,EACtCgU,EAAmBrD,IAAU,yBAEvCzH,QAASA,EACT/D,MAAqB,eAAdwL,EAAMnB,KAAwBrK,EAAQ2M,EAAW3M,IAIhE,QAAS6N,GAAkBrC,EAAOuD,EAAOC,GACrC,GAAuB,mBAAZC,SAAyB,CAChC,GAAIlL,EACJ,IAAI3E,EAAKmJ,SAASiD,GAAQ,CACtB,GAAIxL,GAAQwL,EAAMxL,KAClB+D,GAAUgL,EAAQG,EAAYlP,EAAOwL,OAErCzH,GAAUgL,EAAQI,OAAO3D,EAED,mBAAjB4D,GACPA,EAAarL,EAASiL,GACQ,kBAAhBC,SAAQI,KACC,gBAAhBJ,SAAQI,KACfJ,QAAQI,IAAItL,IAKxB,QAASuL,GAAmBjF,EAAMkF,EAAcC,EAAQjS,GACpD,GAAIkS,IAAkB,CACtB,KACgC,kBAAjBF,KACPE,GAAkB,EACL,qBAATpF,EACAkF,EAAahS,GAEbgS,EAAaC,EAAQjS,IAG/B,MAAO1D,GACL4L,EAAMvF,WAAWrG,GAGR,uBAATwQ,EACKuD,GAAgBvD,EAAMmF,EAAQjS,IAAakS,GAC5C5B,EAAkB2B,EAAQ,wBAG9B5B,GAAgBvD,EAAM9M,GAI9B,QAASmS,GAAe7M,GACpB,GAAI8M,EACJ,IAAmB,kBAAR9M,GACP8M,EAAM,cACD9M,EAAIwH,MAAQ,aACb,QACD,CACHsF,EAAM9M,GAA+B,kBAAjBA,GAAIoB,SAClBpB,EAAIoB,WAAa7E,EAAK6E,SAASpB,EACrC,IAAI+M,GAAmB,2BACvB,IAAIA,EAAiB9C,KAAK6C,GACtB,IACI,GAAIE,GAASC,KAAKC,UAAUlN,EAC5B8M,GAAME,EAEV,MAAMhW,IAIS,IAAf8V,EAAI9U,SACJ8U,EAAM,iBAGd,MAAQ,KAAOK,EAAKL,GAAO,qBAG/B,QAASK,GAAKL,GACV,GAAIM,GAAW,EACf,OAAIN,GAAI9U,OAASoV,EACNN,EAEJA,EAAIO,OAAO,EAAGD,EAAW,GAAK,MAGzC,QAASE,KACL,MAAoC,kBAAtBC,IAKlB,QAASC,GAAczD,GACnB,GAAI0D,GAAU1D,EAAKI,MAAMuD,GACzB,IAAID,EACA,OACIE,SAAUF,EAAQ,GAClB1D,KAAM6D,SAASH,EAAQ,GAAI,KAKvC,QAASI,GAAUvR,EAAgBwR,GAC/B,GAAKR,IAAL,CAOA,IAAK,GAFDS,GACAC,EALAC,EAAkB3R,EAAea,MAAM0M,MAAM,MAC7CqE,EAAiBJ,EAAc3Q,MAAM0M,MAAM,MAC3CsE,GAAa,EACb5H,GAAY,EAGP9O,EAAI,EAAGA,EAAIwW,EAAgBjW,SAAUP,EAAG,CAC7C,GAAI2W,GAASZ,EAAcS,EAAgBxW,GAC3C,IAAI2W,EAAQ,CACRL,EAAgBK,EAAOT,SACvBQ,EAAaC,EAAOrE,IACpB,QAGR,IAAK,GAAItS,GAAI,EAAGA,EAAIyW,EAAelW,SAAUP,EAAG,CAC5C,GAAI2W,GAASZ,EAAcU,EAAezW,GAC1C,IAAI2W,EAAQ,CACRJ,EAAeI,EAAOT,SACtBpH,EAAY6H,EAAOrE,IACnB,QAGJoE,EAAa,GAAK5H,EAAY,IAAMwH,IAAkBC,GACtDD,IAAkBC,GAAgBG,GAAc5H,IAIpDsF,GAAe,SAAS9B,GACpB,GAAIsE,EAAqBpE,KAAKF,GAAO,OAAO,CAC5C,IAAIuE,GAAOd,EAAczD,EACzB,UAAIuE,GACIA,EAAKX,WAAaI,GACjBI,GAAcG,EAAKvE,MAAQuE,EAAKvE,MAAQxD,MAQzD,QAASJ,GAAc5C,GACnBvI,KAAK8N,QAAUvF,EACfvI,KAAKuT,iBAAmB,CACxB,IAAIvW,GAASgD,KAAKkJ,QAAU,GAAgBpE,SAAXyD,EAAuB,EAAIA,EAAOW,QACnEqJ,IAAkBvS,KAAMmL,GACpBnO,EAAS,IAAIgD,KAAKwT,UA5sB1B,GAKIC,GACAC,EAQAnC,EAdAoC,EAAYvU,EAAQwU,WACpBhM,EAAQxI,EAAQyI,OAChBiI,EAAUzQ,EAAQ,YAAYyQ,QAC9BvO,EAAOlC,EAAQ,UACfwO,EAAiBtM,EAAKsM,eAGtBwF,EACA,2DACArE,EAAmB,6BACnBI,EAAmB,kCACnBuB,EAAoB,KACpBU,EAAc,KACdP,GAAoB,EAEpB+C,IAA6C,GAA9BtS,EAAKuS,IAAI,mBAKxBlE,IAA+C,GAAjCrO,EAAKuS,IAAI,uBACtBD,IAAatS,EAAKuS,IAAI,sBAEvBxI,IAA+D,GAA1C/J,EAAKuS,IAAI,gCAC7BD,IAAatS,EAAKuS,IAAI,+BAEvBtF,EAA8D,GAA3CjN,EAAKuS,IAAI,iCAC3BlE,KAAcrO,EAAKuS,IAAI,+BAE5B1U,GAAQW,UAAUgU,4BAA8B,WAC5C,GAAI3P,GAASpE,KAAK4E,SAClBR,GAAOF,UAAcE,EAAOF,WAAY,QACtB,QAGtB9E,EAAQW,UAAUiU,gCAAkC,WACd,KAAZ,OAAjBhU,KAAKkE,aACVlE,KAAKiU,2BACLrM,EAAMpF,YAAYxC,KAAKkU,0BAA2BlU,KAAM8E,UAG5D1F,EAAQW,UAAUoU,mCAAqC,WACnD1C,EAAmB,mBACWgC,EAA2B3O,OAAW9E,OAGxEZ,EAAQW,UAAUqU,yBAA2B,WACzCpU,KAAKkE,UAA6B,UAAjBlE,KAAKkE,WAG1B9E,EAAQW,UAAU0O,sBAAwB,WACtC,MAAwC,MAAf,UAAjBzO,KAAKkE,YAGjB9E,EAAQW,UAAUmU,0BAA4B,WAC1C,GAAIlU,KAAKqU,wBAAyB,CAC9B,GAAI1C,GAAS3R,KAAKsU,eAClBtU,MAAKuU,mCACL9C,EAAmB,qBACWiC,EAA4B/B,EAAQ3R,QAI1EZ,EAAQW,UAAUwU,iCAAmC,WACjDvU,KAAKkE,UAA6B,OAAjBlE,KAAKkE,WAG1B9E,EAAQW,UAAUyU,mCAAqC,WACnDxU,KAAKkE,UAAYlE,KAAKkE,WAAY,QAGtC9E,EAAQW,UAAU0U,8BAAgC,WAC9C,OAAyB,OAAjBzU,KAAKkE,WAAsB,GAGvC9E,EAAQW,UAAUkU,yBAA2B,WACzCjU,KAAKkE,UAA6B,QAAjBlE,KAAKkE,WAG1B9E,EAAQW,UAAU2U,2BAA6B,WAC3C1U,KAAKkE,UAAYlE,KAAKkE,WAAY,QAC9BlE,KAAKyU,kCACLzU,KAAKwU,qCACLxU,KAAKmU,uCAIb/U,EAAQW,UAAUsU,sBAAwB,WACtC,OAAyB,QAAjBrU,KAAKkE,WAAuB,GAGxC9E,EAAQW,UAAUiI,MAAQ,SAAS9B,EAASwJ,EAAmBhQ,GAC3D,MAAO+P,GAAKvJ,EAASwJ,EAAmBhQ,GAAWM,OAGvDZ,EAAQuV,6BAA+B,SAAU7T,GAC7C,GAAI8T,GAASjB,GACbD,GACkB,kBAAP5S,GAAgC,OAAX8T,EACQ9T,EAAKS,EAAKsT,WAAWD,EAAQ9T,GACtCgE,QAGnC1F,EAAQ0V,4BAA8B,SAAUhU,GAC5C,GAAI8T,GAASjB,GACbF,GACkB,kBAAP3S,GAAgC,OAAX8T,EACQ9T,EAAKS,EAAKsT,WAAWD,EAAQ9T,GACtCgE,OAGnC,IAAIiQ,GAAyB,YAC7B3V,GAAQkM,gBAAkB,WACtB,GAAI1D,EAAM9F,oBAAsB6N,GAAOrE,gBACnC,KAAM,IAAI3O,OAAM,qGAEpB,KAAKgT,GAAOrE,iBAAmBgH,IAA8B,CACzD,GAAI0C,GAA4B5V,EAAQW,UAAUkV,mBAC9CC,EAA2B9V,EAAQW,UAAU8J,iBACjD8F,IAAOrE,iBAAkB,EACzByJ,EAAyB,WACrB,GAAInN,EAAM9F,oBAAsB6N,GAAOrE,gBACnC,KAAM,IAAI3O,OAAM,qGAEpByC,GAAQW,UAAUkV,mBAAqBD,EACvC5V,EAAQW,UAAU8J,kBAAoBqL,EACtCjK,EAAQa,4BACRlE,EAAMjG,mBACNgO,GAAOrE,iBAAkB,GAE7BlM,EAAQW,UAAUkV,mBAAqBxH,EACvCrO,EAAQW,UAAU8J,kBAAoB6D,EACtCzC,EAAQc,0BACRnE,EAAMhG,iCAIdxC,EAAQ+V,mBAAqB,WACzB,MAAOxF,IAAOrE,iBAAmBgH,IAGrC,IAAI8C,GAAe,WACf,IACI,GAA2B,kBAAhBC,aAA4B,CACnC,GAAIC,GAAQ,GAAID,aAAY,cAE5B,OADA9T,GAAKxC,OAAOwW,cAAcD,GACnB,SAAS9I,EAAM8I,GAClB,GAAIE,GAAW,GAAIH,aAAY7I,EAAKiJ,eAChCC,OAAQJ,EACRK,YAAY,GAEhB,QAAQpU,EAAKxC,OAAOwW,cAAcC,IAEnC,GAAqB,kBAAVI,OAAsB,CACpC,GAAIN,GAAQ,GAAIM,OAAM,cAEtB,OADArU,GAAKxC,OAAOwW,cAAcD,GACnB,SAAS9I,EAAM8I,GAClB,GAAIE,GAAW,GAAII,OAAMpJ,EAAKiJ,eAC1BE,YAAY,GAGhB,OADAH,GAASE,OAASJ,GACV/T,EAAKxC,OAAOwW,cAAcC,IAGtC,GAAIF,GAAQO,SAASC,YAAY,cAGjC,OAFAR,GAAMS,gBAAgB,mBAAmB,GAAO,MAChDxU,EAAKxC,OAAOwW,cAAcD,GACnB,SAAS9I,EAAM8I,GAClB,GAAIE,GAAWK,SAASC,YAAY,cAGpC,OAFAN,GAASO,gBAAgBvJ,EAAKiJ,eAAe,GAAO,EAChDH,IACI/T,EAAKxC,OAAOwW,cAAcC,IAG5C,MAAOxZ,IACT,MAAO,YACH,OAAO,MAIXga,EAAkB,WAClB,MAAIzU,GAAKS,OACE,WACH,MAAOlD,GAAQmX,KAAK1P,MAAMzH,EAASwD,YAGlCf,EAAKxC,OAKH,SAASyN,GACZ,GAAIvG,GAAa,KAAOuG,EAAKiJ,cACzBS,EAAS3U,EAAKxC,OAAOkH,EACzB,SAAKiQ,IACLA,EAAO3P,MAAMhF,EAAKxC,UAAWkI,MAAMlK,KAAKuF,UAAW,KAC5C,IATA,WACH,OAAO,MAiBnB6T,IACA5H,eAAgBhC,EAChB6J,iBAAkB7J,EAClB8J,gBAAiB9J,EACjB+J,gBAAiB/J,EACjBgK,iBAAkBhK,EAClBiK,eAAgB,SAAShK,EAAM9M,EAASuI,GACpC,OAAQvI,QAASA,EAASuI,MAAOA,IAErC4H,QAAS,SAASrD,EAAMqD,GACpB,OAAQA,QAASA,IAErB4G,mBAAoB,SAAUjK,EAAMmF,EAAQjS,GACxC,OAAQiS,OAAQA,EAAQjS,QAASA,IAErCgX,iBAAkBnK,GAGlBwD,GAAkB,SAAUvD,GAC5B,GAAImK,IAAmB,CACvB,KACIA,EAAmBX,EAAgBzP,MAAM,KAAMjE,WACjD,MAAOtG,GACL4L,EAAMvF,WAAWrG,GACjB2a,GAAmB,EAGvB,GAAIC,IAAgB,CACpB,KACIA,EAAgBxB,EAAa5I,EACjB2J,GAAuB3J,GAAMjG,MAAM,KAAMjE,YACvD,MAAOtG,GACL4L,EAAMvF,WAAWrG,GACjB4a,GAAgB,EAGpB,MAAOA,IAAiBD,EAG5BvX,GAAQuQ,OAAS,SAASkH,GAStB,GARAA,EAAOjR,OAAOiR,GACV,mBAAqBA,KACjBA,EAAKvL,gBACLlM,EAAQkM,mBACAuL,EAAKvL,iBAAmBlM,EAAQ+V,sBACxCJ,KAGJ,YAAc8B,GAAM,CACpB,GAAIC,GAAiBD,EAAKjH,QAC1BD,IAAOC,WAAakH,EACpBtI,EAAmBmB,GAAOC,SAEtBrO,EAAKmJ,SAASoM,IACV,oBAAsBA,KACtBtI,IAAqBsI,EAAetI,kBAIhD,GAAI,gBAAkBqI,IAAQA,EAAK9O,eAAiB4H,GAAO5H,aAAc,CACrE,GAAIH,EAAM9F,kBACN,KAAM,IAAInF,OACN,uDAERyC,GAAQW,UAAUgX,uBACd5J,EACJ/N,EAAQW,UAAUwE,eAAiB6I,EACnChO,EAAQW,UAAUgK,UAAYkD,EAC9B7N,EAAQW,UAAUgF,aAAemI,EACjC9N,EAAQW,UAAU+M,4BACdC,EACJ3N,EAAQW,UAAUiX,SAAWtK,EAC7BlI,GAAwB4I,EACxBuC,GAAO5H,cAAe,EAW1B,MATI,cAAgB8O,KACZA,EAAKI,aAAetH,GAAOsH,YAC3BtH,GAAOsH,YAAa,EACpB7X,EAAQW,UAAUmX,WAAanH,KACvB8G,EAAKI,YAActH,GAAOsH,aAClCtH,GAAOsH,YAAa,EACpB7X,EAAQW,UAAUmX,WAAazK,IAGhCrN,GAKXA,EAAQW,UAAUmX,WAAazK,EAC/BrN,EAAQW,UAAUiX,SAAW,SAASrK,EAAUvH,EAASwH,GACrD,IACID,EAASvH,EAASwH,GACpB,MAAO5Q,GACL,MAAOA,KAGfoD,EAAQW,UAAUgK,UAAY,aAC9B3K,EAAQW,UAAUgF,aAAe,SAAUoS,KAC3C/X,EAAQW,UAAU+M,4BAA8B,SAASD,KAGzDzN,EAAQW,UAAUkV,mBAAqB,aACvC7V,EAAQW,UAAU8J,kBAAoB,aACtCzK,EAAQW,UAAUgX,uBAAyB,aAC3C3X,EAAQW,UAAUwE,eAAiB,SAAUgE,EAAQ8E,IAmErD,IAAI7I,IAAwB+I,EAwRxBsD,GAAe,WAAa,OAAO,GACnC6B,GAAqB,uCA4DzBnR,GAAK6V,SAASjM,EAAexO,OAC7BsO,EAAQE,cAAgBA,EAExBA,EAAcpL,UAAUyT,QAAU,WAC9B,GAAIxW,GAASgD,KAAKkJ,OAClB,MAAIlM,EAAS,GAAb,CAIA,IAAK,GAHDqa,MACAC,KAEK7a,EAAI,EAAG8a,EAAOvX,KAAe8E,SAATyS,IAAsB9a,EAC/C4a,EAAMpW,KAAKsW,GACXA,EAAOA,EAAKzJ,OAEhB9Q,GAASgD,KAAKkJ,QAAUzM,CACxB,KAAK,GAAIA,GAAIO,EAAS,EAAGP,GAAK,IAAKA,EAAG,CAClC,GAAI0F,GAAQkV,EAAM5a,GAAG0F,KACO2C,UAAxBwS,EAAanV,KACbmV,EAAanV,GAAS1F,GAG9B,IAAK,GAAIA,GAAI,EAAGA,EAAIO,IAAUP,EAAG,CAC7B,GAAI+a,GAAeH,EAAM5a,GAAG0F,MACxBuE,EAAQ4Q,EAAaE,EACzB,IAAc1S,SAAV4B,GAAuBA,IAAUjK,EAAG,CAChCiK,EAAQ,IACR2Q,EAAM3Q,EAAQ,GAAGoH,QAAUhJ,OAC3BuS,EAAM3Q,EAAQ,GAAGwC,QAAU,GAE/BmO,EAAM5a,GAAGqR,QAAUhJ,OACnBuS,EAAM5a,GAAGyM,QAAU,CACnB,IAAIuO,GAAgBhb,EAAI,EAAI4a,EAAM5a,EAAI,GAAKuD,IAEvC0G,GAAQ1J,EAAS,GACjBya,EAAc3J,QAAUuJ,EAAM3Q,EAAQ,GACtC+Q,EAAc3J,QAAQ0F,UACtBiE,EAAcvO,QACVuO,EAAc3J,QAAQ5E,QAAU,IAEpCuO,EAAc3J,QAAUhJ,OACxB2S,EAAcvO,QAAU,EAG5B,KAAK,GADDwO,GAAqBD,EAAcvO,QAAU,EACxC2B,EAAIpO,EAAI,EAAGoO,GAAK,IAAKA,EAC1BwM,EAAMxM,GAAG3B,QAAUwO,EACnBA,GAEJ,YAKZvM,EAAcpL,UAAUgO,iBAAmB,SAASJ,GAChD,IAAIA,EAAMK,iBAAV,CACAhO,KAAKwT,SAML,KALA,GAAIvF,GAASC,EAAqBP,GAC9BzH,EAAU+H,EAAO/H,QACjBgK,GAAUjC,EAAO9L,OAEjB0J,EAAQ7L,KACK8E,SAAV+G,GACHqE,EAAOjP,KAAK6N,EAAWjD,EAAM1J,MAAM0M,MAAM,QACzChD,EAAQA,EAAMiC,OAElBuC,GAAkBH,GAClBC,EAA4BD,GAC5B3O,EAAK4M,kBAAkBR,EAAO,QAASsC,EAAiB/J,EAASgK,IACjE3O,EAAK4M,kBAAkBR,EAAO,oBAAoB,IAGtD,IAAI4E,IAAoB,WACpB,GAAIoF,GAAsB,YACtBC,EAAmB,SAASzV,EAAOwL,GACnC,MAAqB,gBAAVxL,GAA2BA,EAEnB2C,SAAf6I,EAAMnB,MACY1H,SAAlB6I,EAAMzH,QACCyH,EAAMvH,WAEVyL,EAAelE,GAG1B,IAAqC,gBAA1BhR,OAAMkb,iBACsB,kBAA5Blb,OAAM4V,kBAAkC,CAC/C5V,MAAMkb,iBAAmB,EACzBlH,EAAoBgH,EACpBtG,EAAcuG,CACd,IAAIrF,GAAoB5V,MAAM4V,iBAK9B,OAHA1B,IAAe,SAAS9B,GACpB,MAAOsE,GAAqBpE,KAAKF,IAE9B,SAAShO,EAAU+W,GACtBnb,MAAMkb,iBAAmB,EACzBtF,EAAkBxR,EAAU+W,GAC5Bnb,MAAMkb,iBAAmB,GAGjC,GAAIE,GAAM,GAAIpb,MAEd,IAAyB,gBAAdob,GAAI5V,OACX4V,EAAI5V,MAAM0M,MAAM,MAAM,GAAGmJ,QAAQ,oBAAsB,EAIvD,MAHArH,GAAoB,IACpBU,EAAcuG,EACd9G,GAAoB,EACb,SAA2BzU,GAC9BA,EAAE8F,OAAQ,GAAIxF,QAAQwF,MAI9B,IAAI8V,EACJ,KAAM,KAAM,IAAItb,OAChB,MAAMX,GACFic,EAAsB,SAAWjc,GAErC,MAAM,SAAW+b,KAAQE,GACY,gBAA1Btb,OAAMkb,iBAWjBxG,EAAc,SAASlP,EAAOwL,GAC1B,MAAqB,gBAAVxL,GAA2BA,EAEhB,gBAAVwL,IACS,kBAAVA,IACQ7I,SAAf6I,EAAMnB,MACY1H,SAAlB6I,EAAMzH,QAGH2L,EAAelE,GAFXA,EAAMvH,YAKd,OAtBHuK,EAAoBgH,EACpBtG,EAAcuG,EACP,SAA2Bvb,GAC9BM,MAAMkb,iBAAmB,CACzB,KAAM,KAAM,IAAIlb,OAChB,MAAMX,GAAKK,EAAE8F,MAAQnG,EAAEmG,MACvBxF,MAAMkb,iBAAmB,QAoBd,oBAAZzG,UAAmD,mBAAjBA,SAAQ3B,OACjD8B,EAAe,SAAUrL,GACrBkL,QAAQ3B,KAAKvJ,IAEb3E,EAAKS,QAAUlD,EAAQmD,OAAOiW,MAC9B3G,EAAe,SAASrL,EAASiL,GAC7B,GAAIgH,GAAQhH,EAAS,QAAe,OACpCC,SAAQ3B,KAAK0I,EAAQjS,EAAU,WAE3B3E,EAAKS,QAAyC,iBAAvB,GAAIrF,QAAa,QAChD4U,EAAe,SAASrL,EAASiL,GAC7BC,QAAQ3B,KAAK,KAAOvJ,EACRiL,EAAS,oBAAsB,gBAKvD,IAAIxB,KACAC,SAAUA,EACVtE,iBAAiB,EACjBvD,cAAc,EACdkP,YAAY,EAKhB,OAFI3L,IAAiBlM,EAAQkM,mBAGzBA,gBAAiB,WACb,MAAOqE,IAAOrE,iBAElBsE,SAAU,WACN,MAAOD,IAAOC,UAElB7H,aAAc,WACV,MAAO4H,IAAO5H,cAElBkP,WAAY,WACR,MAAOtH,IAAOsH,YAElBzS,sBAAuB,WACnB,MAAOA,KAEXE,mBAAoB,WAChB,MAAOA,IAEX2J,sBAAuBA,EACvBwE,UAAWA,EACXpD,KAAMA,EACNF,WAAYA,EACZpE,cAAeA,EACfiK,aAAcA,EACdY,gBAAiBA,MAIlBoC,WAAW,GAAGlV,SAAS,KAAKmV,IAAI,SAAShZ,EAAQnC,EAAOJ,GAC3D,YACAI,GAAOJ,QAAU,SAASsC,GAC1B,QAASkZ,KACL,MAAOtY,MAAKmF,MAEhB,QAASoT,KACL,KAAMvY,MAAK2R,OAGfvS,EAAQW,UAAkB,OAC1BX,EAAQW,UAAUyY,WAAa,SAAUrT,GAErC,MADIA,aAAiB/F,IAAS+F,EAAM4O,8BAC7B/T,KAAK+D,MACRuU,EAAUxT,OAAWA,QAAYK,MAAOA,GAAQL,SAGxD1F,EAAQW,UAAiB,MACzBX,EAAQW,UAAU0Y,UAAY,SAAU9G,GACpC,MAAO3R,MAAK+D,MACRwU,EAASzT,OAAWA,QAAY6M,OAAQA,GAAS7M,SAGzD1F,EAAQW,UAAU2Y,WAAa,SAAU/G,GACrC,GAAIrP,UAAUtF,QAAU,EACpB,MAAOgD,MAAK+D,MACRe,OAAWyT,EAASzT,QAAY6M,OAAQA,GAAS7M,OAErD,IAAI6T,GAAUrW,UAAU,GACpB6U,EAAU,WAAY,KAAMwB,GAChC,OAAO3Y,MAAK4Y,OAAOjH,EAAQwF,IAInC/X,EAAQW,UAAU8Y,YAAc,SAAU1T,GACtC,GAAI7C,UAAUtF,QAAU,EAEpB,MADImI,aAAiB/F,IAAS+F,EAAM4O,8BAC7B/T,KAAK+D,MACRe,OAAWwT,EAAUxT,QAAYK,MAAOA,GAAQL,OAEpD,IAAIgU,GAASxW,UAAU,EACnBwW,aAAkB1Z,IAAS0Z,EAAO/E,6BACtC,IAAIoD,GAAU,WAAY,MAAO2B,GACjC,OAAO9Y,MAAK4Y,OAAOzT,EAAOgS,UAK5B4B,IAAI,SAAS1Z,EAAQnC,EAAOJ,GAClC,YACAI,GAAOJ,QAAU,SAASsC,EAASgE,GAInC,QAAS4V,KACL,MAAOC,GAAWjZ,MAGtB,QAASkZ,GAAiB3Z,EAAUuB,GAChC,MAAOqY,GAAc5Z,EAAUuB,EAAIsC,EAAUA,GARjD,GAAI+V,GAAgB/Z,EAAQga,OACxBH,EAAa7Z,EAAQia,GAUzBja,GAAQW,UAAUuZ,KAAO,SAAUxY,GAC/B,MAAOqY,GAAcnZ,KAAMc,EAAIsC,EAAU,GAC9BW,MAAMiV,EAAgBlU,OAAWA,OAAW9E,KAAM8E,SAGjE1F,EAAQW,UAAUwZ,UAAY,SAAUzY,GACpC,MAAOqY,GAAcnZ,KAAMc,EAAIsC,EAAUA,IAG7ChE,EAAQka,KAAO,SAAU/Z,EAAUuB,GAC/B,MAAOqY,GAAc5Z,EAAUuB,EAAIsC,EAAU,GAClCW,MAAMiV,EAAgBlU,OAAWA,OAAWvF,EAAUuF,SAGrE1F,EAAQma,UAAYL,QAIdM,IAAI,SAASna,EAAQnC,EAAOJ,GAClC,YAOA,SAAS2c,GAASC,EAAcC,GAC5B,QAASC,GAAS1T,GACd,MAAMlG,gBAAgB4Z,IACtBzL,EAAkBnO,KAAM,UACD,gBAAZkG,GAAuBA,EAAUyT,GAC5CxL,EAAkBnO,KAAM,OAAQ0Z,QAC5B/c,MAAM4V,kBACN5V,MAAM4V,kBAAkBvS,KAAMA,KAAK6Z,aAEnCld,MAAMI,KAAKiD,QAPyB,GAAI4Z,GAAS1T,GAWzD,MADAkR,GAASwC,EAAUjd,OACZid,EAmDX,QAASE,GAAiB5T,GACtB,MAAMlG,gBAAgB8Z,IAEtB3L,EAAkBnO,KAAM,OAAQ,oBAChCmO,EAAkBnO,KAAM,UAAWkG,GACnClG,KAAK+Z,MAAQ7T,EACblG,KAAoB,eAAI,OAEpBkG,YAAmBvJ,QACnBwR,EAAkBnO,KAAM,UAAWkG,EAAQA,SAC3CiI,EAAkBnO,KAAM,QAASkG,EAAQ/D,QAClCxF,MAAM4V,mBACb5V,MAAM4V,kBAAkBvS,KAAMA,KAAK6Z,eAV5B,GAAIC,GAAiB5T,GAxEpC,GAsBI8T,GAAYC,EAtBZC,EAAM7a,EAAQ,SACd8a,EAAeD,EAAIE,OACnB7Y,EAAOlC,EAAQ,UACf+X,EAAW7V,EAAK6V,SAChBjJ,EAAoB5M,EAAK4M,kBAmBzB2B,EAAU2J,EAAS,UAAW,WAC9BY,EAAoBZ,EAAS,oBAAqB,sBAClDa,EAAeb,EAAS,eAAgB,iBACxCc,EAAiBd,EAAS,iBAAkB,kBAChD,KACIO,EAAa3T,UACb4T,EAAcO,WAChB,MAAMxe,GACJge,EAAaP,EAAS,YAAa,cACnCQ,EAAcR,EAAS,aAAc,eAMzC,IAAK,GAHDgB,GAAU,sHACuD5L,MAAM,KAElEpS,EAAI,EAAGA,EAAIge,EAAQzd,SAAUP,EACS,kBAAhCie,OAAM3a,UAAU0a,EAAQhe,MAC/B8d,EAAexa,UAAU0a,EAAQhe,IAAMie,MAAM3a,UAAU0a,EAAQhe,IAIvEyd,GAAIS,eAAeJ,EAAexa,UAAW,UACzCoF,MAAO,EACPyV,cAAc,EACdC,UAAU,EACVC,YAAY,IAEhBP,EAAexa,UAAyB,eAAI,CAC5C,IAAIgb,GAAQ,CACZR,GAAexa,UAAUqG,SAAW,WAChC,GAAI4U,GAASN,MAAc,EAARK,EAAY,GAAG3M,KAAK,KACnC5O,EAAM,KAAOwb,EAAS,sBAC1BD,KACAC,EAASN,MAAc,EAARK,EAAY,GAAG3M,KAAK,IACnC,KAAK,GAAI3R,GAAI,EAAGA,EAAIuD,KAAKhD,SAAUP,EAAG,CAGlC,IAAK,GAFDqV,GAAM9R,KAAKvD,KAAOuD,KAAO,4BAA8BA,KAAKvD,GAAK,GACjEwe,EAAQnJ,EAAIjD,MAAM,MACbhE,EAAI,EAAGA,EAAIoQ,EAAMje,SAAU6N,EAChCoQ,EAAMpQ,GAAKmQ,EAASC,EAAMpQ,EAE9BiH,GAAMmJ,EAAM7M,KAAK,MACjB5O,GAAOsS,EAAM,KAGjB,MADAiJ,KACOvb,GAmBX4X,EAAS0C,EAAkBnd,MAE3B,IAAIue,GAAave,MAA8B,sBAC1Cue,KACDA,EAAaf,GACTE,kBAAmBA,EACnBC,aAAcA,EACdR,iBAAkBA,EAClBqB,eAAgBrB,EAChBS,eAAgBA,IAEpBL,EAAIS,eAAehe,MAAO,0BACtBwI,MAAO+V,EACPL,UAAU,EACVC,YAAY,EACZF,cAAc,KAItB1d,EAAOJ,SACHH,MAAOA,MACP0J,UAAW2T,EACXQ,WAAYP,EACZI,kBAAmBa,EAAWb,kBAC9BP,iBAAkBoB,EAAWpB,iBAC7BQ,aAAcY,EAAWZ,aACzBC,eAAgBW,EAAWX,eAC3BzK,QAASA,KAGV/E,QAAQ,GAAG7H,SAAS,KAAKkY,IAAI,SAAS/b,EAAQnC,EAAOJ,GACxD,GAAIue,GAAQ,WACR,YACA,OAAgBvW,UAAT9E,OAGX,IAAIqb,EACAne,EAAOJ,SACHsd,OAAQxU,OAAOwU,OACfO,eAAgB/U,OAAO+U,eACvBW,cAAe1V,OAAO2V,yBACtB5Q,KAAM/E,OAAO+E,KACb6Q,MAAO5V,OAAO6V,oBACdC,eAAgB9V,OAAO8V,eACvB9R,QAAS8Q,MAAM9Q,QACfyR,MAAOA,EACPM,mBAAoB,SAAS3W,EAAK4W,GAC9B,GAAIC,GAAajW,OAAO2V,yBAAyBvW,EAAK4W,EACtD,SAAWC,IAAcA,EAAWhB,WAAYgB,EAAWC,WAGhE,CACH,GAAIC,MAASC,eACTlK,KAAS1L,SACT6V,KAAWpC,YAAY9Z,UAEvBmc,EAAa,SAAU7f,GACvB,GAAImD,KACJ,KAAK,GAAIsL,KAAOzO,GACR0f,EAAIhf,KAAKV,EAAGyO,IACZtL,EAAIyB,KAAK6J,EAGjB,OAAOtL,IAGP2c,EAAsB,SAAS9f,EAAGyO,GAClC,OAAQ3F,MAAO9I,EAAEyO,KAGjBsR,EAAuB,SAAU/f,EAAGyO,EAAKuR,GAEzC,MADAhgB,GAAEyO,GAAOuR,EAAKlX,MACP9I,GAGPigB,EAAe,SAAUtX,GACzB,MAAOA,IAGPuX,EAAuB,SAAUvX,GACjC,IACI,MAAOY,QAAOZ,GAAK6U,YAAY9Z,UAEnC,MAAO/D,GACH,MAAOigB,KAIXO,EAAe,SAAUxX,GACzB,IACI,MAAyB,mBAAlB8M,EAAI/U,KAAKiI,GAEpB,MAAMhJ,GACF,OAAO,GAIfkB,GAAOJ,SACH8M,QAAS4S,EACT7R,KAAMuR,EACNV,MAAOU,EACPvB,eAAgByB,EAChBd,cAAea,EACf/B,OAAQkC,EACRZ,eAAgBa,EAChBlB,MAAOA,EACPM,mBAAoB,WAChB,OAAO,UAKbc,IAAI,SAASpd,EAAQnC,EAAOJ,GAClC,YACAI,GAAOJ,QAAU,SAASsC,EAASgE,GACnC,GAAIsZ,GAAatd,EAAQud,GAEzBvd,GAAQW,UAAU6c,OAAS,SAAU9b,EAAI+b,GACrC,MAAOH,GAAW1c,KAAMc,EAAI+b,EAASzZ,IAGzChE,EAAQwd,OAAS,SAAUrd,EAAUuB,EAAI+b,GACrC,MAAOH,GAAWnd,EAAUuB,EAAI+b,EAASzZ,UAIvC0Z,IAAI,SAASzd,EAAQnC,EAAOJ,GAClC,YACAI,GAAOJ,QAAU,SAASsC,EAASiE,EAAqB6G,GAMxD,QAAS6S,GAA0Brd,EAASf,EAAMwY,GAC9CnX,KAAKN,QAAUA,EACfM,KAAKrB,KAAOA,EACZqB,KAAKmX,QAAUA,EACfnX,KAAKgd,QAAS,EACdhd,KAAKid,cAAgB,KAOzB,QAASC,GAA6BC,GAClCnd,KAAKmd,eAAiBA,EAO1B,QAASC,GAAY/Q,EAAKsF,GACtB,MAAyB,OAArBtF,EAAI4Q,gBACA3a,UAAUtF,OAAS,EACnBqP,EAAI4Q,cAAcvZ,QAAQiO,GAE1BtF,EAAI4Q,cAAclU,UAEtBsD,EAAI4Q,cAAgB,MACb,GAKf,QAASI,KACL,MAAOF,GAAepgB,KAAKiD,KAAMA,KAAKN,QAAQkF,UAAU0P,iBAE5D,QAASgJ,GAAK3L,GACV,IAAIyL,EAAYpd,KAAM2R,GAEtB,MADAhK,GAAS3L,EAAI2V,EACNhK,EAEX,QAASwV,GAAeI,GACpB,GAAI7d,GAAUM,KAAKN,QACfyX,EAAUnX,KAAKmX,OAEnB,KAAKnX,KAAKgd,OAAQ,CACdhd,KAAKgd,QAAS,CACd,IAAIxd,GAAMQ,KAAKwd,mBACTrG,EAAQpa,KAAK2C,EAAQ+E,eACrB0S,EAAQpa,KAAK2C,EAAQ+E,cAAe8Y,EAC1C,IAAI/d,IAAQ0K,EACR,MAAO1K,EACJ,IAAYsF,SAARtF,EAAmB,CAC1BE,EAAQ0U,0BACR,IAAIzP,GAAetB,EAAoB7D,EAAKE,EAC5C,IAAIiF,YAAwBvF,GAAS,CACjC,GAA0B,MAAtBY,KAAKid,cAAuB,CAC5B,GAAItY,EAAa2E,eAAgB,CAC7B,GAAIqI,GACA,GAAI0I,GAAkB,6BAG1B,OAFA3a,GAAQmK,kBAAkB8H,GAC1BhK,EAAS3L,EAAI2V,EACNhK,EACAhD,EAAa0E,aACpB1E,EAAamI,4BACT,GAAIoQ,GAA6Bld,OAG7C,MAAO2E,GAAaZ,MAChBsZ,EAASC,EAAMxY,OAAW9E,KAAM8E,UAKhD,MAAIpF,GAAQ+d,cACRL,EAAYpd,MACZ2H,EAAS3L,EAAIuhB,EACN5V,IAEPyV,EAAYpd,MACLud,GArFf,GAAIhc,GAAOlC,EAAQ,UACfgb,EAAoBjb,EAAQib,kBAC5B1S,EAAWpG,EAAKoG,SAChBwC,EAAc9K,EAAQ,kBAAkB6K,EA2I5C,OAjIA6S,GAA0Bhd,UAAUyd,iBAAmB,WACnD,MAAqB,KAAdxd,KAAKrB,MAOhBue,EAA6Bnd,UAAU+J,iBAAmB,WACtDsT,EAAYpd,KAAKmd,iBAmErB/d,EAAQW,UAAU2d,aAAe,SAASvG,EAASxY,EAAMgf,EAASL,GAC9D,MAAuB,kBAAZnG,GAA+BnX,KAAK4d,OACxC5d,KAAK+D,MAAM4Z,EACAL,EACAxY,OACA,GAAIiY,GAA0B/c,KAAMrB,EAAMwY,GAC1CrS,SAGtB1F,EAAQW,UAAU8d,OAClBze,EAAQW,UAAmB,QAAI,SAAUoX,GACrC,MAAOnX,MAAK0d,aAAavG,EACA,EACAgG,EACAA,IAI7B/d,EAAQW,UAAU+d,IAAM,SAAU3G,GAC9B,MAAOnX,MAAK0d,aAAavG,EAAS,EAAGgG,IAGzC/d,EAAQW,UAAUge,SAAW,SAAUC,GACnC,GAAIC,GAAM3b,UAAUtF,MACpB,IAAW,IAARihB,EACC,MAAOje,MAAK0d,aAAaM,EACA,EACAlZ,OACAqY,EAExB,IACU1gB,GADNyhB,EAAiB,GAAIxD,OAAMuD,EAAM,GAClCpT,EAAI,CACR,KAAKpO,EAAI,EAAGA,EAAIwhB,EAAM,IAAKxhB,EAAG,CAC1B,GAAI+N,GAAOlI,UAAU7F,EACrB,KAAI8E,EAAKmJ,SAASF,GAGd,MAAOpL,GAAQwN,OAAO,GAAIvG,WACtB,6DACmC9E,EAAK4E,YAAYqE,IAJxD0T,GAAerT,KAAOL,EAQ9B0T,EAAelhB,OAAS6N,CACxB,IAAIsM,GAAU7U,UAAU7F,EACxB,OAAOuD,MAAK0d,aAAavT,EAAY+T,EAAgB/G,EAASnX,MACrC,EACA8E,OACAqY,IAK1BJ,KAGJoB,iBAAiB,EAAEjb,SAAS,KAAKkb,IAAI,SAAS/e,EAAQnC,EAAOJ,GAChE,YACAI,GAAOJ,QAAU,SAASsC,EACAqI,EACArE,EACAC,EACAgb,EACA/a,GAQ1B,QAASgb,GAAwBnZ,EAAOoZ,EAAeC,GACnD,IAAK,GAAI/hB,GAAI,EAAGA,EAAI8hB,EAAcvhB,SAAUP,EAAG,CAC3C+hB,EAAY9S,cACZ,IAAI0H,GAAS1L,EAAS6W,EAAc9hB,IAAI0I,EAExC,IADAqZ,EAAY7S,cACRyH,IAAWzL,EAAU,CACrB6W,EAAY9S,cACZ,IAAIlM,GAAMJ,EAAQwN,OAAOjF,EAAS3L,EAElC,OADAwiB,GAAY7S,cACLnM,EAEX,GAAImF,GAAetB,EAAoB+P,EAAQoL,EAC/C,IAAI7Z,YAAwBvF,GAAS,MAAOuF,GAEhD,MAAO,MAGX,QAAS8Z,GAAaC,EAAmB3d,EAAU4d,EAAcxc,GAC7D,GAAImB,EAAMyE,eAAgB,CACtB,GAAI6W,GAAW,GAAIxf,GAAQgE,GACvByb,EAAkB7e,KAAK6e,gBAAkB,GAAIzf,GAAQgE,EACzDpD,MAAK8e,SAAWF,EAASf,OAAO,WAC5B,MAAOgB,KAEXD,EAAS3J,qBACT2J,EAAS7Z,aAAa/E,UACnB,CACH,GAAIN,GAAUM,KAAK8e,SAAW,GAAI1f,GAAQgE,EAC1C1D,GAAQuV,qBAEZjV,KAAK+e,OAAS5c,EACdnC,KAAKgf,mBAAqBN,EAC1B1e,KAAKif,UAAYle,EACjBf,KAAKkf,WAAapa,OAClB9E,KAAKmf,eAAyC,kBAAjBR,IACtBA,GAAcS,OAAOb,GACtBA,EACNve,KAAKqf,gBAAkB,KACvBrf,KAAKsf,oBAAqB,EA7C9B,GAAIC,GAASlgB,EAAQ,YACjBgH,EAAYkZ,EAAOlZ,UACnB9E,EAAOlC,EAAQ,UACfsI,EAAWpG,EAAKoG,SAChBD,EAAWnG,EAAKmG,SAChB6W,IA0CJhd,GAAK6V,SAASqH,EAAcJ,GAE5BI,EAAa1e,UAAUyf,YAAc,WACjC,MAAyB,QAAlBxf,KAAK8e,UAGhBL,EAAa1e,UAAU0f,SAAW,WAC9Bzf,KAAK8e,SAAW9e,KAAKkf,WAAa,KAC9B5b,EAAMyE,gBAA2C,OAAzB/H,KAAK6e,kBAC7B7e,KAAK6e,gBAAgBa,WACrB1f,KAAK6e,gBAAkB,OAI/BJ,EAAa1e,UAAU4f,kBAAoB,WACvC,IAAI3f,KAAKwf,cAAT,CACA,GAEIpM,GAFAwM,EAAwD,mBAA9B5f,MAAKkf,WAAmB,MAGtD,IAAKU,EAUD5f,KAAK8e,SAASpT,eACd0H,EAAS1L,EAAS1H,KAAKkf,WAAmB,QAAGniB,KAAKiD,KAAKkf,WACLpa,QAClD9E,KAAK8e,SAASnT,kBAbK,CACnB,GAAIgG,GAAS,GAAIvS,GAAQib,kBACrB,+BACJjb,GAAQygB,UAAUC,eAAiBnO;AACnC3R,KAAK8e,SAASjV,kBAAkB8H,GAChC3R,KAAK8e,SAASpT,eACd0H,EAAS1L,EAAS1H,KAAKkf,WAAkB,OAAGniB,KAAKiD,KAAKkf,WACLvN,GACjD3R,KAAK8e,SAASnT,cAOlB3L,KAAKsf,oBAAqB,EAC1Btf,KAAKqf,gBAAkB,KACvBrf,KAAK+f,UAAU3M,KAGnBqL,EAAa1e,UAAUigB,kBAAoB,SAAS7a,GAChDnF,KAAKqf,gBAAkB,KACvBrf,KAAK8e,SAASpT,cACd,IAAI0H,GAAS1L,EAAS1H,KAAKkf,WAAWe,MAAMljB,KAAKiD,KAAKkf,WAAY/Z,EAClEnF,MAAK8e,SAASnT,cACd3L,KAAK+f,UAAU3M,IAGnBqL,EAAa1e,UAAUmgB,iBAAmB,SAASvO,GAC/C3R,KAAKqf,gBAAkB,KACvBrf,KAAK8e,SAASjV,kBAAkB8H,GAChC3R,KAAK8e,SAASpT,cACd,IAAI0H,GAAS1L,EAAS1H,KAAKkf,WAAkB,OACxCniB,KAAKiD,KAAKkf,WAAYvN,EAC3B3R,MAAK8e,SAASnT,cACd3L,KAAK+f,UAAU3M,IAGnBqL,EAAa1e,UAAU+J,iBAAmB,WACtC,GAAI9J,KAAKqf,0BAA2BjgB,GAAS,CACzC,GAAIM,GAAUM,KAAKqf,eACnBrf,MAAKqf,gBAAkB,KACvB3f,EAAQoI,WAIhB2W,EAAa1e,UAAUL,QAAU,WAC7B,MAAOM,MAAK8e,UAGhBL,EAAa1e,UAAUogB,KAAO,WAC1BngB,KAAKkf,WAAalf,KAAKgf,mBAAmBjiB,KAAKiD,KAAKif,WACpDjf,KAAKif,UACDjf,KAAKgf,mBAAqBla,OAC9B9E,KAAKggB,kBAAkBlb,SAG3B2Z,EAAa1e,UAAUggB,UAAY,SAAU3M,GACzC,GAAI1T,GAAUM,KAAK8e,QACnB,IAAI1L,IAAWzL,EAEX,MADA3H,MAAKyf,WACDzf,KAAKsf,mBACE5f,EAAQoI,SAERpI,EAAQ0gB,gBAAgBhN,EAAOpX,GAAG,EAIjD,IAAImJ,GAAQiO,EAAOjO,KACnB,IAAIiO,EAAOiN,QAAS,EAEhB,MADArgB,MAAKyf,WACDzf,KAAKsf,mBACE5f,EAAQoI,SAERpI,EAAQyE,iBAAiBgB,EAGpC,IAAIR,GAAetB,EAAoB8B,EAAOnF,KAAK8e,SACnD,MAAMna,YAAwBvF,MAC1BuF,EACI2Z,EAAwB3Z,EACA3E,KAAKmf,eACLnf,KAAK8e,UACZ,OAAjBna,GAQA,WAPA3E,MAAKkgB,iBACD,GAAI7Z,GACA,oGAAoH4K,QAAQ,KAAMK,OAAOnM,IACzI,oBACAnF,KAAK+e,OAAOlQ,MAAM,MAAM5H,MAAM,GAAG,GAAImH,KAAK,OAM1DzJ,GAAeA,EAAaC,SAC5B,IAAI0b,GAAW3b,EAAaT,SAEG,MAAd,SAAXoc,IACFtgB,KAAKqf,gBAAkB1a,EACvBA,EAAa4b,OAAOvgB,KAAM,OACQ,KAAd,SAAXsgB,GACTlhB,EAAQyI,OAAOpF,OACXzC,KAAKggB,kBAAmBhgB,KAAM2E,EAAamU,UAEb,KAAd,SAAXwH,GACTlhB,EAAQyI,OAAOpF,OACXzC,KAAKkgB,iBAAkBlgB,KAAM2E,EAAagU,WAG9C3Y,KAAK2f,qBAKjBvgB,EAAQygB,UAAY,SAAUnB,EAAmB7B,GAC7C,GAAiC,kBAAtB6B,GACP,KAAM,IAAIrY,GAAU,yEAExB,IAAIsY,GAAe/Y,OAAOiX,GAAS8B,aAC/B6B,EAAgB/B,EAChBtc,GAAQ,GAAIxF,QAAQwF,KACxB,OAAO,YACH,GAAIse,GAAY/B,EAAkBnY,MAAMvG,KAAMsC,WAC1Coe,EAAQ,GAAIF,GAAc1b,OAAWA,OAAW6Z,EACtBxc,GAC1B3C,EAAMkhB,EAAMhhB,SAGhB,OAFAghB,GAAMxB,WAAauB,EACnBC,EAAMV,kBAAkBlb,QACjBtF,IAIfJ,EAAQygB,UAAUc,gBAAkB,SAAS7f,GACzC,GAAkB,kBAAPA,GACP,KAAM,IAAIuF,GAAU,gCAAkC9E,EAAK4E,YAAYrF,GAE3Eyd,GAActd,KAAKH,IAGvB1B,EAAQshB,MAAQ,SAAUhC,GAEtB,GADApb,EAAMiM,WAAW,kBAAmB,uBACH,kBAAtBmP,GACP,MAAOjX,GAAa,yEAExB,IAAIiZ,GAAQ,GAAIjC,GAAaC,EAAmB1e,MAC5CR,EAAMkhB,EAAMhhB,SAEhB,OADAghB,GAAMP,KAAK/gB,EAAQshB,OACZlhB,MAIR4Y,WAAW,GAAGlV,SAAS,KAAK0d,IAAI,SAASvhB,EAAQnC,EAAOJ,GAC3D,YACAI,GAAOJ,QACP,SAASsC,EAASoI,EAAcnE,EAAqBD,EAAUwE,EACtD+L,GACT,GAAIpS,GAAOlC,EAAQ,SACDkC,GAAKuF,YACRvF,EAAKmG,SACLnG,EAAKoG,QAuGpBvI,GAAQgP,KAAO,WACX,GACItN,GADA+f,EAAOve,UAAUtF,OAAS,CAE9B,IAAI6jB,EAAO,GAAgC,kBAApBve,WAAUue,GAAsB,CACnD/f,EAAKwB,UAAUue,EAGP,IAAIrhB,GA4ChB,GAAIwH,MAAUC,MAAMlK,KAAKuF,UACrBxB,IAAIkG,EAAK5J,KACb,IAAIoC,GAAM,GAAIgI,GAAaR,GAAMtH,SACjC,OAAcoF,UAAPhE,EAAmBtB,EAAIshB,OAAOhgB,GAAMtB,MAK5C0D,SAAS,KAAK6d,IAAI,SAAS1hB,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QAAU,SAASsC,EACAoI,EACAC,EACApE,EACAD,EACAE,GAO1B,QAAS0d,GAAoBzhB,EAAUuB,EAAImgB,EAAOC,GAC9ClhB,KAAKmhB,aAAa5hB,GAClBS,KAAK8e,SAAS7J,oBACd,IAAIL,GAASjB,GACb3T,MAAKohB,UAAuB,OAAXxM,EAAkB9T,EAAKS,EAAKsT,WAAWD,EAAQ9T,GAChEd,KAAKqhB,iBAAmBH,IAAY9d,EAC9B,GAAIsX,OAAM1a,KAAKhD,UACf,KACNgD,KAAKshB,OAASL,EACdjhB,KAAKuhB,UAAY,EACjBvhB,KAAKwhB,UACL5Z,EAAMnF,OAAOzC,KAAKyhB,WAAYzhB,KAAM8E,QA6GxC,QAAS6X,GAAIpd,EAAUuB,EAAI+b,EAASqE,GAChC,GAAkB,kBAAPpgB,GACP,MAAO2G,GAAa,gCAAkClG,EAAK4E,YAAYrF,GAG3E,IAAImgB,GAAQ,CACZ,IAAgBnc,SAAZ+X,EAAuB,CACvB,GAAuB,gBAAZA,IAAoC,OAAZA,EAQ/B,MAAOzd,GAAQwN,OAAO,GAAIvG,WACV,gDACC9E,EAAK4E,YAAY0W,IATlC,IAAmC,gBAAxBA,GAAQ6E,YACf,MAAOtiB,GAAQwN,OACX,GAAIvG,WAAU,4CACE9E,EAAK4E,YAAY0W,EAAQ6E,cAEjDT,GAAQpE,EAAQ6E,YASxB,MAFAT,GAAyB,gBAAVA,IACXU,SAASV,IAAUA,GAAS,EAAIA,EAAQ,EACrC,GAAID,GAAoBzhB,EAAUuB,EAAImgB,EAAOC,GAASxhB,UApJjE,GAAIiU,GAAYvU,EAAQwU,WACpBrS,EAAOlC,EAAQ,UACfqI,EAAWnG,EAAKmG,SAChBC,EAAWpG,EAAKoG,SAChBC,EAAQxI,EAAQyI,MAepBtG,GAAK6V,SAAS4J,EAAqBxZ,GAEnCwZ,EAAoBjhB,UAAU0hB,WAAa,WACvCzhB,KAAK4hB,OAAO9c,QAAW,IAG3Bkc,EAAoBjhB,UAAU8hB,MAAQ,aAEtCb,EAAoBjhB,UAAUigB,kBAAoB,SAAU7a,EAAOuB,GAC/D,GAAIob,GAAS9hB,KAAK+hB,QACd/kB,EAASgD,KAAKhD,SACdglB,EAAkBhiB,KAAKqhB,iBACvBJ,EAAQjhB,KAAKshB,MAEjB,IAAI5a,EAAQ,GAGR,GAFAA,EAASA,GAAQ,EAAM,EACvBob,EAAOpb,GAASvB,EACZ8b,GAAS,IACTjhB,KAAKuhB,YACLvhB,KAAK4C,cACD5C,KAAKwf,eAAe,OAAO,MAEhC,CACH,GAAIyB,GAAS,GAAKjhB,KAAKuhB,WAAaN,EAGhC,MAFAa,GAAOpb,GAASvB,EAChBnF,KAAKwhB,OAAOvgB,KAAKyF,IACV,CAEa,QAApBsb,IAA0BA,EAAgBtb,GAASvB,EAEvD,IAAIzF,GAAUM,KAAK8e,SACfmD,EAAWjiB,KAAKohB,UAChBrgB,EAAWrB,EAAQ+E,aACvB/E,GAAQgM,cACR,IAAIlM,GAAMkI,EAASua,GAAUllB,KAAKgE,EAAUoE,EAAOuB,EAAO1J,GACtDuR,EAAiB7O,EAAQiM,aAO7B,IANArI,EAAM+K,sBACF7O,EACA+O,EACoB,OAApByT,EAA2B,iBAAmB,cAC9CtiB,GAEAF,IAAQmI,EAER,MADA3H,MAAK0D,QAAQlE,EAAIxD,IACV,CAGX,IAAI2I,GAAetB,EAAoB7D,EAAKQ,KAAK8e,SACjD,IAAIna,YAAwBvF,GAAS,CACjCuF,EAAeA,EAAaC,SAC5B,IAAI0b,GAAW3b,EAAaT,SAE5B,IAA+B,KAAd,SAAXoc,GAIF,MAHIW,IAAS,GAAGjhB,KAAKuhB,YACrBO,EAAOpb,GAAS/B,EAChBA,EAAa4b,OAAOvgB,MAAO0G,EAAQ,IAAK,IACjC,CACJ,IAA+B,KAAd,SAAX4Z,GAEN,MAA+B,MAAd,SAAXA,IACTtgB,KAAK0D,QAAQiB,EAAagU,YACnB,IAEP3Y,KAAK+I,WACE,EANPvJ,GAAMmF,EAAamU,SAS3BgJ,EAAOpb,GAASlH,EAEpB,GAAI0iB,KAAkBliB,KAAKmiB,cAC3B,OAAID,IAAiBllB,IACO,OAApBglB,EACAhiB,KAAKkhB,QAAQY,EAAQE,GAErBhiB,KAAKoiB,SAASN,IAEX,IAKfd,EAAoBjhB,UAAU6C,YAAc,WAIxC,IAHA,GAAIC,GAAQ7C,KAAKwhB,OACbP,EAAQjhB,KAAKshB,OACbQ,EAAS9hB,KAAK+hB,QACXlf,EAAM7F,OAAS,GAAKgD,KAAKuhB,UAAYN,GAAO,CAC/C,GAAIjhB,KAAKwf,cAAe,MACxB,IAAI9Y,GAAQ7D,EAAMzF,KAClB4C,MAAKggB,kBAAkB8B,EAAOpb,GAAQA,KAI9Csa,EAAoBjhB,UAAUmhB,QAAU,SAAUmB,EAAUP,GAIxD,IAAK,GAHD7D,GAAM6D,EAAO9kB,OACbwC,EAAM,GAAIkb,OAAMuD,GAChBpT,EAAI,EACCpO,EAAI,EAAGA,EAAIwhB,IAAOxhB,EACnB4lB,EAAS5lB,KAAI+C,EAAIqL,KAAOiX,EAAOrlB,GAEvC+C,GAAIxC,OAAS6N,EACb7K,KAAKoiB,SAAS5iB,IAGlBwhB,EAAoBjhB,UAAUiiB,gBAAkB,WAC5C,MAAOhiB,MAAKqhB,kBA4BhBjiB,EAAQW,UAAU4c,IAAM,SAAU7b,EAAI+b,GAClC,MAAOF,GAAI3c,KAAMc,EAAI+b,EAAS,OAGlCzd,EAAQud,IAAM,SAAUpd,EAAUuB,EAAI+b,EAASqE,GAC3C,MAAOvE,GAAIpd,EAAUuB,EAAI+b,EAASqE,OAMnChe,SAAS,KAAKof,IAAI,SAASjjB,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QACP,SAASsC,EAASgE,EAAUC,EAAqBoE,EAAcnE,GAC/D,GAAI/B,GAAOlC,EAAQ,UACfqI,EAAWnG,EAAKmG,QAEpBtI,GAAQ8W,OAAS,SAAUpV,GACvB,GAAkB,kBAAPA,GACP,KAAM,IAAI1B,GAAQiH,UAAU,gCAAkC9E,EAAK4E,YAAYrF,GAEnF,OAAO,YACH,GAAItB,GAAM,GAAIJ,GAAQgE,EACtB5D,GAAIyV,qBACJzV,EAAIkM,cACJ,IAAIvG,GAAQuC,EAAS5G,GAAIyF,MAAMvG,KAAMsC,WACjCiM,EAAiB/O,EAAImM,aAIzB,OAHArI,GAAM+K,sBACFlJ,EAAOoJ,EAAgB,iBAAkB/O,GAC7CA,EAAI+iB,sBAAsBpd,GACnB3F,IAIfJ,EAAQojB,QAAUpjB,EAAa,IAAI,SAAU0B,GACzC,GAAkB,kBAAPA,GACP,MAAO2G,GAAa,gCAAkClG,EAAK4E,YAAYrF,GAE3E,IAAItB,GAAM,GAAIJ,GAAQgE,EACtB5D,GAAIyV,qBACJzV,EAAIkM,cACJ,IAAIvG,EACJ,IAAI7C,UAAUtF,OAAS,EAAG,CACtBsG,EAAMiM,WAAW,gDACjB,IAAIvO,GAAMsB,UAAU,GAChB+J,EAAM/J,UAAU,EACpB6C,GAAQ5D,EAAKqI,QAAQ5I,GAAO0G,EAAS5G,GAAIyF,MAAM8F,EAAKrL,GACxB0G,EAAS5G,GAAI/D,KAAKsP,EAAKrL,OAEnDmE,GAAQuC,EAAS5G,IAErB,IAAIyN,GAAiB/O,EAAImM,aAIzB,OAHArI,GAAM+K,sBACFlJ,EAAOoJ,EAAgB,cAAe/O,GAC1CA,EAAI+iB,sBAAsBpd,GACnB3F,GAGXJ,EAAQW,UAAUwiB,sBAAwB,SAAUpd,GAC5CA,IAAU5D,EAAKoG,SACf3H,KAAKogB,gBAAgBjb,EAAMnJ,GAAG,GAE9BgE,KAAKmE,iBAAiBgB,GAAO,OAKlCjC,SAAS,KAAKuf,IAAI,SAASpjB,EAAQnC,EAAOJ,GAC7C,YAOA,SAAS4lB,GAAe1d,GACpB,MAAOA,aAAerI,QAClBud,EAAIwB,eAAe1W,KAASrI,MAAMoD,UAI1C,QAAS4iB,GAAuB3d,GAC5B,GAAIxF,EACJ,IAAIkjB,EAAe1d,GAAM,CACrBxF,EAAM,GAAIsa,GAAiB9U,GAC3BxF,EAAIgN,KAAOxH,EAAIwH,KACfhN,EAAI0G,QAAUlB,EAAIkB,QAClB1G,EAAI2C,MAAQ6C,EAAI7C,KAEhB,KAAK,GADDwI,GAAOuP,EAAIvP,KAAK3F,GACXvI,EAAI,EAAGA,EAAIkO,EAAK3N,SAAUP,EAAG,CAClC,GAAIqO,GAAMH,EAAKlO,EACVmmB,GAAU3T,KAAKnE,KAChBtL,EAAIsL,GAAO9F,EAAI8F,IAGvB,MAAOtL,GAGX,MADA+B,GAAKshB,+BAA+B7d,GAC7BA,EAGX,QAAS8d,GAAmBpjB,EAASqjB,GACjC,MAAO,UAAShL,EAAK5S,GACjB,GAAgB,OAAZzF,EAAJ,CACA,GAAIqY,EAAK,CACL,GAAIiL,GAAUL,EAAuBM,EAAiBlL,GACtDrY,GAAQmK,kBAAkBmZ,GAC1BtjB,EAAQgE,QAAQsf,OACb,IAAKD,EAEL,CACH,GAAI/b,MAAUC,MAAMlK,KAAKuF,UAAW,EACpC5C,GAAQggB,SAAS1Y,OAHjBtH,GAAQggB,SAASva,EAKrBzF,GAAU,OA7ClB,GAAI6B,GAAOlC,EAAQ,UACf4jB,EAAmB1hB,EAAK0hB,iBACxB1D,EAASlgB,EAAQ,YACjBya,EAAmByF,EAAOzF,iBAC1BI,EAAM7a,EAAQ,SAOdujB,EAAY,gCAsChB1lB,GAAOJ,QAAUgmB,IAEd1K,WAAW,GAAGrN,QAAQ,GAAG7H,SAAS,KAAKggB,IAAI,SAAS7jB,EAAQnC,EAAOJ,GACtE,YACAI,GAAOJ,QAAU,SAASsC,GAM1B,QAAS+jB,GAAcC,EAAKC,GACxB,GAAI3jB,GAAUM,IACd,KAAKuB,EAAKqI,QAAQwZ,GAAM,MAAOE,GAAevmB,KAAK2C,EAAS0jB,EAAKC,EACjE,IAAI7jB,GACAkI,EAAS2b,GAAU9c,MAAM7G,EAAQ+E,eAAgB,MAAM2a,OAAOgE,GAC9D5jB,KAAQmI,GACRC,EAAMvF,WAAW7C,EAAIxD,GAI7B,QAASsnB,GAAeF,EAAKC,GACzB,GAAI3jB,GAAUM,KACVe,EAAWrB,EAAQ+E,cACnBjF,EAAcsF,SAARse,EACJ1b,EAAS2b,GAAUtmB,KAAKgE,EAAU,MAClC2G,EAAS2b,GAAUtmB,KAAKgE,EAAU,KAAMqiB,EAC1C5jB,KAAQmI,GACRC,EAAMvF,WAAW7C,EAAIxD,GAG7B,QAASunB,GAAa5R,EAAQ0R,GAC1B,GAAI3jB,GAAUM,IACd,KAAK2R,EAAQ,CACT,GAAI6R,GAAY,GAAI7mB,OAAMgV,EAAS,GACnC6R,GAAUzJ,MAAQpI,EAClBA,EAAS6R,EAEb,GAAIhkB,GAAMkI,EAAS2b,GAAUtmB,KAAK2C,EAAQ+E,cAAekN,EACrDnS,KAAQmI,GACRC,EAAMvF,WAAW7C,EAAIxD,GAlC7B,GAAIuF,GAAOlC,EAAQ,UACfuI,EAAQxI,EAAQyI,OAChBH,EAAWnG,EAAKmG,SAChBC,EAAWpG,EAAKoG,QAmCpBvI,GAAQW,UAAU0jB,WAAarkB,EAAQW,UAAU2jB,QAAU,SAAUL,EACAxG,GACjE,GAAuB,kBAAZwG,GAAwB,CAC/B,GAAIM,GAAUL,CACExe,UAAZ+X,GAAyBjX,OAAOiX,GAASiE,SACzC6C,EAAUR,GAEdnjB,KAAK+D,MACD4f,EACAJ,EACAze,OACA9E,KACAqjB,GAGR,MAAOrjB,UAIRkD,SAAS,KAAK0gB,IAAI,SAASvkB,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QAAU,WAUjB,QAASuhB,MAgDT,QAASwF,GAAM1kB,EAAMwN,GACjB,GAAY,MAARxN,GAAgBA,EAAK0a,cAAgBza,EACrC,KAAM,IAAIiH,GAAU,uFAExB,IAAwB,kBAAbsG,GACP,KAAM,IAAItG,GAAU,gCAAkC9E,EAAK4E,YAAYwG,IAK/E,QAASvN,GAAQuN,GACTA,IAAavJ,GACbygB,EAAM7jB,KAAM2M,GAEhB3M,KAAKkE,UAAY,EACjBlE,KAAK8jB,qBAAuBhf,OAC5B9E,KAAK+jB,mBAAqBjf,OAC1B9E,KAAKgkB,UAAYlf,OACjB9E,KAAKikB,WAAanf,OAClB9E,KAAKkkB,qBAAqBvX,GAC1B3M,KAAKyL,kBACLzL,KAAKkX,WAAW,iBAAkBlX,MAqnBtC,QAASmkB,GAAaC,GAAIpkB,KAAKN,QAAQyE,iBAAiBigB,GACxD,QAASC,GAAYD,GAAIpkB,KAAKN,QAAQ0gB,gBAAgBgE,GAAG,GA4CrD,QAASE,GAAUnf,GACf,GAAIof,GAAI,GAAInlB,GAAQgE,EACpBmhB,GAAET,qBAAuB3e,EACzBof,EAAER,mBAAqB5e,EACvBof,EAAEP,UAAY7e,EACdof,EAAEN,WAAa9e,EArvBvB,GAaIwO,GAbA6Q,EAA0B,WAC1B,MAAO,IAAIne,GAAU,wEAErBoe,EAAiB,WACjB,MAAO,IAAIrlB,GAAQslB,kBAAkB1kB,KAAK4E,YAE1C6C,EAAe,SAAS6H,GACxB,MAAOlQ,GAAQwN,OAAO,GAAIvG,GAAUiJ,KAGpCqV,KACApjB,EAAOlC,EAAQ,SAIfsU,GADApS,EAAKS,OACO,WACR,GAAIxC,GAAMV,EAAQ8V,MAElB,OADY9P,UAARtF,IAAmBA,EAAM,MACtBA,GAGC,WACR,MAAO,OAGf+B,EAAK4M,kBAAkB/O,EAAS,aAAcuU,EAE9C,IAAIuG,GAAM7a,EAAQ,SACdY,EAAQZ,EAAQ,WAChBuI,EAAQ,GAAI3H,EAChBia,GAAIS,eAAevb,EAAS,UAAW+F,MAAOyC,GAC9C,IAAI2X,GAASlgB,EAAQ,YACjBgH,EAAYjH,EAAQiH,UAAYkZ,EAAOlZ,SAC3CjH,GAAQob,WAAa+E,EAAO/E,UAC5B,IAAIH,GAAoBjb,EAAQib,kBAAoBkF,EAAOlF,iBAC3Djb,GAAQkb,aAAeiF,EAAOjF,aAC9Blb,EAAQ0a,iBAAmByF,EAAOzF,iBAClC1a,EAAQ+b,eAAiBoE,EAAOzF,iBAChC1a,EAAQmb,eAAiBgF,EAAOhF,cAChC,IAAInX,GAAW,aACXwhB,KACA1a,KACA7G,EAAsBhE,EAAQ,eAAeD,EAASgE,GACtDoE,EACAnI,EAAQ,mBAAmBD,EAASgE,EACTC,EAAqBoE,EAAc4W,GAC9DpT,EAAU5L,EAAQ,aAAaD,GAE/BiM,EAAgBJ,EAAQpF,OACxBvC,EAAQjE,EAAQ,mBAAmBD,EAAS6L,GAE5C8R,GADgBzZ,EAAM6H,cAEtB9L,EAAQ,aAAaD,EAASiE,EAAqB6G,IACnDC,EAAc9K,EAAQ,kBAAkB6K,GACxC4Y,EAAqBzjB,EAAQ,cAC7BsI,EAAWpG,EAAKoG,SAChBD,EAAWnG,EAAKmG,QA0sBhB,OAjrBJtI,GAAQW,UAAUqG,SAAW,WACzB,MAAO,oBAGXhH,EAAQW,UAAU6Y,OAASxZ,EAAQW,UAAiB,MAAI,SAAUe,GAC9D,GAAImd,GAAM3b,UAAUtF,MACpB,IAAIihB,EAAM,EAAG,CACT,GACWxhB,GADPyhB,EAAiB,GAAIxD,OAAMuD,EAAM,GACjCpT,EAAI,CACR,KAAKpO,EAAI,EAAGA,EAAIwhB,EAAM,IAAKxhB,EAAG,CAC1B,GAAI+N,GAAOlI,UAAU7F,EACrB,KAAI8E,EAAKmJ,SAASF,GAGd,MAAO/C,GAAa,0DACiBlG,EAAK4E,YAAYqE,GAHtD0T,GAAerT,KAAOL,EAQ9B,MAFA0T,GAAelhB,OAAS6N,EACxB/J,EAAKwB,UAAU7F,GACRuD,KAAK4d,KAAK9Y,OAAWqF,EAAY+T,EAAgBpd,EAAId,OAEhE,MAAOA,MAAK4d,KAAK9Y,OAAWhE,IAGhC1B,EAAQW,UAAU8kB,QAAU,WACxB,MAAO7kB,MAAK+D,MAAM0gB,EACdA,EAAgB3f,OAAW9E,KAAM8E,SAGzC1F,EAAQW,UAAU6d,KAAO,SAAUkH,EAAYC,GAC3C,GAAIzhB,EAAMsM,YAActN,UAAUtF,OAAS,GACjB,kBAAf8nB,IACc,kBAAdC,GAA0B,CACjC,GAAIzV,GAAM,kDACF/N,EAAK4E,YAAY2e,EACrBxiB,WAAUtF,OAAS,IACnBsS,GAAO,KAAO/N,EAAK4E,YAAY4e,IAEnC/kB,KAAKgI,MAAMsH,GAEf,MAAOtP,MAAK+D,MAAM+gB,EAAYC,EAAWjgB,OAAWA,OAAWA,SAGnE1F,EAAQW,UAAUsgB,KAAO,SAAUyE,EAAYC,GAC3C,GAAIrlB,GACAM,KAAK+D,MAAM+gB,EAAYC,EAAWjgB,OAAWA,OAAWA,OAC5DpF,GAAQslB,eAGZ5lB,EAAQW,UAAU+gB,OAAS,SAAUhgB,GACjC,MAAkB,kBAAPA,GACA2G,EAAa,gCAAkClG,EAAK4E,YAAYrF,IAEpEd,KAAKqZ,MAAMtV,MAAMjD,EAAIgE,OAAWA,OAAW8f,EAAO9f,SAG7D1F,EAAQW,UAAUklB,OAAS,WACvB,GAAIzlB,IACAgO,aAAa,EACbiQ,YAAY,EACZyH,iBAAkBpgB,OAClBqgB,gBAAiBrgB,OASrB,OAPI9E,MAAKwN,eACLhO,EAAI0lB,iBAAmBllB,KAAKmF,QAC5B3F,EAAIgO,aAAc,GACXxN,KAAKyd,eACZje,EAAI2lB,gBAAkBnlB,KAAK2R,SAC3BnS,EAAIie,YAAa,GAEdje,GAGXJ,EAAQW,UAAUsZ,IAAM,WAIpB,MAHI/W,WAAUtF,OAAS,GACnBgD,KAAKgI,MAAM,wDAER,GAAIR,GAAaxH,MAAMN,WAGlCN,EAAQW,UAAU4N,MAAQ,SAAU7M,GAChC,MAAOd,MAAK4Y,OAAOrX,EAAK6jB,wBAAyBtkB,IAGrD1B,EAAQimB,kBAAoBnoB,EAAOJ,QAEnCsC,EAAQkmB,GAAK,SAAUlC,GACnB,MAAOA,aAAehkB,IAG1BA,EAAQmmB,SAAWnmB,EAAQomB,aAAe,SAAS1kB,GAC/C,GAAItB,GAAM,GAAIJ,GAAQgE,EACtB5D,GAAIyV,oBACJ,IAAI8N,GAAYzgB,UAAUtF,OAAS,KAAM4I,OAAOtD,UAAU,IAAIygB,UAE1D3P,EAAS1L,EAAS5G,GAAIgiB,EAAmBtjB,EAAKujB,GAKlD,OAJI3P,KAAWzL,GACXnI,EAAI4gB,gBAAgBhN,EAAOpX,GAAG,GAE7BwD,EAAIimB,iBAAiBjmB,EAAIkmB,sBACvBlmB,GAGXJ,EAAQia,IAAM,SAAU9Z,GACpB,MAAO,IAAIiI,GAAajI,GAAUG,WAGtCN,EAAQumB,KAAO,SAAU3gB,GACrB,GAAIxF,GAAM6D,EAAoB2B,EAO9B,OANMxF,aAAeJ,KACjBI,EAAM,GAAIJ,GAAQgE,GAClB5D,EAAIyV,qBACJzV,EAAIomB,gBACJpmB,EAAIukB,mBAAqB/e,GAEtBxF,GAGXJ,EAAQgG,QAAUhG,EAAQymB,UAAYzmB,EAAQumB,KAE9CvmB,EAAQwN,OAASxN,EAAQ0mB,SAAW,SAAUnU,GAC1C,GAAInS,GAAM,GAAIJ,GAAQgE,EAGtB,OAFA5D,GAAIyV,qBACJzV,EAAI4gB,gBAAgBzO,GAAQ,GACrBnS,GAGXJ,EAAQoC,aAAe,SAASV,GAC5B,GAAkB,kBAAPA,GACP,KAAM,IAAIuF,GAAU,gCAAkC9E,EAAK4E,YAAYrF,GAE3E,OAAO8G,GAAMpG,aAAaV,IAG9B1B,EAAQW,UAAUgE,MAAQ,SACtB+gB,EACAC,EACAthB,EAAM1C,EACNglB,GAEA,GAAIC,GAAoClhB,SAAjBihB,EACnBrmB,EAAUsmB,EAAmBD,EAAe,GAAI3mB,GAAQgE,GACxDgB,EAASpE,KAAK4E,UACd0b,EAAWlc,EAAOF,SAEjB8hB,KACDtmB,EAAQ6E,eAAevE,KAAM,GAC7BN,EAAQuV,qBACSnQ,SAAb/D,GACgC,KAAb,QAAjBf,KAAKkE,aAEHnD,EAD4B,KAAd,SAAXuf,GACQtgB,KAAKyE,cAELL,IAAWpE,KAAO8E,OAAY9E,KAAKiF,UAGtDjF,KAAKkX,WAAW,iBAAkBlX,KAAMN,GAG5C,IAAIkV,GAASjB,GACb,IAAgC,KAAd,SAAX2M,GAA6B,CAChC,GAAInJ,GAAShS,EAAO8gB,EAAU7hB,EAAO8hB,iBACN,MAAd,SAAX5F,IACFnb,EAAQf,EAAO2f,mBACf5M,EAAU2N,GACwB,KAAd,SAAXxE,IACTnb,EAAQf,EAAO0f,qBACf3M,EAAU4N,EACV3gB,EAAOsQ,+BAEPuR,EAAU7hB,EAAO+hB,uCACjBhhB,EAAQ,GAAIkV,GAAkB,8BAC9BjW,EAAOyF,kBAAkB1E,GACzBgS,EAAU4N,GAGdnd,EAAMnF,OAAOwjB,EAAS7hB,GAClB+S,QAAoB,OAAXvC,EAAkBuC,EACD,kBAAZA,IACN5V,EAAKsT,WAAWD,EAAQuC,GAChCzX,QAASA,EACTqB,SAAUA,EACVoE,MAAOA,QAGXf,GAAOgiB,cAActB,EAAYC,EAAWrlB,EAASqB,EAAU6T,EAGnE,OAAOlV,IAGXN,EAAQW,UAAUmJ,QAAU,WACxB,MAAwB,OAAjBlJ,KAAKkE,WAGhB9E,EAAQW,UAAU0lB,cAAgB,WAC9B,MAAwC,MAAf,UAAjBzlB,KAAKkE,YAGjB9E,EAAQW,UAAUqI,aAAe,WAC7B,MAAuC,aAAd,SAAjBpI,KAAKkE,YAGjB9E,EAAQW,UAAUsmB,WAAa,SAAUpI,GACrCje,KAAKkE,UAAalE,KAAKkE,WAAY,MACxB,MAAN+Z,GAGT7e,EAAQW,UAAU6lB,cAAgB,WAC9B5lB,KAAKkE,UAA6B,SAAjBlE,KAAKkE,UACtBlE,KAAKkX,WAAW,mBAAoBlX,OAGxCZ,EAAQW,UAAUumB,aAAe,WAC7BtmB,KAAKkE,UAA6B,SAAjBlE,KAAKkE,UACtBlE,KAAKkX,WAAW,kBAAmBlX,OAGvCZ,EAAQW,UAAUwmB,cAAgB,WAC9BvmB,KAAKkE,UAA6B,SAAjBlE,KAAKkE,UACtBlE,KAAKkX,WAAW,kBAAmBlX,OAGvCZ,EAAQW,UAAUilB,YAAc,WAC5BhlB,KAAKkE,UAA6B,QAAjBlE,KAAKkE,WAG1B9E,EAAQW,UAAUymB,SAAW,WACzB,OAAyB,QAAjBxmB,KAAKkE,WAAuB,GAGxC9E,EAAQW,UAAU0mB,gBAAkB,WAChCzmB,KAAKkE,UAAYlE,KAAKkE,WAAY,OAGtC9E,EAAQW,UAAUiJ,cAAgB,WAC9BhJ,KAAKkE,UAA6B,MAAjBlE,KAAKkE,UACtBlE,KAAKkX,WAAW,mBAAoBlX,OAGxCZ,EAAQW,UAAU0I,oBAAsB,WACpCzI,KAAKkE,UAA6B,QAAjBlE,KAAKkE,WAG1B9E,EAAQW,UAAU2lB,oBAAsB,WAChC9d,EAAMlG,uBACV1B,KAAKkE,UAA6B,UAAjBlE,KAAKkE,YAG1B9E,EAAQW,UAAU2mB,YAAc,SAAUhgB,GACtC,GAAIlH,GAAgB,IAAVkH,EAAc1G,KAAKikB,WAAajkB,KAC1B,EAAR0G,EAAY,EAAI,EACxB,IAAIlH,IAAQmlB,EAEL,MAAY7f,UAARtF,GAAqBQ,KAAKkF,WAC1BlF,KAAKyE,cAETjF,GAGXJ,EAAQW,UAAU4mB,WAAa,SAAUjgB,GACrC,MAAO1G,MACS,EAAR0G,EAAY,EAAI,IAG5BtH,EAAQW,UAAU6mB,sBAAwB,SAAUlgB,GAChD,MAAO1G,MACS,EAAR0G,EAAY,EAAI,IAG5BtH,EAAQW,UAAU8mB,oBAAsB,SAAUngB,GAC9C,MAAO1G,MACS,EAAR0G,EAAY,EAAI,IAG5BtH,EAAQW,UAAU0E,YAAc,aAEhCrF,EAAQW,UAAU+mB,kBAAoB,SAAUC,GAC5C,GACIC,IADWD,EAAS7iB,UACV6iB,EAASjD,sBACnBlX,EAASma,EAAShD,mBAClBrkB,EAAUqnB,EAAS/C,UACnBjjB,EAAWgmB,EAASL,YAAY,EACnB5hB,UAAb/D,IAAwBA,EAAW4jB,GACvC3kB,KAAKomB,cAAcY,EAASpa,EAAQlN,EAASqB,EAAU,OAG3D3B,EAAQW,UAAUknB,mBAAqB,SAAUF,EAAUrgB,GACvD,GAAIsgB,GAAUD,EAASH,sBAAsBlgB,GACzCkG,EAASma,EAASF,oBAAoBngB,GACtChH,EAAUqnB,EAASJ,WAAWjgB,GAC9B3F,EAAWgmB,EAASL,YAAYhgB,EACnB5B,UAAb/D,IAAwBA,EAAW4jB,GACvC3kB,KAAKomB,cAAcY,EAASpa,EAAQlN,EAASqB,EAAU,OAG3D3B,EAAQW,UAAUqmB,cAAgB,SAC9BY,EACApa,EACAlN,EACAqB,EACA6T,GAEA,GAAIlO,GAAQ1G,KAAKkJ,SAOjB,IALIxC,GAAS,QACTA,EAAQ,EACR1G,KAAKqmB,WAAW,IAGN,IAAV3f,EACA1G,KAAKgkB,UAAYtkB,EACjBM,KAAKikB,WAAaljB,EACK,kBAAZimB,KACPhnB,KAAK8jB,qBACU,OAAXlP,EAAkBoS,EAAUzlB,EAAKsT,WAAWD,EAAQoS,IAEtC,kBAAXpa,KACP5M,KAAK+jB,mBACU,OAAXnP,EAAkBhI,EAASrL,EAAKsT,WAAWD,EAAQhI,QAExD,CACH,GAAIsa,GAAe,EAARxgB,EAAY,CACvB1G,MAAKknB,EAAO,GAAKxnB,EACjBM,KAAKknB,EAAO,GAAKnmB,EACM,kBAAZimB,KACPhnB,KAAKknB,EAAO,GACG,OAAXtS,EAAkBoS,EAAUzlB,EAAKsT,WAAWD,EAAQoS,IAEtC,kBAAXpa,KACP5M,KAAKknB,EAAO,GACG,OAAXtS,EAAkBhI,EAASrL,EAAKsT,WAAWD,EAAQhI,IAI/D,MADA5M,MAAKqmB,WAAW3f,EAAQ,GACjBA,GAGXtH,EAAQW,UAAUwgB,OAAS,SAAU4G,EAAWnmB,GAC5ChB,KAAKomB,cAActhB,OAAWA,OAAW9D,EAAKmmB,EAAW,OAG7D/nB,EAAQW,UAAUoE,iBAAmB,SAASgB,EAAOiiB,GACjD,GAAsC,KAAf,UAAjBpnB,KAAKkE,WAAX,CACA,GAAIiB,IAAUnF,KACV,MAAOA,MAAKogB,gBAAgBoE,KAA2B,EAC3D,IAAI7f,GAAetB,EAAoB8B,EAAOnF,KAC9C,MAAM2E,YAAwBvF,IAAU,MAAOY,MAAK0f,SAASva,EAEzDiiB,IAAYpnB,KAAKuE,eAAeI,EAAc,EAElD,IAAIjF,GAAUiF,EAAaC,SAE3B,IAAIlF,IAAYM,KAEZ,WADAA,MAAK0D,QAAQ8gB,IAIjB,IAAIlE,GAAW5gB,EAAQwE,SACvB,IAA+B,KAAd,SAAXoc,GAA6B,CAC/B,GAAIrC,GAAMje,KAAKkJ,SACX+U,GAAM,GAAGve,EAAQonB,kBAAkB9mB,KACvC,KAAK,GAAIvD,GAAI,EAAGA,EAAIwhB,IAAOxhB,EACvBiD,EAAQunB,mBAAmBjnB,KAAMvD,EAErCuD,MAAKumB,gBACLvmB,KAAKqmB,WAAW,GAChBrmB,KAAKqnB,aAAa3nB,OACf,IAA+B,KAAd,SAAX4gB,GACTtgB,KAAK0f,SAAShgB,EAAQoZ,cACnB,IAA+B,KAAd,SAAXwH,GACTtgB,KAAK0D,QAAQhE,EAAQiZ,eAClB,CACH,GAAIhH,GAAS,GAAI0I,GAAkB,6BACnC3a,GAAQmK,kBAAkB8H,GAC1B3R,KAAK0D,QAAQiO,MAIrBvS,EAAQW,UAAUqgB,gBAClB,SAASzO,EAAQ2V,EAAaC,GAC1B,GAAI1b,GAAQtK,EAAKimB,kBAAkB7V,GAC/B8V,EAAW5b,IAAU8F,CACzB,KAAK8V,IAAaF,GAA0BjkB,EAAMsM,WAAY,CAC1D,GAAI1J,GAAU,4CACV3E,EAAK4E,YAAYwL,EACrB3R,MAAKgI,MAAM9B,GAAS,GAExBlG,KAAK6J,kBAAkBgC,IAAOyb,GAAcG,GAC5CznB,KAAK0D,QAAQiO,IAGjBvS,EAAQW,UAAUmkB,qBAAuB,SAAUvX,GAC/C,GAAIA,IAAavJ,EAAjB,CACA,GAAI1D,GAAUM,IACdA,MAAKiV,qBACLjV,KAAK0L,cACL,IAAI4b,IAAc,EACdnrB,EAAI6D,KAAKgX,SAASrK,EAAU,SAASxH,GACrCzF,EAAQyE,iBAAiBgB,IAC1B,SAAUwM,GACTjS,EAAQ0gB,gBAAgBzO,EAAQ2V,IAEpCA,IAAc,EACdtnB,KAAK2L,cAEK7G,SAAN3I,GACAuD,EAAQ0gB,gBAAgBjkB,GAAG,KAInCiD,EAAQW,UAAU2nB,0BAA4B,SAC1CvQ,EAASpW,EAAUoE,EAAOzF,GAE1B,GAAI4gB,GAAW5gB,EAAQwE,SACvB,IAA4B,KAAX,MAAXoc,GAAN,CACA5gB,EAAQgM,cACR,IAAIic,EACA5mB,KAAa6jB,EACRzf,GAAiC,gBAAjBA,GAAMnI,OAKvB2qB,EAAIjgB,EAASyP,GAAS5Q,MAAMvG,KAAKyE,cAAeU,IAJhDwiB,EAAIhgB,EACJggB,EAAE3rB,EAAI,GAAIqK,GAAU,iCACI9E,EAAK4E,YAAYhB,KAK7CwiB,EAAIjgB,EAASyP,GAASpa,KAAKgE,EAAUoE,EAEzC,IAAIoJ,GAAiB7O,EAAQiM,aAC7B2U,GAAW5gB,EAAQwE,UACS,KAAX,MAAXoc,KAEFqH,IAAMzd,EACNxK,EAAQgE,QAAQyB,GACTwiB,IAAMhgB,EACbjI,EAAQ0gB,gBAAgBuH,EAAE3rB,GAAG,IAE7BsH,EAAM+K,sBAAsBsZ,EAAGpZ,EAAgB,GAAK7O,EAASM,MAC7DN,EAAQyE,iBAAiBwjB,OAIjCvoB,EAAQW,UAAU6E,QAAU,WAExB,IADA,GAAIpF,GAAMQ,KACHR,EAAI4I,gBAAgB5I,EAAMA,EAAI6I,WACrC,OAAO7I,IAGXJ,EAAQW,UAAUsI,UAAY,WAC1B,MAAOrI,MAAK+jB,oBAGhB3kB,EAAQW,UAAUsnB,aAAe,SAAS3nB,GACtCM,KAAK+jB,mBAAqBrkB,GAG9BN,EAAQW,UAAU6nB,eAAiB,SAASloB,EAASyX,EAASpW,EAAUoE,GACpE,GAAI0iB,GAAYnoB,YAAmBN,GAC/BkhB,EAAWtgB,KAAKkE,UAChB4jB,EAA8C,KAAf,UAAXxH,EACI,MAAX,MAAXA,IACEuH,GAAWnoB,EAAQsK,0BAEnBjJ,YAAoBgc,IACpBhc,EAASyc,oBACTzc,EAASkc,cAAgBvd,EACrBgI,EAASyP,GAASpa,KAAKgE,EAAUoE,KAAWwC,GAC5CjI,EAAQgE,QAAQiE,EAAS3L,IAEtBmb,IAAYsN,EACnB/kB,EAAQggB,SAAS+E,EAAe1nB,KAAKgE,IAC9BA,YAAoBsd,GAC3Btd,EAAS4e,kBAAkBjgB,GACpBmoB,GAAanoB,YAAmB8H,GACvC9H,EAAQqJ,UAERhI,EAAS+G,UAEa,kBAAZqP,GACT0Q,GAGGC,GAAiBpoB,EAAQgmB,sBAC7B1lB,KAAK0nB,0BAA0BvQ,EAASpW,EAAUoE,EAAOzF,IAHzDyX,EAAQpa,KAAKgE,EAAUoE,EAAOzF,GAK3BqB,YAAoBsd,GACtBtd,EAASye,gBACqB,KAAd,SAAXc,GACFvf,EAASif,kBAAkB7a,EAAOzF,GAElCqB,EAASmf,iBAAiB/a,EAAOzF,IAGlCmoB,IACHC,GAAiBpoB,EAAQgmB,sBACE,KAAd,SAAXpF,GACF5gB,EAAQggB,SAASva,GAEjBzF,EAAQgE,QAAQyB,KAK5B/F,EAAQW,UAAUomB,uCAAyC,SAAS9Z,GAChE,GAAI8K,GAAU9K,EAAI8K,QACdzX,EAAU2M,EAAI3M,QACdqB,EAAWsL,EAAItL,SACfoE,EAAQkH,EAAIlH,KACO,mBAAZgS,GACDzX,YAAmBN,GAGrBY,KAAK0nB,0BAA0BvQ,EAASpW,EAAUoE,EAAOzF,GAFzDyX,EAAQpa,KAAKgE,EAAUoE,EAAOzF,GAI3BA,YAAmBN,IAC1BM,EAAQgE,QAAQyB,IAIxB/F,EAAQW,UAAUmmB,kBAAoB,SAAS7Z,GAC3CrM,KAAK4nB,eAAevb,EAAI3M,QAAS2M,EAAI8K,QAAS9K,EAAItL,SAAUsL,EAAIlH,QAGpE/F,EAAQW,UAAUgoB,gBAAkB,SAAS5Q,EAAShS,EAAOmb,GACzD,GAAI5gB,GAAUM,KAAKgkB,UACfjjB,EAAWf,KAAK0mB,YAAY,EAChC1mB,MAAKgkB,UAAYlf,OACjB9E,KAAKikB,WAAanf,OAClB9E,KAAK4nB,eAAeloB,EAASyX,EAASpW,EAAUoE,IAGpD/F,EAAQW,UAAUioB,0BAA4B,SAASthB,GACnD,GAAIwgB,GAAe,EAARxgB,EAAY,CACvB1G,MAAKknB,EAAO,GACZlnB,KAAKknB,EAAO,GACZlnB,KAAKknB,EAAO,GACZlnB,KAAKknB,EAAO,GAAKpiB,QAGrB1F,EAAQW,UAAU2f,SAAW,SAAUva,GACnC,GAAImb,GAAWtgB,KAAKkE,SACpB,OAAiB,UAAXoc,KAA0B,IAAhC,CACA,GAAInb,IAAUnF,KAAM,CAChB,GAAI+X,GAAMyM,GAEV,OADAxkB,MAAK6J,kBAAkBkO,GAChB/X,KAAK0D,QAAQqU,GAExB/X,KAAK4lB,gBACL5lB,KAAK+jB,mBAAqB5e,GAEV,MAAXmb,GAAoB,IACW,KAAf,UAAXA,GACFtgB,KAAK2C,kBAELiF,EAAMlF,eAAe1C,SAKjCZ,EAAQW,UAAU2D,QAAU,SAAUiO,GAClC,GAAI2O,GAAWtgB,KAAKkE,SACpB,OAAiB,UAAXoc,KAA0B,IAIhC,MAHAtgB,MAAKsmB,eACLtmB,KAAK8jB,qBAAuBnS,EAExB3R,KAAKwmB,WACE5e,EAAM7F,WAAW4P,EAAQpQ,EAAKS,cAGzB,MAAXse,GAAoB,EACrB1Y,EAAMlF,eAAe1C,MAErBA,KAAKgU,oCAIb5U,EAAQW,UAAUkoB,iBAAmB,SAAUhK,EAAK9Y,GAChD,IAAK,GAAI1I,GAAI,EAAGA,EAAIwhB,EAAKxhB,IAAK,CAC1B,GAAI0a,GAAUnX,KAAK4mB,sBAAsBnqB,GACrCiD,EAAUM,KAAK2mB,WAAWlqB,GAC1BsE,EAAWf,KAAK0mB,YAAYjqB,EAChCuD,MAAKgoB,0BAA0BvrB,GAC/BuD,KAAK4nB,eAAeloB,EAASyX,EAASpW,EAAUoE,KAIxD/F,EAAQW,UAAUmoB,gBAAkB,SAAUjK,EAAKtM,GAC/C,IAAK,GAAIlV,GAAI,EAAGA,EAAIwhB,EAAKxhB,IAAK,CAC1B,GAAI0a,GAAUnX,KAAK6mB,oBAAoBpqB,GACnCiD,EAAUM,KAAK2mB,WAAWlqB,GAC1BsE,EAAWf,KAAK0mB,YAAYjqB,EAChCuD,MAAKgoB,0BAA0BvrB,GAC/BuD,KAAK4nB,eAAeloB,EAASyX,EAASpW,EAAU4Q,KAIxDvS,EAAQW,UAAU4C,gBAAkB,WAChC,GAAI2d,GAAWtgB,KAAKkE,UAChB+Z,EAAkB,MAAXqC,CAEX,IAAIrC,EAAM,EAAG,CACT,GAA+B,KAAd,SAAXqC,GAA6B,CAC/B,GAAI3O,GAAS3R,KAAK8jB,oBAClB9jB,MAAK+nB,gBAAgB/nB,KAAK+jB,mBAAoBpS,EAAQ2O,GACtDtgB,KAAKkoB,gBAAgBjK,EAAKtM,OACvB,CACH,GAAIxM,GAAQnF,KAAK+jB,kBACjB/jB,MAAK+nB,gBAAgB/nB,KAAK8jB,qBAAsB3e,EAAOmb,GACvDtgB,KAAKioB,iBAAiBhK,EAAK9Y,GAE/BnF,KAAKqmB,WAAW,GAEpBrmB,KAAK+W,0BAGT3X,EAAQW,UAAUuU,cAAgB,WAC9B,GAAIgM,GAAWtgB,KAAKkE,SACpB,OAA+B,MAAd,SAAXoc,GACKtgB,KAAK+jB,mBACsB,KAAd,SAAXzD,GACFtgB,KAAK8jB,qBADT,QAQX1kB,EAAQ+oB,MAAQ/oB,EAAQgpB,QAAU,WAC9B9kB,EAAMiM,WAAW,gBAAiB,cAClC,IAAI7P,GAAU,GAAIN,GAAQgE,EAC1B,QACI1D,QAASA,EACT0F,QAAS+e,EACTvX,OAAQyX,IAIhB9iB,EAAK4M,kBAAkB/O,EACA,2BACAolB,GAEvBnlB,EAAQ,YAAYD,EAASgE,EAAUC,EAAqBoE,EACxDnE,GACJjE,EAAQ,UAAUD,EAASgE,EAAUC,EAAqBC,GAC1DjE,EAAQ,YAAYD,EAASoI,EAAcC,EAAcnE,GACzDjE,EAAQ,oBAAoBD,GAC5BC,EAAQ,4BAA4BD,GACpCC,EAAQ,UACJD,EAASoI,EAAcnE,EAAqBD,EAAUwE,EAAO+L,GACjEvU,EAAQA,QAAUA,EAClBA,EAAQipB,QAAU,QAClBhpB,EAAQ,YAAYD,EAASoI,EAAcC,EAAcpE,EAAqBD,EAAUE,GACxFjE,EAAQ,iBAAiBD,GACzBC,EAAQ,cAAcD,EAASqI,EAAcpE,EAAqBgI,EAAejI,EAAUE,GAC3FjE,EAAQ,eAAeD,EAASgE,EAAUE,GAC1CjE,EAAQ,mBAAmBD,EAASqI,EAAcrE,EAAUC,EAAqBgb,EAAW/a,GAC5FjE,EAAQ,gBAAgBD,GACxBC,EAAQ,kBAAkBD,EAASgE,GACnC/D,EAAQ,cAAcD,EAASoI,EAAcnE,EAAqBoE,GAClEpI,EAAQ,aAAaD,EAASgE,EAAUC,EAAqBoE,GAC7DpI,EAAQ,eAAeD,EAASoI,EAAcC,EAAcpE,EAAqBD,EAAUE,GAC3FjE,EAAQ,eAAeD,EAASoI,EAAclE,GAC9CjE,EAAQ,aAAaD,EAASoI,EAAcC,GAC5CpI,EAAQ,eAAeD,EAASgE,GAChC/D,EAAQ,aAAaD,EAASgE,GAC9B/D,EAAQ,YAAYD,GAEhBmC,EAAK+mB,iBAAiBlpB,GACtBmC,EAAK+mB,iBAAiBlpB,EAAQW,WAU9BukB,GAAW/nB,EAAG,IACd+nB,GAAWiE,EAAG,IACdjE,GAAWkE,EAAG,IACdlE,EAAU,GACVA,EAAU,cACVA,EAAUxf,QACVwf,GAAU,GACVA,EAAU,GAAIllB,GAAQgE,IACtBE,EAAMuP,UAAU5S,EAAMqB,eAAgBC,EAAKuR,eACpC1T,KAIRqpB,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,WAAW,EAAE1K,iBAAiB,EAAE2K,YAAY,EAAEC,kBAAkB,EAAEC,mBAAmB,GAAGC,YAAY,GAAG7Q,WAAW,GAAGrN,QAAQ,GAAGme,cAAc,GAAGC,YAAY,GAAGC,kBAAkB,GAAGC,SAAS,GAAGC,WAAW,GAAGC,WAAW,GAAGC,aAAa,GAAGC,eAAe,GAAGC,kBAAkB,GAAGC,iBAAiB,GAAGC,aAAa,GAAGC,YAAY,GAAGC,cAAc,GAAGC,cAAc,GAAGC,YAAY,GAAGC,2BAA2B,GAAGC,cAAc,GAAGC,cAAc,GAAGC,aAAa,GAAGlnB,SAAS,KAAKmnB,IAAI,SAAShrB,EAAQnC,EAAOJ,GAC3iB,YACAI,GAAOJ,QAAU,SAASsC,EAASgE,EAAUC,EACzCoE,EAAc4W,GAIlB,QAASiM,GAAkBlH,GACvB,OAAOA,GACP,KAAK,EAAI,QACT,MAAK,EAAI,QACT,MAAK,EAAI,MAAO,IAAImH,MAIxB,QAAS/iB,GAAasa,GAClB,GAAIpiB,GAAUM,KAAK8e,SAAW,GAAI1f,GAAQgE,EACtC0e,aAAkB1iB,IAClBM,EAAQ6E,eAAeud,EAAQ,GAEnCpiB,EAAQqF,aAAa/E,MACrBA,KAAK+hB,QAAUD,EACf9hB,KAAKkJ,QAAU,EACflJ,KAAKmiB,eAAiB,EACtBniB,KAAK6hB,MAAM/c,QAAW,GApB1B,GAAIvD,GAAOlC,EAAQ,SACLkC,GAAKqI,OAmLnB,OA9JArI,GAAK6V,SAAS5P,EAAc6W,GAE5B7W,EAAazH,UAAU/C,OAAS,WAC5B,MAAOgD,MAAKkJ,SAGhB1B,EAAazH,UAAUL,QAAU,WAC7B,MAAOM,MAAK8e,UAGhBtX,EAAazH,UAAU8hB,MAAQ,QAAShiB,GAAK4D,EAAG+mB,GAC5C,GAAI1I,GAASze,EAAoBrD,KAAK+hB,QAAS/hB,KAAK8e,SACpD,IAAIgD,YAAkB1iB,GAAS,CAC3B0iB,EAASA,EAAOld,SAChB,IAAI0b,GAAWwB,EAAO5d,SAItB,IAFAlE,KAAK+hB,QAAUD,EAEgB,KAAd,SAAXxB,GAEF,MADAtgB,MAAK8e,SAAS4G,sBACP5D,EAAO/d,MACVlE,EACAG,KAAK0D,QACLoB,OACA9E,KACAwqB,EAED,IAA+B,KAAd,SAAXlK,GAEN,MAA+B,MAAd,SAAXA,GACFtgB,KAAK0D,QAAQoe,EAAOnJ,WAEpB3Y,KAAK+I,SAJZ+Y,GAASA,EAAOhJ,SAQxB,GADAgJ,EAASvgB,EAAKkpB,QAAQ3I,GACP,OAAXA,EAAiB,CACjB,GAAI/J,GAAMtQ,EACN,oDAAsDlG,EAAK4E,YAAY2b,IAASnQ,QAEpF,YADA3R,MAAK8e,SAASsB,gBAAgBrI,GAAK,GAIvC,MAAsB,KAAlB+J,EAAO9kB,YACHwtB,KAAwB,EACxBxqB,KAAK0qB,qBAGL1qB,KAAKoiB,SAASkI,EAAkBE,SAIxCxqB,MAAK2qB,SAAS7I,IAGlBta,EAAazH,UAAU4qB,SAAW,SAAS7I,GACvC,GAAI7D,GAAMje,KAAK4qB,gBAAgB9I,EAAO9kB,OACtCgD,MAAKkJ,QAAU+U,EACfje,KAAK+hB,QAAU/hB,KAAK6qB,mBAAqB,GAAInQ,OAAMuD,GAAOje,KAAK+hB,OAI/D,KAAK,GAHD3O,GAASpT,KAAK8e,SACdgM,GAAa,EACbxK,EAAW,KACN7jB,EAAI,EAAGA,EAAIwhB,IAAOxhB,EAAG,CAC1B,GAAIkI,GAAetB,EAAoBye,EAAOrlB,GAAI2W,EAE9CzO,aAAwBvF,IACxBuF,EAAeA,EAAaC,UAC5B0b,EAAW3b,EAAaT,WAExBoc,EAAW,KAGXwK,EACiB,OAAbxK,GACA3b,EAAaoP,8BAEG,OAAbuM,EACwB,KAAd,SAAXA,IACF3b,EAAa4b,OAAOvgB,KAAMvD,GAC1BuD,KAAK+hB,QAAQtlB,GAAKkI,GAElBmmB,EADkC,KAAd,SAAXxK,GACItgB,KAAKggB,kBAAkBrb,EAAamU,SAAUrc,GACzB,KAAd,SAAX6jB,GACItgB,KAAKkgB,iBAAiBvb,EAAagU,UAAWlc,GAE9CuD,KAAK2f,kBAAkBljB,GAGxCquB,EAAa9qB,KAAKggB,kBAAkBrb,EAAclI,GAGrDquB,GAAY1X,EAAOsS,uBAG5Ble,EAAazH,UAAUyf,YAAc,WACjC,MAAwB,QAAjBxf,KAAK+hB,SAGhBva,EAAazH,UAAUqiB,SAAW,SAAUjd,GACxCnF,KAAK+hB,QAAU,KACf/hB,KAAK8e,SAASY,SAASva,IAG3BqC,EAAazH,UAAUgJ,QAAU,YACzB/I,KAAKwf,eAAkBxf,KAAK8e,SAAS5W,mBACzClI,KAAK+hB,QAAU,KACf/hB,KAAK8e,SAAS/V,YAGlBvB,EAAazH,UAAU2D,QAAU,SAAUiO,GACvC3R,KAAK+hB,QAAU,KACf/hB,KAAK8e,SAASsB,gBAAgBzO,GAAQ,IAG1CnK,EAAazH,UAAUigB,kBAAoB,SAAU7a,EAAOuB,GACxD1G,KAAK+hB,QAAQrb,GAASvB,CACtB,IAAI+c,KAAkBliB,KAAKmiB,cAC3B,OAAID,IAAiBliB,KAAKkJ,UACtBlJ,KAAKoiB,SAASpiB,KAAK+hB,UACZ,IAKfva,EAAazH,UAAU4f,kBAAoB,WAEvC,MADA3f,MAAK+I,WACE,GAGXvB,EAAazH,UAAUmgB,iBAAmB,SAAUvO,GAGhD,MAFA3R,MAAKmiB,iBACLniB,KAAK0D,QAAQiO,IACN,GAGXnK,EAAazH,UAAU+J,iBAAmB,WACtC,IAAI9J,KAAKwf,cAAT,CACA,GAAIsC,GAAS9hB,KAAK+hB,OAElB,IADA/hB,KAAK+I,UACD+Y,YAAkB1iB,GAClB0iB,EAAOha,aAEP,KAAK,GAAIrL,GAAI,EAAGA,EAAIqlB,EAAO9kB,SAAUP,EAC7BqlB,EAAOrlB,YAAc2C,IACrB0iB,EAAOrlB,GAAGqL,WAM1BN,EAAazH,UAAU8qB,iBAAmB,WACtC,OAAO,GAGXrjB,EAAazH,UAAU6qB,gBAAkB,SAAU3M,GAC/C,MAAOA,IAGJzW,KAGJtE,SAAS,KAAK6nB,IAAI,SAAS1rB,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QAAU,SAASsC,EAASgE,GA2BnC,QAAS4nB,GAAYlgB,GACjB,OAAQmgB,EAAmBhc,KAAKnE,GAGpC,QAASogB,GAAcpqB,GACnB,IACI,MAAOA,GAAGqqB,qBAAsB,EAEpC,MAAOnvB,GACH,OAAO,GAIf,QAASovB,GAAepmB,EAAK8F,EAAKugB,GAC9B,GAAIjI,GAAM7hB,EAAK+pB,yBAAyBtmB,EAAK8F,EAAMugB,EACXE,EACxC,SAAOnI,GAAM8H,EAAc9H,GAE/B,QAASoI,GAAWhsB,EAAK6rB,EAAQI,GAC7B,IAAK,GAAIhvB,GAAI,EAAGA,EAAI+C,EAAIxC,OAAQP,GAAK,EAAG,CACpC,GAAIqO,GAAMtL,EAAI/C,EACd,IAAIgvB,EAAaxc,KAAKnE,GAElB,IAAK,GADD4gB,GAAwB5gB,EAAImG,QAAQwa,EAAc,IAC7C5gB,EAAI,EAAGA,EAAIrL,EAAIxC,OAAQ6N,GAAK,EACjC,GAAIrL,EAAIqL,KAAO6gB,EACX,KAAM,IAAIrlB,GAAU,qGACf4K,QAAQ,KAAMoa,KAOvC,QAASM,GAAqB3mB,EAAKqmB,EAAQI,EAAc7O,GAGrD,IAAK,GAFDjS,GAAOpJ,EAAKqqB,kBAAkB5mB,GAC9BxF,KACK/C,EAAI,EAAGA,EAAIkO,EAAK3N,SAAUP,EAAG,CAClC,GAAIqO,GAAMH,EAAKlO,GACX0I,EAAQH,EAAI8F,GACZ+gB,EAAsBjP,IAAWkP,GACxBA,EAAchhB,EAAK3F,EAAOH,EAClB,mBAAVG,IACN+lB,EAAc/lB,IACdimB,EAAepmB,EAAK8F,EAAKugB,KAC1BzO,EAAO9R,EAAK3F,EAAOH,EAAK6mB,IACxBrsB,EAAIyB,KAAK6J,EAAK3F,GAItB,MADAqmB,GAAWhsB,EAAK6rB,EAAQI,GACjBjsB,EAkIX,QAASusB,GAA2B9J,EAAUlhB,EAAU0C,EAAG3C,EAAIkrB,EAAIjJ,GAM/D,QAASkJ,KACL,GAAIhN,GAAYle,CACZA,KAAamrB,IAAMjN,EAAYjf,KACnC,IAAIN,GAAU,GAAIN,GAAQgE,EAC1B1D,GAAQuV,oBACR,IAAI5K,GAAuB,gBAAX6L,IAAuBlW,OAASmsB,EAC1CnsB,KAAKkW,GAAU+L,EACjBnhB,EAAKgiB,EAAmBpjB,EAASqjB,EACrC,KACI1Y,EAAG9D,MAAM0Y,EAAWmN,EAAa9pB,UAAWxB,IAC9C,MAAM9E,GACJ0D,EAAQ0gB,gBAAgB6C,EAAiBjnB,IAAI,GAAM,GAGvD,MADK0D,GAAQ+lB,iBAAiB/lB,EAAQgmB,sBAC/BhmB,EAnBX,GAAIysB,GAAc,WAAa,MAAOnsB,SAClCkW,EAAS+L,CAqBb,OApBsB,gBAAX/L,KACP+L,EAAWnhB,GAkBfS,EAAK4M,kBAAkB8d,EAAa,qBAAqB,GAClDA,EAOX,QAASI,GAAarnB,EAAKqmB,EAAQzO,EAAQ0P,EAAavJ,GAKpD,IAAK,GAJD0I,GAAe,GAAIc,QAAOC,EAAiBnB,GAAU,KACrD5Q,EACAkR,EAAqB3mB,EAAKqmB,EAAQI,EAAc7O,GAE3CngB,EAAI,EAAGwhB,EAAMxD,EAAQzd,OAAQP,EAAIwhB,EAAKxhB,GAAI,EAAG,CAClD,GAAIqO,GAAM2P,EAAQhe,GACdqE,EAAK2Z,EAAQhe,EAAE,GACfgwB,EAAiB3hB,EAAMugB,CAC3B,IAAIiB,IAAgBI,EAChB1nB,EAAIynB,GACAC,EAAoB5hB,EAAKohB,EAAMphB,EAAKhK,EAAIuqB,EAAQtI,OACjD,CACH,GAAIkJ,GAAcK,EAAYxrB,EAAI,WAC9B,MAAO4rB,GAAoB5hB,EAAKohB,EAAMphB,EACXhK,EAAIuqB,EAAQtI,IAE3CxhB,GAAK4M,kBAAkB8d,EAAa,qBAAqB,GACzDjnB,EAAIynB,GAAkBR,GAI9B,MADA1qB,GAAK+mB,iBAAiBtjB,GACfA,EAGX,QAAS2nB,GAAU1K,EAAUlhB,EAAUgiB,GACnC,MAAO2J,GAAoBzK,EAAUlhB,EAAU+D,OACnBmd,EAAU,KAAMc,GAtQhD,GAkFI6J,GAlFAV,KACA3qB,EAAOlC,EAAQ,UACfyjB,EAAqBzjB,EAAQ,cAC7B+sB,EAAe7qB,EAAK6qB,aACpBnJ,EAAmB1hB,EAAK0hB,iBACxBnc,EAAcvF,EAAKuF,YACnBT,EAAYhH,EAAQ,YAAYgH,UAChCwmB,EAAgB,QAChBtB,GAAsBJ,mBAAmB,GACzC2B,GACA,QAAY,SACZ,OACA,YACA,SACA,SACA,YACA,qBAEA7B,EAAqB,GAAIsB,QAAO,OAASO,EAAY1e,KAAK,KAAO,MAEjE0d,EAAgB,SAAStf,GACzB,MAAOjL,GAAKwF,aAAayF,IACF,MAAnBA,EAAKuE,OAAO,IACH,gBAATvE,GAuDJggB,EAAmB,SAAS1a,GAC5B,MAAOA,GAAIb,QAAQ,QAAS,QAwJ5Byb,EAAsB5lB,EACpB8lB,EACAb,CAgCN3sB,GAAQutB,UAAY,SAAU7rB,EAAI+b,GAC9B,GAAkB,kBAAP/b,GACP,KAAM,IAAIuF,GAAU,gCAAkC9E,EAAK4E,YAAYrF,GAE3E,IAAIoqB,EAAcpqB,GACd,MAAOA,EAEX+b,GAAUjX,OAAOiX,EACjB,IAAI9b,GAA+B+D,SAApB+X,EAAQjZ,QAAwBsoB,EAAOrP,EAAQjZ,QAC1Dmf,IAAclG,EAAQkG,UACtBvjB,EAAMmtB,EAAU7rB,EAAIC,EAAUgiB,EAElC,OADAxhB,GAAKwrB,gBAAgBjsB,EAAItB,EAAKwrB,GACvBxrB,GAGXJ,EAAQitB,aAAe,SAAUjoB,EAAQyY,GACrC,GAAsB,kBAAXzY,IAA2C,gBAAXA,GACvC,KAAM,IAAIiC,GAAU,+FAExBwW,GAAUjX,OAAOiX,EACjB,IAAIkG,KAAclG,EAAQkG,UACtBsI,EAASxO,EAAQwO,MACC,iBAAXA,KAAqBA,EAASwB,EACzC,IAAIjQ,GAASC,EAAQD,MACC,mBAAXA,KAAuBA,EAASkP,EAC3C,IAAIQ,GAAczP,EAAQyP,WAG1B,IAF2B,kBAAhBA,KAA4BA,EAAcI,IAEhDnrB,EAAKwF,aAAaskB,GACnB,KAAM,IAAI7Q,YAAW,sEAIzB,KAAK,GADD7P,GAAOpJ,EAAKqqB,kBAAkBxnB,GACzB3H,EAAI,EAAGA,EAAIkO,EAAK3N,SAAUP,EAAG,CAClC,GAAI0I,GAAQf,EAAOuG,EAAKlO,GACR,iBAAZkO,EAAKlO,IACL8E,EAAKyrB,QAAQ7nB,KACbknB,EAAalnB,EAAMpF,UAAWsrB,EAAQzO,EAAQ0P,EAC1CvJ,GACJsJ,EAAalnB,EAAOkmB,EAAQzO,EAAQ0P,EAAavJ,IAIzD,MAAOsJ,GAAajoB,EAAQinB,EAAQzO,EAAQ0P,EAAavJ,OAK1D3K,WAAW,GAAGoR,aAAa,GAAGtmB,SAAS,KAAK+pB,IAAI,SAAS5tB,EAAQnC,EAAOJ,GAC3E,YACAI,GAAOJ,QAAU,SACbsC,EAASoI,EAAcnE,EAAqBoE,GAqChD,QAASylB,GAAuBloB,GAC5B,GACImoB,GADAC,GAAQ,CAEZ,IAAetoB,SAAXuoB,GAAwBroB,YAAeqoB,GACvCF,EAAUG,EAAatoB,GACvBooB,GAAQ,MACL,CACH,GAAIziB,GAAOuP,EAAIvP,KAAK3F,GAChBiZ,EAAMtT,EAAK3N,MACfmwB,GAAU,GAAIzS,OAAY,EAANuD,EACpB,KAAK,GAAIxhB,GAAI,EAAGA,EAAIwhB,IAAOxhB,EAAG,CAC1B,GAAIqO,GAAMH,EAAKlO,EACf0wB,GAAQ1wB,GAAKuI,EAAI8F,GACjBqiB,EAAQ1wB,EAAIwhB,GAAOnT,GAG3B9K,KAAKmhB,aAAagM,GAClBntB,KAAKutB,OAASH,EACdptB,KAAK4hB,OAAO9c,OAAWsoB,GAAQ,GAAK,GAkCxC,QAASI,GAAMjuB,GACX,GAAIC,GACAiuB,EAAYpqB,EAAoB9D,EAEpC,OAAKmL,GAAS+iB,IAGVjuB,EADOiuB,YAAqBruB,GACtBquB,EAAU1pB,MACZ3E,EAAQouB,MAAO1oB,OAAWA,OAAWA,OAAWA,QAE9C,GAAIooB,GAAuBO,GAAW/tB,UAG5C+tB,YAAqBruB,IACrBI,EAAI+E,eAAekpB,EAAW,GAE3BjuB,GAXIiI,EAAa,6EA7F5B,GAGI4lB,GAHA9rB,EAAOlC,EAAQ,UACfqL,EAAWnJ,EAAKmJ,SAChBwP,EAAM7a,EAAQ,QAEC,mBAARkrB,OAAoB8C,EAAS9C,IAExC,IAAI+C,GAAe,WAIf,QAASI,GAAavoB,EAAO2F,GACzB9K,KAAK0G,GAASvB,EACdnF,KAAK0G,EAAQinB,GAAQ7iB,EACrBpE,IANJ,GAAIA,GAAQ,EACRinB,EAAO,CAQX,OAAO,UAAsBhR,GACzBgR,EAAOhR,EAAIgR,KACXjnB,EAAQ,CACR,IAAIlH,GAAM,GAAIkb,OAAiB,EAAXiC,EAAIgR,KAExB,OADAhR,GAAIiR,QAAQF,EAAcluB,GACnBA,MAIXquB,EAAe,SAASV,GAGxB,IAAK,GAFD3tB,GAAM,GAAI6tB,GACVrwB,EAASmwB,EAAQnwB,OAAS,EAAI,EACzBP,EAAI,EAAGA,EAAIO,IAAUP,EAAG,CAC7B,GAAIqO,GAAMqiB,EAAQnwB,EAASP,GACvB0I,EAAQgoB,EAAQ1wB,EACpB+C,GAAIsc,IAAIhR,EAAK3F,GAEjB,MAAO3F,GAuBX+B,GAAK6V,SAAS8V,EAAwB1lB,GAEtC0lB,EAAuBntB,UAAU8hB,MAAQ,aAEzCqL,EAAuBntB,UAAUigB,kBAAoB,SAAU7a,EAAOuB,GAClE1G,KAAK+hB,QAAQrb,GAASvB,CACtB,IAAI+c,KAAkBliB,KAAKmiB,cAC3B,IAAID,GAAiBliB,KAAKkJ,QAAS,CAC/B,GAAIka,EACJ,IAAIpjB,KAAKutB,OACLnK,EAAMyK,EAAa7tB,KAAK+hB,aACrB,CACHqB,IAEA,KAAK,GADD0K,GAAY9tB,KAAKhD,SACZP,EAAI,EAAGwhB,EAAMje,KAAKhD,SAAUP,EAAIwhB,IAAOxhB,EAC5C2mB,EAAIpjB,KAAK+hB,QAAQtlB,EAAIqxB,IAAc9tB,KAAK+hB,QAAQtlB,GAIxD,MADAuD,MAAKoiB,SAASgB,IACP,EAEX,OAAO,GAGX8J,EAAuBntB,UAAU8qB,iBAAmB,WAChD,OAAO,GAGXqC,EAAuBntB,UAAU6qB,gBAAkB,SAAU3M,GACzD,MAAOA,IAAO,GAsBlB7e,EAAQW,UAAUytB,MAAQ,WACtB,MAAOA,GAAMxtB,OAGjBZ,EAAQouB,MAAQ,SAAUjuB,GACtB,MAAOiuB,GAAMjuB,OAIdwL,QAAQ,GAAG7H,SAAS,KAAK6qB,IAAI,SAAS1uB,EAAQnC,EAAOJ,GACxD,YACA,SAASkxB,GAAUC,EAAKC,EAAUC,EAAKC,EAAUnQ,GAC7C,IAAK,GAAIpT,GAAI,EAAGA,EAAIoT,IAAOpT,EACvBsjB,EAAItjB,EAAIujB,GAAYH,EAAIpjB,EAAIqjB,GAC5BD,EAAIpjB,EAAIqjB,GAAY,OAI5B,QAAS7tB,GAAMguB,GACXruB,KAAKsuB,UAAYD,EACjBruB,KAAKkJ,QAAU,EACflJ,KAAKuuB,OAAS,EAGlBluB,EAAMN,UAAUyuB,oBAAsB,SAAUb,GAC5C,MAAO3tB,MAAKsuB,UAAYX,GAG5BttB,EAAMN,UAAUsB,SAAW,SAAUL,GACjC,GAAIhE,GAASgD,KAAKhD,QAClBgD,MAAKyuB,eAAezxB,EAAS,EAC7B,IAAIP,GAAKuD,KAAKuuB,OAASvxB,EAAWgD,KAAKsuB,UAAY,CACnDtuB,MAAKvD,GAAKuE,EACVhB,KAAKkJ,QAAUlM,EAAS,GAG5BqD,EAAMN,UAAUkB,KAAO,SAAUH,EAAIC,EAAUC,GAC3C,GAAIhE,GAASgD,KAAKhD,SAAW,CAC7B,IAAIgD,KAAKwuB,oBAAoBxxB,GAIzB,MAHAgD,MAAKqB,SAASP,GACdd,KAAKqB,SAASN,OACdf,MAAKqB,SAASL,EAGlB,IAAI6J,GAAI7K,KAAKuuB,OAASvxB,EAAS,CAC/BgD,MAAKyuB,eAAezxB,EACpB,IAAI0xB,GAAW1uB,KAAKsuB,UAAY,CAChCtuB,MAAM6K,EAAI,EAAK6jB,GAAY5tB,EAC3Bd,KAAM6K,EAAI,EAAK6jB,GAAY3tB,EAC3Bf,KAAM6K,EAAI,EAAK6jB,GAAY1tB,EAC3BhB,KAAKkJ,QAAUlM,GAGnBqD,EAAMN,UAAU+C,MAAQ,WACpB,GAAI6rB,GAAQ3uB,KAAKuuB,OACb/uB,EAAMQ,KAAK2uB,EAKf,OAHA3uB,MAAK2uB,GAAS7pB,OACd9E,KAAKuuB,OAAUI,EAAQ,EAAM3uB,KAAKsuB,UAAY,EAC9CtuB,KAAKkJ,UACE1J,GAGXa,EAAMN,UAAU/C,OAAS,WACrB,MAAOgD,MAAKkJ,SAGhB7I,EAAMN,UAAU0uB,eAAiB,SAAUd,GACnC3tB,KAAKsuB,UAAYX,GACjB3tB,KAAK4uB,UAAU5uB,KAAKsuB,WAAa,IAIzCjuB,EAAMN,UAAU6uB,UAAY,SAAUP,GAClC,GAAIQ,GAAc7uB,KAAKsuB,SACvBtuB,MAAKsuB,UAAYD,CACjB,IAAIM,GAAQ3uB,KAAKuuB,OACbvxB,EAASgD,KAAKkJ,QACd4lB,EAAkBH,EAAQ3xB,EAAW6xB,EAAc,CACvDb,GAAUhuB,KAAM,EAAGA,KAAM6uB,EAAaC,IAG1C5xB,EAAOJ,QAAUuD,OAEX0uB,IAAI,SAAS1vB,EAAQnC,EAAOJ,GAClC,YACAI,GAAOJ,QAAU,SACbsC,EAASgE,EAAUC,EAAqBoE,GAS5C,QAASunB,GAAKzvB,EAAUgJ,GACpB,GAAI5D,GAAetB,EAAoB9D,EAEvC,IAAIoF,YAAwBvF,GACxB,MAAO6vB,GAAUtqB,EAGjB,IADApF,EAAWgC,EAAKkpB,QAAQlrB,GACP,OAAbA,EACA,MAAOkI,GAAa,oDAAsDlG,EAAK4E,YAAY5G,GAGnG,IAAIC,GAAM,GAAIJ,GAAQgE,EACP0B,UAAXyD,GACA/I,EAAI+E,eAAegE,EAAQ,EAI/B,KAAK,GAFDye,GAAUxnB,EAAIkgB,SACd9S,EAASpN,EAAIkE,QACRjH,EAAI,EAAGwhB,EAAM1e,EAASvC,OAAQP,EAAIwhB,IAAOxhB,EAAG,CACjD,GAAI2mB,GAAM7jB,EAAS9C,IAEPqI,SAARse,GAAuB3mB,IAAK8C,KAIhCH,EAAQumB,KAAKvC,GAAKrf,MAAMijB,EAASpa,EAAQ9H,OAAWtF,EAAK,MAE7D,MAAOA,GAlCX,GAAI+B,GAAOlC,EAAQ,UAEf4vB,EAAY,SAAUvvB,GACtB,MAAOA,GAAQke,KAAK,SAASsR,GACzB,MAAOF,GAAKE,EAAOxvB,KAiC3BN,GAAQ4vB,KAAO,SAAUzvB,GACrB,MAAOyvB,GAAKzvB,EAAUuF,SAG1B1F,EAAQW,UAAUivB,KAAO,WACrB,MAAOA,GAAKhvB,KAAM8E,YAKnB5B,SAAS,KAAKisB,IAAI,SAAS9vB,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QAAU,SAASsC,EACAoI,EACAC,EACApE,EACAD,EACAE,GAK1B,QAAS8rB,GAAsB7vB,EAAUuB,EAAIuuB,EAAcC,GACvDtvB,KAAKmhB,aAAa5hB,EAClB,IAAIqV,GAASjB,GACb3T,MAAKuvB,IAAiB,OAAX3a,EAAkB9T,EAAKS,EAAKsT,WAAWD,EAAQ9T,GACrCgE,SAAjBuqB,IACAA,EAAejwB,EAAQgG,QAAQiqB,GAC/BA,EAAaviB,4BAA4B9M,OAE7CA,KAAKwvB,cAAgBH,EACrBrvB,KAAKyvB,oBAAsB,KACxBH,IAAUlsB,EACTpD,KAAK0vB,YAAchV,MAAM1a,KAAKkJ,SACb,IAAVomB,EACPtvB,KAAK0vB,YAAc,KAEnB1vB,KAAK0vB,YAAc5qB,OAEvB9E,KAAK8e,SAAS7J,qBACdjV,KAAK4hB,OAAO9c,QAAW,GA0F3B,QAAS6qB,GAAUC,EAAeV,GAC1BlvB,KAAKwN,cACL0hB,EAAM9M,SAASwN,GAEfV,EAAMxrB,QAAQksB,GAItB,QAASxW,GAAO7Z,EAAUuB,EAAIuuB,EAAcC,GACxC,GAAkB,kBAAPxuB,GACP,MAAO2G,GAAa,gCAAkClG,EAAK4E,YAAYrF,GAE3E,IAAIouB,GAAQ,GAAIE,GAAsB7vB,EAAUuB,EAAIuuB,EAAcC,EAClE,OAAOJ,GAAMxvB,UAGjB,QAASmwB,GAASC,GACd9vB,KAAK8vB,MAAQA,EACb9vB,KAAKkvB,MAAMa,UAAUD,EACrB,IAAI3qB,GAAQ9B,EAAoBrD,KAAKmF,MAAOnF,KAAKkvB,MAAMpQ,SACvD,OAAI3Z,aAAiB/F,IACjBY,KAAKkvB,MAAMO,oBAAsBtqB,EAC1BA,EAAMpB,MAAMisB,EAAUlrB,OAAWA,OAAW9E,KAAM8E,SAElDkrB,EAASjzB,KAAKiD,KAAMmF,GAInC,QAAS6qB,GAAS7qB,GACd,GAAI+pB,GAAQlvB,KAAKkvB,MACbxvB,EAAUwvB,EAAMpQ,SAChBhe,EAAK4G,EAASwnB,EAAMK,IACxB7vB,GAAQgM,cACR,IAAIlM,EAEAA,GADsBsF,SAAtBoqB,EAAMQ,YACA5uB,EAAG/D,KAAK2C,EAAQ+E,cAAeU,EAAOnF,KAAK0G,MAAO1G,KAAKhD,QAEvD8D,EAAG/D,KAAK2C,EAAQ+E,cACAzE,KAAK8vB,MAAO3qB,EAAOnF,KAAK0G,MAAO1G,KAAKhD,QAE1DwC,YAAeJ,KACf8vB,EAAMO,oBAAsBjwB,EAEhC,IAAI+O,GAAiB7O,EAAQiM,aAO7B,OANArI,GAAM+K,sBACF7O,EACA+O,EACsBzJ,SAAtBoqB,EAAMQ,YAA4B,eAAiB,iBACnDhwB,GAEGF,EAlKX,GAAImU,GAAYvU,EAAQwU,WACpBrS,EAAOlC,EAAQ,UACfqI,EAAWnG,EAAKmG,QAsBpBnG,GAAK6V,SAASgY,EAAuB5nB,GAErC4nB,EAAsBrvB,UAAUgwB,UAAY,SAASD,GACxBhrB,SAArB9E,KAAK0vB,aACgB,OAArB1vB,KAAK0vB,aACLI,IAAU1sB,GACVpD,KAAK0vB,YAAYzuB,KAAK6uB,IAI9BV,EAAsBrvB,UAAUkwB,cAAgB,SAAS9qB,GAIrD,MAHyB,QAArBnF,KAAK0vB,aACL1vB,KAAK0vB,YAAYzuB,KAAKkE,GAEnBnF,KAAK0vB,aAGhBN,EAAsBrvB,UAAU8hB,MAAQ,aAExCuN,EAAsBrvB,UAAU2qB,mBAAqB,WACjD1qB,KAAKoiB,SAA8Btd,SAArB9E,KAAK0vB,YAA4B1vB,KAAK0vB,YACL1vB,KAAKwvB,gBAGxDJ,EAAsBrvB,UAAU8qB,iBAAmB,WAC/C,OAAO,GAGXuE,EAAsBrvB,UAAUqiB,SAAW,SAASjd,GAChDnF,KAAK8e,SAAS3a,iBAAiBgB,GAC/BnF,KAAK+hB,QAAU,MAGnBqN,EAAsBrvB,UAAU+J,iBAAmB,SAASomB,GACxD,MAAIA,KAAWlwB,KAAKwvB,cAAsBxvB,KAAK+I,eAC3C/I,KAAKwf,gBACTxf,KAAKmwB,oBACDnwB,KAAKyvB,8BAA+BrwB,IACpCY,KAAKyvB,oBAAoB3nB,SAEzB9H,KAAKwvB,wBAAyBpwB,IAC9BY,KAAKwvB,cAAc1nB,YAI3BsnB,EAAsBrvB,UAAU4qB,SAAW,SAAU7I,GACjD9hB,KAAK+hB,QAAUD,CACf,IAAI3c,GACA1I,EACAO,EAAS8kB,EAAO9kB,MAWpB,IAV2B8H,SAAvB9E,KAAKwvB,eACLrqB,EAAQnF,KAAKwvB,cACb/yB,EAAI,IAEJ0I,EAAQ/F,EAAQgG,QAAQ0c,EAAO,IAC/BrlB,EAAI,GAGRuD,KAAKyvB,oBAAsBtqB,GAEtBA,EAAMsY,aACP,KAAOhhB,EAAIO,IAAUP,EAAG,CACpB,GAAI4P,IACAyjB,MAAO,KACP3qB,MAAO2c,EAAOrlB,GACdiK,MAAOjK,EACPO,OAAQA,EACRkyB,MAAOlvB,KAEXmF,GAAQA,EAAMpB,MAAM8rB,EAAU/qB,OAAWA,OAAWuH,EAAKvH,QAIxCA,SAArB9E,KAAK0vB,cACLvqB,EAAQA,EACHpB,MAAM/D,KAAKiwB,cAAenrB,OAAWA,OAAW9E,KAAM8E,SAE/DK,EAAMpB,MAAM4rB,EAAWA,EAAW7qB,OAAWK,EAAOnF,OAGxDZ,EAAQW,UAAUqZ,OAAS,SAAUtY,EAAIuuB,GACrC,MAAOjW,GAAOpZ,KAAMc,EAAIuuB,EAAc,OAG1CjwB,EAAQga,OAAS,SAAU7Z,EAAUuB,EAAIuuB,EAAcC,GACnD,MAAOlW,GAAO7Z,EAAUuB,EAAIuuB,EAAcC,OAyD3CpsB,SAAS,KAAKktB,IAAI,SAAS/wB,EAAQnC,EAAOJ,GAC7C,YACA,IACI8D,GADAW,EAAOlC,EAAQ,UAEfgxB,EAAmB;AACnB,KAAM,IAAI1zB,OAAM,mEAEhB2zB,EAAgB/uB,EAAKgvB,kBACzB,IAAIhvB,EAAKS,QAAsC,mBAArBwuB,kBAAkC,CACxD,GAAIC,GAAqB1xB,EAAO2xB,aAC5BC,EAAkB7xB,EAAQ8xB,QAC9BhwB,GAAWW,EAAKsvB,aACF,SAAS/vB,GAAM2vB,EAAmB1zB,KAAKgC,EAAQ+B,IAC/C,SAASA,GAAM6vB,EAAgB5zB,KAAK+B,EAASgC,QACxD,IAA6B,kBAAlBwvB,IAC0B,kBAA1BA,GAAclrB,QAAwB,CACpD,GAAI0rB,GAAgBR,EAAclrB,SAClCxE,GAAW,SAASE,GAChBgwB,EAAclT,KAAK9c,QAiCvBF,GA/BoC,mBAArB4vB,mBACW,mBAAXtxB,SACPA,OAAO6xB,YACN7xB,OAAO6xB,UAAUC,YAAc9xB,OAAO+xB,SA2BhB,mBAAjBP,cACH,SAAU5vB,GACjB4vB,aAAa5vB,IAEY,mBAAfyB,YACH,SAAUzB,GACjByB,WAAWzB,EAAI,IAGRuvB,EAnCA,WACP,GAAIa,GAAMrb,SAASsb,cAAc,OAC7Bta,GAAQua,YAAY,GACpBC,GAAkB,EAClBC,EAAOzb,SAASsb,cAAc,OAC9BI,EAAK,GAAIf,kBAAiB,WAC1BU,EAAIM,UAAUC,OAAO,OACrBJ,GAAkB,GAEtBE,GAAGG,QAAQJ,EAAMza,EAEjB,IAAI8a,GAAiB,WACbN,IACJA,GAAkB,EAClBC,EAAKE,UAAUC,OAAO,QAG1B,OAAO,UAAkB3wB,GACrB,GAAIzE,GAAI,GAAIm0B,kBAAiB,WACzBn0B,EAAEu1B,aACF9wB,KAEJzE,GAAEq1B,QAAQR,EAAKra,GACf8a,OAcZz0B,GAAOJ,QAAU8D,IAEdsC,SAAS,KAAK2uB,IAAI,SAASxyB,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QACH,SAASsC,EAASoI,EAAclE,GAIpC,QAASwuB,GAAoBhQ,GACzB9hB,KAAKmhB,aAAaW,GAJtB,GAAI4C,GAAoBtlB,EAAQslB,kBAC5BnjB,EAAOlC,EAAQ,SAKnBkC,GAAK6V,SAAS0a,EAAqBtqB,GAEnCsqB,EAAoB/xB,UAAUgyB,iBAAmB,SAAUrrB,EAAOsrB,GAC9DhyB,KAAK+hB,QAAQrb,GAASsrB,CACtB,IAAI9P,KAAkBliB,KAAKmiB,cAC3B,OAAID,IAAiBliB,KAAKkJ,UACtBlJ,KAAKoiB,SAASpiB,KAAK+hB,UACZ,IAKf+P,EAAoB/xB,UAAUigB,kBAAoB,SAAU7a,EAAOuB,GAC/D,GAAIlH,GAAM,GAAIklB,EAGd,OAFAllB,GAAI0E,UAAY,SAChB1E,EAAIyyB,mBAAqB9sB,EAClBnF,KAAK+xB,iBAAiBrrB,EAAOlH,IAExCsyB,EAAoB/xB,UAAUmgB,iBAAmB,SAAUvO,EAAQjL,GAC/D,GAAIlH,GAAM,GAAIklB,EAGd,OAFAllB,GAAI0E,UAAY,SAChB1E,EAAIyyB,mBAAqBtgB,EAClB3R,KAAK+xB,iBAAiBrrB,EAAOlH,IAGxCJ,EAAQ8yB,OAAS,SAAU3yB,GAEvB,MADA+D,GAAMiM,WAAW,YAAa,cACvB,GAAIuiB,GAAoBvyB,GAAUG,WAG7CN,EAAQW,UAAUmyB,OAAS,WACvB,MAAO9yB,GAAQ8yB,OAAOlyB,UAIvBkD,SAAS,KAAKivB,IAAI,SAAS9yB,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QACP,SAASsC,EAASoI,EAAcC,GAQhC,QAAShI,GAAiBqiB,GACtB9hB,KAAKmhB,aAAaW,GAClB9hB,KAAKoyB,SAAW,EAChBpyB,KAAKqyB,SAAU,EACfryB,KAAKsyB,cAAe,EAiHxB,QAASC,GAAKhzB,EAAUizB,GACpB,IAAe,EAAVA,KAAiBA,GAAWA,EAAU,EACvC,MAAO/qB,GAAa,iEAExB,IAAIjI,GAAM,GAAIC,GAAiBF,GAC3BG,EAAUF,EAAIE,SAGlB,OAFAF,GAAIG,WAAW6yB,GACfhzB,EAAIK,OACGH,EApIX,GAAI6B,GAAOlC,EAAQ,UACfmb,EAAanb,EAAQ,YAAYmb,WACjCD,EAAiBlb,EAAQ,YAAYkb,eACrC3Q,EAAUrI,EAAKqI,QACf6oB,IASJlxB,GAAK6V,SAAS3X,EAAkB+H,GAEhC/H,EAAiBM,UAAU8hB,MAAQ,WAC/B,GAAK7hB,KAAKsyB,aAAV,CAGA,GAAsB,IAAlBtyB,KAAKoyB,SAEL,WADApyB,MAAKoiB,YAGTpiB,MAAK4hB,OAAO9c,QAAW,EACvB,IAAI4tB,GAAkB9oB,EAAQ5J,KAAK+hB,UAC9B/hB,KAAKwf,eACNkT,GACA1yB,KAAKoyB,SAAWpyB,KAAK2yB,uBACrB3yB,KAAK0D,QAAQ1D,KAAK4yB,eAAe5yB,KAAKhD,aAI9CyC,EAAiBM,UAAUF,KAAO,WAC9BG,KAAKsyB,cAAe,EACpBtyB,KAAK6hB,SAGTpiB,EAAiBM,UAAUH,UAAY,WACnCI,KAAKqyB,SAAU,GAGnB5yB,EAAiBM,UAAUyyB,QAAU,WACjC,MAAOxyB,MAAKoyB,UAGhB3yB,EAAiBM,UAAUJ,WAAa,SAAUkzB,GAC9C7yB,KAAKoyB,SAAWS,GAGpBpzB,EAAiBM,UAAUigB,kBAAoB,SAAU7a,GAErD,MADAnF,MAAK8yB,cAAc3tB,GACfnF,KAAK+yB,eAAiB/yB,KAAKwyB,YAC3BxyB,KAAK+hB,QAAQ/kB,OAASgD,KAAKwyB,UACJ,IAAnBxyB,KAAKwyB,WAAmBxyB,KAAKqyB,QAC7BryB,KAAKoiB,SAASpiB,KAAK+hB,QAAQ,IAE3B/hB,KAAKoiB,SAASpiB,KAAK+hB,UAEhB,IAKftiB,EAAiBM,UAAUmgB,iBAAmB,SAAUvO,GAEpD,MADA3R,MAAKgzB,aAAarhB,GACX3R,KAAKizB,iBAGhBxzB,EAAiBM,UAAU4f,kBAAoB,WAC3C,MAAI3f,MAAK+hB,kBAAmB3iB,IAA2B,MAAhBY,KAAK+hB,QACjC/hB,KAAK+I,WAEhB/I,KAAKgzB,aAAaP,GACXzyB,KAAKizB,kBAGhBxzB,EAAiBM,UAAUkzB,cAAgB,WACvC,GAAIjzB,KAAKwyB,UAAYxyB,KAAK2yB,sBAAuB,CAE7C,IAAK,GADD32B,GAAI,GAAIue,GACH9d,EAAIuD,KAAKhD,SAAUP,EAAIuD,KAAK+hB,QAAQ/kB,SAAUP,EAC/CuD,KAAK+hB,QAAQtlB,KAAOg2B,GACpBz2B,EAAEiF,KAAKjB,KAAK+hB,QAAQtlB,GAQ5B,OALIT,GAAEgB,OAAS,EACXgD,KAAK0D,QAAQ1H,GAEbgE,KAAK+I,WAEF,EAEX,OAAO,GAGXtJ,EAAiBM,UAAUgzB,WAAa,WACpC,MAAO/yB,MAAKmiB,gBAGhB1iB,EAAiBM,UAAUmzB,UAAY,WACnC,MAAOlzB,MAAK+hB,QAAQ/kB,OAASgD,KAAKhD,UAGtCyC,EAAiBM,UAAUizB,aAAe,SAAUrhB,GAChD3R,KAAK+hB,QAAQ9gB,KAAK0Q,IAGtBlS,EAAiBM,UAAU+yB,cAAgB,SAAU3tB,GACjDnF,KAAK+hB,QAAQ/hB,KAAKmiB,kBAAoBhd,GAG1C1F,EAAiBM,UAAU4yB,oBAAsB,WAC7C,MAAO3yB,MAAKhD,SAAWgD,KAAKkzB,aAGhCzzB,EAAiBM,UAAU6yB,eAAiB,SAAUC,GAClD,GAAI3sB,GAAU,qCACNlG,KAAKoyB,SAAW,4BAA8BS,EAAQ,QAC9D,OAAO,IAAIrY,GAAWtU,IAG1BzG,EAAiBM,UAAU2qB,mBAAqB,WAC5C1qB,KAAK0D,QAAQ1D,KAAK4yB,eAAe,KAcrCxzB,EAAQmzB,KAAO,SAAUhzB,EAAUizB,GAC/B,MAAOD,GAAKhzB,EAAUizB,IAG1BpzB,EAAQW,UAAUwyB,KAAO,SAAUC,GAC/B,MAAOD,GAAKvyB,KAAMwyB,IAGtBpzB,EAAQU,kBAAoBL,KAGzB2Y,WAAW,GAAGlV,SAAS,KAAKiwB,IAAI,SAAS9zB,EAAQnC,EAAOJ,GAC3D,YACAI,GAAOJ,QAAU,SAASsC,GAC1B,QAASslB,GAAkBhlB,GACPoF,SAAZpF,GACAA,EAAUA,EAAQkF,UAClB5E,KAAKkE,UAAYxE,EAAQwE,UACzBlE,KAAKiyB,mBAAqBvyB,EAAQ+lB,gBAC5B/lB,EAAQ4U,gBAAkBxP,SAGhC9E,KAAKkE,UAAY,EACjBlE,KAAKiyB,mBAAqBntB,QAIlC4f,EAAkB3kB,UAAUuU,cAAgB,WACxC,MAAOtU,MAAKiyB,mBAGhB,IAAI9sB,GAAQuf,EAAkB3kB,UAAUoF,MAAQ,WAC5C,IAAKnF,KAAKwN,cACN,KAAM,IAAInH,WAAU,4FAExB,OAAOrG,MAAKsU,iBAGZ3C,EAAS+S,EAAkB3kB,UAAU4N,MACzC+W,EAAkB3kB,UAAU4R,OAAS,WACjC,IAAK3R,KAAKyd,aACN,KAAM,IAAIpX,WAAU,0FAExB,OAAOrG,MAAKsU,iBAGZ9G,EAAckX,EAAkB3kB,UAAUyN,YAAc,WACxD,MAAuC,MAAd,SAAjBxN,KAAKkE,YAGbuZ,EAAaiH,EAAkB3kB,UAAU0d,WAAa,WACtD,MAAuC,MAAd,SAAjBzd,KAAKkE,YAGbmF,EAAYqb,EAAkB3kB,UAAUsJ,UAAY,WACpD,MAAuC,MAAd,SAAjBrJ,KAAKkE,YAGb4mB,EAAapG,EAAkB3kB,UAAU+qB,WAAa,WACtD,MAAuC,MAAd,SAAjB9qB,KAAKkE,WAGjBwgB,GAAkB3kB,UAAUyJ,YAAc,WACtC,MAAsC,MAAb,QAAjBxJ,KAAKkE,YAGjB9E,EAAQW,UAAUqzB,cAAgB,WAC9B,MAAoC,UAAX,MAAjBpzB,KAAKkE,YAGjB9E,EAAQW,UAAUuJ,aAAe,WAC7B,MAAOtJ,MAAK4E,UAAUwuB,iBAG1Bh0B,EAAQW,UAAUyJ,YAAc,WAC5B,MAAgD,MAAb,QAA3BxJ,KAAK4E,UAAUV,YAG3B9E,EAAQW,UAAUsJ,UAAY,WAC1B,MAAOA,GAAUtM,KAAKiD,KAAK4E,YAG/BxF,EAAQW,UAAU0d,WAAa,WAC3B,MAAOA,GAAW1gB,KAAKiD,KAAK4E,YAGhCxF,EAAQW,UAAUyN,YAAc,WAC5B,MAAOA,GAAYzQ,KAAKiD,KAAK4E,YAGjCxF,EAAQW,UAAU+qB,WAAa,WAC3B,MAAOA,GAAW/tB,KAAKiD,KAAK4E,YAGhCxF,EAAQW,UAAUoF,MAAQ,WACtB,MAAOA,GAAMpI,KAAKiD,KAAK4E,YAG3BxF,EAAQW,UAAU4R,OAAS,WACvB,GAAIvN,GAASpE,KAAK4E,SAElB,OADAR,GAAOsQ,6BACA/C,EAAO5U,KAAKqH,IAGvBhF,EAAQW,UAAU+Y,OAAS,WACvB,MAAO9Y,MAAKsU,iBAGhBlV,EAAQW,UAAU4Y,QAAU,WAExB,MADA3Y,MAAK0U,6BACE1U,KAAKsU,iBAGhBlV,EAAQslB,kBAAoBA,QAGtB2O,IAAI,SAASh0B,EAAQnC,EAAOJ,GAClC,YACAI,GAAOJ,QAAU,SAASsC,EAASgE,GAKnC,QAASC,GAAoB2B,EAAKpB,GAC9B,GAAI8G,EAAS1F,GAAM,CACf,GAAIA,YAAe5F,GAAS,MAAO4F,EACnC,IAAI4Y,GAAO0V,EAAQtuB,EACnB,IAAI4Y,IAASjW,EAAU,CACf/D,GAASA,EAAQ8H,cACrB,IAAIlM,GAAMJ,EAAQwN,OAAOgR,EAAK5hB,EAE9B,OADI4H,IAASA,EAAQ+H,cACdnM,EACJ,GAAoB,kBAAToe,GAAqB,CACnC,GAAI2V,EAAqBvuB,GAAM,CAC3B,GAAIxF,GAAM,GAAIJ,GAAQgE,EAQtB,OAPA4B,GAAIjB,MACAvE,EAAIkgB,SACJlgB,EAAIkE,QACJoB,OACAtF,EACA,MAEGA,EAEX,MAAOg0B,GAAWxuB,EAAK4Y,EAAMha,IAGrC,MAAOoB,GAGX,QAASyuB,GAAUzuB,GACf,MAAOA,GAAI4Y,KAGf,QAAS0V,GAAQtuB,GACb,IACI,MAAOyuB,GAAUzuB,GACnB,MAAOhJ,GAEL,MADA2L,GAAS3L,EAAIA,EACN2L,GAKf,QAAS4rB,GAAqBvuB,GAC1B,IACI,MAAO0uB,GAAQ32B,KAAKiI,EAAK,aAC3B,MAAOhJ,GACL,OAAO,GAIf,QAASw3B,GAAW7L,EAAG/J,EAAMha,GAezB,QAASwB,GAAQD,GACRzF,IACLA,EAAQyE,iBAAiBgB,GACzBzF,EAAU,MAGd,QAASkN,GAAO+E,GACPjS,IACLA,EAAQ0gB,gBAAgBzO,EAAQ2V,GAAa,GAC7C5nB,EAAU,MAvBd,GAAIA,GAAU,GAAIN,GAAQgE,GACtB5D,EAAME,CACNkE,IAASA,EAAQ8H,eACrBhM,EAAQuV,qBACJrR,GAASA,EAAQ+H,aACrB,IAAI2b,IAAc,EACdlU,EAAS7R,EAAKmG,SAASkW,GAAM7gB,KAAK4qB,EAAGviB,EAASwH,EAmBlD,OAlBA0a,IAAc,EAEV5nB,GAAW0T,IAAWzL,IACtBjI,EAAQ0gB,gBAAgBhN,EAAOpX,GAAG,GAAM,GACxC0D,EAAU,MAcPF,EA/EX,GAAI+B,GAAOlC,EAAQ,UACfsI,EAAWpG,EAAKoG,SAChB+C,EAAWnJ,EAAKmJ,SA0ChBgpB,KAAa1X,cAsCjB,OAAO3Y,MAGJH,SAAS,KAAKywB,IAAI,SAASt0B,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QAAU,SAASsC,EAASgE,EAAUE,GAI7C,QAASswB,GAAcC,GACnB7zB,KAAK6zB,OAASA,EAqDlB,QAASC,GAAa3uB,GAElB,MADA4uB,cAAa/zB,KAAK6zB,QACX1uB,EAGX,QAAS6uB,GAAariB,GAElB,KADAoiB,cAAa/zB,KAAK6zB,QACZliB,EAhEV,GAAIpQ,GAAOlC,EAAQ,UACfib,EAAelb,EAAQkb,YAM3BsZ,GAAc7zB,UAAU+J,iBAAmB,WACvCiqB,aAAa/zB,KAAK6zB,QAGtB,IAAII,GAAa,SAAS9uB,GAAS,MAAO+uB,IAAOl0B,MAAMwY,WAAWrT,IAC9D+uB,EAAQ90B,EAAQ80B,MAAQ,SAAUC,EAAIhvB,GACtC,GAAI3F,GACAq0B,CAgBJ,OAfc/uB,UAAVK,GACA3F,EAAMJ,EAAQgG,QAAQD,GACbpB,MAAMkwB,EAAY,KAAM,KAAME,EAAIrvB,QACvCxB,EAAMyE,gBAAkB5C,YAAiB/F,IACzCI,EAAIuF,aAAaI,KAGrB3F,EAAM,GAAIJ,GAAQgE,GAClBywB,EAAStxB,WAAW,WAAa/C,EAAIkgB,aAAgByU,GACjD7wB,EAAMyE,gBACNvI,EAAIuF,aAAa,GAAI6uB,GAAcC,IAEvCr0B,EAAIyV,sBAERzV,EAAIkmB,sBACGlmB,EAGXJ,GAAQW,UAAUm0B,MAAQ,SAAUC,GAChC,MAAOD,GAAMC,EAAIn0B,MAGrB,IAAIo0B,GAAe,SAAU10B,EAASwG,EAASqC,GAC3C,GAAIwP,EAGIA,GAFe,gBAAZ7R,GACHA,YAAmBvJ,OACbuJ,EAEA,GAAIoU,GAAa,uBAGrB,GAAIA,GAAapU,GAE3B3E,EAAKshB,+BAA+B9K,GACpCrY,EAAQmK,kBAAkBkO,GAC1BrY,EAAQgE,QAAQqU,GAEF,MAAVxP,GACAA,EAAOT,SAcf1I,GAAQW,UAAUs0B,QAAU,SAAUF,EAAIjuB,GACtCiuB,GAAMA,CACN,IAAI30B,GAAK+I,EAEL+rB,EAAgB,GAAIV,GAAcrxB,WAAW,WACzC/C,EAAI6J,aACJ+qB,EAAa50B,EAAK0G,EAASqC,IAEhC4rB,GAYH,OAVI7wB,GAAMyE,gBACNQ,EAASvI,KAAK4d,OACdpe,EAAM+I,EAAOxE,MAAM+vB,EAAcE,EACblvB,OAAWwvB,EAAexvB,QAC9CtF,EAAIuF,aAAauvB,IAEjB90B,EAAMQ,KAAK+D,MAAM+vB,EAAcE,EACXlvB,OAAWwvB,EAAexvB,QAG3CtF,MAKR0D,SAAS,KAAKqxB,IAAI,SAASl1B,EAAQnC,EAAOJ,GAC7C,YACAI,GAAOJ,QAAU,SAAUsC,EAASqI,EAAcpE,EAC9CgI,EAAejI,EAAUE,GAQzB,QAASiV,GAAQvc,GACbuG,WAAW,WAAW,KAAMvG,IAAK,GAGrC,QAASw4B,GAAyBC,GAC9B,GAAI9vB,GAAetB,EAAoBoxB,EAOvC,OANI9vB,KAAiB8vB,GACiB,kBAA3BA,GAASC,eACiB,kBAA1BD,GAASE,cAChBF,EAASC,iBACT/vB,EAAaiwB,eAAeH,EAASE,gBAElChwB,EAEX,QAASkwB,GAAQC,EAAW9C,GAIxB,QAAS+C,KACL,GAAIt4B,GAAKwhB,EAAK,MAAOze,GAAIkgB,UACzB,IAAI/a,GAAe6vB,EAAyBM,EAAUr4B,KACtD,IAAIkI,YAAwBvF,IACxBuF,EAAa+vB,gBAAiB,CAC9B,IACI/vB,EAAetB,EACXsB,EAAagwB,eAAeK,WAAWhD,GACvC8C,EAAUp1B,SAChB,MAAO1D,GACL,MAAOuc,GAAQvc,GAEnB,GAAI2I,YAAwBvF,GACxB,MAAOuF,GAAaZ,MAAMgxB,EAAUxc,EACV,KAAM,KAAM,MAG9Cwc,IApBJ,GAAIt4B,GAAI,EACJwhB,EAAM6W,EAAU93B,OAChBwC,EAAM,GAAIJ,GAAQgE,EAqBtB,OADA2xB,KACOv1B,EAGX,QAASy1B,GAASC,EAAMx1B,EAASkE,GAC7B5D,KAAKm1B,MAAQD,EACbl1B,KAAK8e,SAAWpf,EAChBM,KAAKo1B,SAAWxxB,EAoCpB,QAASyxB,GAAiBv0B,EAAIpB,EAASkE,GACnC5D,KAAKmhB,aAAargB,EAAIpB,EAASkE,GASnC,QAAS0xB,GAAoBnwB,GACzB,MAAI8vB,GAASM,WAAWpwB,IACpBnF,KAAK80B,UAAU90B,KAAK0G,OAAOkuB,eAAezvB,GACnCA,EAAMzF,WAEVyF,EAGX,QAASqwB,GAAax4B,GAClBgD,KAAKhD,OAASA,EACdgD,KAAKN,QAAU,KACfM,KAAKhD,EAAO,GAAK,KA5GrB,GAAIuE,GAAOlC,EAAQ,UACfgH,EAAYhH,EAAQ,YAAYgH,UAChC+Q,EAAW/X,EAAQ,UAAU+X,SAC7BzP,EAAWpG,EAAKoG,SAChBD,EAAWnG,EAAKmG,SAChB+tB,IAiDJR,GAASl1B,UAAUm1B,KAAO,WACtB,MAAOl1B,MAAKm1B,OAGhBF,EAASl1B,UAAUL,QAAU,WACzB,MAAOM,MAAK8e,UAGhBmW,EAASl1B,UAAU21B,SAAW,WAC1B,MAAI11B,MAAKN,UAAU8N,cACRxN,KAAKN,UAAUyF,QAEnBswB,GAGXR,EAASl1B,UAAUi1B,WAAa,SAAShD,GACrC,GAAI0D,GAAW11B,KAAK01B,WAChB9xB,EAAU5D,KAAKo1B,QACHtwB,UAAZlB,GAAuBA,EAAQ8H,cACnC,IAAIlM,GAAMk2B,IAAaD,EACjBz1B,KAAK21B,UAAUD,EAAU1D,GAAc,IAI7C,OAHgBltB,UAAZlB,GAAuBA,EAAQ+H,cACnC3L,KAAK8e,SAAS8W,mBACd51B,KAAKm1B,MAAQ,KACN31B,GAGXy1B,EAASM,WAAa,SAAUM,GAC5B,MAAa,OAALA,GACsB,kBAAfA,GAAEH,UACe,kBAAjBG,GAAEb,YAMrB5d,EAASie,EAAkBJ,GAE3BI,EAAiBt1B,UAAU41B,UAAY,SAAUD,EAAU1D,GACvD,GAAIlxB,GAAKd,KAAKk1B,MACd,OAAOp0B,GAAG/D,KAAK24B,EAAUA,EAAU1D,IAiBvCwD,EAAaz1B,UAAU+J,iBAAmB,WAEtC,IAAK,GADDmU,GAAMje,KAAKhD,OACNP,EAAI,EAAGA,EAAIwhB,IAAOxhB,EAAG,CAC1B,GAAI+N,GAAOxK,KAAKvD,EACZ+N,aAAgBpL,IAChBoL,EAAK1C,WAKjB1I,EAAQ02B,MAAQ,WACZ,GAAI7X,GAAM3b,UAAUtF,MACpB,IAAIihB,EAAM,EAAG,MAAOxW,GACJ,sDAChB,IAAI3G,GAAKwB,UAAU2b,EAAM,EACzB,IAAkB,kBAAPnd,GACP,MAAO2G,GAAa,gCAAkClG,EAAK4E,YAAYrF,GAE3E,IAAIi1B,GACAC,GAAa,CACL,KAAR/X,GAAavD,MAAM9Q,QAAQtH,UAAU,KACrCyzB,EAAQzzB,UAAU,GAClB2b,EAAM8X,EAAM/4B,OACZg5B,GAAa,IAEbD,EAAQzzB,UACR2b,IAGJ,KAAK,GADD6W,GAAY,GAAIU,GAAavX,GACxBxhB,EAAI,EAAGA,EAAIwhB,IAAOxhB,EAAG,CAC1B,GAAIi5B,GAAWK,EAAMt5B,EACrB,IAAIw4B,EAASM,WAAWG,GAAW,CAC/B,GAAIO,GAAWP,CACfA,GAAWA,EAASh2B,UACpBg2B,EAASd,eAAeqB,OACrB,CACH,GAAItxB,GAAetB,EAAoBqyB,EACnC/wB,aAAwBvF,KACxBs2B,EACI/wB,EAAaZ,MAAMuxB,EAAqB,KAAM,MAC1CR,UAAWA,EACXpuB,MAAOjK,GACZqI,SAGXgwB,EAAUr4B,GAAKi5B,EAInB,IAAK,GADDQ,GAAqB,GAAIxb,OAAMoa,EAAU93B,QACpCP,EAAI,EAAGA,EAAIy5B,EAAmBl5B,SAAUP,EAC7Cy5B,EAAmBz5B,GAAK2C,EAAQgG,QAAQ0vB,EAAUr4B,IAAIooB,SAG1D,IAAIsR,GAAgB/2B,EAAQia,IAAI6c,GAC3BtY,KAAK,SAASwY,GACX,IAAK,GAAI35B,GAAI,EAAGA,EAAI25B,EAAYp5B,SAAUP,EAAG,CACzC,GAAIu1B,GAAaoE,EAAY35B,EAC7B,IAAIu1B,EAAWvU,aAEX,MADA9V,GAAS3L,EAAIg2B,EAAWrkB,QACjBhG,CACJ,KAAKqqB,EAAWxkB,cAEnB,WADA2oB,GAAcruB,QAGlBsuB,GAAY35B,GAAKu1B,EAAW7sB,QAEhCzF,EAAQgM,eAER5K,EAAK4G,EAAS5G,EACd,IAAItB,GAAMw2B,EACJl1B,EAAGyF,MAAMzB,OAAWsxB,GAAet1B,EAAGs1B,GACxC7nB,EAAiB7O,EAAQiM,aAG7B,OAFArI,GAAM+K,sBACF7O,EAAK+O,EAAgB,gBAAiB7O,GACnCF,IAGXE,EAAUy2B,EAActY,OAAO,WAC/B,GAAImU,GAAa,GAAI5yB,GAAQslB,kBAAkByR,EAC/C,OAAOtB,GAAQC,EAAW9C,IAI9B,OAFA8C,GAAUp1B,QAAUA,EACpBA,EAAQqF,aAAa+vB,GACdp1B,GAGXN,EAAQW,UAAU60B,eAAiB,SAAUqB,GACzCj2B,KAAKkE,UAA6B,OAAjBlE,KAAKkE,UACtBlE,KAAKq2B,UAAYJ,GAGrB72B,EAAQW,UAAU20B,cAAgB,WAC9B,OAAyB,OAAjB10B,KAAKkE,WAAsB,GAGvC9E,EAAQW,UAAU40B,aAAe,WAC7B,MAAO30B,MAAKq2B,WAGhBj3B,EAAQW,UAAU61B,iBAAmB,WACjC51B,KAAKkE,UAAYlE,KAAKkE,WAAY,OAClClE,KAAKq2B,UAAYvxB,QAGrB1F,EAAQW,UAAUk2B,SAAW,SAAUn1B,GACnC,GAAkB,kBAAPA,GACP,MAAO,IAAIu0B,GAAiBv0B,EAAId,KAAMqL,IAE1C,MAAM,IAAIhF,OAKf+R,WAAW,GAAGlV,SAAS,KAAKozB,IAAI,SAASj3B,EAAQnC,EAAOJ,GAC3D,YAWA,SAASy5B,KACL,IACI,GAAInyB,GAASoyB,CAEb,OADAA,GAAiB,KACVpyB,EAAOmC,MAAMvG,KAAMsC,WAC5B,MAAOtG,GAEL,MADA2L,GAAS3L,EAAIA,EACN2L,GAGf,QAASD,GAAS5G,GAEd,MADA01B,GAAiB11B,EACVy1B,EAuBX,QAASE,GAAYrT,GACjB,MAAc,OAAPA,GAAeA,KAAQ,GAAQA,KAAQ,GAC3B,gBAARA,IAAmC,gBAARA,GAI1C,QAAS1Y,GAASvF,GACd,MAAwB,kBAAVA,IACU,gBAAVA,IAAgC,OAAVA,EAGxC,QAAS8d,GAAiByT,GACtB,MAAKD,GAAYC,GAEV,GAAI/5B,OAAMg6B,EAAaD,IAFOA,EAKzC,QAAStK,GAAahoB,EAAQwyB,GAC1B,GAEIn6B,GAFAwhB,EAAM7Z,EAAOpH,OACbwC,EAAM,GAAIkb,OAAMuD,EAAM,EAE1B,KAAKxhB,EAAI,EAAGA,EAAIwhB,IAAOxhB,EACnB+C,EAAI/C,GAAK2H,EAAO3H,EAGpB,OADA+C,GAAI/C,GAAKm6B,EACFp3B,EAGX,QAAS8rB,GAAyBtmB,EAAK8F,EAAK+rB,GACxC,IAAI3c,EAAImB,MASJ,SAAUW,eAAejf,KAAKiI,EAAK8F,GAAO9F,EAAI8F,GAAOhG,MARrD,IAAIuX,GAAOzW,OAAO2V,yBAAyBvW,EAAK8F,EAEhD,OAAY,OAARuR,EACmB,MAAZA,EAAKnV,KAA2B,MAAZmV,EAAKP,IACtBO,EAAKlX,MACL0xB,EAHd,OAUR,QAAS1oB,GAAkBnJ,EAAKwH,EAAMrH,GAClC,GAAIsxB,EAAYzxB,GAAM,MAAOA,EAC7B,IAAI6W,IACA1W,MAAOA,EACPyV,cAAc,EACdE,YAAY,EACZD,UAAU,EAGd,OADAX,GAAIS,eAAe3V,EAAKwH,EAAMqP,GACvB7W,EAGX,QAASuT,GAAQpc,GACb,KAAMA,GAsEV,QAAS6wB,GAAQlsB,GACb,IACI,GAAkB,kBAAPA,GAAmB,CAC1B,GAAI6J,GAAOuP,EAAIsB,MAAM1a,EAAGf,WAEpB+2B,EAAa5c,EAAImB,OAAS1Q,EAAK3N,OAAS,EACxC+5B,EAAiCpsB,EAAK3N,OAAS,KAC7B,IAAhB2N,EAAK3N,QAA4B,gBAAZ2N,EAAK,IAC5BqsB,EACAC,EAAsBhoB,KAAKnO,EAAK,KAAOoZ,EAAIsB,MAAM1a,GAAI9D,OAAS,CAElE,IAAI85B,GAAcC,GACdC,EACA,OAAO,EAGf,OAAO,EACT,MAAOh7B,GACL,OAAO,GAIf,QAASssB,GAAiBtjB,GAEtB,QAASkyB,MACTA,EAAgBn3B,UAAYiF,CAE5B,KADA,GAAInI,GAAI,EACDA,KAAK,GAAIq6B,EAChB,OAAOlyB,GAKX,QAAS+B,GAAa+K,GAClB,MAAOqlB,GAAOloB,KAAK6C,GAGvB,QAASslB,GAAYvE,EAAOwE,EAAQhM,GAEhC,IAAI,GADA7rB,GAAM,GAAIkb,OAAMmY,GACZp2B,EAAI,EAAGA,EAAIo2B,IAASp2B,EACxB+C,EAAI/C,GAAK46B,EAAS56B,EAAI4uB,CAE1B,OAAO7rB,GAGX,QAASm3B,GAAa3xB,GAClB,IACI,MAAOA,GAAM,GACf,MAAOhJ,GACL,MAAO,8BAIf,QAASs7B,GAAQtyB,GACb,MAAe,QAARA,GACe,gBAARA,IACgB,gBAAhBA,GAAIkB,SACS,gBAAblB,GAAIwH,KAGtB,QAASqW,GAA+B7mB,GACpC,IACImS,EAAkBnS,EAAG,iBAAiB,GAE1C,MAAMu7B,KAGV,QAASnS,GAAwBppB,GAC7B,MAAS,OAALA,IACKA,YAAaW,OAA8B,uBAAEmd,kBAClD9d,EAAiB,iBAAM,GAG/B,QAAS6R,GAAe7I,GACpB,MAAOsyB,GAAQtyB,IAAQkV,EAAIyB,mBAAmB3W,EAAK,SAkBvD,QAASmB,GAAYnB,GACjB,SAAUoB,SAASrJ,KAAKiI,GAG5B,QAAS+nB,GAAgByK,EAAMC,EAAI7a,GAE/B,IAAK,GADDjS,GAAOuP,EAAIsB,MAAMgc,GACZ/6B,EAAI,EAAGA,EAAIkO,EAAK3N,SAAUP,EAAG,CAClC,GAAIqO,GAAMH,EAAKlO,EACf,IAAImgB,EAAO9R,GACP,IACIoP,EAAIS,eAAe8c,EAAI3sB,EAAKoP,EAAIoB,cAAckc,EAAM1sB,IACtD,MAAOysB,MAyCrB,QAASzjB,GAAIhJ,GACT,MAAO4sB,GAAkB54B,EAAQgV,IAAIhJ,GAAOhG,OAGhD,QAASyrB,KACL,GAAuB,kBAAZnxB,SACP,IACI,GAAIM,GAAU,GAAIN,SAAQ,aAC1B,IAAkC,wBAA3BgH,SAASrJ,KAAK2C,GACjB,MAAON,SAEb,MAAOpD,KAIjB,QAAS6Y,GAAW1V,EAAMkL,GACtB,MAAOlL,GAAKmF,KAAK+F,GA1UrB,GAAI6P,GAAM7a,EAAQ,SACdyH,EAAkC,mBAAbiqB,WAErBppB,GAAY3L,MACZw6B,EACAmB,EAA+B,mBAATx4B,MAAuBA,KAC3B,mBAAXD,QAAyBA,OACd,mBAAXH,GAAyBA,EACvB+F,SAAT9E,KAAqBA,KAAO,KAiB5BoX,EAAW,SAASwgB,EAAOC,GAG3B,QAASC,KACL93B,KAAK6Z,YAAc+d,EACnB53B,KAAKmhB,aAAe0W,CACpB,KAAK,GAAI1wB,KAAgB0wB,GAAO93B,UACxB2zB,EAAQ32B,KAAK86B,EAAO93B,UAAWoH,IACgB,MAA/CA,EAAa4J,OAAO5J,EAAanK,OAAO,KAExCgD,KAAKmH,EAAe,KAAO0wB,EAAO93B,UAAUoH,IATxD,GAAIusB,MAAa1X,cAejB,OAFA8b,GAAE/3B,UAAY83B,EAAO93B,UACrB63B,EAAM73B,UAAY,GAAI+3B,GACfF,EAAM73B,WA8Db6rB,EAAoB,WACpB,GAAImM,IACArd,MAAM3a,UACN6F,OAAO7F,UACPi4B,SAASj4B,WAGTk4B,EAAkB,SAAS7U,GAC3B,IAAK,GAAI3mB,GAAI,EAAGA,EAAIs7B,EAAmB/6B,SAAUP,EAC7C,GAAIs7B,EAAmBt7B,KAAO2mB,EAC1B,OAAO,CAGf,QAAO,EAGX,IAAIlJ,EAAImB,MAAO,CACX,GAAIzQ,GAAUhF,OAAO6V,mBACrB,OAAO,UAASzW,GAGZ,IAFA,GAAIxF,MACA04B,EAActyB,OAAOC,OAAO,MAClB,MAAPb,IAAgBizB,EAAgBjzB,IAAM,CACzC,GAAI2F,EACJ,KACIA,EAAOC,EAAQ5F,GACjB,MAAOhJ,GACL,MAAOwD,GAEX,IAAK,GAAI/C,GAAI,EAAGA,EAAIkO,EAAK3N,SAAUP,EAAG,CAClC,GAAIqO,GAAMH,EAAKlO,EACf,KAAIy7B,EAAYptB,GAAhB,CACAotB,EAAYptB,IAAO,CACnB,IAAIuR,GAAOzW,OAAO2V,yBAAyBvW,EAAK8F,EACpC,OAARuR,GAA4B,MAAZA,EAAKnV,KAA2B,MAAZmV,EAAKP,KACzCtc,EAAIyB,KAAK6J,IAGjB9F,EAAMkV,EAAIwB,eAAe1W,GAE7B,MAAOxF,IAGX,GAAIk0B,MAAa1X,cACjB,OAAO,UAAShX,GACZ,GAAIizB,EAAgBjzB,GAAM,QAC1B,IAAIxF,KAGJ24B,GAAa,IAAK,GAAIrtB,KAAO9F,GACzB,GAAI0uB,EAAQ32B,KAAKiI,EAAK8F,GAClBtL,EAAIyB,KAAK6J,OACN,CACH,IAAK,GAAIrO,GAAI,EAAGA,EAAIs7B,EAAmB/6B,SAAUP,EAC7C,GAAIi3B,EAAQ32B,KAAKg7B,EAAmBt7B,GAAIqO,GACpC,QAASqtB,EAGjB34B,GAAIyB,KAAK6J,GAGjB,MAAOtL,OAMfy3B,EAAwB,sBAiCxBE,EAAS,wBA6CT3P,EAAoB,WACpB,MAAM,SAAW,IAAI7qB,OAOV,SAASwI,GACZ,MAAI0I,GAAe1I,GAAeA,EAC3B,GAAIxI,OAAMg6B,EAAaxxB,KAR3B,SAASA,GACZ,GAAI0I,EAAe1I,GAAQ,MAAOA,EAClC,KAAK,KAAM,IAAIxI,OAAMg6B,EAAaxxB,IAClC,MAAM4S,GAAM,MAAOA,QA0B3B0S,EAAU,SAASrG,GACnB,MAAIlK,GAAItQ,QAAQwa,GACLA,EAEJ,KAGX,IAAsB,mBAAXgU,SAA0BA,OAAOrD,SAAU,CAClD,GAAIsD,GAAkC,kBAAf3d,OAAM8c,KAAsB,SAASpT,GACxD,MAAO1J,OAAM8c,KAAKpT,IAClB,SAASA,GAIT,IAHA,GAEIkU,GAFA94B,KACA+4B,EAAKnU,EAAEgU,OAAOrD,cAERuD,EAAWC,EAAGtY,QAAY,MAChCzgB,EAAIyB,KAAKq3B,EAASnzB,MAEtB,OAAO3F,GAGXirB,GAAU,SAASrG,GACf,MAAIlK,GAAItQ,QAAQwa,GACLA,EACK,MAALA,GAA2C,kBAAvBA,GAAEgU,OAAOrD,UAC7BsD,EAAUjU,GAEd,MAIf,GAAIpiB,GAA4B,mBAAZlD,IAC2B,qBAAvCqH,EAAYrH,GAAS2W,cAEzBiiB,EAAqC,mBAAZ54B,IACF,mBAAhBA,GAAQgV,IAqBftU,GACAwtB,QAASA,EACTjmB,aAAcA,EACd6kB,kBAAmBA,EACnBN,yBAA0BA,EAC1B/S,QAASA,EACT3O,QAASsQ,EAAItQ,QACb6gB,QAASA,EACTtc,kBAAmBA,EACnBsoB,YAAaA,EACb/rB,SAAUA,EACV4sB,QAASA,EACTxwB,YAAaA,EACba,SAAUA,EACVD,SAAUA,EACV0P,SAAUA,EACVgV,aAAcA,EACdnJ,iBAAkBA,EAClBqF,iBAAkBA,EAClB8O,YAAaA,EACbhxB,SAAUuwB,EACV9oB,eAAgBA,EAChB2Z,kBAAmBA,EACnBpC,wBAAyBA,EACzBvC,+BAAgCA,EAChC1c,YAAaA,EACb4mB,gBAAiBA,EACjBlrB,YAA+B,mBAAX22B,SAA0BA,QACL,kBAArBA,QAAOC,UAC3Bz2B,OAAQA,EACR01B,gBAAiBA,EACjB5jB,IAAKA,EACL/U,OAAQ44B,EACRpH,iBAAkBA,EAClB1b,WAAYA,EAEhBrV,GAAIqxB,aAAerxB,EAAIwC,QAAU,WAC7B,GAAIqmB,GAAUvpB,EAAQ45B,SAASnhB,KAAK1I,MAAM,KAAK8N,IAAIgc,OACnD,OAAuB,KAAftQ,EAAQ,IAAYA,EAAQ,GAAK,IAAQA,EAAQ,GAAK,KAG9D7oB,EAAIwC,QAAQxC,EAAI8oB,iBAAiBxpB,EAErC,KAAK,KAAM,IAAInC,OAAW,MAAOX,GAAIwD,EAAIsT,cAAgB9W,EACzDkB,EAAOJ,QAAU0C,IAEduL,QAAQ,UAAU,IAAI,KACqB,mBAAX7L,SAAqC,OAAXA,OAAiDA,OAAO05B,EAAI15B,OAAOE,QAAwF,mBAATD,OAAiC,OAATA,OAA6CA,KAAKy5B,EAAIz5B,KAAKC,WAC/RrC,KAAKiD,KAAKxD,EAAQ,YAA8B,mBAAXuC,QAAyBA,OAAyB,mBAATI,MAAuBA,KAAyB,mBAAXD,QAAyBA,aAE5I25B,SAAW,IAAI11B,GAAG,SAAS3G,EAAQU,EAAOJ,IAM7C,SAAUoC,EAAQ2W,EAAUijB,EAAYh0B,GACtC,YAkBF,SAASi0B,GAAkBj4B,EAAIuzB,EAASzwB,GACpC,MAAOrB,YAAWy2B,EAAOl4B,EAAI8C,GAAUywB,GAY3C,QAAS4E,GAAej4B,EAAKF,EAAI8C,GAC7B,QAAI8W,MAAM9Q,QAAQ5I,KACdsY,EAAKtY,EAAK4C,EAAQ9C,GAAK8C,IAChB,GAWf,QAAS0V,GAAKtU,EAAK+vB,EAAUnxB,GACzB,GAAInH,EAEJ,IAAKuI,EAIL,GAAIA,EAAI4oB,QACJ5oB,EAAI4oB,QAAQmH,EAAUnxB,OACnB,IAAIoB,EAAIhI,SAAW8H,EAEtB,IADArI,EAAI,EACGA,EAAIuI,EAAIhI,QACX+3B,EAASh4B,KAAK6G,EAASoB,EAAIvI,GAAIA,EAAGuI,GAClCvI,QAGJ,KAAKA,IAAKuI,GACNA,EAAIgX,eAAevf,IAAMs4B,EAASh4B,KAAK6G,EAASoB,EAAIvI,GAAIA,EAAGuI,GAYvE,QAASk0B,GAAUhjB,EAAQ1J,EAAMtG,GAC7B,GAAIizB,GAAqB,sBAAwB3sB,EAAO,KAAOtG,EAAU,QACzE,OAAO,YACH,GAAIlK,GAAI,GAAIW,OAAM,mBACdwF,EAAQnG,GAAKA,EAAEmG,MAAQnG,EAAEmG,MAAM8O,QAAQ,kBAAmB,IACzDA,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,kBAAoB,sBAE3DO,EAAMtS,EAAOkS,UAAYlS,EAAOkS,QAAQ3B,MAAQvQ,EAAOkS,QAAQI,IAInE,OAHIA,IACAA,EAAIzU,KAAKmC,EAAOkS,QAAS+nB,EAAoBh3B,GAE1C+T,EAAO3P,MAAMvG,KAAMsC,YAwElC,QAAS82B,GAAQnxB,EAAOif,EAAMmS,GAC1B,GACIC,GADAC,EAAQrS,EAAKnnB,SAGjBu5B,GAASrxB,EAAMlI,UAAY6F,OAAOC,OAAO0zB,GACzCD,EAAOzf,YAAc5R,EACrBqxB,EAAOE,OAASD,EAEZF,GACAI,GAAOH,EAAQD,GAUvB,QAASL,GAAOl4B,EAAI8C,GAChB,MAAO,YACH,MAAO9C,GAAGyF,MAAM3C,EAAStB,YAWjC,QAASo3B,GAAStW,EAAKpc,GACnB,aAAWoc,IAAOuW,GACPvW,EAAI7c,MAAMS,EAAOA,EAAK,IAAMlC,EAAYA,EAAWkC,GAEvDoc,EASX,QAASwW,GAAYC,EAAMC,GACvB,MAAQD,KAAS/0B,EAAag1B,EAAOD,EASzC,QAASE,GAAkB31B,EAAQ41B,EAAO7iB,GACtCmC,EAAK2gB,EAASD,GAAQ,SAASr7B,GAC3ByF,EAAO81B,iBAAiBv7B,EAAMwY,GAAS,KAU/C,QAASgjB,GAAqB/1B,EAAQ41B,EAAO7iB,GACzCmC,EAAK2gB,EAASD,GAAQ,SAASr7B,GAC3ByF,EAAOg2B,oBAAoBz7B,EAAMwY,GAAS,KAWlD,QAASkjB,GAAU9iB,EAAMhP,GACrB,KAAOgP,GAAM,CACT,GAAIA,GAAQhP,EACR,OAAO,CAEXgP,GAAOA,EAAK+iB,WAEhB,OAAO,EASX,QAASC,GAAMzoB,EAAK0oB,GAChB,MAAO1oB,GAAIkG,QAAQwiB,IAAQ,EAQ/B,QAASP,GAASnoB,GACd,MAAOA,GAAI2oB,OAAO5rB,MAAM,QAU5B,QAAS6rB,GAAQzM,EAAKuM,EAAMG,GACxB,GAAI1M,EAAIjW,UAAY2iB,EAChB,MAAO1M,GAAIjW,QAAQwiB,EAGnB,KADA,GAAI/9B,GAAI,EACDA,EAAIwxB,EAAIjxB,QAAQ,CACnB,GAAK29B,GAAa1M,EAAIxxB,GAAGk+B,IAAcH,IAAWG,GAAa1M,EAAIxxB,KAAO+9B,EACtE,MAAO/9B,EAEXA,KAEJ,OAAO,EASf,QAASm+B,GAAQ51B,GACb,MAAO0V,OAAM3a,UAAUkH,MAAMlK,KAAKiI,EAAK,GAU3C,QAAS61B,GAAY5M,EAAKnjB,EAAKgwB,GAK3B,IAJA,GAAIC,MACAjZ,KACArlB,EAAI,EAEDA,EAAIwxB,EAAIjxB,QAAQ,CACnB,GAAIomB,GAAMtY,EAAMmjB,EAAIxxB,GAAGqO,GAAOmjB,EAAIxxB,EAC9Bi+B,GAAQ5Y,EAAQsB,GAAO,GACvB2X,EAAQ95B,KAAKgtB,EAAIxxB,IAErBqlB,EAAOrlB,GAAK2mB,EACZ3mB,IAaJ,MAVIq+B,KAIIC,EAHCjwB,EAGSiwB,EAAQD,KAAK,SAAyBv+B,EAAGgsB,GAC/C,MAAOhsB,GAAEuO,GAAOyd,EAAEzd,KAHZiwB,EAAQD,QAQnBC,EASX,QAASC,GAASh2B,EAAKi2B,GAKnB,IAJA,GAAI5D,GAAQzb,EACRsf,EAAYD,EAAS,GAAGE,cAAgBF,EAASh0B,MAAM,GAEvDxK,EAAI,EACDA,EAAI2+B,GAAgBp+B,QAAQ,CAI/B,GAHAq6B,EAAS+D,GAAgB3+B,GACzBmf,EAAO,EAAWyb,EAAS6D,EAAYD,EAEnCrf,IAAQ5W,GACR,MAAO4W,EAEXnf,KAEJ,MAAOqI,GAQX,QAASu2B,KACL,MAAOC,MAQX,QAASC,GAAoBC,GACzB,GAAIC,GAAMD,EAAQE,eAAiBF,CACnC,OAAQC,GAAIE,aAAeF,EAAIG,cAAgB18B,EAyCnD,QAAS28B,GAAMC,EAAS7Z,GACpB,GAAI9iB,GAAOa,IACXA,MAAK87B,QAAUA,EACf97B,KAAKiiB,SAAWA,EAChBjiB,KAAKw7B,QAAUM,EAAQN,QACvBx7B,KAAKoE,OAAS03B,EAAQjf,QAAQkf,YAI9B/7B,KAAKg8B,WAAa,SAASC,GACnBvC,EAASoC,EAAQjf,QAAQqf,QAASJ,KAClC38B,EAAKgY,QAAQ8kB,IAIrBj8B,KAAKH,OAoCT,QAASs8B,GAAoBL,GACzB,GAAIM,GACAC,EAAaP,EAAQjf,QAAQwf,UAajC,OAAO,KAVHD,EADAC,EACOA,EACAC,GACAC,EACAC,GACAC,EACCC,GAGDC,EAFAC,GAIOd,EAASe,GAS/B,QAASA,GAAaf,EAASgB,EAAW/G,GACtC,GAAIgH,GAAchH,EAAMiH,SAAShgC,OAC7BigC,EAAqBlH,EAAMmH,gBAAgBlgC,OAC3CmgC,EAAWL,EAAYM,IAAgBL,EAAcE,IAAuB,EAC5EI,EAAWP,GAAaQ,GAAYC,KAAkBR,EAAcE,IAAuB,CAE/FlH,GAAMoH,UAAYA,EAClBpH,EAAMsH,UAAYA,EAEdF,IACArB,EAAQ0B,YAKZzH,EAAM+G,UAAYA,EAGlBW,EAAiB3B,EAAS/F,GAG1B+F,EAAQ7lB,KAAK,eAAgB8f,GAE7B+F,EAAQ4B,UAAU3H,GAClB+F,EAAQ0B,QAAQG,UAAY5H,EAQhC,QAAS0H,GAAiB3B,EAAS/F,GAC/B,GAAIyH,GAAU1B,EAAQ0B,QAClBR,EAAWjH,EAAMiH,SACjBY,EAAiBZ,EAAShgC,MAGzBwgC,GAAQK,aACTL,EAAQK,WAAaC,EAAqB/H,IAI1C6H,EAAiB,IAAMJ,EAAQO,cAC/BP,EAAQO,cAAgBD,EAAqB/H,GACnB,IAAnB6H,IACPJ,EAAQO,eAAgB,EAG5B,IAAIF,GAAaL,EAAQK,WACrBE,EAAgBP,EAAQO,cACxBC,EAAeD,EAAgBA,EAAcE,OAASJ,EAAWI,OAEjEA,EAASlI,EAAMkI,OAASC,EAAUlB,EACtCjH,GAAMoI,UAAYC,KAClBrI,EAAMsI,UAAYtI,EAAMoI,UAAYN,EAAWM,UAE/CpI,EAAMuI,MAAQC,EAASP,EAAcC,GACrClI,EAAMyI,SAAWC,EAAYT,EAAcC,GAE3CS,EAAelB,EAASzH,GACxBA,EAAM4I,gBAAkBC,EAAa7I,EAAM8I,OAAQ9I,EAAM+I,OAEzD,IAAIC,GAAkBC,EAAYjJ,EAAMsI,UAAWtI,EAAM8I,OAAQ9I,EAAM+I,OACvE/I,GAAMkJ,iBAAmBF,EAAgBpX,EACzCoO,EAAMmJ,iBAAmBH,EAAgBI,EACzCpJ,EAAMgJ,gBAAmBK,GAAIL,EAAgBpX,GAAKyX,GAAIL,EAAgBI,GAAMJ,EAAgBpX,EAAIoX,EAAgBI,EAEhHpJ,EAAMsJ,MAAQtB,EAAgBuB,EAASvB,EAAcf,SAAUA,GAAY,EAC3EjH,EAAMwJ,SAAWxB,EAAgByB,EAAYzB,EAAcf,SAAUA,GAAY,EAEjFjH,EAAM0J,YAAejC,EAAQG,UAAsC5H,EAAMiH,SAAShgC,OAC9EwgC,EAAQG,UAAU8B,YAAe1J,EAAMiH,SAAShgC,OAASwgC,EAAQG,UAAU8B,YADtC1J,EAAMiH,SAAShgC,OAGxD0iC,EAAyBlC,EAASzH,EAGlC,IAAI3xB,GAAS03B,EAAQN,OACjBnB,GAAUtE,EAAM4J,SAASv7B,OAAQA,KACjCA,EAAS2xB,EAAM4J,SAASv7B,QAE5B2xB,EAAM3xB,OAASA,EAGnB,QAASs6B,GAAelB,EAASzH,GAC7B,GAAIkI,GAASlI,EAAMkI,OACf2B,EAASpC,EAAQqC,gBACjBC,EAAYtC,EAAQsC,cACpBnC,EAAYH,EAAQG,aAEpB5H,GAAM+G,YAAcM,IAAeO,EAAUb,YAAcQ,KAC3DwC,EAAYtC,EAAQsC,WAChBnY,EAAGgW,EAAUkB,QAAU,EACvBM,EAAGxB,EAAUmB,QAAU,GAG3Bc,EAASpC,EAAQqC,aACblY,EAAGsW,EAAOtW,EACVwX,EAAGlB,EAAOkB,IAIlBpJ,EAAM8I,OAASiB,EAAUnY,GAAKsW,EAAOtW,EAAIiY,EAAOjY,GAChDoO,EAAM+I,OAASgB,EAAUX,GAAKlB,EAAOkB,EAAIS,EAAOT,GAQpD,QAASO,GAAyBlC,EAASzH,GACvC,GAEIgK,GAAUC,EAAWC,EAAWC,EAFhCrf,EAAO2c,EAAQ2C,cAAgBpK,EAC/BsI,EAAYtI,EAAMoI,UAAYtd,EAAKsd,SAGvC,IAAIpI,EAAM+G,WAAaS,KAAiBc,EAAY+B,IAAoBvf,EAAKkf,WAAaj7B,GAAY,CAClG,GAAI+5B,GAAS9I,EAAM8I,OAAShe,EAAKge,OAC7BC,EAAS/I,EAAM+I,OAASje,EAAKie,OAE7B1a,EAAI4a,EAAYX,EAAWQ,EAAQC,EACvCkB,GAAY5b,EAAEuD,EACdsY,EAAY7b,EAAE+a,EACdY,EAAYX,GAAIhb,EAAEuD,GAAKyX,GAAIhb,EAAE+a,GAAM/a,EAAEuD,EAAIvD,EAAE+a,EAC3Ce,EAAYtB,EAAaC,EAAQC,GAEjCtB,EAAQ2C,aAAepK,MAGvBgK,GAAWlf,EAAKkf,SAChBC,EAAYnf,EAAKmf,UACjBC,EAAYpf,EAAKof,UACjBC,EAAYrf,EAAKqf,SAGrBnK,GAAMgK,SAAWA,EACjBhK,EAAMiK,UAAYA,EAClBjK,EAAMkK,UAAYA,EAClBlK,EAAMmK,UAAYA,EAQtB,QAASpC,GAAqB/H,GAK1B,IAFA,GAAIiH,MACAvgC,EAAI,EACDA,EAAIs5B,EAAMiH,SAAShgC,QACtBggC,EAASvgC,IACL4jC,QAASC,GAAMvK,EAAMiH,SAASvgC,GAAG4jC,SACjCE,QAASD,GAAMvK,EAAMiH,SAASvgC,GAAG8jC,UAErC9jC,GAGJ,QACI0hC,UAAWC,KACXpB,SAAUA,EACViB,OAAQC,EAAUlB,GAClB6B,OAAQ9I,EAAM8I,OACdC,OAAQ/I,EAAM+I,QAStB,QAASZ,GAAUlB,GACf,GAAIY,GAAiBZ,EAAShgC,MAG9B,IAAuB,IAAnB4gC,EACA,OACIjW,EAAG2Y,GAAMtD,EAAS,GAAGqD,SACrBlB,EAAGmB,GAAMtD,EAAS,GAAGuD,SAK7B,KADA,GAAI5Y,GAAI,EAAGwX,EAAI,EAAG1iC,EAAI,EACfA,EAAImhC,GACPjW,GAAKqV,EAASvgC,GAAG4jC,QACjBlB,GAAKnC,EAASvgC,GAAG8jC,QACjB9jC,GAGJ,QACIkrB,EAAG2Y,GAAM3Y,EAAIiW,GACbuB,EAAGmB,GAAMnB,EAAIvB,IAWrB,QAASoB,GAAYX,EAAW1W,EAAGwX,GAC/B,OACIxX,EAAGA,EAAI0W,GAAa,EACpBc,EAAGA,EAAId,GAAa,GAU5B,QAASO,GAAajX,EAAGwX,GACrB,MAAIxX,KAAMwX,EACCqB,GAGPpB,GAAIzX,IAAMyX,GAAID,GACPxX,EAAI,EAAI8Y,GAAiBC,GAE7BvB,EAAI,EAAIwB,GAAeC,GAUlC,QAASnC,GAAYoC,EAAIC,EAAItT,GACpBA,IACDA,EAAQuT,GAEZ,IAAIpZ,GAAImZ,EAAGtT,EAAM,IAAMqT,EAAGrT,EAAM,IAC5B2R,EAAI2B,EAAGtT,EAAM,IAAMqT,EAAGrT,EAAM,GAEhC,OAAO7mB,MAAKq6B,KAAMrZ,EAAIA,EAAMwX,EAAIA,GAUpC,QAASZ,GAASsC,EAAIC,EAAItT,GACjBA,IACDA,EAAQuT,GAEZ,IAAIpZ,GAAImZ,EAAGtT,EAAM,IAAMqT,EAAGrT,EAAM,IAC5B2R,EAAI2B,EAAGtT,EAAM,IAAMqT,EAAGrT,EAAM,GAChC,OAA0B,KAAnB7mB,KAAKs6B,MAAM9B,EAAGxX,GAAWhhB,KAAKu6B,GASzC,QAAS1B,GAAY2B,EAAOC,GACxB,MAAO7C,GAAS6C,EAAI,GAAIA,EAAI,GAAIC,IAAmB9C,EAAS4C,EAAM,GAAIA,EAAM,GAAIE,IAUpF,QAAS/B,GAAS6B,EAAOC,GACrB,MAAO3C,GAAY2C,EAAI,GAAIA,EAAI,GAAIC,IAAmB5C,EAAY0C,EAAM,GAAIA,EAAM,GAAIE,IAiB1F,QAASzE,KACL58B,KAAKshC,KAAOC,GACZvhC,KAAKwhC,MAAQC,GAEbzhC,KAAK0hC,SAAU,EAEf7F,EAAMt1B,MAAMvG,KAAMsC,WAoEtB,QAASi6B,KACLv8B,KAAKshC,KAAOK,GACZ3hC,KAAKwhC,MAAQI,GAEb/F,EAAMt1B,MAAMvG,KAAMsC,WAElBtC,KAAK6hC,MAAS7hC,KAAK87B,QAAQ0B,QAAQsE,iBAoEvC,QAASC,KACL/hC,KAAKgiC,SAAWC,GAChBjiC,KAAKwhC,MAAQU,GACbliC,KAAKmiC,SAAU,EAEftG,EAAMt1B,MAAMvG,KAAMsC,WAsCtB,QAAS8/B,GAAuBnG,EAAIt9B,GAChC,GAAI0a,GAAMuhB,EAAQqB,EAAGoG,SACjBC,EAAU1H,EAAQqB,EAAGsG,eAMzB,OAJI5jC,IAAQ2+B,GAAYC,MACpBlkB,EAAMwhB,EAAYxhB,EAAI+F,OAAOkjB,GAAU,cAAc,KAGjDjpB,EAAKipB,GAiBjB,QAAS7F,KACLz8B,KAAKgiC,SAAWQ,GAChBxiC,KAAKyiC,aAEL5G,EAAMt1B,MAAMvG,KAAMsC,WA0BtB,QAASogC,GAAWzG,EAAIt9B,GACpB,GAAIgkC,GAAa/H,EAAQqB,EAAGoG,SACxBI,EAAYziC,KAAKyiC,SAGrB,IAAI9jC,GAAQy+B,GAAcwF,KAAqC,IAAtBD,EAAW3lC,OAEhD,MADAylC,GAAUE,EAAW,GAAGE,aAAc,GAC9BF,EAAYA,EAGxB,IAAIlmC,GACAqmC,EACAP,EAAiB3H,EAAQqB,EAAGsG,gBAC5BQ,KACA3+B,EAASpE,KAAKoE,MAQlB,IALA0+B,EAAgBH,EAAW/lB,OAAO,SAASomB,GACvC,MAAO3I,GAAU2I,EAAM5+B,OAAQA,KAI/BzF,IAASy+B,GAET,IADA3gC,EAAI,EACGA,EAAIqmC,EAAc9lC,QACrBylC,EAAUK,EAAcrmC,GAAGomC,aAAc,EACzCpmC,GAMR,KADAA,EAAI,EACGA,EAAI8lC,EAAevlC,QAClBylC,EAAUF,EAAe9lC,GAAGomC,aAC5BE,EAAqB9hC,KAAKshC,EAAe9lC,IAIzCkC,GAAQ2+B,GAAYC,WACbkF,GAAUF,EAAe9lC,GAAGomC,YAEvCpmC,GAGJ,OAAKsmC,GAAqB/lC,QAMtB69B,EAAYiI,EAAc1jB,OAAO2jB,GAAuB,cAAc,GACtEA,GAPJ,OAwBJ,QAASpG,KACLd,EAAMt1B,MAAMvG,KAAMsC,UAElB,IAAI6U,GAAU6hB,EAAOh5B,KAAKmX,QAASnX,KACnCA,MAAKgjC,MAAQ,GAAIvG,GAAWz8B,KAAK87B,QAAS3kB,GAC1CnX,KAAKijC,MAAQ,GAAIrG,GAAW58B,KAAK87B,QAAS3kB,GAE1CnX,KAAKkjC,aAAe,KACpBljC,KAAKmjC,eAqCT,QAASC,GAActG,EAAWuG,GAC1BvG,EAAYM,IACZp9B,KAAKkjC,aAAeG,EAAUnG,gBAAgB,GAAG2F,WACjDS,EAAavmC,KAAKiD,KAAMqjC,IACjBvG,GAAaQ,GAAYC,KAChC+F,EAAavmC,KAAKiD,KAAMqjC,GAIhC,QAASC,GAAaD,GAClB,GAAIL,GAAQK,EAAUnG,gBAAgB,EAEtC,IAAI8F,EAAMH,aAAe7iC,KAAKkjC,aAAc,CACxC,GAAIK,IAAa5b,EAAGqb,EAAM3C,QAASlB,EAAG6D,EAAMzC,QAC5CvgC,MAAKmjC,YAAYliC,KAAKsiC,EACtB,IAAIC,GAAMxjC,KAAKmjC,YACXM,EAAkB,WAClB,GAAIhnC,GAAI+mC,EAAIxrB,QAAQurB,EAChB9mC,IAAI,GACJ+mC,EAAIpzB,OAAO3T,EAAG,GAGtB8F,YAAWkhC,EAAiBC,KAIpC,QAASC,GAAiBN,GAEtB,IAAK,GADD1b,GAAI0b,EAAU1D,SAASU,QAASlB,EAAIkE,EAAU1D,SAASY,QAClD9jC,EAAI,EAAGA,EAAIuD,KAAKmjC,YAAYnmC,OAAQP,IAAK,CAC9C,GAAIR,GAAI+D,KAAKmjC,YAAY1mC,GACrBmnC,EAAKj9B,KAAKy4B,IAAIzX,EAAI1rB,EAAE0rB,GAAIkc,EAAKl9B,KAAKy4B,IAAID,EAAIljC,EAAEkjC,EAChD,IAAIyE,GAAME,IAAkBD,GAAMC,GAC9B,OAAO,EAGf,OAAO,EAsBX,QAASC,GAAYjI,EAAS32B,GAC1BnF,KAAK87B,QAAUA,EACf97B,KAAK8b,IAAI3W,GAmGb,QAAS6+B,GAAkBC,GAEvB,GAAI1J,EAAM0J,EAASC,IACf,MAAOA,GAGX,IAAIC,GAAU5J,EAAM0J,EAASG,IACzBC,EAAU9J,EAAM0J,EAASK,GAM7B,OAAIH,IAAWE,EACJH,GAIPC,GAAWE,EACJF,EAAUC,GAAqBE,GAItC/J,EAAM0J,EAASM,IACRA,GAGJC,GAGX,QAASC,KACL,IAAKC,GACD,OAAO,CAEX,IAAIC,MACAC,EAAc1lC,EAAO2lC,KAAO3lC,EAAO2lC,IAAIC,QAO3C,QANC,OAAQ,eAAgB,QAAS,QAAS,cAAe,QAAQlX,QAAQ,SAASxK,GAI/EuhB,EAASvhB,IAAOwhB,GAAc1lC,EAAO2lC,IAAIC,SAAS,eAAgB1hB,KAE/DuhB,EA4CX,QAASI,GAAWloB,GAChB7c,KAAK6c,QAAU4c,MAAWz5B,KAAKglC,SAAUnoB,OAEzC7c,KAAKilC,GAAK5J,IAEVr7B,KAAK87B,QAAU,KAGf97B,KAAK6c,QAAQqf,OAAStC,EAAY55B,KAAK6c,QAAQqf,QAAQ,GAEvDl8B,KAAKklC,MAAQC,GAEbnlC,KAAKolC,gBACLplC,KAAKqlC,eAqOT,QAASC,GAASJ,GACd,MAAIA,GAAQK,GACD,SACAL,EAAQM,GACR,MACAN,EAAQO,GACR,OACAP,EAAQQ,GACR,QAEJ,GAQX,QAASC,GAAazF,GAClB,MAAIA,IAAaU,GACN,OACAV,GAAaS,GACb,KACAT,GAAaO,GACb,OACAP,GAAaQ,GACb,QAEJ,GASX,QAASkF,IAA6BC,EAAiBC,GACnD,GAAIhK,GAAUgK,EAAWhK,OACzB,OAAIA,GACOA,EAAQ50B,IAAI2+B,GAEhBA,EAQX,QAASE,MACLhB,EAAWx+B,MAAMvG,KAAMsC,WA6D3B,QAAS0jC,MACLD,GAAex/B,MAAMvG,KAAMsC,WAE3BtC,KAAKimC,GAAK,KACVjmC,KAAKkmC,GAAK,KA4Ed,QAASC,MACLJ,GAAex/B,MAAMvG,KAAMsC,WAsC/B,QAAS8jC,MACLrB,EAAWx+B,MAAMvG,KAAMsC,WAEvBtC,KAAKqmC,OAAS,KACdrmC,KAAKsmC,OAAS,KAmElB,QAASC,MACLR,GAAex/B,MAAMvG,KAAMsC,WA8B/B,QAASkkC,MACLT,GAAex/B,MAAMvG,KAAMsC,WA2D/B,QAASmkC,MACL1B,EAAWx+B,MAAMvG,KAAMsC,WAIvBtC,KAAK0mC,OAAQ,EACb1mC,KAAK2mC,SAAU,EAEf3mC,KAAKqmC,OAAS,KACdrmC,KAAKsmC,OAAS,KACdtmC,KAAK6yB,MAAQ,EAqGjB,QAAS+T,IAAOpL,EAAS3e,GAGrB,MAFAA,GAAUA,MACVA,EAAQgqB,YAAcjN,EAAY/c,EAAQgqB,YAAaD,GAAO5B,SAAS8B,QAChE,GAAIC,IAAQvL,EAAS3e,GAiIhC,QAASkqB,IAAQvL,EAAS3e,GACtB7c,KAAK6c,QAAU4c,MAAWmN,GAAO5B,SAAUnoB,OAE3C7c,KAAK6c,QAAQkf,YAAc/7B,KAAK6c,QAAQkf,aAAeP,EAEvDx7B,KAAKgnC,YACLhnC,KAAKw9B,WACLx9B,KAAK6mC,eACL7mC,KAAKinC,eAELjnC,KAAKw7B,QAAUA,EACfx7B,KAAK+1B,MAAQoG,EAAoBn8B,MACjCA,KAAKknC,YAAc,GAAInD,GAAY/jC,KAAMA,KAAK6c,QAAQqqB,aAEtDC,GAAennC,MAAM,GAErBsZ,EAAKtZ,KAAK6c,QAAQgqB,YAAa,SAASr8B,GACpC,GAAIs7B,GAAa9lC,KAAKonC,IAAI,GAAK58B,GAAK,GAAIA,EAAK,IAC7CA,GAAK,IAAMs7B,EAAWuB,cAAc78B,EAAK,IACzCA,EAAK,IAAMs7B,EAAWwB,eAAe98B,EAAK,KAC3CxK,MA4PP,QAASmnC,IAAerL,EAASsL,GAC7B,GAAI5L,GAAUM,EAAQN,OACtB,IAAKA,EAAQ+L,MAAb,CAGA,GAAI3rB,EACJtC,GAAKwiB,EAAQjf,QAAQ2qB,SAAU,SAASriC,EAAOqH,GAC3CoP,EAAOof,EAASQ,EAAQ+L,MAAO/6B,GAC3B46B,GACAtL,EAAQmL,YAAYrrB,GAAQ4f,EAAQ+L,MAAM3rB,GAC1C4f,EAAQ+L,MAAM3rB,GAAQzW,GAEtBq2B,EAAQ+L,MAAM3rB,GAAQkgB,EAAQmL,YAAYrrB,IAAS,KAGtDwrB,IACDtL,EAAQmL,iBAShB,QAASQ,IAAgBnyB,EAAO4f,GAC5B,GAAIwS,GAAe7xB,EAASC,YAAY,QACxC4xB,GAAaC,UAAUryB,GAAO,GAAM,GACpCoyB,EAAaE,QAAU1S,EACvBA,EAAK9wB,OAAOmR,cAAcmyB,GAngF9B,GA+FIjO,IA/FA2B,IAAmB,GAAI,SAAU,MAAO,KAAM,KAAM,KACpDyM,GAAehyB,EAASsb,cAAc,OAEtCwI,GAAgB,WAEhB2G,GAAQ35B,KAAK25B,MACblB,GAAMz4B,KAAKy4B,IACXhB,GAAM0J,KAAK1J,GA0FX3E,IADyB,kBAAlB7zB,QAAO6zB,OACL,SAAgBr1B,GACrB,GAAIA,IAAWU,GAAwB,OAAXV,EACxB,KAAM,IAAIiC,WAAU,6CAIxB,KAAK,GADD0hC,GAASniC,OAAOxB,GACXsC,EAAQ,EAAGA,EAAQpE,UAAUtF,OAAQ0J,IAAS,CACnD,GAAIshC,GAAS1lC,UAAUoE,EACvB,IAAIshC,IAAWljC,GAAwB,OAAXkjC,EACxB,IAAK,GAAIC,KAAWD,GACZA,EAAOhsB,eAAeisB,KACtBF,EAAOE,GAAWD,EAAOC,IAKzC,MAAOF,IAGFniC,OAAO6zB,MAWpB,IAAIyO,IAAShP,EAAU,SAAgBiP,EAAMla,EAAKma,GAG9C,IAFA,GAAIz9B,GAAO/E,OAAO+E,KAAKsjB,GACnBxxB,EAAI,EACDA,EAAIkO,EAAK3N,UACPorC,GAAUA,GAASD,EAAKx9B,EAAKlO,MAAQqI,KACtCqjC,EAAKx9B,EAAKlO,IAAMwxB,EAAItjB,EAAKlO,KAE7BA,GAEJ,OAAO0rC,IACR,SAAU,iBASTC,GAAQlP,EAAU,SAAeiP,EAAMla,GACvC,MAAOia,IAAOC,EAAMla,GAAK,IAC1B,QAAS,iBAiNRqN,GAAY,EAeZ+M,GAAe,wCAEf3L,GAAiB,gBAAkBx9B,GACnCo9B,GAAyBtB,EAAS97B,EAAQ,kBAAoB4F,EAC9D03B,GAAqBE,IAAiB2L,GAAap5B,KAAK8hB,UAAUuX,WAElEC,GAAmB,QACnBC,GAAiB,MACjBC,GAAmB,QACnBC,GAAoB,SAEpBtI,GAAmB,GAEnBhD,GAAc,EACdwF,GAAa,EACbtF,GAAY,EACZC,GAAe,EAEfiD,GAAiB,EACjBC,GAAiB,EACjBC,GAAkB,EAClBC,GAAe,EACfC,GAAiB,GAEjB+H,GAAuBlI,GAAiBC,GACxCkI,GAAqBjI,GAAeC,GACpCiI,GAAgBF,GAAuBC,GAEvC7H,IAAY,IAAK,KACjBM,IAAmB,UAAW,UA4BlCxF,GAAM97B,WAKFoX,QAAS,aAKTtX,KAAM,WACFG,KAAKshC,MAAQvH,EAAkB/5B,KAAKw7B,QAASx7B,KAAKshC,KAAMthC,KAAKg8B,YAC7Dh8B,KAAKgiC,UAAYjI,EAAkB/5B,KAAKoE,OAAQpE,KAAKgiC,SAAUhiC,KAAKg8B,YACpEh8B,KAAKwhC,OAASzH,EAAkBwB,EAAoBv7B,KAAKw7B,SAAUx7B,KAAKwhC,MAAOxhC,KAAKg8B,aAMxF8M,QAAS,WACL9oC,KAAKshC,MAAQnH,EAAqBn6B,KAAKw7B,QAASx7B,KAAKshC,KAAMthC,KAAKg8B,YAChEh8B,KAAKgiC,UAAY7H,EAAqBn6B,KAAKoE,OAAQpE,KAAKgiC,SAAUhiC,KAAKg8B,YACvEh8B,KAAKwhC,OAASrH,EAAqBoB,EAAoBv7B,KAAKw7B,SAAUx7B,KAAKwhC,MAAOxhC,KAAKg8B,aA4T/F,IAAI+M,KACAC,UAAW5L,GACX6L,UAAWrG,GACXsG,QAAS5L,IAGTiE,GAAuB,YACvBE,GAAsB,mBAgB1BrI,GAAQwD,EAAYf,GAKhB1kB,QAAS,SAAmB8kB,GACxB,GAAIa,GAAYiM,GAAgB9M,EAAGt9B,KAG/Bm+B,GAAYM,IAA6B,IAAdnB,EAAGkN,SAC9BnpC,KAAK0hC,SAAU,GAGf5E,EAAY8F,IAA2B,IAAb3G,EAAGmN,QAC7BtM,EAAYQ,IAIXt9B,KAAK0hC,UAIN5E,EAAYQ,KACZt9B,KAAK0hC,SAAU,GAGnB1hC,KAAKiiB,SAASjiB,KAAK87B,QAASgB,GACxBE,UAAWf,GACXiB,iBAAkBjB,GAClBoN,YAAaZ,GACb9I,SAAU1D,OAKtB,IAAIqN,KACAC,YAAanM,GACboM,YAAa5G,GACb6G,UAAWnM,GACXoM,cAAenM,GACfoM,WAAYpM,IAIZqM,IACA/qC,EAAG0pC,GACHplC,EAAGqlC,GACHnjC,EAAGojC,GACH/iC,EAAGgjC,IAGH/G,GAAyB,cACzBC,GAAwB,qCAGxB1iC,GAAO2qC,iBAAmB3qC,EAAO4qC,eACjCnI,GAAyB,gBACzBC,GAAwB,6CAiB5BxI,EAAQmD,EAAmBV,GAKvB1kB,QAAS,SAAmB8kB,GACxB,GAAI4F,GAAQ7hC,KAAK6hC,MACbkI,GAAgB,EAEhBC,EAAsB/N,EAAGt9B,KAAK8W,cAAcxE,QAAQ,KAAM,IAC1D6rB,EAAYwM,GAAkBU,GAC9BX,EAAcO,GAAuB3N,EAAGoN,cAAgBpN,EAAGoN,YAE3DY,EAAWZ,GAAed,GAG1B2B,EAAaxP,EAAQmH,EAAO5F,EAAGkO,UAAW,YAG1CrN,GAAYM,KAA8B,IAAdnB,EAAGkN,QAAgBc,GAC3CC,EAAa,IACbrI,EAAM5gC,KAAKg7B,GACXiO,EAAarI,EAAM7kC,OAAS,GAEzB8/B,GAAaQ,GAAYC,MAChCwM,GAAgB,GAIhBG,EAAa,IAKjBrI,EAAMqI,GAAcjO,EAEpBj8B,KAAKiiB,SAASjiB,KAAK87B,QAASgB,GACxBE,SAAU6E,EACV3E,iBAAkBjB,GAClBoN,YAAaA,EACb1J,SAAU1D,IAGV8N,GAEAlI,EAAMzxB,OAAO85B,EAAY,MAKrC,IAAIE,KACAC,WAAYjN,GACZkN,UAAW1H,GACX2H,SAAUjN,GACVkN,YAAajN,IAGb0E,GAA6B,aAC7BC,GAA6B,2CAejC9I,GAAQ2I,EAAkBlG,GACtB1kB,QAAS,SAAmB8kB,GACxB,GAAIt9B,GAAOyrC,GAAuBnO,EAAGt9B,KAOrC,IAJIA,IAASy+B,KACTp9B,KAAKmiC,SAAU,GAGdniC,KAAKmiC,QAAV,CAIA,GAAIE,GAAUD,EAAuBrlC,KAAKiD,KAAMi8B,EAAIt9B,EAGhDA,IAAQ2+B,GAAYC,KAAiB8E,EAAQ,GAAGrlC,OAASqlC,EAAQ,GAAGrlC,SAAW,IAC/EgD,KAAKmiC,SAAU,GAGnBniC,KAAKiiB,SAASjiB,KAAK87B,QAASn9B,GACxBq+B,SAAUqF,EAAQ,GAClBnF,gBAAiBmF,EAAQ,GACzBgH,YAAad,GACb5I,SAAU1D,OAsBtB,IAAIwO,KACAJ,WAAYjN,GACZkN,UAAW1H,GACX2H,SAAUjN,GACVkN,YAAajN,IAGbiF,GAAsB,2CAc1BpJ,GAAQqD,EAAYZ,GAChB1kB,QAAS,SAAoB8kB,GACzB,GAAIt9B,GAAO8rC,GAAgBxO,EAAGt9B,MAC1B0jC,EAAUK,EAAW3lC,KAAKiD,KAAMi8B,EAAIt9B,EACnC0jC,IAILriC,KAAKiiB,SAASjiB,KAAK87B,QAASn9B,GACxBq+B,SAAUqF,EAAQ,GAClBnF,gBAAiBmF,EAAQ,GACzBgH,YAAad,GACb5I,SAAU1D,MA4EtB,IAAIyH,IAAgB,KAChBI,GAAiB,EAarB1K,GAAQuD,EAAiBd,GAOrB1kB,QAAS,SAAoB2kB,EAAS4O,EAAYC,GAC9C,GAAIV,GAAWU,EAAUtB,aAAed,GACpCqC,EAAWD,EAAUtB,aAAeZ,EAExC,MAAImC,GAAWD,EAAUE,oBAAsBF,EAAUE,mBAAmBC,kBAA5E,CAKA,GAAIb,EACA7G,EAAcrmC,KAAKiD,KAAM0qC,EAAYC,OAClC,IAAIC,GAAWjH,EAAiB5mC,KAAKiD,KAAM2qC,GAC9C,MAGJ3qC,MAAKiiB,SAAS6Z,EAAS4O,EAAYC,KAMvC7B,QAAS,WACL9oC,KAAKgjC,MAAM8F,UACX9oC,KAAKijC,MAAM6F,YA0CnB,IAAIiC,IAAwB/P,EAAS6M,GAAaN,MAAO,eACrD7C,GAAsBqG,KAA0BjmC,EAGhDkmC,GAAuB,UACvBxG,GAAoB,OACpBD,GAA4B,eAC5BL,GAAoB,OACpBE,GAAqB,QACrBE,GAAqB,QACrB2G,GAAmBxG,GAcvBV,GAAYhkC,WAKR+b,IAAK,SAAS3W,GAENA,GAAS6lC,KACT7lC,EAAQnF,KAAKkrC,WAGbxG,IAAuB1kC,KAAK87B,QAAQN,QAAQ+L,OAAS0D,GAAiB9lC,KACtEnF,KAAK87B,QAAQN,QAAQ+L,MAAMwD,IAAyB5lC,GAExDnF,KAAKikC,QAAU9+B,EAAMsQ,cAAcglB,QAMvC0Q,OAAQ,WACJnrC,KAAK8b,IAAI9b,KAAK87B,QAAQjf,QAAQqqB,cAOlCgE,QAAS,WACL,GAAIjH,KAMJ,OALA3qB,GAAKtZ,KAAK87B,QAAQ+K,YAAa,SAASf,GAChCpM,EAASoM,EAAWjpB,QAAQqf,QAAS4J,MACrC7B,EAAUA,EAAQ7kB,OAAO0mB,EAAWsF,qBAGrCpH,EAAkBC,EAAQ71B,KAAK,OAO1Ci9B,gBAAiB,SAAStV,GACtB,GAAI4J,GAAW5J,EAAM4J,SACjBO,EAAYnK,EAAM4I,eAGtB,IAAI3+B,KAAK87B,QAAQ0B,QAAQ8N,UAErB,WADA3L,GAAS4L,gBAIb,IAAItH,GAAUjkC,KAAKikC,QACfuH,EAAUjR,EAAM0J,EAASC,MAAuB+G,GAAiB/G,IACjEG,EAAU9J,EAAM0J,EAASK,MAAwB2G,GAAiB3G,IAClEH,EAAU5J,EAAM0J,EAASG,MAAwB6G,GAAiB7G,GAEtE,IAAIoH,EAAS,CAGT,GAAIC,GAAyC,IAA1B1V,EAAMiH,SAAShgC,OAC9B0uC,EAAgB3V,EAAMyI,SAAW,EACjCmN,EAAiB5V,EAAMsI,UAAY,GAEvC,IAAIoN,GAAgBC,GAAiBC,EACjC,OAIR,MAAIxH,IAAWE,EAAf,OAKImH,GACCnH,GAAWnE,EAAYyI,IACvBxE,GAAWjE,EAAY0I,GACjB5oC,KAAK4rC,WAAWjM,GAH3B,QAWJiM,WAAY,SAASjM,GACjB3/B,KAAK87B,QAAQ0B,QAAQ8N,WAAY,EACjC3L,EAAS4L,kBAiFjB,IAAIpG,IAAiB,EACjBO,GAAc,EACdD,GAAgB,EAChBD,GAAc,EACdqG,GAAmBrG,GACnBD,GAAkB,GAClBuG,GAAe,EAwBnB/G,GAAWhlC,WAKPilC,YAOAlpB,IAAK,SAASe,GAKV,MAJA4c,IAAOz5B,KAAK6c,QAASA,GAGrB7c,KAAK87B,SAAW97B,KAAK87B,QAAQoL,YAAYiE,SAClCnrC,MAQXqnC,cAAe,SAASxB,GACpB,GAAI5M,EAAe4M,EAAiB,gBAAiB7lC,MACjD,MAAOA,KAGX,IAAIolC,GAAeplC,KAAKolC,YAMxB,OALAS,GAAkBD,GAA6BC,EAAiB7lC,MAC3DolC,EAAaS,EAAgBZ,MAC9BG,EAAaS,EAAgBZ,IAAMY,EACnCA,EAAgBwB,cAAcrnC,OAE3BA,MAQX+rC,kBAAmB,SAASlG,GACxB,MAAI5M,GAAe4M,EAAiB,oBAAqB7lC,MAC9CA,MAGX6lC,EAAkBD,GAA6BC,EAAiB7lC,YACzDA,MAAKolC,aAAaS,EAAgBZ,IAClCjlC,OAQXsnC,eAAgB,SAASzB,GACrB,GAAI5M,EAAe4M,EAAiB,iBAAkB7lC,MAClD,MAAOA,KAGX,IAAIqlC,GAAcrlC,KAAKqlC,WAMvB,OALAQ,GAAkBD,GAA6BC,EAAiB7lC,MAC5D06B,EAAQ2K,EAAaQ,MAAqB,IAC1CR,EAAYpkC,KAAK4kC,GACjBA,EAAgByB,eAAetnC,OAE5BA,MAQXgsC,mBAAoB,SAASnG,GACzB,GAAI5M,EAAe4M,EAAiB,qBAAsB7lC,MACtD,MAAOA,KAGX6lC,GAAkBD,GAA6BC,EAAiB7lC,KAChE,IAAI0G,GAAQg0B,EAAQ16B,KAAKqlC,YAAaQ,EAItC,OAHIn/B,IAAQ,GACR1G,KAAKqlC,YAAYj1B,OAAO1J,EAAO,GAE5B1G,MAOXisC,mBAAoB,WAChB,MAAOjsC,MAAKqlC,YAAYroC,OAAS,GAQrCkvC,iBAAkB,SAASrG,GACvB,QAAS7lC,KAAKolC,aAAaS,EAAgBZ,KAQ/ChvB,KAAM,SAAS8f,GAIX,QAAS9f,GAAKX,GACVnW,EAAK28B,QAAQ7lB,KAAKX,EAAOygB,GAJ7B,GAAI52B,GAAOa,KACPklC,EAAQllC,KAAKklC,KAObA,GAAQM,IACRvvB,EAAK9W,EAAK0d,QAAQvH,MAAQgwB,EAASJ,IAGvCjvB,EAAK9W,EAAK0d,QAAQvH,OAEdygB,EAAMoW,iBACNl2B,EAAK8f,EAAMoW,iBAIXjH,GAASM,IACTvvB,EAAK9W,EAAK0d,QAAQvH,MAAQgwB,EAASJ,KAU3CkH,QAAS,SAASrW,GACd,MAAI/1B,MAAKqsC,UACErsC,KAAKiW,KAAK8f,QAGrB/1B,KAAKklC,MAAQ4G,KAOjBO,QAAS,WAEL,IADA,GAAI5vC,GAAI,EACDA,EAAIuD,KAAKqlC,YAAYroC,QAAQ,CAChC,KAAMgD,KAAKqlC,YAAY5oC,GAAGyoC,OAAS4G,GAAe3G,KAC9C,OAAO,CAEX1oC,KAEJ,OAAO,GAOXihC,UAAW,SAASiN,GAGhB,GAAI2B,GAAiB7S,MAAWkR,EAGhC,OAAKjR,GAAS15B,KAAK6c,QAAQqf,QAASl8B,KAAMssC,KAOtCtsC,KAAKklC,OAAS2G,GAAmBtG,GAAkBuG,MACnD9rC,KAAKklC,MAAQC,IAGjBnlC,KAAKklC,MAAQllC,KAAKlB,QAAQwtC,QAItBtsC,KAAKklC,OAASQ,GAAcD,GAAgBD,GAAcD,KAC1DvlC,KAAKosC,QAAQE,MAfbtsC,KAAKusC,aACLvsC,KAAKklC,MAAQ4G,MAyBrBhtC,QAAS,SAAS6rC,KAOlBS,eAAgB,aAOhBmB,MAAO,cA8DXnT,EAAQ2M,GAAgBhB,GAKpBC,UAKIhI,SAAU,GASdwP,SAAU,SAASzW,GACf,GAAI0W,GAAiBzsC,KAAK6c,QAAQmgB,QAClC,OAA0B,KAAnByP,GAAwB1W,EAAMiH,SAAShgC,SAAWyvC,GAS7D3tC,QAAS,SAASi3B,GACd,GAAImP,GAAQllC,KAAKklC,MACbpI,EAAY/G,EAAM+G,UAElB4P,EAAexH,GAASQ,GAAcD,IACtCkH,EAAU3sC,KAAKwsC,SAASzW,EAG5B,OAAI2W,KAAiB5P,EAAYS,KAAiBoP,GACvCzH,EAAQK,GACRmH,GAAgBC,EACnB7P,EAAYQ,GACL4H,EAAQM,GACNN,EAAQQ,GAGdR,EAAQO,GAFJC,GAIRoG,MAiBf1S,EAAQ4M,GAAeD,IAKnBf,UACI1vB,MAAO,MACPs3B,UAAW,GACX5P,SAAU,EACVkD,UAAW2I,IAGfuC,eAAgB,WACZ,GAAIlL,GAAYlgC,KAAK6c,QAAQqjB,UACzB+D,IAOJ,OANI/D,GAAYyI,IACZ1E,EAAQhjC,KAAKqjC,IAEbpE,EAAY0I,IACZ3E,EAAQhjC,KAAKmjC,IAEVH,GAGX4I,cAAe,SAAS9W,GACpB,GAAIlZ,GAAU7c,KAAK6c,QACfiwB,GAAW,EACXtO,EAAWzI,EAAMyI,SACjB0B,EAAYnK,EAAMmK,UAClBvY,EAAIoO,EAAM8I,OACVM,EAAIpJ,EAAM+I,MAed,OAZMoB,GAAYrjB,EAAQqjB,YAClBrjB,EAAQqjB,UAAYyI,IACpBzI,EAAmB,IAANvY,EAAW6Y,GAAkB7Y,EAAI,EAAK8Y,GAAiBC,GACpEoM,EAAWnlB,GAAK3nB,KAAKimC,GACrBzH,EAAW73B,KAAKy4B,IAAIrJ,EAAM8I,UAE1BqB,EAAmB,IAANf,EAAWqB,GAAkBrB,EAAI,EAAKwB,GAAeC,GAClEkM,EAAW3N,GAAKn/B,KAAKkmC,GACrB1H,EAAW73B,KAAKy4B,IAAIrJ,EAAM+I,UAGlC/I,EAAMmK,UAAYA,EACX4M,GAAYtO,EAAW3hB,EAAQ+vB,WAAa1M,EAAYrjB,EAAQqjB,WAG3EsM,SAAU,SAASzW,GACf,MAAOgQ,IAAehmC,UAAUysC,SAASzvC,KAAKiD,KAAM+1B,KAC/C/1B,KAAKklC,MAAQQ,MAAkB1lC,KAAKklC,MAAQQ,KAAgB1lC,KAAK6sC,cAAc9W,KAGxF9f,KAAM,SAAS8f,GAEX/1B,KAAKimC,GAAKlQ,EAAM8I,OAChB7+B,KAAKkmC,GAAKnQ,EAAM+I,MAEhB,IAAIoB,GAAYyF,EAAa5P,EAAMmK,UAE/BA,KACAnK,EAAMoW,gBAAkBnsC,KAAK6c,QAAQvH,MAAQ4qB,GAEjDlgC,KAAKw5B,OAAOvjB,KAAKlZ,KAAKiD,KAAM+1B,MAcpCqD,EAAQ+M,GAAiBJ,IAKrBf,UACI1vB,MAAO,QACPs3B,UAAW,EACX5P,SAAU,GAGdoO,eAAgB,WACZ,OAAQlH,KAGZsI,SAAU,SAASzW,GACf,MAAO/1B,MAAKw5B,OAAOgT,SAASzvC,KAAKiD,KAAM+1B,KAClCpvB,KAAKy4B,IAAIrJ,EAAMsJ,MAAQ,GAAKr/B,KAAK6c,QAAQ+vB,WAAa5sC,KAAKklC,MAAQQ,KAG5EzvB,KAAM,SAAS8f,GACX,GAAoB,IAAhBA,EAAMsJ,MAAa,CACnB,GAAI0N,GAAQhX,EAAMsJ,MAAQ,EAAI,KAAO,KACrCtJ,GAAMoW,gBAAkBnsC,KAAK6c,QAAQvH,MAAQy3B,EAEjD/sC,KAAKw5B,OAAOvjB,KAAKlZ,KAAKiD,KAAM+1B,MAiBpCqD,EAAQgN,GAAiBrB,GAKrBC,UACI1vB,MAAO,QACP0nB,SAAU,EACVgQ,KAAM,IACNJ,UAAW,GAGfxB,eAAgB,WACZ,OAAQ5G,KAGZ1lC,QAAS,SAASi3B,GACd,GAAIlZ,GAAU7c,KAAK6c,QACfowB,EAAgBlX,EAAMiH,SAAShgC,SAAW6f,EAAQmgB,SAClDkQ,EAAgBnX,EAAMyI,SAAW3hB,EAAQ+vB,UACzCO,EAAYpX,EAAMsI,UAAYxhB,EAAQmwB,IAM1C,IAJAhtC,KAAKsmC,OAASvQ,GAITmX,IAAkBD,GAAkBlX,EAAM+G,WAAaQ,GAAYC,MAAkB4P,EACtFntC,KAAKusC,YACF,IAAIxW,EAAM+G,UAAYM,GACzBp9B,KAAKusC,QACLvsC,KAAKqmC,OAAStN,EAAkB,WAC5B/4B,KAAKklC,MAAQ2G,GACb7rC,KAAKosC,WACNvvB,EAAQmwB,KAAMhtC,UACd,IAAI+1B,EAAM+G,UAAYQ,GACzB,MAAOuO,GAEX,OAAOC,KAGXS,MAAO,WACHxY,aAAa/zB,KAAKqmC,SAGtBpwB,KAAM,SAAS8f,GACP/1B,KAAKklC,QAAU2G,KAIf9V,GAAUA,EAAM+G,UAAYQ,GAC5Bt9B,KAAK87B,QAAQ7lB,KAAKjW,KAAK6c,QAAQvH,MAAQ,KAAMygB,IAE7C/1B,KAAKsmC,OAAOnI,UAAYC,KACxBp+B,KAAK87B,QAAQ7lB,KAAKjW,KAAK6c,QAAQvH,MAAOtV,KAAKsmC,aAevDlN,EAAQmN,GAAkBR,IAKtBf,UACI1vB,MAAO,SACPs3B,UAAW,EACX5P,SAAU,GAGdoO,eAAgB,WACZ,OAAQlH,KAGZsI,SAAU,SAASzW,GACf,MAAO/1B,MAAKw5B,OAAOgT,SAASzvC,KAAKiD,KAAM+1B,KAClCpvB,KAAKy4B,IAAIrJ,EAAMwJ,UAAYv/B,KAAK6c,QAAQ+vB,WAAa5sC,KAAKklC,MAAQQ;IAc/EtM,EAAQoN,GAAiBT,IAKrBf,UACI1vB,MAAO,QACPs3B,UAAW,GACX7M,SAAU,GACVG,UAAWyI,GAAuBC,GAClC5L,SAAU,GAGdoO,eAAgB,WACZ,MAAOpF,IAAcjmC,UAAUqrC,eAAeruC,KAAKiD,OAGvDwsC,SAAU,SAASzW,GACf,GACIgK,GADAG,EAAYlgC,KAAK6c,QAAQqjB,SAW7B,OARIA,IAAayI,GAAuBC,IACpC7I,EAAWhK,EAAMgJ,gBACVmB,EAAYyI,GACnB5I,EAAWhK,EAAMkJ,iBACViB,EAAY0I,KACnB7I,EAAWhK,EAAMmJ,kBAGdl/B,KAAKw5B,OAAOgT,SAASzvC,KAAKiD,KAAM+1B,IACnCmK,EAAYnK,EAAM4I,iBAClB5I,EAAMyI,SAAWx+B,KAAK6c,QAAQ+vB,WAC9B7W,EAAM0J,aAAez/B,KAAK6c,QAAQmgB,UAClCoC,GAAIW,GAAY//B,KAAK6c,QAAQkjB,UAAYhK,EAAM+G,UAAYQ,IAGnErnB,KAAM,SAAS8f,GACX,GAAImK,GAAYyF,EAAa5P,EAAM4I,gBAC/BuB,IACAlgC,KAAK87B,QAAQ7lB,KAAKjW,KAAK6c,QAAQvH,MAAQ4qB,EAAWnK,GAGtD/1B,KAAK87B,QAAQ7lB,KAAKjW,KAAK6c,QAAQvH,MAAOygB,MA2B9CqD,EAAQqN,GAAe1B,GAKnBC,UACI1vB,MAAO,MACP0nB,SAAU,EACVoQ,KAAM,EACNC,SAAU,IACVL,KAAM,IACNJ,UAAW,EACXU,aAAc,IAGlBlC,eAAgB,WACZ,OAAQ7G,KAGZzlC,QAAS,SAASi3B,GACd,GAAIlZ,GAAU7c,KAAK6c,QAEfowB,EAAgBlX,EAAMiH,SAAShgC,SAAW6f,EAAQmgB,SAClDkQ,EAAgBnX,EAAMyI,SAAW3hB,EAAQ+vB,UACzCW,EAAiBxX,EAAMsI,UAAYxhB,EAAQmwB,IAI/C,IAFAhtC,KAAKusC,QAEAxW,EAAM+G,UAAYM,IAAgC,IAAfp9B,KAAK6yB,MACzC,MAAO7yB,MAAKwtC,aAKhB,IAAIN,GAAiBK,GAAkBN,EAAe,CAClD,GAAIlX,EAAM+G,WAAaQ,GACnB,MAAOt9B,MAAKwtC,aAGhB,IAAIC,IAAgBztC,KAAK0mC,OAAS3Q,EAAMoI,UAAYn+B,KAAK0mC,MAAQ7pB,EAAQwwB,SACrEK,GAAiB1tC,KAAK2mC,SAAWlI,EAAYz+B,KAAK2mC,QAAS5Q,EAAMkI,QAAUphB,EAAQywB,YAEvFttC,MAAK0mC,MAAQ3Q,EAAMoI,UACnBn+B,KAAK2mC,QAAU5Q,EAAMkI,OAEhByP,GAAkBD,EAGnBztC,KAAK6yB,OAAS,EAFd7yB,KAAK6yB,MAAQ,EAKjB7yB,KAAKsmC,OAASvQ,CAId,IAAI4X,GAAW3tC,KAAK6yB,MAAQhW,EAAQuwB,IACpC,IAAiB,IAAbO,EAGA,MAAK3tC,MAAKisC,sBAGNjsC,KAAKqmC,OAAStN,EAAkB,WAC5B/4B,KAAKklC,MAAQ2G,GACb7rC,KAAKosC,WACNvvB,EAAQwwB,SAAUrtC,MACd0lC,IANAmG,GAUnB,MAAOC,KAGX0B,YAAa,WAIT,MAHAxtC,MAAKqmC,OAAStN,EAAkB,WAC5B/4B,KAAKklC,MAAQ4G,IACd9rC,KAAK6c,QAAQwwB,SAAUrtC,MACnB8rC,IAGXS,MAAO,WACHxY,aAAa/zB,KAAKqmC,SAGtBpwB,KAAM,WACEjW,KAAKklC,OAAS2G,KACd7rC,KAAKsmC,OAAOqH,SAAW3tC,KAAK6yB,MAC5B7yB,KAAK87B,QAAQ7lB,KAAKjW,KAAK6c,QAAQvH,MAAOtV,KAAKsmC,YAoBvDM,GAAOgH,QAAU,QAMjBhH,GAAO5B,UAOH6I,WAAW,EAQX3G,YAAa8D,GAMb9O,QAAQ,EASRH,YAAa,KAObM,WAAY,KAOZyK,SAEKP,IAAmBrK,QAAQ,KAC3BiK,IAAkBjK,QAAQ,IAAS,YACnCsK,IAAkBtG,UAAWyI,MAC7B3C,IAAgB9F,UAAWyI,KAAwB,WACnDlC,KACAA,IAAgBnxB,MAAO,YAAa83B,KAAM,IAAK,SAC/ChH,KAQLoB,UAMIsG,WAAY,OAOZC,YAAa,OASbC,aAAc,OAOdC,eAAgB,OAOhBC,SAAU,OAQVC,kBAAmB,iBAI3B,IAAIC,IAAO,EACPC,GAAc,CA+BlBtH,IAAQhnC,WAMJ+b,IAAK,SAASe,GAaV,MAZA4c,IAAOz5B,KAAK6c,QAASA,GAGjBA,EAAQqqB,aACRlnC,KAAKknC,YAAYiE,SAEjBtuB,EAAQkf,cAER/7B,KAAK+1B,MAAM+S,UACX9oC,KAAK+1B,MAAM3xB,OAASyY,EAAQkf,YAC5B/7B,KAAK+1B,MAAMl2B,QAERG,MASXsuC,KAAM,SAASC,GACXvuC,KAAKw9B,QAAQgR,QAAUD,EAAQF,GAAcD,IASjD1Q,UAAW,SAASiN,GAChB,GAAInN,GAAUx9B,KAAKw9B,OACnB,KAAIA,EAAQgR,QAAZ,CAKAxuC,KAAKknC,YAAYmE,gBAAgBV,EAEjC,IAAI7E,GACAe,EAAc7mC,KAAK6mC,YAKnB4H,EAAgBjR,EAAQiR,gBAIvBA,GAAkBA,GAAiBA,EAAcvJ,MAAQ2G,MAC1D4C,EAAgBjR,EAAQiR,cAAgB,KAI5C,KADA,GAAIhyC,GAAI,EACDA,EAAIoqC,EAAY7pC,QACnB8oC,EAAae,EAAYpqC,GAQrB+gC,EAAQgR,UAAYH,IACfI,GAAiB3I,GAAc2I,IAChC3I,EAAWoG,iBAAiBuC,GAGhC3I,EAAWyG,QAFXzG,EAAWpI,UAAUiN,IAOpB8D,GAAiB3I,EAAWZ,OAASQ,GAAcD,GAAgBD,MACpEiJ,EAAgBjR,EAAQiR,cAAgB3I,GAE5CrpC,MASRyK,IAAK,SAAS4+B,GACV,GAAIA,YAAsBf,GACtB,MAAOe,EAIX,KAAK,GADDe,GAAc7mC,KAAK6mC,YACdpqC,EAAI,EAAGA,EAAIoqC,EAAY7pC,OAAQP,IACpC,GAAIoqC,EAAYpqC,GAAGogB,QAAQvH,OAASwwB,EAChC,MAAOe,GAAYpqC,EAG3B,OAAO,OASX2qC,IAAK,SAAStB,GACV,GAAI7M,EAAe6M,EAAY,MAAO9lC,MAClC,MAAOA,KAIX,IAAI0uC,GAAW1uC,KAAKkH,IAAI4+B,EAAWjpB,QAAQvH,MAS3C,OARIo5B,IACA1uC,KAAK2uC,OAAOD,GAGhB1uC,KAAK6mC,YAAY5lC,KAAK6kC,GACtBA,EAAWhK,QAAU97B,KAErBA,KAAKknC,YAAYiE,SACVrF,GAQX6I,OAAQ,SAAS7I,GACb,GAAI7M,EAAe6M,EAAY,SAAU9lC,MACrC,MAAOA,KAMX,IAHA8lC,EAAa9lC,KAAKkH,IAAI4+B,GAGN,CACZ,GAAIe,GAAc7mC,KAAK6mC,YACnBngC,EAAQg0B,EAAQmM,EAAaf,EAE7Bp/B,MAAU,IACVmgC,EAAYz2B,OAAO1J,EAAO,GAC1B1G,KAAKknC,YAAYiE,UAIzB,MAAOnrC,OASX4uC,GAAI,SAASC,EAAQ13B,GACjB,GAAI03B,IAAW/pC,GAGXqS,IAAYrS,EAAhB,CAIA,GAAIkiC,GAAWhnC,KAAKgnC,QAKpB,OAJA1tB,GAAK2gB,EAAS4U,GAAS,SAASv5B,GAC5B0xB,EAAS1xB,GAAS0xB,EAAS1xB,OAC3B0xB,EAAS1xB,GAAOrU,KAAKkW,KAElBnX,OASX8uC,IAAK,SAASD,EAAQ13B,GAClB,GAAI03B,IAAW/pC,EAAf,CAIA,GAAIkiC,GAAWhnC,KAAKgnC,QAQpB,OAPA1tB,GAAK2gB,EAAS4U,GAAS,SAASv5B,GACvB6B,EAGD6vB,EAAS1xB,IAAU0xB,EAAS1xB,GAAOlF,OAAOsqB,EAAQsM,EAAS1xB,GAAQ6B,GAAU,SAFtE6vB,GAAS1xB,KAKjBtV,OAQXiW,KAAM,SAASX,EAAO4f,GAEdl1B,KAAK6c,QAAQgxB,WACbpG,GAAgBnyB,EAAO4f,EAI3B,IAAI8R,GAAWhnC,KAAKgnC,SAAS1xB,IAAUtV,KAAKgnC,SAAS1xB,GAAOrO,OAC5D,IAAK+/B,GAAaA,EAAShqC,OAA3B,CAIAk4B,EAAKv2B,KAAO2W,EACZ4f,EAAKqW,eAAiB,WAClBrW,EAAKyK,SAAS4L,iBAIlB,KADA,GAAI9uC,GAAI,EACDA,EAAIuqC,EAAShqC,QAChBgqC,EAASvqC,GAAGy4B,GACZz4B,MAQRqsC,QAAS,WACL9oC,KAAKw7B,SAAW2L,GAAennC,MAAM,GAErCA,KAAKgnC,YACLhnC,KAAKw9B,WACLx9B,KAAK+1B,MAAM+S,UACX9oC,KAAKw7B,QAAU,OAyCvB/B,GAAOmN,IACHxJ,YAAaA,GACbwF,WAAYA,GACZtF,UAAWA,GACXC,aAAcA,GAEd4H,eAAgBA,GAChBO,YAAaA,GACbD,cAAeA,GACfD,YAAaA,GACbqG,iBAAkBA,GAClBtG,gBAAiBA,GACjBuG,aAAcA,GAEdtL,eAAgBA,GAChBC,eAAgBA,GAChBC,gBAAiBA,GACjBC,aAAcA,GACdC,eAAgBA,GAChB+H,qBAAsBA,GACtBC,mBAAoBA,GACpBC,cAAeA,GAEf9B,QAASA,GACTlL,MAAOA,EACPkI,YAAaA,EAEbtH,WAAYA,EACZG,WAAYA,EACZL,kBAAmBA,EACnBI,gBAAiBA,EACjBoF,iBAAkBA,EAElBgD,WAAYA,EACZgB,eAAgBA,GAChBgJ,IAAKtI,GACLuI,IAAKhJ,GACLiJ,MAAOzI,GACP0I,MAAO/I,GACPgJ,OAAQ5I,GACR6I,MAAOhJ,GAEPwI,GAAI7U,EACJ+U,IAAK3U,EACL7gB,KAAMA,EACN8uB,MAAOA,GACPF,OAAQA,GACRzO,OAAQA,GACRL,QAASA,EACTJ,OAAQA,EACRgC,SAAUA,GAKd,IAAIqU,IAAgC,mBAAXnwC,GAAyBA,EAA0B,mBAATC,MAAuBA,OAC1FkwC,IAAWzI,OAASA,GAEE,kBAAX5nC,SAAyBA,OAAOC,IACvCD,OAAO,WACH,MAAO4nC,MAEa,mBAAV1pC,IAAyBA,EAAOJ,QAC9CI,EAAOJ,QAAU8pC,GAEjB1nC,EAAO45B,GAAc8N,IAGtB1nC,OAAQ2W,SAAU,eAEfxQ,GAAG,SAAS7I,EAAQU,EAAOJ,IACjC,SAAWiC,IAWX,WAWE,GAAIuwC,GAAe,WACjBtvC,KAAKH,OAEPyvC,GAAavvC,WAKXF,KAAM,WACJ,GAAIV,GAAOa,MAAQuvC,CAuBnB,OApBApwC,GAAKqwC,WACLrwC,EAAKswC,UACLtwC,EAAKuwC,QAAS,EACdvwC,EAAKwwC,QAAU,EACfxwC,EAAKywC,cAAgB,iBACrBzwC,EAAK0wC,WAAgC,mBAAX3wC,SAA0BA,OAAO6xB,UAAa7xB,OAAO6xB,UAAY,KAG3F5xB,EAAK2wC,WAAa,KAClB3wC,EAAK4wC,SAAU,EACf5wC,EAAK6wC,eAAgB,EACrB7wC,EAAK8wC,aAAc,EACnB9wC,EAAKkN,IAAM,KAGXlN,EAAK+wC,kBAAmB,EAGxB/wC,EAAKgxC,SAEEhxC,GAQTixC,OAAQ,SAASC,GACf,GAAIlxC,GAAOa,MAAQuvC,CAQnB,IAPAc,EAAMC,WAAWD,GAGZlxC,EAAKkN,KACRkkC,IAGiB,mBAARF,IAAuBA,GAAO,GAAKA,GAAO,EAAG,CAItD,GAHAlxC,EAAKwwC,QAAUU,EAGXlxC,EAAKuwC,OACP,MAAOvwC,EAILA,GAAK6wC,gBACP7wC,EAAK2wC,WAAWU,KAAKrrC,MAAQkrC,EAI/B,KAAK,GAAI5zC,GAAE,EAAGA,EAAE0C,EAAKswC,OAAOzyC,OAAQP,IAClC,IAAK0C,EAAKswC,OAAOhzC,GAAGg0C,UAKlB,IAAK,GAHDC,GAAMvxC,EAAKswC,OAAOhzC,GAAGk0C,eAGhB9lC,EAAE,EAAGA,EAAE6lC,EAAI1zC,OAAQ6N,IAAK,CAC/B,GAAI+lC,GAAQzxC,EAAKswC,OAAOhzC,GAAGo0C,WAAWH,EAAI7lC,GAEtC+lC,IAASA,EAAME,QACjBF,EAAME,MAAMV,OAASQ,EAAMjB,QAAUU,GAM7C,MAAOlxC,GAGT,MAAOA,GAAKwwC,SAOdoB,KAAM,SAASC,GACb,GAAI7xC,GAAOa,MAAQuvC,CAGdpwC,GAAKkN,KACRkkC,IAGFpxC,EAAKuwC,OAASsB,EAGV7xC,EAAK6wC,gBACP7wC,EAAK2wC,WAAWU,KAAKrrC,MAAQ6rC,EAAQ,EAAI7xC,EAAKwwC,QAIhD,KAAK,GAAIlzC,GAAE,EAAGA,EAAE0C,EAAKswC,OAAOzyC,OAAQP,IAClC,IAAK0C,EAAKswC,OAAOhzC,GAAGg0C,UAKlB,IAAK,GAHDC,GAAMvxC,EAAKswC,OAAOhzC,GAAGk0C,eAGhB9lC,EAAE,EAAGA,EAAE6lC,EAAI1zC,OAAQ6N,IAAK,CAC/B,GAAI+lC,GAAQzxC,EAAKswC,OAAOhzC,GAAGo0C,WAAWH,EAAI7lC,GAEtC+lC,IAASA,EAAME,QACjBF,EAAME,MAAME,QAAQ,GAAiBJ,EAAMlB,QAMnD,MAAOvwC,IAOT8xC,OAAQ,WAGN,IAAK,GAFD9xC,GAAOa,MAAQuvC,EAEV9yC,EAAE0C,EAAKswC,OAAOzyC,OAAO,EAAGP,GAAG,EAAGA,IACrC0C,EAAKswC,OAAOhzC,GAAGw0C,QAUjB,OANI9xC,GAAK6wC,eAAiB7wC,EAAKkN,KAAiC,mBAAnBlN,GAAKkN,IAAI6kC,QACpD/xC,EAAKkN,IAAI6kC,QACT/xC,EAAKkN,IAAM,KACXkkC,KAGKpxC,GAQTgyC,OAAQ,SAASC,GACf,OAAQpxC,MAAQuvC,GAAQC,QAAQ4B,EAAIngC,QAAQ,MAAO,MAOrDk/B,OAAQ,WACN,GAAIhxC,GAAOa,MAAQuvC,CASnB,IANApwC,EAAK+lC,MAAQ/lC,EAAKkN,IAAMlN,EAAKkN,IAAI64B,OAAS,UAAY,UAGtD/lC,EAAKkyC,gBAGAlyC,EAAK6wC,cAER,GAAqB,mBAAVsB,OACT,IACE,GAAIriC,GAAO,GAAIqiC,MAGsB,oBAA1BriC,GAAKsiC,mBACdpyC,EAAKywC,cAAgB,WAEvB,MAAM5zC,GACNmD,EAAK4wC,SAAU,MAGjB5wC,GAAK4wC,SAAU,CAKnB,KACE,GAAI9gC,GAAO,GAAIqiC,MACXriC,GAAK+hC,QACP7xC,EAAK4wC,SAAU,GAEjB,MAAO/zC,IAOT,MAJKmD,GAAK4wC,SACR5wC,EAAKqyC,eAGAryC,GAOTqyC,aAAc,WACZ,GAAIryC,GAAOa,MAAQuvC,EACfkC,EAAY,IAGhB,KACEA,EAA8B,mBAAVH,OAAyB,GAAIA,OAAU,KAC3D,MAAOv5B,GACP,MAAO5Y,GAGT,IAAKsyC,GAA8C,kBAA1BA,GAAUC,YACjC,MAAOvyC,EAGT,IAAIwyC,GAAWF,EAAUC,YAAY,eAAezgC,QAAQ,OAAQ,IAGhE2gC,EAAazyC,EAAK0wC,YAAc1wC,EAAK0wC,WAAWvH,UAAUn5B,MAAM,kBAChE0iC,EAAcD,GAAch/B,SAASg/B,EAAW,GAAG/iC,MAAM,KAAK,GAAI,IAAM,EAmB5E,OAjBA1P,GAAKqwC,SACHsC,MAASD,IAAeF,IAAYF,EAAUC,YAAY,cAAczgC,QAAQ,OAAQ,KACxF8gC,OAAQJ,EACRK,OAAQP,EAAUC,YAAY,4BAA4BzgC,QAAQ,OAAQ,IAC1EghC,MAAOR,EAAUC,YAAY,8BAA8BzgC,QAAQ,OAAQ,IAC3EihC,MAAOT,EAAUC,YAAY,8BAA8BzgC,QAAQ,OAAQ,IAC3EkhC,MAAOV,EAAUC,YAAY,yBAAyBzgC,QAAQ,OAAQ,IACtEmhC,MAAOX,EAAUC,YAAY,cAAczgC,QAAQ,OAAQ,IAC3DohC,MAAOZ,EAAUC,YAAY,gBAAgBzgC,QAAQ,OAAQ,IAC7DqhC,OAAQb,EAAUC,YAAY,iBAAmBD,EAAUC,YAAY,eAAiBD,EAAUC,YAAY,eAAezgC,QAAQ,OAAQ,IAC7IshC,OAAQd,EAAUC,YAAY,iBAAmBD,EAAUC,YAAY,eAAiBD,EAAUC,YAAY,eAAezgC,QAAQ,OAAQ,IAC7IuhC,OAAQf,EAAUC,YAAY,+BAA+BzgC,QAAQ,OAAQ,IAC7EwhC,OAAQhB,EAAUC,YAAY,+BAA+BzgC,QAAQ,OAAQ,IAC7EyhC,QAASjB,EAAUC,YAAY,4BAA4BzgC,QAAQ,OAAQ,IAC3E0hC,QAASlB,EAAUC,YAAY,kBAAoBD,EAAUC,YAAY,gBAAgBzgC,QAAQ,OAAQ,KAGpG9R,GASTyzC,mBAAoB,WAClB,GAAIzzC,GAAOa,MAAQuvC,EAGfsD,EAAW,sDAAsD5jC,KAAK9P,EAAK0wC,YAAc1wC,EAAK0wC,WAAWvH,WACzG2B,KAAc,cAAgB/qC,SAAYC,EAAK0wC,YAAc1wC,EAAK0wC,WAAWiD,eAAiB,GAAO3zC,EAAK0wC,YAAc1wC,EAAK0wC,WAAWkD,iBAAmB,EAC/J,KAAI5zC,EAAK6zC,gBAAmB7zC,EAAKkN,MAASwmC,GAAa5I,GAAvD,CAIA9qC,EAAK6zC,gBAAiB,EAKjB7zC,EAAK8zC,iBAA2C,QAAxB9zC,EAAKkN,IAAI6mC,aACpC/zC,EAAK8zC,iBAAkB,EACvB9zC,EAAK8xC,UAKP9xC,EAAKg0C,eAAiBh0C,EAAKkN,IAAI+mC,aAAa,EAAG,EAAG,MAKlD,IAAIC,GAAS,WAEX,GAAIrL,GAAS7oC,EAAKkN,IAAIinC,oBACtBtL,GAAOuL,OAASp0C,EAAKg0C,eACrBnL,EAAOwL,QAAQr0C,EAAKkN,IAAIonC,aAGI,mBAAjBzL,GAAO7G,MAChB6G,EAAO0L,OAAO,GAEd1L,EAAO7G,MAAM,GAIf6G,EAAO2L,QAAU,WACf3L,EAAOpW,WAAW,GAGlBzyB,EAAK6zC,gBAAiB,EACtB7zC,EAAK+wC,kBAAmB,EAGxBr6B,SAASukB,oBAAoB,WAAYiZ,GAAQ,IAOrD,OAFAx9B,UAASqkB,iBAAiB,WAAYmZ,GAAQ,GAEvCl0C,IAQTkyC,aAAc,WACZ,GAAIlyC,GAAOa,IAEX,IAAKb,EAAK8wC,aAAgB9wC,EAAKkN,KAAmC,mBAArBlN,GAAKkN,IAAIunC,SAA4BrE,EAAOS,cAAzF,CAKA,IAAK,GAAIvzC,GAAE,EAAGA,EAAE0C,EAAKswC,OAAOzyC,OAAQP,IAClC,GAAI0C,EAAKswC,OAAOhzC,GAAGg0C,UACjB,IAAK,GAAI5lC,GAAE,EAAGA,EAAE1L,EAAKswC,OAAOhzC,GAAGo3C,QAAQ72C,OAAQ6N,IAC7C,IAAK1L,EAAKswC,OAAOhzC,GAAGo3C,QAAQhpC,GAAGipC,QAC7B,MAAO30C,EA4Bf,OAtBIA,GAAK40C,eACPhgB,aAAa50B,EAAK40C,eAIpB50C,EAAK40C,cAAgBxxC,WAAW,WACzBpD,EAAK8wC,cAIV9wC,EAAK40C,cAAgB,KACrB50C,EAAK+lC,MAAQ,aACb/lC,EAAKkN,IAAIunC,UAAUh2B,KAAK,WACtBze,EAAK+lC,MAAQ,YAET/lC,EAAK60C,4BACA70C,GAAK60C,oBACZ70C,EAAK80C,mBAGR,KAEI90C,IAOT80C,YAAa,WACX,GAAI90C,GAAOa,IAEX,IAAKb,EAAKkN,KAAkC,mBAApBlN,GAAKkN,IAAI6nC,QAA2B3E,EAAOS,cA0BnE,MAtBmB,YAAf7wC,EAAK+lC,OAAuB/lC,EAAK40C,eACnChgB,aAAa50B,EAAK40C,eAClB50C,EAAK40C,cAAgB,MACG,cAAf50C,EAAK+lC,OACd/lC,EAAK+lC,MAAQ,WACb/lC,EAAKkN,IAAI6nC,SAASt2B,KAAK,WACrBze,EAAK+lC,MAAQ,SAGb,KAAK,GAAIzoC,GAAE,EAAGA,EAAE0C,EAAKswC,OAAOzyC,OAAQP,IAClC0C,EAAKswC,OAAOhzC,GAAG03C,MAAM,YAIrBh1C,EAAK40C,gBACPhgB,aAAa50B,EAAK40C,eAClB50C,EAAK40C,cAAgB,OAEC,eAAf50C,EAAK+lC,QACd/lC,EAAK60C,qBAAsB,GAGtB70C,GAKX,IAAIowC,GAAS,GAAID,GASb8E,EAAO,SAAS/3C,GAClB,GAAI8C,GAAOa,IAGX,OAAK3D,GAAE4xB,KAAwB,IAAjB5xB,EAAE4xB,IAAIjxB,WAKpBmC,GAAKU,KAAKxD,OAJR+U,SAAQzD,MAAM,8DAMlBymC,GAAKr0C,WAMHF,KAAM,SAASxD,GACb,GAAI8C,GAAOa,IAmEX,OAhEKuvC,GAAOljC,KACVkkC,IAIFpxC,EAAKk1C,UAAYh4C,EAAEi4C,WAAY,EAC/Bn1C,EAAKo1C,QAA+B,gBAAbl4C,GAAEm4C,OAAuBn4C,EAAEm4C,QAAUn4C,EAAEm4C,QAC9Dr1C,EAAKs1C,OAASp4C,EAAEq4C,QAAS,EACzBv1C,EAAKuwC,OAASrzC,EAAE00C,OAAQ,EACxB5xC,EAAKw1C,MAAQt4C,EAAEu4C,OAAQ,EACvBz1C,EAAK01C,MAAQx4C,EAAEy4C,MAAQ,EACvB31C,EAAK41C,SAAiC,iBAAd14C,GAAE24C,SAAyB34C,EAAE24C,QACrD71C,EAAK81C,MAAQ54C,EAAE64C,MAAQ,EACvB/1C,EAAKg2C,QAAU94C,EAAE+4C,WACjBj2C,EAAKk2C,KAAyB,gBAAVh5C,GAAE4xB,IAAoB5xB,EAAE4xB,KAAO5xB,EAAE4xB,KACrD9uB,EAAKwwC,QAAuB7qC,SAAbzI,EAAE+zC,OAAuB/zC,EAAE+zC,OAAS,EAGnDjxC,EAAKm2C,UAAY,EACjBn2C,EAAKo2C,OAAS,WACdp2C,EAAK00C,WACL10C,EAAKq2C,cACLr2C,EAAKqiB,UAGLriB,EAAKs2C,OAASp5C,EAAEq5C,QAAU50C,GAAIzE,EAAEq5C,WAChCv2C,EAAKw2C,QAAUt5C,EAAEu5C,SAAW90C,GAAIzE,EAAEu5C,YAClCz2C,EAAK02C,QAAUx5C,EAAEy5C,SAAWh1C,GAAIzE,EAAEy5C,YAClC32C,EAAK42C,aAAe15C,EAAE25C,cAAgBl1C,GAAIzE,EAAE25C,iBAC5C72C,EAAK82C,SAAW55C,EAAE65C,UAAYp1C,GAAIzE,EAAE65C,aACpC/2C,EAAKg3C,QAAU95C,EAAE+5C,SAAWt1C,GAAIzE,EAAE+5C,YAClCj3C,EAAKk3C,QAAUh6C,EAAEi6C,SAAWx1C,GAAIzE,EAAEi6C,YAClCn3C,EAAKo3C,QAAUl6C,EAAEm6C,SAAW11C,GAAIzE,EAAEm6C,YAClCr3C,EAAKs3C,UAAYp6C,EAAEq6C,WAAa51C,GAAIzE,EAAEq6C,cACtCv3C,EAAKw3C,QAAUt6C,EAAEu6C,SAAW91C,GAAIzE,EAAEu6C,YAClCz3C,EAAK03C,QAAUx6C,EAAEy6C,SAAWh2C,GAAIzE,EAAEy6C,YAClC33C,EAAK43C,aAGL53C,EAAKsxC,UAAYlB,EAAOS,gBAAkB7wC,EAAKs1C,OAGrB,mBAAflF,GAAOljC,KAAuBkjC,EAAOljC,KAAOkjC,EAAOW,kBAC5DX,EAAOqD,qBAITrD,EAAOE,OAAOxuC,KAAK9B,GAGfA,EAAKk1C,WACPl1C,EAAKqiB,OAAOvgB,MACVqU,MAAO,OACP0hC,OAAQ,WACN73C,EAAK83C,UAMP93C,EAAK41C,UACP51C,EAAK+3C,OAGA/3C,GAOT+3C,KAAM,WACJ,GAAI/3C,GAAOa,KACPm3C,EAAM,IAGV,IAAI5H,EAAOQ,QAET,WADA5wC,GAAKg1C,MAAM,YAAa,KAAM,oBAKP,iBAAdh1C,GAAKk2C,OACdl2C,EAAKk2C,MAAQl2C,EAAKk2C,MAIpB,KAAK,GAAI54C,GAAE,EAAGA,EAAE0C,EAAKk2C,KAAKr4C,OAAQP,IAAK,CACrC,GAAI20C,GAAKt/B,CAET,IAAI3S,EAAKo1C,SAAWp1C,EAAKo1C,QAAQ93C,GAE/B20C,EAAMjyC,EAAKo1C,QAAQ93C,OACd,CAGL,GADAqV,EAAM3S,EAAKk2C,KAAK54C,GACG,gBAARqV,GAAkB,CAC3B3S,EAAKg1C,MAAM,YAAa,KAAM,yDAC9B,UAIF/C,EAAM,0BAA0BgG,KAAKtlC,GAChCs/B,IACHA,EAAM,aAAagG,KAAKtlC,EAAIjD,MAAM,IAAK,GAAG,KAGxCuiC,IACFA,EAAMA,EAAI,GAAG37B,eAKjB,GAAI85B,EAAO4B,OAAOC,GAAM,CACtB+F,EAAMh4C,EAAKk2C,KAAK54C,EAChB,QAIJ,MAAK06C,IAKLh4C,EAAKk2C,KAAO8B,EACZh4C,EAAKo2C,OAAS,UAImB,WAA7Br2C,OAAOm4C,SAASC,UAA6C,UAApBH,EAAIlwC,MAAM,EAAG,KACxD9H,EAAKs1C,QAAS,EACdt1C,EAAKsxC,WAAY,GAInB,GAAI8G,GAAMp4C,GAGNA,EAAKsxC,WACP+G,EAAWr4C,GAGNA,OAtBLA,GAAKg1C,MAAM,YAAa,KAAM,iDA+BlC8C,KAAM,SAAS7B,EAAQx2B,GACrB,GAAIzf,GAAOa,KACPilC,EAAK,IAGT,IAAsB,gBAAXmQ,GACTnQ,EAAKmQ,EACLA,EAAS,SACJ,CAAA,GAAsB,gBAAXA,IAAuC,WAAhBj2C,EAAKo2C,SAAwBp2C,EAAKg2C,QAAQC,GAEjF,MAAO,KACF,IAAsB,mBAAXA,GAAwB,CAExCA,EAAS,WAKT,KAAK,GADDqC,GAAM,EACDh7C,EAAE,EAAGA,EAAE0C,EAAK00C,QAAQ72C,OAAQP,IAC/B0C,EAAK00C,QAAQp3C,GAAGq3C,UAAY30C,EAAK00C,QAAQp3C,GAAGi7C,SAC9CD,IACAxS,EAAK9lC,EAAK00C,QAAQp3C,GAAGk7C,IAIb,KAARF,EACFrC,EAAS,KAETnQ,EAAK,MAKT,GAAI2L,GAAQ3L,EAAK9lC,EAAK0xC,WAAW5L,GAAM9lC,EAAKy4C,gBAG5C,KAAKhH,EACH,MAAO,KAUT,IANI3L,IAAOmQ,IACTA,EAASxE,EAAMuE,SAAW,aAKR,WAAhBh2C,EAAKo2C,SAAwBp2C,EAAKg2C,QAAQC,GAQ5C,MAPAj2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,OACP0hC,OAAQ,WACN73C,EAAK83C,KAAK93C,EAAK0xC,WAAWD,EAAM+G,KAAO/G,EAAM+G,IAAM7yC,WAIhD8rC,EAAM+G,GAIf,IAAI1S,IAAO2L,EAAMkD,QAQf,MANKl1B,IACHrc,WAAW,WACTpD,EAAKg1C,MAAM,OAAQvD,EAAM+G,MACxB,GAGE/G,EAAM+G,GAIXx4C,GAAKsxC,WACPlB,EAAO0E,aAIT,IAAI4D,GAAOlxC,KAAKC,IAAI,EAAGgqC,EAAMkH,MAAQ,EAAIlH,EAAMkH,MAAQ34C,EAAKg2C,QAAQC,GAAQ,GAAK,KAC7E2C,EAAWpxC,KAAKC,IAAI,GAAKzH,EAAKg2C,QAAQC,GAAQ,GAAKj2C,EAAKg2C,QAAQC,GAAQ,IAAM,IAAQyC,GACtFxjB,EAAsB,IAAX0jB,EAAmBpxC,KAAKy4B,IAAIwR,EAAMqE,MAGjDrE,GAAMkD,SAAU,EAChBlD,EAAM8G,QAAS,EACf9G,EAAMuE,QAAUC,EAChBxE,EAAMkH,MAAQD,EACdjH,EAAMoH,OAAS74C,EAAKg2C,QAAQC,GAAQ,GAAK,IACzCxE,EAAMqH,OAAS94C,EAAKg2C,QAAQC,GAAQ,GAAKj2C,EAAKg2C,QAAQC,GAAQ,IAAM,IACpExE,EAAM+D,SAAW/D,EAAM+D,QAASx1C,EAAKg2C,QAAQC,GAAQ,GAGrD,IAAI79B,GAAOq5B,EAAME,KACjB,IAAI3xC,EAAKsxC,UAAW,CAElB,GAAIyH,GAAe,WACjB/4C,EAAKg5C,eAAevH,EAGpB,IAAIP,GAAOO,EAAMlB,QAAUvwC,EAAKuwC,OAAU,EAAIkB,EAAMjB,OACpDp4B,GAAKi5B,KAAK4H,eAAe/H,EAAKd,EAAOljC,IAAIgsC,aACzCzH,EAAM0H,WAAa/I,EAAOljC,IAAIgsC,YAGS,mBAA5B9gC,GAAKghC,aAAapX,MAC3ByP,EAAM+D,MAAQp9B,EAAKghC,aAAaC,YAAY,EAAGX,EAAM,OAAStgC,EAAKghC,aAAaC,YAAY,EAAGX,EAAME,GAErGnH,EAAM+D,MAAQp9B,EAAKghC,aAAapX,MAAM,EAAG0W,EAAM,OAAStgC,EAAKghC,aAAapX,MAAM,EAAG0W,EAAME,GAIvF1jB,IAAYokB,EAAAA,IACdt5C,EAAKq2C,WAAW5E,EAAM+G,KAAOp1C,WAAWpD,EAAKu4C,OAAOpzC,KAAKnF,EAAMyxC,GAAQvc,IAGpEzV,GACHrc,WAAW,WACTpD,EAAKg1C,MAAM,OAAQvD,EAAM+G,MACxB,IAIHe,EAA8B,YAAjBnJ,EAAOrK,KACJ,YAAhB/lC,EAAKo2C,QAAuBmD,EAC9BR,KAGA/4C,EAAKw5C,KAAKD,EAAY,OAAS,SAAUR,EAAcQ,EAAY9H,EAAM+G,IAAM,MAG/Ex4C,EAAKy5C,YAAYhI,EAAM+G,UAEpB,CAEL,GAAIkB,GAAY,WACdthC,EAAK8gC,YAAcR,EACnBtgC,EAAKy5B,MAAQJ,EAAMlB,QAAUvwC,EAAKuwC,QAAUH,EAAOG,QAAUn4B,EAAKy5B,MAClEz5B,EAAK64B,OAASQ,EAAMjB,QAAUJ,EAAOa,SACrC74B,EAAKuhC,aAAelI,EAAMqE,MAE1B1yC,WAAW,WACTgV,EAAK0/B,OAGD5iB,IAAYokB,EAAAA,IACdt5C,EAAKq2C,WAAW5E,EAAM+G,KAAOp1C,WAAWpD,EAAKu4C,OAAOpzC,KAAKnF,EAAMyxC,GAAQvc,IAGpEzV,GACHzf,EAAKg1C,MAAM,OAAQvD,EAAM+G,MAE1B,IAIDoB,EAAsC,WAAhB55C,EAAKo2C,SAAwBr2C,QAAUA,OAAO85C,SAAWzhC,EAAK0hC,YAAc1J,EAAOM,WAAWqJ,WACxH,IAAwB,IAApB3hC,EAAK0hC,YAAoBF,EAC3BF,QACK,CACL,GAAIM,GAAW,WAEbN,IAGAthC,EAAK6iB,oBAAoBmV,EAAOK,cAAeuJ,GAAU,GAE3D5hC,GAAK2iB,iBAAiBqV,EAAOK,cAAeuJ,GAAU,GAGtDh6C,EAAKy5C,YAAYhI,EAAM+G,MAI3B,MAAO/G,GAAM+G,KAQfyB,MAAO,SAASnU,GACd,GAAI9lC,GAAOa,IAGX,IAAoB,WAAhBb,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,QACP0hC,OAAQ,WACN73C,EAAKi6C,MAAMnU,MAIR9lC,CAMT,KAAK,GAFDuxC,GAAMvxC,EAAKwxC,aAAa1L,GAEnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAAK,CAE/B0C,EAAKy5C,YAAYlI,EAAIj0C,GAGrB,IAAIm0C,GAAQzxC,EAAK0xC,WAAWH,EAAIj0C,GAEhC,IAAIm0C,IAAUA,EAAMkD,UAElBlD,EAAMkH,MAAQ34C,EAAK04C,KAAKnH,EAAIj0C,IAC5Bm0C,EAAMyI,UAAY,EAClBzI,EAAMkD,SAAU,EAGhB30C,EAAKm6C,UAAU5I,EAAIj0C,IAEfm0C,EAAME,OACR,GAAI3xC,EAAKsxC,UAAW,CAElB,IAAKG,EAAME,MAAMyH,aACf,MAAOp5C,EAGoC,oBAAlCyxC,GAAME,MAAMyH,aAAajK,KAClCsC,EAAME,MAAMyH,aAAagB,QAAQ,GAEjC3I,EAAME,MAAMyH,aAAajK,KAAK,GAIhCnvC,EAAKq6C,aAAa5I,EAAME,WACd2I,OAAM7I,EAAME,MAAMiH,WAAanH,EAAME,MAAMiH,WAAaU,EAAAA,GAClE7H,EAAME,MAAMsI,OAMb92C,WAAU,IACbnD,EAAKg1C,MAAM,QAASvD,EAAQA,EAAM+G,IAAM,MAI5C,MAAOx4C,IASTmvC,KAAM,SAASrJ,EAAIrmB,GACjB,GAAIzf,GAAOa,IAGX,IAAoB,WAAhBb,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,OACP0hC,OAAQ,WACN73C,EAAKmvC,KAAKrJ,MAIP9lC,CAMT,KAAK,GAFDuxC,GAAMvxC,EAAKwxC,aAAa1L,GAEnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAAK,CAE/B0C,EAAKy5C,YAAYlI,EAAIj0C,GAGrB,IAAIm0C,GAAQzxC,EAAK0xC,WAAWH,EAAIj0C,GAEhC,IAAIm0C,IAEFA,EAAMkH,MAAQlH,EAAMoH,QAAU,EAC9BpH,EAAMyI,UAAY,EAClBzI,EAAMkD,SAAU,EAChBlD,EAAM8G,QAAS,EAGfv4C,EAAKm6C,UAAU5I,EAAIj0C,IAEfm0C,EAAME,OACR,GAAI3xC,EAAKsxC,UAAW,CAElB,IAAKG,EAAME,MAAMyH,aAKf,MAJK35B,IACHzf,EAAKg1C,MAAM,OAAQvD,EAAM+G,KAGpBx4C,CAGoC,oBAAlCyxC,GAAME,MAAMyH,aAAajK,KAClCsC,EAAME,MAAMyH,aAAagB,QAAQ,GAEjC3I,EAAME,MAAMyH,aAAajK,KAAK,GAIhCnvC,EAAKq6C,aAAa5I,EAAME,WACd2I,OAAM7I,EAAME,MAAMiH,WAAanH,EAAME,MAAMiH,WAAaU,EAAAA,IAClE7H,EAAME,MAAMuH,YAAczH,EAAMoH,QAAU,EAC1CpH,EAAME,MAAMsI,QAKdxI,KAAUhyB,GACZzf,EAAKg1C,MAAM,OAAQvD,EAAM+G,KAI7B,MAAOx4C,IAST4xC,KAAM,SAASC,EAAO/L,GACpB,GAAI9lC,GAAOa,IAGX,IAAoB,WAAhBb,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,OACP0hC,OAAQ,WACN73C,EAAK4xC,KAAKC,EAAO/L,MAId9lC,CAIT,IAAkB,mBAAP8lC,GAAoB,CAC7B,GAAqB,iBAAV+L,GAGT,MAAO7xC,GAAKuwC,MAFZvwC,GAAKuwC,OAASsB,EASlB,IAAK,GAFDN,GAAMvxC,EAAKwxC,aAAa1L,GAEnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAAK,CAE/B,GAAIm0C,GAAQzxC,EAAK0xC,WAAWH,EAAIj0C,GAE5Bm0C,KACFA,EAAMlB,OAASsB,EAEX7xC,EAAKsxC,WAAaG,EAAME,MAC1BF,EAAME,MAAMN,KAAK4H,eAAepH,EAAQ,EAAIJ,EAAMjB,QAASJ,EAAOljC,IAAIgsC,aAC7DzH,EAAME,QACfF,EAAME,MAAME,QAAQzB,EAAOG,QAAgBsB,GAG7C7xC,EAAKg1C,MAAM,OAAQvD,EAAM+G,MAI7B,MAAOx4C,IAWTixC,OAAQ,WACN,GAEIC,GAAKpL,EAFL9lC,EAAOa,KACPgH,EAAO1E,SAIX,IAAoB,IAAhB0E,EAAKhK,OAEP,MAAOmC,GAAKwwC,OACP,IAAoB,IAAhB3oC,EAAKhK,QAAgC,IAAhBgK,EAAKhK,QAAmC,mBAAZgK,GAAK,GAAoB,CAEnF,GAAI0pC,GAAMvxC,EAAKwxC,eACXjqC,EAAQgqC,EAAI14B,QAAQhR,EAAK,GACzBN,IAAS,EACXu+B,EAAKryB,SAAS5L,EAAK,GAAI,IAEvBqpC,EAAMC,WAAWtpC,EAAK,QAEfA,GAAKhK,QAAU,IACxBqzC,EAAMC,WAAWtpC,EAAK,IACtBi+B,EAAKryB,SAAS5L,EAAK,GAAI,IAIzB,IAAI4pC,EACJ,MAAmB,mBAARP,IAAuBA,GAAO,GAAKA,GAAO,GA2CnD,MADAO,GAAQ3L,EAAK9lC,EAAK0xC,WAAW5L,GAAM9lC,EAAK00C,QAAQ,GACzCjD,EAAQA,EAAMjB,QAAU,CAzC/B,IAAoB,WAAhBxwC,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,SACP0hC,OAAQ,WACN73C,EAAKixC,OAAO7pC,MAAMpH,EAAM6H,MAIrB7H,CAIS,oBAAP8lC,KACT9lC,EAAKwwC,QAAUU,GAIjBpL,EAAK9lC,EAAKwxC,aAAa1L,EACvB,KAAK,GAAIxoC,GAAE,EAAGA,EAAEwoC,EAAGjoC,OAAQP,IAEzBm0C,EAAQzxC,EAAK0xC,WAAW5L,EAAGxoC,IAEvBm0C,IACFA,EAAMjB,QAAUU,EAGXrpC,EAAK,IACR7H,EAAKm6C,UAAUrU,EAAGxoC,IAGhB0C,EAAKsxC,WAAaG,EAAME,QAAUF,EAAMlB,OAC1CkB,EAAME,MAAMN,KAAK4H,eAAe/H,EAAKd,EAAOljC,IAAIgsC,aACvCzH,EAAME,QAAUF,EAAMlB,SAC/BkB,EAAME,MAAMV,OAASC,EAAMd,EAAOa,UAGpCjxC,EAAKg1C,MAAM,SAAUvD,EAAM+G,KAQjC,OAAOx4C,IAWTu6C,KAAM,SAASliB,EAAMC,EAAIxZ,EAAKgnB,GAC5B,GAAI9lC,GAAOa,KACP25C,EAAOhzC,KAAKy4B,IAAI5H,EAAOC,GACvBmiB,EAAMpiB,EAAOC,EAAK,MAAQ,KAC1BoiB,EAAQF,EAAO,IACfG,EAAWD,EAAQ,EAAK57B,EAAM47B,EAAQ57B,CAS1C,IANI67B,EAAU,IACZD,EAAQlzC,KAAKozC,KAAKF,GAAS,EAAIC,IAC/BA,EAAU,GAIQ,WAAhB36C,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,OACP0hC,OAAQ,WACN73C,EAAKu6C,KAAKliB,EAAMC,EAAIxZ,EAAKgnB,MAItB9lC,CAITA,GAAKixC,OAAO5Y,EAAMyN,EAIlB,KAAK,GADDyL,GAAMvxC,EAAKwxC,aAAa1L,GACnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAAK,CAE/B,GAAIm0C,GAAQzxC,EAAK0xC,WAAWH,EAAIj0C,GAGhC,IAAIm0C,EAAO,CAOT,GALK3L,GACH9lC,EAAKm6C,UAAU5I,EAAIj0C,IAIjB0C,EAAKsxC,YAAcG,EAAMlB,OAAQ,CACnC,GAAI2I,GAAc9I,EAAOljC,IAAIgsC,YACzBjX,EAAMiX,EAAep6B,EAAM,GAC/B2yB,GAAMjB,QAAUnY,EAChBoZ,EAAME,MAAMN,KAAK4H,eAAe5gB,EAAM6gB,GACtCzH,EAAME,MAAMN,KAAKwJ,wBAAwBviB,EAAI2J,GAG/C,GAAIiP,GAAM7Y,CACVoZ,GAAMqJ,UAAYC,YAAY,SAASC,EAASvJ,GAE1CiJ,EAAQ,IACVxJ,GAAgB,OAARuJ,EAAe,KAAO,KAIhCvJ,EAAM1pC,KAAKC,IAAI,EAAGypC,GAClBA,EAAM1pC,KAAKyzC,IAAI,EAAG/J,GAGlBA,EAAM1pC,KAAK25B,MAAY,IAAN+P,GAAa,IAG1BlxC,EAAKsxC,WACW,mBAAPxL,KACT9lC,EAAKwwC,QAAUU,GAGjBO,EAAMjB,QAAUU,GAEhBlxC,EAAKixC,OAAOC,EAAK8J,GAAS,GAIxB9J,IAAQ5Y,IACV4iB,cAAczJ,EAAMqJ,WACpBrJ,EAAMqJ,UAAY,KAClB96C,EAAKixC,OAAOC,EAAK8J,GACjBh7C,EAAKg1C,MAAM,OAAQgG,KAErB71C,KAAKnF,EAAMuxC,EAAIj0C,GAAIm0C,GAAQkJ,IAIjC,MAAO36C,IASTm6C,UAAW,SAASrU,GAClB,GAAI9lC,GAAOa,KACP4wC,EAAQzxC,EAAK0xC,WAAW5L,EAY5B,OAVI2L,IAASA,EAAMqJ,YACb96C,EAAKsxC,WACPG,EAAME,MAAMN,KAAK8J,sBAAsB/K,EAAOljC,IAAIgsC,aAGpDgC,cAAczJ,EAAMqJ,WACpBrJ,EAAMqJ,UAAY,KAClB96C,EAAKg1C,MAAM,OAAQlP,IAGd9lC,GAWTy1C,KAAM,WACJ,GAEIA,GAAM3P,EAAI2L,EAFVzxC,EAAOa,KACPgH,EAAO1E,SAIX,IAAoB,IAAhB0E,EAAKhK,OAEP,MAAOmC,GAAKw1C,KACP,IAAoB,IAAhB3tC,EAAKhK,OAAc,CAC5B,GAAuB,iBAAZgK,GAAK,GAMd,MADA4pC,GAAQzxC,EAAK0xC,WAAWj+B,SAAS5L,EAAK,GAAI,OACnC4pC,GAAQA,EAAM+D,KALrBC,GAAO5tC,EAAK,GACZ7H,EAAKw1C,MAAQC,MAMU,KAAhB5tC,EAAKhK,SACd43C,EAAO5tC,EAAK,GACZi+B,EAAKryB,SAAS5L,EAAK,GAAI,IAKzB,KAAK,GADD0pC,GAAMvxC,EAAKwxC,aAAa1L,GACnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAC1Bm0C,EAAQzxC,EAAK0xC,WAAWH,EAAIj0C,IAExBm0C,IACFA,EAAM+D,MAAQC,EACVz1C,EAAKsxC,WAAaG,EAAME,OAASF,EAAME,MAAMyH,eAC/C3H,EAAME,MAAMyH,aAAa3D,KAAOA,EAC5BA,IACFhE,EAAME,MAAMyH,aAAagC,UAAY3J,EAAMoH,QAAU,EACrDpH,EAAME,MAAMyH,aAAaiC,QAAU5J,EAAMqH,QAMjD,OAAO94C,IAWT+1C,KAAM,WACJ,GAEIA,GAAMjQ,EAFN9lC,EAAOa,KACPgH,EAAO1E,SAIX,IAAoB,IAAhB0E,EAAKhK,OAEPioC,EAAK9lC,EAAK00C,QAAQ,GAAG8D,QAChB,IAAoB,IAAhB3wC,EAAKhK,OAAc,CAE5B,GAAI0zC,GAAMvxC,EAAKwxC,eACXjqC,EAAQgqC,EAAI14B,QAAQhR,EAAK,GACzBN,IAAS,EACXu+B,EAAKryB,SAAS5L,EAAK,GAAI,IAEvBkuC,EAAO5E,WAAWtpC,EAAK,QAEA,KAAhBA,EAAKhK,SACdk4C,EAAO5E,WAAWtpC,EAAK,IACvBi+B,EAAKryB,SAAS5L,EAAK,GAAI,IAIzB,IAAI4pC,EACJ,IAAoB,gBAATsE,GAsDT,MADAtE,GAAQzxC,EAAK0xC,WAAW5L,GACjB2L,EAAQA,EAAMqE,MAAQ91C,EAAK81C,KApDlC,IAAoB,WAAhB91C,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,OACP0hC,OAAQ,WACN73C,EAAK+1C,KAAK3uC,MAAMpH,EAAM6H,MAInB7H,CAIS,oBAAP8lC,KACT9lC,EAAK81C,MAAQC,GAIfjQ,EAAK9lC,EAAKwxC,aAAa1L,EACvB,KAAK,GAAIxoC,GAAE,EAAGA,EAAEwoC,EAAGjoC,OAAQP,IAIzB,GAFAm0C,EAAQzxC,EAAK0xC,WAAW5L,EAAGxoC,IAEhB,CAGTm0C,EAAMyI,UAAYl6C,EAAK04C,KAAK5S,EAAGxoC,IAC/Bm0C,EAAM0H,WAAan5C,EAAKsxC,UAAYlB,EAAOljC,IAAIgsC,YAAczH,EAAM0H,WACnE1H,EAAMqE,MAAQC,EAGV/1C,EAAKsxC,WAAaG,EAAME,OAASF,EAAME,MAAMyH,aAC/C3H,EAAME,MAAMyH,aAAaO,aAAa3zC,MAAQ+vC,EACrCtE,EAAME,QACfF,EAAME,MAAMgI,aAAe5D,EAI7B,IAAI2C,GAAO14C,EAAK04C,KAAK5S,EAAGxoC,IACpBs7C,GAAa54C,EAAKg2C,QAAQvE,EAAMuE,SAAS,GAAKh2C,EAAKg2C,QAAQvE,EAAMuE,SAAS,IAAM,IAAQ0C,EACxFxjB,EAAsB,IAAX0jB,EAAmBpxC,KAAKy4B,IAAIwR,EAAMqE,QAG7C91C,EAAKq2C,WAAWvQ,EAAGxoC,KAAQm0C,EAAMkD,UACnC30C,EAAKy5C,YAAY3T,EAAGxoC,IACpB0C,EAAKq2C,WAAWvQ,EAAGxoC,IAAM8F,WAAWpD,EAAKu4C,OAAOpzC,KAAKnF,EAAMyxC,GAAQvc,IAGrEl1B,EAAKg1C,MAAM,OAAQvD,EAAM+G,KAQ/B,MAAOx4C,IAWT04C,KAAM,WACJ,GAEIA,GAAM5S,EAFN9lC,EAAOa,KACPgH,EAAO1E,SAIX,IAAoB,IAAhB0E,EAAKhK,OAEPioC,EAAK9lC,EAAK00C,QAAQ,GAAG8D,QAChB,IAAoB,IAAhB3wC,EAAKhK,OAAc,CAE5B,GAAI0zC,GAAMvxC,EAAKwxC,eACXjqC,EAAQgqC,EAAI14B,QAAQhR,EAAK,GACzBN,IAAS,EACXu+B,EAAKryB,SAAS5L,EAAK,GAAI,KAEvBi+B,EAAK9lC,EAAK00C,QAAQ,GAAG8D,IACrBE,EAAOvH,WAAWtpC,EAAK,SAEA,KAAhBA,EAAKhK,SACd66C,EAAOvH,WAAWtpC,EAAK,IACvBi+B,EAAKryB,SAAS5L,EAAK,GAAI,IAIzB,IAAkB,mBAAPi+B,GACT,MAAO9lC,EAIT,IAAoB,WAAhBA,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,OACP0hC,OAAQ,WACN73C,EAAK04C,KAAKtxC,MAAMpH,EAAM6H,MAInB7H,CAIT,IAAIyxC,GAAQzxC,EAAK0xC,WAAW5L,EAE5B,IAAI2L,EAAO,CACT,KAAoB,gBAATiH,IAAqBA,GAAQ,GAuBjC,CACL,GAAI14C,EAAKsxC,UAAW,CAClB,GAAIgK,GAAWt7C,EAAKu7C,QAAQzV,GAAMsK,EAAOljC,IAAIgsC,YAAczH,EAAM0H,WAAa,EAC1EqC,EAAW/J,EAAMyI,UAAYzI,EAAMyI,UAAYzI,EAAMkH,MAAQ,CACjE,OAAOlH,GAAMkH,OAAS6C,EAAWF,EAAW9zC,KAAKy4B,IAAIwR,EAAMqE,QAE3D,MAAOrE,GAAME,MAAMuH,YA3BrB,GAAIqC,GAAUv7C,EAAKu7C,QAAQzV,EACvByV,IACFv7C,EAAKi6C,MAAMnU,GAAI,GAIjB2L,EAAMkH,MAAQD,EACdjH,EAAM8G,QAAS,EACfv4C,EAAKy5C,YAAY3T,GAGbyV,GACFv7C,EAAK83C,KAAKhS,GAAI,IAIX9lC,EAAKsxC,WAAaG,EAAME,QAC3BF,EAAME,MAAMuH,YAAcR,GAG5B14C,EAAKg1C,MAAM,OAAQlP,GAYvB,MAAO9lC,IAQTu7C,QAAS,SAASzV,GAChB,GAAI9lC,GAAOa,IAGX,IAAkB,gBAAPilC,GAAiB,CAC1B,GAAI2L,GAAQzxC,EAAK0xC,WAAW5L,EAC5B,SAAO2L,IAASA,EAAMkD,QAIxB,IAAK,GAAIr3C,GAAE,EAAGA,EAAE0C,EAAK00C,QAAQ72C,OAAQP,IACnC,IAAK0C,EAAK00C,QAAQp3C,GAAGq3C,QACnB,OAAO,CAIX,QAAO,GAQTiE,SAAU,SAAS9S,GACjB,GAAI9lC,GAAOa,KACP+3C,EAAW54C,EAAKm2C,UAGhB1E,EAAQzxC,EAAK0xC,WAAW5L,EAK5B,OAJI2L,KACFmH,EAAW54C,EAAKg2C,QAAQvE,EAAMuE,SAAS,GAAK,KAGvC4C,GAOT7S,MAAO,WACL,MAAOllC,MAAKu1C,QAOdtE,OAAQ,WAKN,IAAK,GAJD9xC,GAAOa,KAGP46C,EAASz7C,EAAK00C,QACTp3C,EAAE,EAAGA,EAAEm+C,EAAO59C,OAAQP,IAAK,CAE7Bm+C,EAAOn+C,GAAGq3C,UACb30C,EAAKmvC,KAAKsM,EAAOn+C,GAAGk7C,KACpBx4C,EAAKg1C,MAAM,MAAOyG,EAAOn+C,GAAGk7C,MAIzBx4C,EAAKsxC,YAERmK,EAAOn+C,GAAGq0C,MAAM7iB,IAAM,qFAGtB2sB,EAAOn+C,GAAGq0C,MAAM1W,oBAAoB,QAASwgB,EAAOn+C,GAAGo+C,UAAU,GACjED,EAAOn+C,GAAGq0C,MAAM1W,oBAAoBmV,EAAOK,cAAegL,EAAOn+C,GAAGq+C,SAAS,UAIxEF,GAAOn+C,GAAGq0C,MAGjB3xC,EAAKy5C,YAAYgC,EAAOn+C,GAAGk7C,IAG3B,IAAIjxC,GAAQ6oC,EAAOE,OAAOz3B,QAAQ7Y,EAC9BuH,IAAS,GACX6oC,EAAOE,OAAOr/B,OAAO1J,EAAO,GAKhC,GAAIq0C,IAAW,CACf,KAAKt+C,EAAE,EAAGA,EAAE8yC,EAAOE,OAAOzyC,OAAQP,IAChC,GAAI8yC,EAAOE,OAAOhzC,GAAG44C,OAASl2C,EAAKk2C,KAAM,CACvC0F,GAAW,CACX,OAgBJ,MAZIC,IAASD,SACJC,GAAM77C,EAAKk2C,MAIpB9F,EAAOQ,SAAU,EAGjB5wC,EAAKo2C,OAAS,WACdp2C,EAAK00C,WACL10C,EAAO,KAEA,MAWTyvC,GAAI,SAASt5B,EAAOxU,EAAImkC,EAAI0T,GAC1B,GAAIx5C,GAAOa,KACP6uC,EAAS1vC,EAAK,MAAQmW,EAM1B,OAJkB,kBAAPxU,IACT+tC,EAAO5tC,KAAK03C,GAAQ1T,GAAIA,EAAInkC,GAAIA,EAAI63C,KAAMA,IAAS1T,GAAIA,EAAInkC,GAAIA,IAG1D3B,GAUT2vC,IAAK,SAASx5B,EAAOxU,EAAImkC,GACvB,GAAI9lC,GAAOa,KACP6uC,EAAS1vC,EAAK,MAAQmW,GACtB7Y,EAAI,CAER,IAAIqE,GAEF,IAAKrE,EAAE,EAAGA,EAAEoyC,EAAO7xC,OAAQP,IACzB,GAAIqE,IAAO+tC,EAAOpyC,GAAGqE,IAAMmkC,IAAO4J,EAAOpyC,GAAGwoC,GAAI,CAC9C4J,EAAOz+B,OAAO3T,EAAG,EACjB,YAGC,IAAI6Y,EAETnW,EAAK,MAAQmW,UACR,CAEL,GAAI3K,GAAO/E,OAAO+E,KAAKxL,EACvB,KAAK1C,EAAE,EAAGA,EAAEkO,EAAK3N,OAAQP,IACS,IAA3BkO,EAAKlO,GAAGub,QAAQ,QAAiB0C,MAAM9Q,QAAQzK,EAAKwL,EAAKlO,OAC5D0C,EAAKwL,EAAKlO,QAKhB,MAAO0C,IAUTw5C,KAAM,SAASrjC,EAAOxU,EAAImkC,GACxB,GAAI9lC,GAAOa,IAKX,OAFAb,GAAKyvC,GAAGt5B,EAAOxU,EAAImkC,EAAI,GAEhB9lC,GAUTg1C,MAAO,SAAS7+B,EAAO2vB,EAAI31B,GAKzB,IAAK,GAJDnQ,GAAOa,KACP6uC,EAAS1vC,EAAK,MAAQmW,GAGjB7Y,EAAEoyC,EAAO7xC,OAAO,EAAGP,GAAG,EAAGA,IAC3BoyC,EAAOpyC,GAAGwoC,IAAM4J,EAAOpyC,GAAGwoC,KAAOA,GAAgB,SAAV3vB,IAC1C/S,WAAW,SAASzB,GAClBA,EAAG/D,KAAKiD,KAAMilC,EAAI31B,IAClBhL,KAAKnF,EAAM0vC,EAAOpyC,GAAGqE,IAAK,GAGxB+tC,EAAOpyC,GAAGk8C,MACZx5C,EAAK2vC,IAAIx5B,EAAOu5B,EAAOpyC,GAAGqE,GAAI+tC,EAAOpyC,GAAGwoC,IAK9C,OAAO9lC,IAST87C,WAAY,WACV,GAAI97C,GAAOa,IAEX,IAAIb,EAAKqiB,OAAOxkB,OAAS,EAAG,CAC1B,GAAIk+C,GAAO/7C,EAAKqiB,OAAO,EAGvBriB,GAAKw5C,KAAKuC,EAAK5lC,MAAO,WACpBnW,EAAKqiB,OAAO1e,QACZ3D,EAAK87C,eAGPC,EAAKlE,SAGP,MAAO73C,IAQTu4C,OAAQ,SAAS9G,GACf,GAAIzxC,GAAOa,KACPo1C,EAASxE,EAAMuE,QAGfP,KAAUhE,EAAM+D,QAASx1C,EAAKg2C,QAAQC,GAAQ,GAWlD,IARAj2C,EAAKg1C,MAAM,MAAOvD,EAAM+G,MAGnBx4C,EAAKsxC,WAAamE,GACrBz1C,EAAKmvC,KAAKsC,EAAM+G,KAAK,GAAMV,KAAKrG,EAAM+G,KAIpCx4C,EAAKsxC,WAAamE,EAAM,CAC1Bz1C,EAAKg1C,MAAM,OAAQvD,EAAM+G,KACzB/G,EAAMkH,MAAQlH,EAAMoH,QAAU,EAC9BpH,EAAMyI,UAAY,EAClBzI,EAAM0H,WAAa/I,EAAOljC,IAAIgsC,WAE9B,IAAIhkB,GAA0C,KAA9Buc,EAAMqH,MAAQrH,EAAMoH,QAAkBrxC,KAAKy4B,IAAIwR,EAAMqE,MACrE91C,GAAKq2C,WAAW5E,EAAM+G,KAAOp1C,WAAWpD,EAAKu4C,OAAOpzC,KAAKnF,EAAMyxC,GAAQvc,GAuBzE,MAnBIl1B,GAAKsxC,YAAcmE,IACrBhE,EAAMkD,SAAU,EAChBlD,EAAM8G,QAAS,EACf9G,EAAMkH,MAAQlH,EAAMoH,QAAU,EAC9BpH,EAAMyI,UAAY,EAClBl6C,EAAKy5C,YAAYhI,EAAM+G,KAGvBx4C,EAAKq6C,aAAa5I,EAAME,OAGxBvB,EAAO8B,gBAIJlyC,EAAKsxC,WAAcmE,GACtBz1C,EAAKmvC,KAAKsC,EAAM+G,KAGXx4C,GAQTy5C,YAAa,SAAS3T,GACpB,GAAI9lC,GAAOa,IAOX,OALIb,GAAKq2C,WAAWvQ,KAClBlR,aAAa50B,EAAKq2C,WAAWvQ,UACtB9lC,GAAKq2C,WAAWvQ,IAGlB9lC,GAQT0xC,WAAY,SAAS5L,GAInB,IAAK,GAHD9lC,GAAOa,KAGFvD,EAAE,EAAGA,EAAE0C,EAAK00C,QAAQ72C,OAAQP,IACnC,GAAIwoC,IAAO9lC,EAAK00C,QAAQp3C,GAAGk7C,IACzB,MAAOx4C,GAAK00C,QAAQp3C,EAIxB,OAAO,OAOTm7C,eAAgB,WACd,GAAIz4C,GAAOa,IAEXb,GAAKg8C,QAGL,KAAK,GAAI1+C,GAAE,EAAGA,EAAE0C,EAAK00C,QAAQ72C,OAAQP,IACnC,GAAI0C,EAAK00C,QAAQp3C,GAAGi7C,OAClB,MAAOv4C,GAAK00C,QAAQp3C,GAAG8vC,OAK3B,OAAO,IAAIgL,GAAMp4C,IAMnBg8C,OAAQ,WACN,GAAIh8C,GAAOa,KACPihB,EAAQ9hB,EAAK01C,MACbuG,EAAM,EACN3+C,EAAI,CAGR,MAAI0C,EAAK00C,QAAQ72C,OAASikB,GAA1B,CAKA,IAAKxkB,EAAE,EAAGA,EAAE0C,EAAK00C,QAAQ72C,OAAQP,IAC3B0C,EAAK00C,QAAQp3C,GAAGi7C,QAClB0D,GAKJ,KAAK3+C,EAAE0C,EAAK00C,QAAQ72C,OAAS,EAAGP,GAAG,EAAGA,IAAK,CACzC,GAAI2+C,GAAOn6B,EACT,MAGE9hB,GAAK00C,QAAQp3C,GAAGi7C,SAEdv4C,EAAKsxC,WAAatxC,EAAK00C,QAAQp3C,GAAGq0C,OACpC3xC,EAAK00C,QAAQp3C,GAAGq0C,MAAMlf,WAAW,GAInCzyB,EAAK00C,QAAQzjC,OAAO3T,EAAG,GACvB2+C,QAUNzK,aAAc,SAAS1L,GACrB,GAAI9lC,GAAOa,IAEX,IAAkB,mBAAPilC,GAAoB,CAE7B,IAAK,GADDyL,MACKj0C,EAAE,EAAGA,EAAE0C,EAAK00C,QAAQ72C,OAAQP,IACnCi0C,EAAIzvC,KAAK9B,EAAK00C,QAAQp3C,GAAGk7C,IAG3B,OAAOjH,GAEP,OAAQzL,IASZkT,eAAgB,SAASvH,GACvB,GAAIzxC,GAAOa,IAqBX,OAlBA4wC,GAAME,MAAMyH,aAAehJ,EAAOljC,IAAIinC,qBACtC1C,EAAME,MAAMyH,aAAahF,OAASyH,EAAM77C,EAAKk2C,MAGzCzE,EAAMyK,QACRzK,EAAME,MAAMyH,aAAa/E,QAAQ5C,EAAMyK,SAEvCzK,EAAME,MAAMyH,aAAa/E,QAAQ5C,EAAME,OAIzCF,EAAME,MAAMyH,aAAa3D,KAAOhE,EAAM+D,MAClC/D,EAAM+D,QACR/D,EAAME,MAAMyH,aAAagC,UAAY3J,EAAMoH,QAAU,EACrDpH,EAAME,MAAMyH,aAAaiC,QAAU5J,EAAMqH,OAE3CrH,EAAME,MAAMyH,aAAaO,aAAa3zC,MAAQyrC,EAAMqE,MAE7C91C,GAQTq6C,aAAc,SAASjiC,GACrB,GAAIpY,GAAOa,IAEX,IAAIb,EAAKg0C,eAAgB,CACvB57B,EAAKghC,aAAa5E,QAAU,KAC5Bp8B,EAAKghC,aAAa3mB,WAAW,EAC7B,KAAMra,EAAKghC,aAAahF,OAASp0C,EAAKg0C,eAAkB,MAAMn3C,KAIhE,MAFAub,GAAKghC,aAAe,KAEbp5C,GAWX,IAAIo4C,GAAQ,SAAS+D,GACnBt7C,KAAK8N,QAAUwtC,EACft7C,KAAKH,OAEP03C,GAAMx3C,WAKJF,KAAM,WACJ,GAAIV,GAAOa,KACPuI,EAASpJ,EAAK2O,OAsBlB,OAnBA3O,GAAKuwC,OAASnnC,EAAOmnC,OACrBvwC,EAAKw1C,MAAQpsC,EAAOosC,MACpBx1C,EAAKwwC,QAAUpnC,EAAOonC,QACtBxwC,EAAKuwC,OAASnnC,EAAOmnC,OACrBvwC,EAAK81C,MAAQ1sC,EAAO0sC,MACpB91C,EAAK24C,MAAQ,EACb34C,EAAK20C,SAAU,EACf30C,EAAKu4C,QAAS,EACdv4C,EAAKg2C,QAAU,YAGfh2C,EAAKw4C,IAAMhxC,KAAK25B,MAAMwH,KAAK1J,MAAQz3B,KAAK40C,UAGxChzC,EAAOsrC,QAAQ5yC,KAAK9B,GAGpBA,EAAK0G,SAEE1G,GAOT0G,OAAQ,WACN,GAAI1G,GAAOa,KACPuI,EAASpJ,EAAK2O,QACdsiC,EAAUb,EAAOG,QAAUvwC,EAAKuwC,QAAUvwC,EAAK2O,QAAQ4hC,OAAU,EAAIvwC,EAAKwwC,OA4B9E,OA1BIpnC,GAAOkoC,WAETtxC,EAAK2xC,MAA0C,mBAA1BvB,GAAOljC,IAAImvC,WAA8BjM,EAAOljC,IAAIovC,iBAAmBlM,EAAOljC,IAAImvC,aACvGr8C,EAAK2xC,MAAMN,KAAK4H,eAAehI,EAAQb,EAAOljC,IAAIgsC,aAClDl5C,EAAK2xC,MAAM4K,QAAS,EACpBv8C,EAAK2xC,MAAM0C,QAAQjE,EAAOO,cAE1B3wC,EAAK2xC,MAAQ,GAAIQ,OAGjBnyC,EAAK07C,SAAW17C,EAAKw8C,eAAer3C,KAAKnF,GACzCA,EAAK2xC,MAAM5W,iBAAiB,QAAS/6B,EAAK07C,UAAU,GAGpD17C,EAAK27C,QAAU37C,EAAKy8C,cAAct3C,KAAKnF,GACvCA,EAAK2xC,MAAM5W,iBAAiBqV,EAAOK,cAAezwC,EAAK27C,SAAS,GAGhE37C,EAAK2xC,MAAM7iB,IAAM1lB,EAAO8sC,KACxBl2C,EAAK2xC,MAAMkE,QAAU,OACrB71C,EAAK2xC,MAAMV,OAASA,EAASb,EAAOa,SAGpCjxC,EAAK2xC,MAAMoG,QAGN/3C,GAOTotC,MAAO,WACL,GAAIptC,GAAOa,KACPuI,EAASpJ,EAAK2O,OAiBlB,OAdA3O,GAAKuwC,OAASnnC,EAAOmnC,OACrBvwC,EAAKw1C,MAAQpsC,EAAOosC,MACpBx1C,EAAKwwC,QAAUpnC,EAAOonC,QACtBxwC,EAAKuwC,OAASnnC,EAAOmnC,OACrBvwC,EAAK81C,MAAQ1sC,EAAO0sC,MACpB91C,EAAK24C,MAAQ,EACb34C,EAAKk6C,UAAY,EACjBl6C,EAAK20C,SAAU,EACf30C,EAAKu4C,QAAS,EACdv4C,EAAKg2C,QAAU,YAGfh2C,EAAKw4C,IAAMhxC,KAAK25B,MAAMwH,KAAK1J,MAAQz3B,KAAK40C,UAEjCp8C,GAMTw8C,eAAgB,WACd,GAAIx8C,GAAOa,IAGXb,GAAK2O,QAAQqmC,MAAM,YAAah1C,EAAKw4C,IAAKx4C,EAAK2xC,MAAMnjC,MAAQxO,EAAK2xC,MAAMnjC,MAAM/Q,KAAO,GAGrFuC,EAAK2xC,MAAM1W,oBAAoB,QAASj7B,EAAKw8C,gBAAgB,IAM/DC,cAAe,WACb,GAAIz8C,GAAOa,KACPuI,EAASpJ,EAAK2O,OAGlBvF,GAAO+sC,UAAY3uC,KAAKozC,KAA2B,GAAtB56C,EAAK2xC,MAAMiH,UAAiB,GAGd,IAAvCnyC,OAAO+E,KAAKpC,EAAO4sC,SAASn4C,SAC9BuL,EAAO4sC,SAAW0G,WAAY,EAAsB,IAAnBtzC,EAAO+sC,aAGpB,WAAlB/sC,EAAOgtC,SACThtC,EAAOgtC,OAAS,SAChBhtC,EAAO4rC,MAAM,QACb5rC,EAAO0yC,cAIT97C,EAAK2xC,MAAM1W,oBAAoBmV,EAAOK,cAAezwC,EAAK27C,SAAS,IAOvE,IAAIE,MAMAxD,EAAa,SAASr4C,GACxB,GAAIg4C,GAAMh4C,EAAKk2C,IAGf,IAAI2F,EAAM7D,GAOR,MALAh4C,GAAKm2C,UAAY0F,EAAM7D,GAAKY,aAG5B+D,GAAU38C,EAKZ,IAAI,sBAAsB8P,KAAKkoC,GAAM,CAInC,IAAK,GAFDjiB,GAAO6mB,KAAK5E,EAAItoC,MAAM,KAAK,IAC3BmtC,EAAW,GAAIC,YAAW/mB,EAAKl4B,QAC1BP,EAAE,EAAGA,EAAEy4B,EAAKl4B,SAAUP,EAC7Bu/C,EAASv/C,GAAKy4B,EAAKgnB,WAAWz/C,EAGhC0/C,GAAgBH,EAASzI,OAAQp0C,OAC5B,CAEL,GAAIi9C,GAAM,GAAIC,eACdD,GAAIE,KAAK,MAAOnF,GAAK,GACrBiF,EAAIG,aAAe,cACnBH,EAAItG,OAAS,WAEX,GAAIl5C,IAAQw/C,EAAII,OAAS,IAAI,EAC7B,OAAa,MAAT5/C,GAAyB,MAATA,GAAyB,MAATA,MAClCuC,GAAKg1C,MAAM,YAAa,KAAM,0CAA4CiI,EAAII,OAAS,SAIzFL,GAAgBC,EAAIK,SAAUt9C,IAEhCi9C,EAAIM,QAAU,WAERv9C,EAAKsxC,YACPtxC,EAAKs1C,QAAS,EACdt1C,EAAKsxC,WAAY,EACjBtxC,EAAK00C,iBACEmH,GAAM7D,GACbh4C,EAAK+3C,SAGTyF,EAAYP,KAQZO,EAAc,SAASP,GACzB,IACEA,EAAIQ,OACJ,MAAO5gD,GACPogD,EAAIM,YASJP,EAAkB,SAASU,EAAa19C,GAE1CowC,EAAOljC,IAAI8vC,gBAAgBU,EAAa,SAAStJ,GAC3CA,GAAUp0C,EAAK00C,QAAQ72C,OAAS,IAClCg+C,EAAM77C,EAAKk2C,MAAQ9B,EACnBuI,EAAU38C,EAAMo0C,KAEjB,WACDp0C,EAAKg1C,MAAM,YAAa,KAAM,kCAS9B2H,EAAY,SAAS38C,EAAMo0C,GAEzBA,IAAWp0C,EAAKm2C,YAClBn2C,EAAKm2C,UAAY/B,EAAOwE,UAIe,IAArCnyC,OAAO+E,KAAKxL,EAAKg2C,SAASn4C,SAC5BmC,EAAKg2C,SAAW0G,WAAY,EAAoB,IAAjB18C,EAAKm2C,aAIlB,WAAhBn2C,EAAKo2C,SACPp2C,EAAKo2C,OAAS,SACdp2C,EAAKg1C,MAAM,QACXh1C,EAAK87C,eAOL1K,EAAoB,WAEtB,IAC8B,mBAAjBuM,cACTvN,EAAOljC,IAAM,GAAIywC,cACsB,mBAAvBC,oBAChBxN,EAAOljC,IAAM,GAAI0wC,oBAEjBxN,EAAOS,eAAgB,EAEzB,MAAMh0C,GACNuzC,EAAOS,eAAgB,EAKzB,GAAIgN,GAAO,iBAAiB/tC,KAAKsgC,EAAOM,YAAcN,EAAOM,WAAWoN,UACpEC,EAAa3N,EAAOM,YAAcN,EAAOM,WAAWqN,WAAW/tC,MAAM,0BACrEkZ,EAAU60B,EAAatqC,SAASsqC,EAAW,GAAI,IAAM,IACzD,IAAIF,GAAO30B,GAAWA,EAAU,EAAG,CACjC,GAAI80B,GAAS,SAASluC,KAAKsgC,EAAOM,YAAcN,EAAOM,WAAWvH,UAAU7yB,gBACxE85B,EAAOM,YAAcN,EAAOM,WAAW7e,aAAemsB,GAAU5N,EAAOM,aAAeN,EAAOM,WAAW7e,aAAemsB,KACzH5N,EAAOS,eAAgB,GAKvBT,EAAOS,gBACTT,EAAOO,WAA+C,mBAA1BP,GAAOljC,IAAImvC,WAA8BjM,EAAOljC,IAAIovC,iBAAmBlM,EAAOljC,IAAImvC,aAC9GjM,EAAOO,WAAWU,KAAKrrC,MAAQ,EAC/BoqC,EAAOO,WAAW0D,QAAQjE,EAAOljC,IAAIonC,cAIvClE,EAAOY,SAIa,mBAAXnxC,SAAyBA,OAAOC,KACzCD,UAAW,WACT,OACEuwC,OAAQA,EACR6E,KAAMA,KAMW,mBAAZt3C,KACTA,EAAQyyC,OAASA,EACjBzyC,EAAQs3C,KAAOA,GAIK,mBAAXl1C,SACTA,OAAOowC,aAAeA,EACtBpwC,OAAOqwC,OAASA,EAChBrwC,OAAOk1C,KAAOA,EACdl1C,OAAOq4C,MAAQA,GACY,mBAAXx4C,KAChBA,EAAOuwC,aAAeA,EACtBvwC,EAAOwwC,OAASA,EAChBxwC,EAAOq1C,KAAOA,EACdr1C,EAAOw4C,MAAQA,MAiBnB,WAEE,YAGAjI,cAAavvC,UAAUq9C,MAAQ,EAAG,EAAG,GACrC9N,aAAavvC,UAAUs9C,cAAgB,EAAG,GAAG,EAAI,EAAG,EAAG,GAWvD/N,aAAavvC,UAAUu9C,OAAS,SAASC,GACvC,GAAIp+C,GAAOa,IAGX,KAAKb,EAAKkN,MAAQlN,EAAKkN,IAAI8sC,SACzB,MAAOh6C,EAIT,KAAK,GAAI1C,GAAE0C,EAAKswC,OAAOzyC,OAAO,EAAGP,GAAG,EAAGA,IACrC0C,EAAKswC,OAAOhzC,GAAG6gD,OAAOC,EAGxB,OAAOp+C,IAWTmwC,aAAavvC,UAAUy9C,IAAM,SAAS71B,EAAGwX,EAAGse,GAC1C,GAAIt+C,GAAOa,IAGX,OAAKb,GAAKkN,KAAQlN,EAAKkN,IAAI8sC,UAK3Bha,EAAkB,gBAANA,GAAkBhgC,EAAKi+C,KAAK,GAAKje,EAC7Cse,EAAkB,gBAANA,GAAkBt+C,EAAKi+C,KAAK,GAAKK,EAE5B,gBAAN91B,GAIFxoB,EAAKi+C,MAHZj+C,EAAKi+C,MAAQz1B,EAAGwX,EAAGse,GACnBt+C,EAAKkN,IAAI8sC,SAASuE,YAAYv+C,EAAKi+C,KAAK,GAAIj+C,EAAKi+C,KAAK,GAAIj+C,EAAKi+C,KAAK,IAK/Dj+C,IAdEA,GA+BXmwC,aAAavvC,UAAU49C,YAAc,SAASh2B,EAAGwX,EAAGse,EAAGG,EAAKC,EAAKC,GAC/D,GAAI3+C,GAAOa,IAGX,KAAKb,EAAKkN,MAAQlN,EAAKkN,IAAI8sC,SACzB,MAAOh6C,EAIT,IAAI4+C,GAAK5+C,EAAKk+C,YAOd,OANAle,GAAkB,gBAANA,GAAkB4e,EAAG,GAAK5e,EACtCse,EAAkB,gBAANA,GAAkBM,EAAG,GAAKN,EACtCG,EAAsB,gBAARA,GAAoBG,EAAG,GAAKH,EAC1CC,EAAsB,gBAARA,GAAoBE,EAAG,GAAKF,EAC1CC,EAAsB,gBAARA,GAAoBC,EAAG,GAAKD,EAEzB,gBAANn2B,GAIFo2B,GAHP5+C,EAAKk+C,cAAgB11B,EAAGwX,EAAGse,EAAGG,EAAKC,EAAKC,GACxC3+C,EAAKkN,IAAI8sC,SAAS6E,eAAer2B,EAAGwX,EAAGse,EAAGG,EAAKC,EAAKC,GAK/C3+C,IAWTi1C,KAAKr0C,UAAUF,KAAO,SAAU25B,GAC9B,MAAO,UAASn9B,GACd,GAAI8C,GAAOa,IAuBX,OApBAb,GAAKk+C,aAAehhD,EAAEshD,cAAgB,EAAG,EAAG,GAC5Cx+C,EAAK8+C,QAAU5hD,EAAEihD,QAAU,KAC3Bn+C,EAAKi+C,KAAO/gD,EAAEmhD,KAAO,KACrBr+C,EAAK++C,aACHC,eAA4C,mBAArB9hD,GAAE8hD,eAAiC9hD,EAAE8hD,eAAiB,IAC7EC,eAA4C,mBAArB/hD,GAAE+hD,eAAiC/hD,EAAE+hD,eAAiB,IAC7EC,cAA0C,mBAApBhiD,GAAEgiD,cAAgChiD,EAAEgiD,cAAgB,EAC1EC,cAA0C,mBAApBjiD,GAAEiiD,cAAgCjiD,EAAEiiD,cAAgB,UAC1EC,YAAsC,mBAAlBliD,GAAEkiD,YAA8BliD,EAAEkiD,YAAc,IACpEC,aAAwC,mBAAnBniD,GAAEmiD,aAA+BniD,EAAEmiD,aAAe,OACvEC,YAAsC,mBAAlBpiD,GAAEoiD,YAA8BpiD,EAAEoiD,YAAc,EACpEC,cAA0C,mBAApBriD,GAAEqiD,cAAgCriD,EAAEqiD,cAAgB,GAI5Ev/C,EAAKw/C,UAAYtiD,EAAEuiD,WAAa99C,GAAIzE,EAAEuiD,cACtCz/C,EAAK0/C,OAASxiD,EAAEyiD,QAAUh+C,GAAIzE,EAAEyiD,WAChC3/C,EAAK4/C,eAAiB1iD,EAAE2iD,gBAAkBl+C,GAAIzE,EAAE2iD,mBAGzCxlB,EAAOz8B,KAAKiD,KAAM3D,KAE1B+3C,KAAKr0C,UAAUF,MAQlBu0C,KAAKr0C,UAAUu9C,OAAS,SAASC,EAAKtY,GACpC,GAAI9lC,GAAOa,IAGX,KAAKb,EAAKsxC,UACR,MAAOtxC,EAIT,IAAoB,WAAhBA,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,SACP0hC,OAAQ,WACN73C,EAAKm+C,OAAOC,EAAKtY,MAId9lC,CAIT,IAAI8/C,GAAuD,mBAAlC1P,QAAOljC,IAAI6yC,mBAAsC,UAAY,QAGtF,IAAkB,mBAAPja,GAAoB,CAE7B,GAAmB,gBAARsY,GAIT,MAAOp+C,GAAK8+C,OAHZ9+C,GAAK8+C,QAAUV,EACfp+C,EAAKi+C,MAAQG,EAAK,EAAG,GAQzB,IAAK,GADD7M,GAAMvxC,EAAKwxC,aAAa1L,GACnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAAK,CAE/B,GAAIm0C,GAAQzxC,EAAK0xC,WAAWH,EAAIj0C,GAEhC,IAAIm0C,EAAO,CACT,GAAmB,gBAAR2M,GAsBT,MAAO3M,GAAMqN,OArBbrN,GAAMqN,QAAUV,EAChB3M,EAAMwM,MAAQG,EAAK,EAAG,GAElB3M,EAAME,QAERF,EAAMsN,YAAYM,aAAe,aAG5B5N,EAAMyK,SAAYzK,EAAMyK,QAAQkC,KACnC4B,EAAYvO,EAAOqO,GAGF,YAAfA,EACFrO,EAAMyK,QAAQqC,YAAYH,EAAK,EAAG,GAElC3M,EAAMyK,QAAQkC,IAAIp4C,MAAQo4C,GAI9Bp+C,EAAKg1C,MAAM,SAAUvD,EAAM+G,MAOjC,MAAOx4C,IAcTi1C,KAAKr0C,UAAUy9C,IAAM,SAAS71B,EAAGwX,EAAGse,EAAGxY,GACrC,GAAI9lC,GAAOa,IAGX,KAAKb,EAAKsxC,UACR,MAAOtxC,EAIT,IAAoB,WAAhBA,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,MACP0hC,OAAQ,WACN73C,EAAKq+C,IAAI71B,EAAGwX,EAAGse,EAAGxY,MAIf9lC,CAQT,IAJAggC,EAAkB,gBAANA,GAAkB,EAAIA,EAClCse,EAAkB,gBAANA,IAAkB,GAAOA,EAGnB,mBAAPxY,GAAoB,CAE7B,GAAiB,gBAANtd,GAGT,MAAOxoB,GAAKi+C,IAFZj+C,GAAKi+C,MAAQz1B,EAAGwX,EAAGse,GAQvB,IAAK,GADD/M,GAAMvxC,EAAKwxC,aAAa1L,GACnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAAK,CAE/B,GAAIm0C,GAAQzxC,EAAK0xC,WAAWH,EAAIj0C,GAEhC,IAAIm0C,EAAO,CACT,GAAiB,gBAANjpB,GAcT,MAAOipB,GAAMwM,IAbbxM,GAAMwM,MAAQz1B,EAAGwX,EAAGse,GAEhB7M,EAAME,QAEHF,EAAMyK,UAAWzK,EAAMyK,QAAQkC,KAClC4B,EAAYvO,EAAO,WAGrBA,EAAMyK,QAAQqC,YAAY/1B,EAAGwX,EAAGse,IAGlCt+C,EAAKg1C,MAAM,MAAOvD,EAAM+G,MAO9B,MAAOx4C,IAaTi1C,KAAKr0C,UAAU49C,YAAc,SAASh2B,EAAGwX,EAAGse,EAAGxY,GAC7C,GAAI9lC,GAAOa,IAGX,KAAKb,EAAKsxC,UACR,MAAOtxC,EAIT,IAAoB,WAAhBA,EAAKo2C,OAQP,MAPAp2C,GAAKqiB,OAAOvgB,MACVqU,MAAO,cACP0hC,OAAQ,WACN73C,EAAKw+C,YAAYh2B,EAAGwX,EAAGse,EAAGxY,MAIvB9lC,CAQT,IAJAggC,EAAkB,gBAANA,GAAkBhgC,EAAKk+C,aAAa,GAAKle,EACrDse,EAAkB,gBAANA,GAAkBt+C,EAAKk+C,aAAa,GAAKI,EAGnC,mBAAPxY,GAAoB,CAE7B,GAAiB,gBAANtd,GAGT,MAAOxoB,GAAKk+C,YAFZl+C,GAAKk+C,cAAgB11B,EAAGwX,EAAGse,GAQ/B,IAAK,GADD/M,GAAMvxC,EAAKwxC,aAAa1L,GACnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAAK,CAE/B,GAAIm0C,GAAQzxC,EAAK0xC,WAAWH,EAAIj0C,GAEhC,IAAIm0C,EAAO,CACT,GAAiB,gBAANjpB,GAmBT,MAAOipB,GAAMyM,YAlBbzM,GAAMyM,cAAgB11B,EAAGwX,EAAGse,GAExB7M,EAAME,QAEHF,EAAMyK,UAEJzK,EAAMwM,OACTxM,EAAMwM,KAAOj+C,EAAKi+C,OAAS,EAAG,GAAG,KAGnC+B,EAAYvO,EAAO,YAGrBA,EAAMyK,QAAQ2C,eAAer2B,EAAGwX,EAAGse,IAGrCt+C,EAAKg1C,MAAM,cAAevD,EAAM+G,MAOtC,MAAOx4C,IA2BTi1C,KAAKr0C,UAAUq/C,WAAa,WAC1B,GAEI/iD,GAAG4oC,EAAI2L,EAFPzxC,EAAOa,KACPgH,EAAO1E,SAIX,KAAKnD,EAAKsxC,UACR,MAAOtxC,EAIT,IAAoB,IAAhB6H,EAAKhK,OAEP,MAAOmC,GAAK++C,WACP,IAAoB,IAAhBl3C,EAAKhK,OAAc,CAC5B,GAAuB,gBAAZgK,GAAK,GAmBd,MADA4pC,GAAQzxC,EAAK0xC,WAAWj+B,SAAS5L,EAAK,GAAI,KACnC4pC,EAAQA,EAAMsN,YAAc/+C,EAAK++C,WAlBxC7hD,GAAI2K,EAAK,GAGS,mBAAPi+B,KACT9lC,EAAK++C,aACHC,eAA4C,mBAArB9hD,GAAE8hD,eAAiC9hD,EAAE8hD,eAAiBh/C,EAAKkgD,gBAClFjB,eAA4C,mBAArB/hD,GAAE+hD,eAAiC/hD,EAAE+hD,eAAiBj/C,EAAKmgD,gBAClFjB,cAA0C,mBAApBhiD,GAAEgiD,cAAgChiD,EAAEgiD,cAAgBl/C,EAAKogD,eAC/EjB,cAA0C,mBAApBjiD,GAAEiiD,cAAgCjiD,EAAEiiD,cAAgBn/C,EAAKqgD,eAC/EjB,YAAsC,mBAAlBliD,GAAEkiD,YAA8BliD,EAAEkiD,YAAcp/C,EAAKsgD,aACzEjB,aAAwC,mBAAnBniD,GAAEmiD,aAA+BniD,EAAEmiD,aAAer/C,EAAKugD,cAC5EjB,YAAsC,mBAAlBpiD,GAAEoiD,YAA8BpiD,EAAEoiD,YAAct/C,EAAKwgD,aACzEjB,cAA0C,mBAApBriD,GAAEqiD,cAAgCriD,EAAEqiD,cAAgBv/C,EAAKygD,qBAQ5D,KAAhB54C,EAAKhK,SACdX,EAAI2K,EAAK,GACTi+B,EAAKryB,SAAS5L,EAAK,GAAI,IAKzB,KAAK,GADD0pC,GAAMvxC,EAAKwxC,aAAa1L,GACnBxoC,EAAE,EAAGA,EAAEi0C,EAAI1zC,OAAQP,IAG1B,GAFAm0C,EAAQzxC,EAAK0xC,WAAWH,EAAIj0C,IAEjB,CAET,GAAIojD,GAAKjP,EAAMsN,WACf2B,IACE1B,eAA4C,mBAArB9hD,GAAE8hD,eAAiC9hD,EAAE8hD,eAAiB0B,EAAG1B,eAChFC,eAA4C,mBAArB/hD,GAAE+hD,eAAiC/hD,EAAE+hD,eAAiByB,EAAGzB,eAChFC,cAA0C,mBAApBhiD,GAAEgiD,cAAgChiD,EAAEgiD,cAAgBwB,EAAGxB,cAC7EC,cAA0C,mBAApBjiD,GAAEiiD,cAAgCjiD,EAAEiiD,cAAgBuB,EAAGvB,cAC7EC,YAAsC,mBAAlBliD,GAAEkiD,YAA8BliD,EAAEkiD,YAAcsB,EAAGtB,YACvEC,aAAwC,mBAAnBniD,GAAEmiD,aAA+BniD,EAAEmiD,aAAeqB,EAAGrB,aAC1EC,YAAsC,mBAAlBpiD,GAAEoiD,YAA8BpiD,EAAEoiD,YAAcoB,EAAGpB,YACvEC,cAA0C,mBAApBriD,GAAEqiD,cAAgCriD,EAAEqiD,cAAgBmB,EAAGnB;CAI/E,IAAIoB,GAASlP,EAAMyK,OACfyE,IACFA,EAAO3B,eAAiB0B,EAAG1B,eAC3B2B,EAAO1B,eAAiByB,EAAGzB,eAC3B0B,EAAOzB,cAAgBwB,EAAGxB,cAC1ByB,EAAOxB,cAAgBuB,EAAGvB,cAC1BwB,EAAOvB,YAAcsB,EAAGtB,YACxBuB,EAAOtB,aAAeqB,EAAGrB,aACzBsB,EAAOrB,YAAcoB,EAAGpB,YACxBqB,EAAOpB,cAAgBmB,EAAGnB,gBAGrB9N,EAAMwM,OACTxM,EAAMwM,KAAOj+C,EAAKi+C,OAAS,EAAG,GAAG,KAInC+B,EAAYvO,EAAO,YAKzB,MAAOzxC,IAWTo4C,MAAMx3C,UAAUF,KAAO,SAAU25B,GAC/B,MAAO,YACL,GAAIr6B,GAAOa,KACPuI,EAASpJ,EAAK2O,OAGlB3O,GAAKk+C,aAAe90C,EAAO80C,aAC3Bl+C,EAAK8+C,QAAU11C,EAAO01C,QACtB9+C,EAAKi+C,KAAO70C,EAAO60C,KACnBj+C,EAAK++C,YAAc31C,EAAO21C,YAG1B1kB,EAAOz8B,KAAKiD,MAGRb,EAAK8+C,QACP11C,EAAO+0C,OAAOn+C,EAAK8+C,SACV9+C,EAAKi+C,MACd70C,EAAOi1C,IAAIr+C,EAAKi+C,KAAK,GAAIj+C,EAAKi+C,KAAK,GAAIj+C,EAAKi+C,KAAK,GAAIj+C,EAAKw4C,OAG7DJ,MAAMx3C,UAAUF,MAOnB03C,MAAMx3C,UAAUwsC,MAAQ,SAAU/S,GAChC,MAAO,YACL,GAAIr6B,GAAOa,KACPuI,EAASpJ,EAAK2O,OAQlB,OALA3O,GAAKk+C,aAAe90C,EAAO80C,aAC3Bl+C,EAAKi+C,KAAO70C,EAAO60C,KACnBj+C,EAAK++C,YAAc31C,EAAO21C,YAGnB1kB,EAAOz8B,KAAKiD,QAEpBu3C,MAAMx3C,UAAUwsC,MAUnB,IAAI4S,GAAc,SAASvO,EAAOjyC,GAChCA,EAAOA,GAAQ,UAGF,YAATA,GACFiyC,EAAMyK,QAAU9L,OAAOljC,IAAI0zC,eAC3BnP,EAAMyK,QAAQ8C,eAAiBvN,EAAMsN,YAAYC,eACjDvN,EAAMyK,QAAQ+C,eAAiBxN,EAAMsN,YAAYE,eACjDxN,EAAMyK,QAAQgD,cAAgBzN,EAAMsN,YAAYG,cAChDzN,EAAMyK,QAAQiD,cAAgB1N,EAAMsN,YAAYI,cAChD1N,EAAMyK,QAAQkD,YAAc3N,EAAMsN,YAAYK,YAC9C3N,EAAMyK,QAAQmD,aAAe5N,EAAMsN,YAAYM,aAC/C5N,EAAMyK,QAAQoD,YAAc7N,EAAMsN,YAAYO,YAC9C7N,EAAMyK,QAAQqD,cAAgB9N,EAAMsN,YAAYQ,cAChD9N,EAAMyK,QAAQqC,YAAY9M,EAAMwM,KAAK,GAAIxM,EAAMwM,KAAK,GAAIxM,EAAMwM,KAAK,IACnExM,EAAMyK,QAAQ2C,eAAepN,EAAMyM,aAAa,GAAIzM,EAAMyM,aAAa,GAAIzM,EAAMyM,aAAa,MAE9FzM,EAAMyK,QAAU9L,OAAOljC,IAAI6yC,qBAC3BtO,EAAMyK,QAAQkC,IAAIp4C,MAAQyrC,EAAMqN,SAGlCrN,EAAMyK,QAAQ7H,QAAQ5C,EAAME,OAGvBF,EAAMkD,SACTlD,EAAM9iC,QAAQsrC,MAAMxI,EAAM+G,KAAK,GAAMV,KAAKrG,EAAM+G,WAKnD56C,KAAKiD,KAAuB,mBAAXjB,QAAyBA,OAAyB,mBAATI,MAAuBA,KAAyB,mBAAXD,QAAyBA,gBAErHwG,GAAG,SAASlJ,EAAQU,EAAOJ,GAYjC,QAASkjD,KACL,KAAM,IAAIrjD,OAAM,mCAEpB,QAASsjD,KACL,KAAM,IAAItjD,OAAM,qCAsBpB,QAASujD,GAAWC,GAChB,GAAIC,IAAqB79C,WAErB,MAAOA,YAAW49C,EAAK,EAG3B,KAAKC,IAAqBJ,IAAqBI,IAAqB79C,WAEhE,MADA69C,GAAmB79C,WACZA,WAAW49C,EAAK,EAE3B,KAEI,MAAOC,GAAiBD,EAAK,GAC/B,MAAMnkD,GACJ,IAEI,MAAOokD,GAAiBrjD,KAAK,KAAMojD,EAAK,GAC1C,MAAMnkD,GAEJ,MAAOokD,GAAiBrjD,KAAKiD,KAAMmgD,EAAK,KAMpD,QAASE,GAAgBC,GACrB,GAAIC,IAAuBxsB,aAEvB,MAAOA,cAAausB,EAGxB,KAAKC,IAAuBN,IAAwBM,IAAuBxsB,aAEvE,MADAwsB,GAAqBxsB,aACdA,aAAausB,EAExB,KAEI,MAAOC,GAAmBD,GAC5B,MAAOtkD,GACL,IAEI,MAAOukD,GAAmBxjD,KAAK,KAAMujD,GACvC,MAAOtkD,GAGL,MAAOukD,GAAmBxjD,KAAKiD,KAAMsgD,KAYjD,QAASE,KACAC,GAAaC,IAGlBD,GAAW,EACPC,EAAa1jD,OACb6F,EAAQ69C,EAAathC,OAAOvc,GAE5B89C,GAAa,EAEb99C,EAAM7F,QACN4jD,KAIR,QAASA,KACL,IAAIH,EAAJ,CAGA,GAAIpsB,GAAU6rB,EAAWM,EACzBC,IAAW,CAGX,KADA,GAAIxiC,GAAMpb,EAAM7F,OACVihB,GAAK,CAGP,IAFAyiC,EAAe79C,EACfA,OACS89C,EAAa1iC,GACdyiC,GACAA,EAAaC,GAAYE,KAGjCF,IAAa,EACb1iC,EAAMpb,EAAM7F,OAEhB0jD,EAAe,KACfD,GAAW,EACXJ,EAAgBhsB,IAiBpB,QAASysB,GAAKX,EAAKjxB,GACflvB,KAAKmgD,IAAMA,EACXngD,KAAKkvB,MAAQA,EAYjB,QAAS6xB,MAhKT,GAOIX,GACAG,EARAzhD,EAAU5B,EAAOJ,YAgBpB,WACG,IAEQsjD,EADsB,kBAAf79C,YACYA,WAEAy9C,EAEzB,MAAOhkD,GACLokD,EAAmBJ,EAEvB,IAEQO,EADwB,kBAAjBxsB,cACcA,aAEAksB,EAE3B,MAAOjkD,GACLukD,EAAqBN,KAuD7B,IAEIS,GAFA79C,KACA49C,GAAW,EAEXE,GAAa,CAyCjB7hD,GAAQ8xB,SAAW,SAAUuvB,GACzB,GAAIn5C,GAAO,GAAI0T,OAAMpY,UAAUtF,OAAS,EACxC,IAAIsF,UAAUtF,OAAS,EACnB,IAAK,GAAIP,GAAI,EAAGA,EAAI6F,UAAUtF,OAAQP,IAClCuK,EAAKvK,EAAI,GAAK6F,UAAU7F,EAGhCoG,GAAM5B,KAAK,GAAI6/C,GAAKX,EAAKn5C,IACJ,IAAjBnE,EAAM7F,QAAiByjD,GACvBP,EAAWU,IASnBE,EAAK/gD,UAAU8gD,IAAM,WACjB7gD,KAAKmgD,IAAI55C,MAAM,KAAMvG,KAAKkvB,QAE9BpwB,EAAQoS,MAAQ,UAChBpS,EAAQkiD,SAAU,EAClBliD,EAAQgV,OACRhV,EAAQmiD,QACRniD,EAAQupB,QAAU,GAClBvpB,EAAQ45B,YAIR55B,EAAQ8vC,GAAKmS,EACbjiD,EAAQoiD,YAAcH,EACtBjiD,EAAQ65C,KAAOoI,EACfjiD,EAAQgwC,IAAMiS,EACdjiD,EAAQqiD,eAAiBJ,EACzBjiD,EAAQsiD,mBAAqBL,EAC7BjiD,EAAQmX,KAAO8qC,EAEfjiD,EAAQuiD,QAAU,SAAU70C,GACxB,KAAM,IAAI7P,OAAM,qCAGpBmC,EAAQwiD,IAAM,WAAc,MAAO,KACnCxiD,EAAQyiD,MAAQ,SAAU3H,GACtB,KAAM,IAAIj9C,OAAM,mCAEpBmC,EAAQ0iD,MAAQ,WAAa,MAAO,SAE9Bj6C,GAAG,SAAS/K,EAAQU,EAAOJ,GACjC,YAaA,SAAS2kD,GAAiBC,GACxB,GAAIC,GAAWD,EAAKn5C,OAAO2sB,KAAK0sB,aAEhC,OAAOC,GAAaF,GAGtB,QAASE,GAAa1pC,GACpB,MAAIA,IACFA,EAAQA,EAAMgjB,cACVhjB,IAASxI,GAAOpS,QAAQE,WACnBkS,EAAOpS,QAAQE,WAAW0a,GAE1B,MAGF,KAIX,QAAS2pC,KACP,GAAIvjD,GAAOoR,EAAOpS,QAAQgB,IAC1B,OAAOA,GAAKoI,KAAKo7C,MAAMp7C,KAAK40C,SAAWh9C,EAAKvB,SAG9C,QAASglD,GAAmBt7C,GAC1B,GAAInI,GAAOoR,EAAOpS,QAAQgB,IAC1B,OAAOA,GAAKmI,EAAQnI,EAAKvB,QArC3B4I,OAAO+U,eAAe7d,EAAS,cAC7BqI,OAAO,IAETrI,EAAQ2kD,iBAAmBA,EAC3B3kD,EAAQ+kD,aAAeA,EACvB/kD,EAAQglD,aAAeA,EACvBhlD,EAAQklD,mBAAqBA,CAC7B,IAAIryC,GAASnT,EAAQ,iBAEHM,GAAQmlD,YAAc,GAAIC,OAAM,EAAG,KA+BlDC,iBAAiB,IAAIl4C,GAAG,SAASzN,EAAQU,EAAOJ,GACnD,cAEA,SAAWslD,EAAMC,GAEO,kBAAXrjD,SAAyBA,OAAOC,IACzCD,UAAWqjD,GACgB,mBAAXnlD,IAA0BA,EAAOJ,QACjDI,EAAOJ,QAAUulD,IAEjBD,EAAKE,cAAgBD,KAEtBv9C,OAAW,WAaZ,QAASy9C,GAAQ1sB,GAEf,MAAOA,GAAIlvB,KAAKu6B,GAAK,IAGvB,QAASzC,GAAYliC,EAAGgsB,GAEtB,GAAIqb,GAAKrb,EAAEZ,EAAIprB,EAAEorB,EACbkc,EAAKtb,EAAE4W,EAAI5iC,EAAE4iC,CAEjB,OAAOx4B,MAAKq6B,KAAK4C,EAAKA,EAAKC,EAAKA,GAGlC,QAAS2e,GAAOC,EAAQj2C,GAEtBxM,KAAKyiD,OAASA,EACdziD,KAAKwM,KAAOA,EACZxM,KAAK0iD,gBAoMP,QAASJ,GAAcK,EAAU9lC,GAE/BA,EAAUA,MACV7c,KAAK4sC,UAAY/vB,EAAQ+vB,WAAa,EACtCgW,EAAkB/lC,EAAQgmC,gBAAkB,GAE5C7iD,KAAK2iD,WAEL,KAAK,GAAIlmD,GAAI,EAAGA,EAAIkmD,EAAS3lD,OAAQP,IACnCuD,KAAK8iD,MAAMH,EAASlmD,GAAG+P,KAAMm2C,EAASlmD,GAAGgmD,QAzO7C,GAAIG,GACAG,EAAc,IACdC,EAAO,KAAO,EAAOr8C,KAAKq6B,KAAK,IAC/BiiB,EAAcV,EAAQ,IACtBW,EAAkBX,EAAQ,GAC1BY,EAAmF,GAAnEx8C,KAAKq6B,KAAK+hB,EAAcA,EAAcA,EAAcA,GACpEK,GACFz7B,EAAG,EACHwX,EAAG,EA+UL,OAxTAqjB,GAAOziD,UAAU2iD,cAAgB,WAS/B,MAPA1iD,MAAKyiD,OAASziD,KAAKqjD,WACnBrjD,KAAKsjD,cACLtjD,KAAKyiD,OAASziD,KAAKujD,UAAUvjD,KAAKwjD,mBAClCxjD,KAAKyiD,OAASziD,KAAKyjD,gBACnBzjD,KAAKsjD,cACLtjD,KAAKyiD,OAASziD,KAAK0jD,oBAEZ1jD,MAGTwiD,EAAOziD,UAAUsjD,SAAW,WAO1B,IAAK,GALDM,GAAeC,EACfvW,EAAWrtC,KAAK6jD,gBAAkBjB,EAAkB,GACpDpkB,EAAW,EACXslB,GAAa9jD,KAAKyiD,OAAO,IAEpBhmD,EAAI,EAAGA,EAAIuD,KAAKyiD,OAAOzlD,OAAQP,IACtCknD,EAAgBllB,EAAYz+B,KAAKyiD,OAAOhmD,EAAI,GAAIuD,KAAKyiD,OAAOhmD,IAExD+hC,EAAWmlB,GAAiBtW,GAC9BuW,GACEj8B,EAAG3nB,KAAKyiD,OAAOhmD,EAAI,GAAGkrB,GAAK0lB,EAAW7O,GAAYmlB,GAAiB3jD,KAAKyiD,OAAOhmD,GAAGkrB,EAAI3nB,KAAKyiD,OAAOhmD,EAAI,GAAGkrB,GACzGwX,EAAGn/B,KAAKyiD,OAAOhmD,EAAI,GAAG0iC,GAAKkO,EAAW7O,GAAYmlB,GAAiB3jD,KAAKyiD,OAAOhmD,GAAG0iC,EAAIn/B,KAAKyiD,OAAOhmD,EAAI,GAAG0iC,IAG3G2kB,EAAU7iD,KAAK2iD,GACf5jD,KAAKyiD,OAAOryC,OAAO3T,EAAG,EAAGmnD,GACzBplB,EAAW,GAEXA,GAAYmlB,CAQhB,OAJIG,GAAU9mD,SAAW4lD,EAAkB,GACzCkB,EAAU7iD,KAAKjB,KAAKyiD,OAAOziD,KAAKyiD,OAAOzlD,OAAS,IAG3C8mD,GAGTtB,EAAOziD,UAAUwjD,SAAW,SAAUjlB,GAOpC,IAAK,GALDylB,GACAC,EAAMr9C,KAAKq9C,IAAI1lB,GACf2lB,EAAMt9C,KAAKs9C,IAAI3lB,GACfwlB,KAEKrnD,EAAI,EAAGA,EAAIuD,KAAKyiD,OAAOzlD,OAAQP,IACtCsnD,EAAQ/jD,KAAKyiD,OAAOhmD,GAEpBqnD,EAAU7iD,MACR0mB,GAAIo8B,EAAMp8B,EAAI3nB,KAAKwoB,EAAEb,GAAKq8B,GAAOD,EAAM5kB,EAAIn/B,KAAKwoB,EAAE2W,GAAK8kB,EAAMjkD,KAAKwoB,EAAEb,EACpEwX,GAAI4kB,EAAMp8B,EAAI3nB,KAAKwoB,EAAEb,GAAKs8B,GAAOF,EAAM5kB,EAAIn/B,KAAKwoB,EAAE2W,GAAK6kB,EAAMhkD,KAAKwoB,EAAE2W,GAIxE,OAAO2kB,IAGTtB,EAAOziD,UAAU0jD,cAAgB,WAW/B,IAAK,GATDM,GACAD,KACAI,GACFC,OAAO1L,EAAAA,GACP2L,OAAO3L,EAAAA,GACP4L,OAAO5L,EAAAA,GACP6L,OAAO7L,EAAAA,IAGAh8C,EAAI,EAAGA,EAAIuD,KAAKyiD,OAAOzlD,OAAQP,IACtCsnD,EAAQ/jD,KAAKyiD,OAAOhmD,GAEpBynD,EAAIC,KAAOx9C,KAAKyzC,IAAI8J,EAAIC,KAAMJ,EAAMp8B,GACpCu8B,EAAIG,KAAO19C,KAAKyzC,IAAI8J,EAAIG,KAAMN,EAAM5kB,GACpC+kB,EAAIE,KAAOz9C,KAAKC,IAAIs9C,EAAIE,KAAML,EAAMp8B,GACpCu8B,EAAII,KAAO39C,KAAKC,IAAIs9C,EAAII,KAAMP,EAAM5kB,EAMtC,KAHA+kB,EAAIK,MAAQL,EAAIE,KAAOF,EAAIC,KAC3BD,EAAIM,OAASN,EAAII,KAAOJ,EAAIG,KAEvB5nD,EAAI,EAAGA,EAAIuD,KAAKyiD,OAAOzlD,OAAQP,IAClCsnD,EAAQ/jD,KAAKyiD,OAAOhmD,GAEpBqnD,EAAU7iD,MACR0mB,EAAGo8B,EAAMp8B,GAAKo7B,EAAcmB,EAAIK,OAChCplB,EAAG4kB,EAAM5kB,GAAK4jB,EAAcmB,EAAIM,SAIpC,OAAOV,IAGTtB,EAAOziD,UAAU2jD,kBAAoB,SAAUjB,GAK7C,IAAK,GAHDsB,GACAD,KAEKrnD,EAAI,EAAGA,EAAIuD,KAAKyiD,OAAOzlD,OAAQP,IACtCsnD,EAAQ/jD,KAAKyiD,OAAOhmD,GAEpBqnD,EAAU7iD,MACR0mB,EAAGo8B,EAAMp8B,EAAIy7B,EAAQz7B,EAAI3nB,KAAKwoB,EAAEb,EAChCwX,EAAG4kB,EAAM5kB,EAAIikB,EAAQjkB,EAAIn/B,KAAKwoB,EAAE2W,GAIpC,OAAO2kB,IAGTtB,EAAOziD,UAAUujD,YAAc,WAE7B,GAAIS,EACJ/jD,MAAKwoB,GACHb,EAAG,EACHwX,EAAG,EAGL,KAAK,GAAI1iC,GAAI,EAAGA,EAAIuD,KAAKyiD,OAAOzlD,OAAQP,IACtCsnD,EAAQ/jD,KAAKyiD,OAAOhmD,GAEpBuD,KAAKwoB,EAAEb,GAAKo8B,EAAMp8B,EAClB3nB,KAAKwoB,EAAE2W,GAAK4kB,EAAM5kB,CAMpB,OAHAn/B,MAAKwoB,EAAEb,GAAK3nB,KAAKyiD,OAAOzlD,OACxBgD,KAAKwoB,EAAE2W,GAAKn/B,KAAKyiD,OAAOzlD,OAEjBgD,MAGTwiD,EAAOziD,UAAUyjD,gBAAkB,WAEjC,MAAO78C,MAAKs6B,MAAMjhC,KAAKwoB,EAAE2W,EAAIn/B,KAAKyiD,OAAO,GAAGtjB,EAAGn/B,KAAKwoB,EAAEb,EAAI3nB,KAAKyiD,OAAO,GAAG96B,IAG3E66B,EAAOziD,UAAU8jD,aAAe,WAI9B,IAAK,GAFDhuB,GAAI,EAECp5B,EAAI,EAAGA,EAAIuD,KAAKyiD,OAAOzlD,OAAQP,IACtCo5B,GAAK4I,EAAYz+B,KAAKyiD,OAAOhmD,EAAI,GAAIuD,KAAKyiD,OAAOhmD,GAGnD,OAAOo5B,IAGT2sB,EAAOziD,UAAU0kD,oBAAsB,SAAUC,GAS/C,IAPA,GAAInoD,IAAK0mD,EACL16B,EAAI06B,EACJ0B,EAAK3B,EAAOzmD,GAAK,EAAMymD,GAAQz6B,EAC/Bq8B,EAAK5kD,KAAK6kD,gBAAgBH,EAASC,GACnCG,GAAM,EAAM9B,GAAQzmD,EAAIymD,EAAOz6B,EAC/Bw8B,EAAK/kD,KAAK6kD,gBAAgBH,EAASI,GAEhCn+C,KAAKy4B,IAAI7W,EAAIhsB,GAAK2mD,GAEnB0B,EAAKG,GACPx8B,EAAIu8B,EACJA,EAAKH,EACLI,EAAKH,EACLD,EAAK3B,EAAOzmD,GAAK,EAAMymD,GAAQz6B,EAC/Bq8B,EAAK5kD,KAAK6kD,gBAAgBH,EAASC,KAEnCpoD,EAAIooD,EACJA,EAAKG,EACLF,EAAKG,EACLD,GAAM,EAAM9B,GAAQzmD,EAAIymD,EAAOz6B,EAC/Bw8B,EAAK/kD,KAAK6kD,gBAAgBH,EAASI,GAIvC,OAAOn+C,MAAKyzC,IAAIwK,EAAIG,IAGtBvC,EAAOziD,UAAU8kD,gBAAkB,SAAUH,EAASpmB,GAMpD,IAAK,GAJD0mB,GAAehlD,KAAKujD,SAASjlB,GAC7B2mB,EAAgBP,EAAQjC,OACxB5sB,EAAI,EAECp5B,EAAI,EAAGA,EAAIuoD,EAAahoD,OAAQP,IACvCo5B,GAAK4I,EAAYumB,EAAavoD,GAAIwoD,EAAcxoD,GAGlD,OAAOo5B,GAAImvB,EAAahoD,QAgB1BslD,EAAc4C,gBACZzC,SAAW96B,EAAG,EAAGwX,EAAG,KAAQxX,EAAG,IAAKwX,EAAG,KACvC3yB,KAAM,SAENi2C,SAAW96B,EAAG,GAAIwX,EAAG,IAAOxX,EAAG,GAAIwX,EAAG,MACtC3yB,KAAM,SAENi2C,SAAW96B,EAAG,EAAGwX,EAAG,IAAOxX,EAAG,IAAKwX,EAAG,MACtC3yB,KAAM,SAENi2C,SAAW96B,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAClmC3yB,KAAM,SAENi2C,SAAW96B,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAA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,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MACl5D3yB,KAAM,WAENi2C,SAAW96B,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,KAAQxX,EAAK,GAAIwX,EAAK,KAAQxX,EAAK,GAAIwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MACve3yB,KAAM,UAENi2C,SAAW96B,EAAK,GAAIwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,KACrN3yB,KAAM,UAENi2C,SAAW96B,EAAK,GAAIwX,EAAK,KAAQxX,EAAK,GAAIwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,IAAKwX,EAAK,KAAQxX,EAAK,GAAIwX,EAAK,KAAQxX,EAAK,GAAIwX,EAAK,MACzI3yB,KAAM,UAENi2C,SAAW96B,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAC1vC3yB,KAAM,UAENi2C,SAAW96B,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MACjhD3yB,KAAM,UAENi2C,SAAW96B,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,GAAIwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EAAK,IAAKwX,EAAK,MAASxX,EA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","file":"../main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nexports.runAnimations = false;\nexports.pop = true;\nexports.canvasId = 'canvas';\nexports.maxShapes = 20;\n\nexports.palette = {\n  colors: [\"#20171C\", \"#1E2A43\", \"#28377D\", \"#352747\", \"#CA2E26\", \"#9A2A1F\", \"#DA6C26\", \"#453121\", \"#916A47\", \"#DAAD27\", \"#7F7D31\", \"#2B5E2E\"],\n  colorNames: {\n    \"#20171C\": \"black\",\n    \"#1E2A43\": \"blue\",\n    \"#28377D\": \"blue\",\n    \"#352747\": \"blue\",\n    \"#CA2E26\": \"red\",\n    \"#9A2A1F\": \"red\",\n    \"#DA6C26\": \"orange\",\n    \"#453121\": \"brown\",\n    \"#916A47\": \"brown\",\n    \"#DAAD27\": \"orange\",\n    \"#7F7D31\": \"green\",\n    \"#2B5E2E\": \"green\"\n  },\n  gradients: {\n    '#20171C': ['#20171C', '#000000'],\n    '#1E2A43': ['#1E2A43', '#263166'],\n    '#28377D': ['#28377D', '#1E4695'],\n    '#352747': ['#352747', '#45005B'],\n    '#CA2E26': ['#CA2E26', '#9B352F'],\n    '#9A2A1F': ['#9A2A1F', '#CD3621'],\n    '#DA6C26': ['#DA6C26', '#BD4820'],\n    '#453121': ['#453121', '#281806'],\n    '#916A47': ['#916A47', '#623A22'],\n    '#DAAD27': ['#DAAD27', '#AF871D'],\n    '#7F7D31': ['#7F7D31', '#555827'],\n    '#2B5E2E': ['#2B5E2E', '#16451D']\n  },\n  pops: [\"#00ADEF\", \"#F285A5\", \"#7DC57F\", \"#F6EB16\", \"#F4EAE0\"],\n  colorSize: 20,\n  selectedColorSize: 30\n};\n\nexports.contextualTuts = [{\n  type: \"fill\",\n  copy: \"<strong>Double-tap</strong> a filled shape to <strong>UNFILL</strong> it. Repeat to <strong>FILL</strong> an unfilled shape.\"\n}, {\n  type: \"pinch\",\n  copy: \"<strong>Pinch</strong> shapes with <strong>TWO FINGERS</strong> to <strong>resize</strong> and <strong>move</strong> them.\"\n}, {\n  type: \"swipe\",\n  copy: \"To <strong>remove</strong> shapes, <strong>pinch</strong> with <strong>two fingers</strong> then <strong>swipe</strong> or hit <strong>undo</strong>.\"\n}];\n\n},{}],2:[function(require,module,exports){\n(function (process,global){\n/* @preserve\n * The MIT License (MIT)\n * \n * Copyright (c) 2013-2017 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n/**\n * bluebird build version 3.5.0\n * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each\n*/\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar SomePromiseArray = Promise._SomePromiseArray;\nfunction any(promises) {\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function (promises) {\n    return any(promises);\n};\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n};\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\nvar firstLineError;\ntry {throw new Error(); } catch (e) {firstLineError = e;}\nvar schedule = _dereq_(\"./schedule\");\nvar Queue = _dereq_(\"./queue\");\nvar util = _dereq_(\"./util\");\n\nfunction Async() {\n    this._customScheduler = false;\n    this._isTickUsed = false;\n    this._lateQueue = new Queue(16);\n    this._normalQueue = new Queue(16);\n    this._haveDrainedQueues = false;\n    this._trampolineEnabled = true;\n    var self = this;\n    this.drainQueues = function () {\n        self._drainQueues();\n    };\n    this._schedule = schedule;\n}\n\nAsync.prototype.setScheduler = function(fn) {\n    var prev = this._schedule;\n    this._schedule = fn;\n    this._customScheduler = true;\n    return prev;\n};\n\nAsync.prototype.hasCustomScheduler = function() {\n    return this._customScheduler;\n};\n\nAsync.prototype.enableTrampoline = function() {\n    this._trampolineEnabled = true;\n};\n\nAsync.prototype.disableTrampolineIfNecessary = function() {\n    if (util.hasDevTools) {\n        this._trampolineEnabled = false;\n    }\n};\n\nAsync.prototype.haveItemsQueued = function () {\n    return this._isTickUsed || this._haveDrainedQueues;\n};\n\n\nAsync.prototype.fatalError = function(e, isNode) {\n    if (isNode) {\n        process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) +\n            \"\\n\");\n        process.exit(2);\n    } else {\n        this.throwLater(e);\n    }\n};\n\nAsync.prototype.throwLater = function(fn, arg) {\n    if (arguments.length === 1) {\n        arg = fn;\n        fn = function () { throw arg; };\n    }\n    if (typeof setTimeout !== \"undefined\") {\n        setTimeout(function() {\n            fn(arg);\n        }, 0);\n    } else try {\n        this._schedule(function() {\n            fn(arg);\n        });\n    } catch (e) {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n};\n\nfunction AsyncInvokeLater(fn, receiver, arg) {\n    this._lateQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncInvoke(fn, receiver, arg) {\n    this._normalQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncSettlePromises(promise) {\n    this._normalQueue._pushOne(promise);\n    this._queueTick();\n}\n\nif (!util.hasDevTools) {\n    Async.prototype.invokeLater = AsyncInvokeLater;\n    Async.prototype.invoke = AsyncInvoke;\n    Async.prototype.settlePromises = AsyncSettlePromises;\n} else {\n    Async.prototype.invokeLater = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvokeLater.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                setTimeout(function() {\n                    fn.call(receiver, arg);\n                }, 100);\n            });\n        }\n    };\n\n    Async.prototype.invoke = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvoke.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                fn.call(receiver, arg);\n            });\n        }\n    };\n\n    Async.prototype.settlePromises = function(promise) {\n        if (this._trampolineEnabled) {\n            AsyncSettlePromises.call(this, promise);\n        } else {\n            this._schedule(function() {\n                promise._settlePromises();\n            });\n        }\n    };\n}\n\nAsync.prototype._drainQueue = function(queue) {\n    while (queue.length() > 0) {\n        var fn = queue.shift();\n        if (typeof fn !== \"function\") {\n            fn._settlePromises();\n            continue;\n        }\n        var receiver = queue.shift();\n        var arg = queue.shift();\n        fn.call(receiver, arg);\n    }\n};\n\nAsync.prototype._drainQueues = function () {\n    this._drainQueue(this._normalQueue);\n    this._reset();\n    this._haveDrainedQueues = true;\n    this._drainQueue(this._lateQueue);\n};\n\nAsync.prototype._queueTick = function () {\n    if (!this._isTickUsed) {\n        this._isTickUsed = true;\n        this._schedule(this.drainQueues);\n    }\n};\n\nAsync.prototype._reset = function () {\n    this._isTickUsed = false;\n};\n\nmodule.exports = Async;\nmodule.exports.firstLineError = firstLineError;\n\n},{\"./queue\":26,\"./schedule\":29,\"./util\":36}],3:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {\nvar calledBind = false;\nvar rejectThis = function(_, e) {\n    this._reject(e);\n};\n\nvar targetRejected = function(e, context) {\n    context.promiseRejectionQueued = true;\n    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n};\n\nvar bindingResolved = function(thisArg, context) {\n    if (((this._bitField & 50397184) === 0)) {\n        this._resolveCallback(context.target);\n    }\n};\n\nvar bindingRejected = function(e, context) {\n    if (!context.promiseRejectionQueued) this._reject(e);\n};\n\nPromise.prototype.bind = function (thisArg) {\n    if (!calledBind) {\n        calledBind = true;\n        Promise.prototype._propagateFrom = debug.propagateFromFunction();\n        Promise.prototype._boundValue = debug.boundValueFunction();\n    }\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 1);\n    var target = this._target();\n    ret._setBoundTo(maybePromise);\n    if (maybePromise instanceof Promise) {\n        var context = {\n            promiseRejectionQueued: false,\n            promise: ret,\n            target: target,\n            bindingPromise: maybePromise\n        };\n        target._then(INTERNAL, targetRejected, undefined, ret, context);\n        maybePromise._then(\n            bindingResolved, bindingRejected, undefined, ret, context);\n        ret._setOnCancel(maybePromise);\n    } else {\n        ret._resolveCallback(target);\n    }\n    return ret;\n};\n\nPromise.prototype._setBoundTo = function (obj) {\n    if (obj !== undefined) {\n        this._bitField = this._bitField | 2097152;\n        this._boundTo = obj;\n    } else {\n        this._bitField = this._bitField & (~2097152);\n    }\n};\n\nPromise.prototype._isBound = function () {\n    return (this._bitField & 2097152) === 2097152;\n};\n\nPromise.bind = function (thisArg, value) {\n    return Promise.resolve(value).bind(thisArg);\n};\n};\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\nvar old;\nif (typeof Promise !== \"undefined\") old = Promise;\nfunction noConflict() {\n    try { if (Promise === bluebird) Promise = old; }\n    catch (e) {}\n    return bluebird;\n}\nvar bluebird = _dereq_(\"./promise\")();\nbluebird.noConflict = noConflict;\nmodule.exports = bluebird;\n\n},{\"./promise\":22}],5:[function(_dereq_,module,exports){\n\"use strict\";\nvar cr = Object.create;\nif (cr) {\n    var callerCache = cr(null);\n    var getterCache = cr(null);\n    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n}\n\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar isIdentifier = util.isIdentifier;\n\nvar getMethodCaller;\nvar getGetter;\nif (!true) {\nvar makeMethodCaller = function (methodName) {\n    return new Function(\"ensureMethod\", \"                                    \\n\\\n        return function(obj) {                                               \\n\\\n            'use strict'                                                     \\n\\\n            var len = this.length;                                           \\n\\\n            ensureMethod(obj, 'methodName');                                 \\n\\\n            switch(len) {                                                    \\n\\\n                case 1: return obj.methodName(this[0]);                      \\n\\\n                case 2: return obj.methodName(this[0], this[1]);             \\n\\\n                case 3: return obj.methodName(this[0], this[1], this[2]);    \\n\\\n                case 0: return obj.methodName();                             \\n\\\n                default:                                                     \\n\\\n                    return obj.methodName.apply(obj, this);                  \\n\\\n            }                                                                \\n\\\n        };                                                                   \\n\\\n        \".replace(/methodName/g, methodName))(ensureMethod);\n};\n\nvar makeGetter = function (propertyName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict';                                                        \\n\\\n        return obj.propertyName;                                             \\n\\\n        \".replace(\"propertyName\", propertyName));\n};\n\nvar getCompiled = function(name, compiler, cache) {\n    var ret = cache[name];\n    if (typeof ret !== \"function\") {\n        if (!isIdentifier(name)) {\n            return null;\n        }\n        ret = compiler(name);\n        cache[name] = ret;\n        cache[\" size\"]++;\n        if (cache[\" size\"] > 512) {\n            var keys = Object.keys(cache);\n            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n            cache[\" size\"] = keys.length - 256;\n        }\n    }\n    return ret;\n};\n\ngetMethodCaller = function(name) {\n    return getCompiled(name, makeMethodCaller, callerCache);\n};\n\ngetGetter = function(name) {\n    return getCompiled(name, makeGetter, getterCache);\n};\n}\n\nfunction ensureMethod(obj, methodName) {\n    var fn;\n    if (obj != null) fn = obj[methodName];\n    if (typeof fn !== \"function\") {\n        var message = \"Object \" + util.classString(obj) + \" has no method '\" +\n            util.toString(methodName) + \"'\";\n        throw new Promise.TypeError(message);\n    }\n    return fn;\n}\n\nfunction caller(obj) {\n    var methodName = this.pop();\n    var fn = ensureMethod(obj, methodName);\n    return fn.apply(obj, this);\n}\nPromise.prototype.call = function (methodName) {\n    var args = [].slice.call(arguments, 1);;\n    if (!true) {\n        if (canEvaluate) {\n            var maybeCaller = getMethodCaller(methodName);\n            if (maybeCaller !== null) {\n                return this._then(\n                    maybeCaller, undefined, undefined, args, undefined);\n            }\n        }\n    }\n    args.push(methodName);\n    return this._then(caller, undefined, undefined, args, undefined);\n};\n\nfunction namedGetter(obj) {\n    return obj[this];\n}\nfunction indexedGetter(obj) {\n    var index = +this;\n    if (index < 0) index = Math.max(0, index + obj.length);\n    return obj[index];\n}\nPromise.prototype.get = function (propertyName) {\n    var isIndex = (typeof propertyName === \"number\");\n    var getter;\n    if (!isIndex) {\n        if (canEvaluate) {\n            var maybeGetter = getGetter(propertyName);\n            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n        } else {\n            getter = namedGetter;\n        }\n    } else {\n        getter = indexedGetter;\n    }\n    return this._then(getter, undefined, undefined, propertyName, undefined);\n};\n};\n\n},{\"./util\":36}],6:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nPromise.prototype[\"break\"] = Promise.prototype.cancel = function() {\n    if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n\n    var promise = this;\n    var child = promise;\n    while (promise._isCancellable()) {\n        if (!promise._cancelBy(child)) {\n            if (child._isFollowing()) {\n                child._followee().cancel();\n            } else {\n                child._cancelBranched();\n            }\n            break;\n        }\n\n        var parent = promise._cancellationParent;\n        if (parent == null || !parent._isCancellable()) {\n            if (promise._isFollowing()) {\n                promise._followee().cancel();\n            } else {\n                promise._cancelBranched();\n            }\n            break;\n        } else {\n            if (promise._isFollowing()) promise._followee().cancel();\n            promise._setWillBeCancelled();\n            child = promise;\n            promise = parent;\n        }\n    }\n};\n\nPromise.prototype._branchHasCancelled = function() {\n    this._branchesRemainingToCancel--;\n};\n\nPromise.prototype._enoughBranchesHaveCancelled = function() {\n    return this._branchesRemainingToCancel === undefined ||\n           this._branchesRemainingToCancel <= 0;\n};\n\nPromise.prototype._cancelBy = function(canceller) {\n    if (canceller === this) {\n        this._branchesRemainingToCancel = 0;\n        this._invokeOnCancel();\n        return true;\n    } else {\n        this._branchHasCancelled();\n        if (this._enoughBranchesHaveCancelled()) {\n            this._invokeOnCancel();\n            return true;\n        }\n    }\n    return false;\n};\n\nPromise.prototype._cancelBranched = function() {\n    if (this._enoughBranchesHaveCancelled()) {\n        this._cancel();\n    }\n};\n\nPromise.prototype._cancel = function() {\n    if (!this._isCancellable()) return;\n    this._setCancelled();\n    async.invoke(this._cancelPromises, this, undefined);\n};\n\nPromise.prototype._cancelPromises = function() {\n    if (this._length() > 0) this._settlePromises();\n};\n\nPromise.prototype._unsetOnCancel = function() {\n    this._onCancelField = undefined;\n};\n\nPromise.prototype._isCancellable = function() {\n    return this.isPending() && !this._isCancelled();\n};\n\nPromise.prototype.isCancellable = function() {\n    return this.isPending() && !this.isCancelled();\n};\n\nPromise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {\n    if (util.isArray(onCancelCallback)) {\n        for (var i = 0; i < onCancelCallback.length; ++i) {\n            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n        }\n    } else if (onCancelCallback !== undefined) {\n        if (typeof onCancelCallback === \"function\") {\n            if (!internalOnly) {\n                var e = tryCatch(onCancelCallback).call(this._boundValue());\n                if (e === errorObj) {\n                    this._attachExtraTrace(e.e);\n                    async.throwLater(e.e);\n                }\n            }\n        } else {\n            onCancelCallback._resultCancelled(this);\n        }\n    }\n};\n\nPromise.prototype._invokeOnCancel = function() {\n    var onCancelCallback = this._onCancel();\n    this._unsetOnCancel();\n    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n};\n\nPromise.prototype._invokeInternalOnCancel = function() {\n    if (this._isCancellable()) {\n        this._doInvokeOnCancel(this._onCancel(), true);\n        this._unsetOnCancel();\n    }\n};\n\nPromise.prototype._resultCancelled = function() {\n    this.cancel();\n};\n\n};\n\n},{\"./util\":36}],7:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar getKeys = _dereq_(\"./es5\").keys;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction catchFilter(instances, cb, promise) {\n    return function(e) {\n        var boundTo = promise._boundValue();\n        predicateLoop: for (var i = 0; i < instances.length; ++i) {\n            var item = instances[i];\n\n            if (item === Error ||\n                (item != null && item.prototype instanceof Error)) {\n                if (e instanceof item) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (typeof item === \"function\") {\n                var matchesPredicate = tryCatch(item).call(boundTo, e);\n                if (matchesPredicate === errorObj) {\n                    return matchesPredicate;\n                } else if (matchesPredicate) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (util.isObject(e)) {\n                var keys = getKeys(item);\n                for (var j = 0; j < keys.length; ++j) {\n                    var key = keys[j];\n                    if (item[key] != e[key]) {\n                        continue predicateLoop;\n                    }\n                }\n                return tryCatch(cb).call(boundTo, e);\n            }\n        }\n        return NEXT_FILTER;\n    };\n}\n\nreturn catchFilter;\n};\n\n},{\"./es5\":13,\"./util\":36}],8:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar longStackTraces = false;\nvar contextStack = [];\n\nPromise.prototype._promiseCreated = function() {};\nPromise.prototype._pushContext = function() {};\nPromise.prototype._popContext = function() {return null;};\nPromise._peekContext = Promise.prototype._peekContext = function() {};\n\nfunction Context() {\n    this._trace = new Context.CapturedTrace(peekContext());\n}\nContext.prototype._pushContext = function () {\n    if (this._trace !== undefined) {\n        this._trace._promiseCreated = null;\n        contextStack.push(this._trace);\n    }\n};\n\nContext.prototype._popContext = function () {\n    if (this._trace !== undefined) {\n        var trace = contextStack.pop();\n        var ret = trace._promiseCreated;\n        trace._promiseCreated = null;\n        return ret;\n    }\n    return null;\n};\n\nfunction createContext() {\n    if (longStackTraces) return new Context();\n}\n\nfunction peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return undefined;\n}\nContext.CapturedTrace = null;\nContext.create = createContext;\nContext.deactivateLongStackTraces = function() {};\nContext.activateLongStackTraces = function() {\n    var Promise_pushContext = Promise.prototype._pushContext;\n    var Promise_popContext = Promise.prototype._popContext;\n    var Promise_PeekContext = Promise._peekContext;\n    var Promise_peekContext = Promise.prototype._peekContext;\n    var Promise_promiseCreated = Promise.prototype._promiseCreated;\n    Context.deactivateLongStackTraces = function() {\n        Promise.prototype._pushContext = Promise_pushContext;\n        Promise.prototype._popContext = Promise_popContext;\n        Promise._peekContext = Promise_PeekContext;\n        Promise.prototype._peekContext = Promise_peekContext;\n        Promise.prototype._promiseCreated = Promise_promiseCreated;\n        longStackTraces = false;\n    };\n    longStackTraces = true;\n    Promise.prototype._pushContext = Context.prototype._pushContext;\n    Promise.prototype._popContext = Context.prototype._popContext;\n    Promise._peekContext = Promise.prototype._peekContext = peekContext;\n    Promise.prototype._promiseCreated = function() {\n        var ctx = this._peekContext();\n        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n    };\n};\nreturn Context;\n};\n\n},{}],9:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, Context) {\nvar getDomain = Promise._getDomain;\nvar async = Promise._async;\nvar Warning = _dereq_(\"./errors\").Warning;\nvar util = _dereq_(\"./util\");\nvar canAttachTrace = util.canAttachTrace;\nvar unhandledRejectionHandled;\nvar possiblyUnhandledRejection;\nvar bluebirdFramePattern =\n    /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\nvar nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\nvar parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\nvar stackFramePattern = null;\nvar formatStack = null;\nvar indentStackFrames = false;\nvar printWarning;\nvar debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 &&\n                        (true ||\n                         util.env(\"BLUEBIRD_DEBUG\") ||\n                         util.env(\"NODE_ENV\") === \"development\"));\n\nvar warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n\nvar longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n\nvar wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 &&\n    (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\nPromise.prototype.suppressUnhandledRejections = function() {\n    var target = this._target();\n    target._bitField = ((target._bitField & (~1048576)) |\n                      524288);\n};\n\nPromise.prototype._ensurePossibleRejectionHandled = function () {\n    if ((this._bitField & 524288) !== 0) return;\n    this._setRejectionIsUnhandled();\n    async.invokeLater(this._notifyUnhandledRejection, this, undefined);\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n    fireRejectionEvent(\"rejectionHandled\",\n                                  unhandledRejectionHandled, undefined, this);\n};\n\nPromise.prototype._setReturnedNonUndefined = function() {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._returnedNonUndefined = function() {\n    return (this._bitField & 268435456) !== 0;\n};\n\nPromise.prototype._notifyUnhandledRejection = function () {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._settledValue();\n        this._setUnhandledRejectionIsNotified();\n        fireRejectionEvent(\"unhandledRejection\",\n                                      possiblyUnhandledRejection, reason, this);\n    }\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField | 262144;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField & (~262144);\n};\n\nPromise.prototype._isUnhandledRejectionNotified = function () {\n    return (this._bitField & 262144) > 0;\n};\n\nPromise.prototype._setRejectionIsUnhandled = function () {\n    this._bitField = this._bitField | 1048576;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled = function () {\n    this._bitField = this._bitField & (~1048576);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled = function () {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._warn = function(message, shouldUseOwnTrace, promise) {\n    return warn(message, shouldUseOwnTrace, promise || this);\n};\n\nPromise.onPossiblyUnhandledRejection = function (fn) {\n    var domain = getDomain();\n    possiblyUnhandledRejection =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nPromise.onUnhandledRejectionHandled = function (fn) {\n    var domain = getDomain();\n    unhandledRejectionHandled =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nvar disableLongStackTraces = function() {};\nPromise.longStackTraces = function () {\n    if (async.haveItemsQueued() && !config.longStackTraces) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (!config.longStackTraces && longStackTracesIsSupported()) {\n        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n        config.longStackTraces = true;\n        disableLongStackTraces = function() {\n            if (async.haveItemsQueued() && !config.longStackTraces) {\n                throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n            }\n            Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n            Context.deactivateLongStackTraces();\n            async.enableTrampoline();\n            config.longStackTraces = false;\n        };\n        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n        Context.activateLongStackTraces();\n        async.disableTrampolineIfNecessary();\n    }\n};\n\nPromise.hasLongStackTraces = function () {\n    return config.longStackTraces && longStackTracesIsSupported();\n};\n\nvar fireDomEvent = (function() {\n    try {\n        if (typeof CustomEvent === \"function\") {\n            var event = new CustomEvent(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new CustomEvent(name.toLowerCase(), {\n                    detail: event,\n                    cancelable: true\n                });\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else if (typeof Event === \"function\") {\n            var event = new Event(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new Event(name.toLowerCase(), {\n                    cancelable: true\n                });\n                domEvent.detail = event;\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else {\n            var event = document.createEvent(\"CustomEvent\");\n            event.initCustomEvent(\"testingtheevent\", false, true, {});\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = document.createEvent(\"CustomEvent\");\n                domEvent.initCustomEvent(name.toLowerCase(), false, true,\n                    event);\n                return !util.global.dispatchEvent(domEvent);\n            };\n        }\n    } catch (e) {}\n    return function() {\n        return false;\n    };\n})();\n\nvar fireGlobalEvent = (function() {\n    if (util.isNode) {\n        return function() {\n            return process.emit.apply(process, arguments);\n        };\n    } else {\n        if (!util.global) {\n            return function() {\n                return false;\n            };\n        }\n        return function(name) {\n            var methodName = \"on\" + name.toLowerCase();\n            var method = util.global[methodName];\n            if (!method) return false;\n            method.apply(util.global, [].slice.call(arguments, 1));\n            return true;\n        };\n    }\n})();\n\nfunction generatePromiseLifecycleEventObject(name, promise) {\n    return {promise: promise};\n}\n\nvar eventToObjectGenerator = {\n    promiseCreated: generatePromiseLifecycleEventObject,\n    promiseFulfilled: generatePromiseLifecycleEventObject,\n    promiseRejected: generatePromiseLifecycleEventObject,\n    promiseResolved: generatePromiseLifecycleEventObject,\n    promiseCancelled: generatePromiseLifecycleEventObject,\n    promiseChained: function(name, promise, child) {\n        return {promise: promise, child: child};\n    },\n    warning: function(name, warning) {\n        return {warning: warning};\n    },\n    unhandledRejection: function (name, reason, promise) {\n        return {reason: reason, promise: promise};\n    },\n    rejectionHandled: generatePromiseLifecycleEventObject\n};\n\nvar activeFireEvent = function (name) {\n    var globalEventFired = false;\n    try {\n        globalEventFired = fireGlobalEvent.apply(null, arguments);\n    } catch (e) {\n        async.throwLater(e);\n        globalEventFired = true;\n    }\n\n    var domEventFired = false;\n    try {\n        domEventFired = fireDomEvent(name,\n                    eventToObjectGenerator[name].apply(null, arguments));\n    } catch (e) {\n        async.throwLater(e);\n        domEventFired = true;\n    }\n\n    return domEventFired || globalEventFired;\n};\n\nPromise.config = function(opts) {\n    opts = Object(opts);\n    if (\"longStackTraces\" in opts) {\n        if (opts.longStackTraces) {\n            Promise.longStackTraces();\n        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n            disableLongStackTraces();\n        }\n    }\n    if (\"warnings\" in opts) {\n        var warningsOption = opts.warnings;\n        config.warnings = !!warningsOption;\n        wForgottenReturn = config.warnings;\n\n        if (util.isObject(warningsOption)) {\n            if (\"wForgottenReturn\" in warningsOption) {\n                wForgottenReturn = !!warningsOption.wForgottenReturn;\n            }\n        }\n    }\n    if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n        if (async.haveItemsQueued()) {\n            throw new Error(\n                \"cannot enable cancellation after promises are in use\");\n        }\n        Promise.prototype._clearCancellationData =\n            cancellationClearCancellationData;\n        Promise.prototype._propagateFrom = cancellationPropagateFrom;\n        Promise.prototype._onCancel = cancellationOnCancel;\n        Promise.prototype._setOnCancel = cancellationSetOnCancel;\n        Promise.prototype._attachCancellationCallback =\n            cancellationAttachCancellationCallback;\n        Promise.prototype._execute = cancellationExecute;\n        propagateFromFunction = cancellationPropagateFrom;\n        config.cancellation = true;\n    }\n    if (\"monitoring\" in opts) {\n        if (opts.monitoring && !config.monitoring) {\n            config.monitoring = true;\n            Promise.prototype._fireEvent = activeFireEvent;\n        } else if (!opts.monitoring && config.monitoring) {\n            config.monitoring = false;\n            Promise.prototype._fireEvent = defaultFireEvent;\n        }\n    }\n    return Promise;\n};\n\nfunction defaultFireEvent() { return false; }\n\nPromise.prototype._fireEvent = defaultFireEvent;\nPromise.prototype._execute = function(executor, resolve, reject) {\n    try {\n        executor(resolve, reject);\n    } catch (e) {\n        return e;\n    }\n};\nPromise.prototype._onCancel = function () {};\nPromise.prototype._setOnCancel = function (handler) { ; };\nPromise.prototype._attachCancellationCallback = function(onCancel) {\n    ;\n};\nPromise.prototype._captureStackTrace = function () {};\nPromise.prototype._attachExtraTrace = function () {};\nPromise.prototype._clearCancellationData = function() {};\nPromise.prototype._propagateFrom = function (parent, flags) {\n    ;\n    ;\n};\n\nfunction cancellationExecute(executor, resolve, reject) {\n    var promise = this;\n    try {\n        executor(resolve, reject, function(onCancel) {\n            if (typeof onCancel !== \"function\") {\n                throw new TypeError(\"onCancel must be a function, got: \" +\n                                    util.toString(onCancel));\n            }\n            promise._attachCancellationCallback(onCancel);\n        });\n    } catch (e) {\n        return e;\n    }\n}\n\nfunction cancellationAttachCancellationCallback(onCancel) {\n    if (!this._isCancellable()) return this;\n\n    var previousOnCancel = this._onCancel();\n    if (previousOnCancel !== undefined) {\n        if (util.isArray(previousOnCancel)) {\n            previousOnCancel.push(onCancel);\n        } else {\n            this._setOnCancel([previousOnCancel, onCancel]);\n        }\n    } else {\n        this._setOnCancel(onCancel);\n    }\n}\n\nfunction cancellationOnCancel() {\n    return this._onCancelField;\n}\n\nfunction cancellationSetOnCancel(onCancel) {\n    this._onCancelField = onCancel;\n}\n\nfunction cancellationClearCancellationData() {\n    this._cancellationParent = undefined;\n    this._onCancelField = undefined;\n}\n\nfunction cancellationPropagateFrom(parent, flags) {\n    if ((flags & 1) !== 0) {\n        this._cancellationParent = parent;\n        var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n        if (branchesRemainingToCancel === undefined) {\n            branchesRemainingToCancel = 0;\n        }\n        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n    }\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\n\nfunction bindingPropagateFrom(parent, flags) {\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\nvar propagateFromFunction = bindingPropagateFrom;\n\nfunction boundValueFunction() {\n    var ret = this._boundTo;\n    if (ret !== undefined) {\n        if (ret instanceof Promise) {\n            if (ret.isFulfilled()) {\n                return ret.value();\n            } else {\n                return undefined;\n            }\n        }\n    }\n    return ret;\n}\n\nfunction longStackTracesCaptureStackTrace() {\n    this._trace = new CapturedTrace(this._peekContext());\n}\n\nfunction longStackTracesAttachExtraTrace(error, ignoreSelf) {\n    if (canAttachTrace(error)) {\n        var trace = this._trace;\n        if (trace !== undefined) {\n            if (ignoreSelf) trace = trace._parent;\n        }\n        if (trace !== undefined) {\n            trace.attachExtraTrace(error);\n        } else if (!error.__stackCleaned__) {\n            var parsed = parseStackAndMessage(error);\n            util.notEnumerableProp(error, \"stack\",\n                parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n            util.notEnumerableProp(error, \"__stackCleaned__\", true);\n        }\n    }\n}\n\nfunction checkForgottenReturns(returnValue, promiseCreated, name, promise,\n                               parent) {\n    if (returnValue === undefined && promiseCreated !== null &&\n        wForgottenReturn) {\n        if (parent !== undefined && parent._returnedNonUndefined()) return;\n        if ((promise._bitField & 65535) === 0) return;\n\n        if (name) name = name + \" \";\n        var handlerLine = \"\";\n        var creatorLine = \"\";\n        if (promiseCreated._trace) {\n            var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n            var stack = cleanStack(traceLines);\n            for (var i = stack.length - 1; i >= 0; --i) {\n                var line = stack[i];\n                if (!nodeFramePattern.test(line)) {\n                    var lineMatches = line.match(parseLinePattern);\n                    if (lineMatches) {\n                        handlerLine  = \"at \" + lineMatches[1] +\n                            \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n                    }\n                    break;\n                }\n            }\n\n            if (stack.length > 0) {\n                var firstUserLine = stack[0];\n                for (var i = 0; i < traceLines.length; ++i) {\n\n                    if (traceLines[i] === firstUserLine) {\n                        if (i > 0) {\n                            creatorLine = \"\\n\" + traceLines[i - 1];\n                        }\n                        break;\n                    }\n                }\n\n            }\n        }\n        var msg = \"a promise was created in a \" + name +\n            \"handler \" + handlerLine + \"but was not returned from it, \" +\n            \"see http://goo.gl/rRqMUw\" +\n            creatorLine;\n        promise._warn(msg, true, promiseCreated);\n    }\n}\n\nfunction deprecated(name, replacement) {\n    var message = name +\n        \" is deprecated and will be removed in a future version.\";\n    if (replacement) message += \" Use \" + replacement + \" instead.\";\n    return warn(message);\n}\n\nfunction warn(message, shouldUseOwnTrace, promise) {\n    if (!config.warnings) return;\n    var warning = new Warning(message);\n    var ctx;\n    if (shouldUseOwnTrace) {\n        promise._attachExtraTrace(warning);\n    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n        ctx.attachExtraTrace(warning);\n    } else {\n        var parsed = parseStackAndMessage(warning);\n        warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n    }\n\n    if (!activeFireEvent(\"warning\", warning)) {\n        formatAndLogError(warning, \"\", true);\n    }\n}\n\nfunction reconstructStack(message, stacks) {\n    for (var i = 0; i < stacks.length - 1; ++i) {\n        stacks[i].push(\"From previous event:\");\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    if (i < stacks.length) {\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    return message + \"\\n\" + stacks.join(\"\\n\");\n}\n\nfunction removeDuplicateOrEmptyJumps(stacks) {\n    for (var i = 0; i < stacks.length; ++i) {\n        if (stacks[i].length === 0 ||\n            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n            stacks.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nfunction removeCommonRoots(stacks) {\n    var current = stacks[0];\n    for (var i = 1; i < stacks.length; ++i) {\n        var prev = stacks[i];\n        var currentLastIndex = current.length - 1;\n        var currentLastLine = current[currentLastIndex];\n        var commonRootMeetPoint = -1;\n\n        for (var j = prev.length - 1; j >= 0; --j) {\n            if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n            }\n        }\n\n        for (var j = commonRootMeetPoint; j >= 0; --j) {\n            var line = prev[j];\n            if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n            } else {\n                break;\n            }\n        }\n        current = prev;\n    }\n}\n\nfunction cleanStack(stack) {\n    var ret = [];\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        var isTraceLine = \"    (No stack trace)\" === line ||\n            stackFramePattern.test(line);\n        var isInternalFrame = isTraceLine && shouldIgnore(line);\n        if (isTraceLine && !isInternalFrame) {\n            if (indentStackFrames && line.charAt(0) !== \" \") {\n                line = \"    \" + line;\n            }\n            ret.push(line);\n        }\n    }\n    return ret;\n}\n\nfunction stackFramesAsArray(error) {\n    var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n            break;\n        }\n    }\n    if (i > 0 && error.name != \"SyntaxError\") {\n        stack = stack.slice(i);\n    }\n    return stack;\n}\n\nfunction parseStackAndMessage(error) {\n    var stack = error.stack;\n    var message = error.toString();\n    stack = typeof stack === \"string\" && stack.length > 0\n                ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n    return {\n        message: message,\n        stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n    };\n}\n\nfunction formatAndLogError(error, title, isSoft) {\n    if (typeof console !== \"undefined\") {\n        var message;\n        if (util.isObject(error)) {\n            var stack = error.stack;\n            message = title + formatStack(stack, error);\n        } else {\n            message = title + String(error);\n        }\n        if (typeof printWarning === \"function\") {\n            printWarning(message, isSoft);\n        } else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n}\n\nfunction fireRejectionEvent(name, localHandler, reason, promise) {\n    var localEventFired = false;\n    try {\n        if (typeof localHandler === \"function\") {\n            localEventFired = true;\n            if (name === \"rejectionHandled\") {\n                localHandler(promise);\n            } else {\n                localHandler(reason, promise);\n            }\n        }\n    } catch (e) {\n        async.throwLater(e);\n    }\n\n    if (name === \"unhandledRejection\") {\n        if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n            formatAndLogError(reason, \"Unhandled rejection \");\n        }\n    } else {\n        activeFireEvent(name, promise);\n    }\n}\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    } else {\n        str = obj && typeof obj.toString === \"function\"\n            ? obj.toString() : util.toString(obj);\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nfunction longStackTracesIsSupported() {\n    return typeof captureStackTrace === \"function\";\n}\n\nvar shouldIgnore = function() { return false; };\nvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\nfunction parseLineInfo(line) {\n    var matches = line.match(parseLineInfoRegex);\n    if (matches) {\n        return {\n            fileName: matches[1],\n            line: parseInt(matches[2], 10)\n        };\n    }\n}\n\nfunction setBounds(firstLineError, lastLineError) {\n    if (!longStackTracesIsSupported()) return;\n    var firstStackLines = firstLineError.stack.split(\"\\n\");\n    var lastStackLines = lastLineError.stack.split(\"\\n\");\n    var firstIndex = -1;\n    var lastIndex = -1;\n    var firstFileName;\n    var lastFileName;\n    for (var i = 0; i < firstStackLines.length; ++i) {\n        var result = parseLineInfo(firstStackLines[i]);\n        if (result) {\n            firstFileName = result.fileName;\n            firstIndex = result.line;\n            break;\n        }\n    }\n    for (var i = 0; i < lastStackLines.length; ++i) {\n        var result = parseLineInfo(lastStackLines[i]);\n        if (result) {\n            lastFileName = result.fileName;\n            lastIndex = result.line;\n            break;\n        }\n    }\n    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n        return;\n    }\n\n    shouldIgnore = function(line) {\n        if (bluebirdFramePattern.test(line)) return true;\n        var info = parseLineInfo(line);\n        if (info) {\n            if (info.fileName === firstFileName &&\n                (firstIndex <= info.line && info.line <= lastIndex)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n\nfunction CapturedTrace(parent) {\n    this._parent = parent;\n    this._promisesCreated = 0;\n    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n    captureStackTrace(this, CapturedTrace);\n    if (length > 32) this.uncycle();\n}\nutil.inherits(CapturedTrace, Error);\nContext.CapturedTrace = CapturedTrace;\n\nCapturedTrace.prototype.uncycle = function() {\n    var length = this._length;\n    if (length < 2) return;\n    var nodes = [];\n    var stackToIndex = {};\n\n    for (var i = 0, node = this; node !== undefined; ++i) {\n        nodes.push(node);\n        node = node._parent;\n    }\n    length = this._length = i;\n    for (var i = length - 1; i >= 0; --i) {\n        var stack = nodes[i].stack;\n        if (stackToIndex[stack] === undefined) {\n            stackToIndex[stack] = i;\n        }\n    }\n    for (var i = 0; i < length; ++i) {\n        var currentStack = nodes[i].stack;\n        var index = stackToIndex[currentStack];\n        if (index !== undefined && index !== i) {\n            if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n            }\n            nodes[i]._parent = undefined;\n            nodes[i]._length = 1;\n            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n            if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n                cycleEdgeNode._parent.uncycle();\n                cycleEdgeNode._length =\n                    cycleEdgeNode._parent._length + 1;\n            } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n            }\n            var currentChildLength = cycleEdgeNode._length + 1;\n            for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n            }\n            return;\n        }\n    }\n};\n\nCapturedTrace.prototype.attachExtraTrace = function(error) {\n    if (error.__stackCleaned__) return;\n    this.uncycle();\n    var parsed = parseStackAndMessage(error);\n    var message = parsed.message;\n    var stacks = [parsed.stack];\n\n    var trace = this;\n    while (trace !== undefined) {\n        stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n        trace = trace._parent;\n    }\n    removeCommonRoots(stacks);\n    removeDuplicateOrEmptyJumps(stacks);\n    util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n    util.notEnumerableProp(error, \"__stackCleaned__\", true);\n};\n\nvar captureStackTrace = (function stackDetection() {\n    var v8stackFramePattern = /^\\s*at\\s*/;\n    var v8stackFormatter = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if (error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        Error.stackTraceLimit += 6;\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        var captureStackTrace = Error.captureStackTrace;\n\n        shouldIgnore = function(line) {\n            return bluebirdFramePattern.test(line);\n        };\n        return function(receiver, ignoreUntil) {\n            Error.stackTraceLimit += 6;\n            captureStackTrace(receiver, ignoreUntil);\n            Error.stackTraceLimit -= 6;\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n        stackFramePattern = /@/;\n        formatStack = v8stackFormatter;\n        indentStackFrames = true;\n        return function captureStackTrace(o) {\n            o.stack = new Error().stack;\n        };\n    }\n\n    var hasStackAfterThrow;\n    try { throw new Error(); }\n    catch(e) {\n        hasStackAfterThrow = (\"stack\" in e);\n    }\n    if (!(\"stack\" in err) && hasStackAfterThrow &&\n        typeof Error.stackTraceLimit === \"number\") {\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        return function captureStackTrace(o) {\n            Error.stackTraceLimit += 6;\n            try { throw new Error(); }\n            catch(e) { o.stack = e.stack; }\n            Error.stackTraceLimit -= 6;\n        };\n    }\n\n    formatStack = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if ((typeof error === \"object\" ||\n            typeof error === \"function\") &&\n            error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    return null;\n\n})([]);\n\nif (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n    printWarning = function (message) {\n        console.warn(message);\n    };\n    if (util.isNode && process.stderr.isTTY) {\n        printWarning = function(message, isSoft) {\n            var color = isSoft ? \"\\u001b[33m\" : \"\\u001b[31m\";\n            console.warn(color + message + \"\\u001b[0m\\n\");\n        };\n    } else if (!util.isNode && typeof (new Error().stack) === \"string\") {\n        printWarning = function(message, isSoft) {\n            console.warn(\"%c\" + message,\n                        isSoft ? \"color: darkorange\" : \"color: red\");\n        };\n    }\n}\n\nvar config = {\n    warnings: warnings,\n    longStackTraces: false,\n    cancellation: false,\n    monitoring: false\n};\n\nif (longStackTraces) Promise.longStackTraces();\n\nreturn {\n    longStackTraces: function() {\n        return config.longStackTraces;\n    },\n    warnings: function() {\n        return config.warnings;\n    },\n    cancellation: function() {\n        return config.cancellation;\n    },\n    monitoring: function() {\n        return config.monitoring;\n    },\n    propagateFromFunction: function() {\n        return propagateFromFunction;\n    },\n    boundValueFunction: function() {\n        return boundValueFunction;\n    },\n    checkForgottenReturns: checkForgottenReturns,\n    setBounds: setBounds,\n    warn: warn,\n    deprecated: deprecated,\n    CapturedTrace: CapturedTrace,\n    fireDomEvent: fireDomEvent,\n    fireGlobalEvent: fireGlobalEvent\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],10:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction returner() {\n    return this.value;\n}\nfunction thrower() {\n    throw this.reason;\n}\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn = function (value) {\n    if (value instanceof Promise) value.suppressUnhandledRejections();\n    return this._then(\n        returner, undefined, undefined, {value: value}, undefined);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow = function (reason) {\n    return this._then(\n        thrower, undefined, undefined, {reason: reason}, undefined);\n};\n\nPromise.prototype.catchThrow = function (reason) {\n    if (arguments.length <= 1) {\n        return this._then(\n            undefined, thrower, undefined, {reason: reason}, undefined);\n    } else {\n        var _reason = arguments[1];\n        var handler = function() {throw _reason;};\n        return this.caught(reason, handler);\n    }\n};\n\nPromise.prototype.catchReturn = function (value) {\n    if (arguments.length <= 1) {\n        if (value instanceof Promise) value.suppressUnhandledRejections();\n        return this._then(\n            undefined, returner, undefined, {value: value}, undefined);\n    } else {\n        var _value = arguments[1];\n        if (_value instanceof Promise) _value.suppressUnhandledRejections();\n        var handler = function() {return _value;};\n        return this.caught(value, handler);\n    }\n};\n};\n\n},{}],11:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseReduce = Promise.reduce;\nvar PromiseAll = Promise.all;\n\nfunction promiseAllThis() {\n    return PromiseAll(this);\n}\n\nfunction PromiseMapSeries(promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n}\n\nPromise.prototype.each = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, this, undefined);\n};\n\nPromise.prototype.mapSeries = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n};\n\nPromise.each = function (promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, promises, undefined);\n};\n\nPromise.mapSeries = PromiseMapSeries;\n};\n\n\n},{}],12:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar Objectfreeze = es5.freeze;\nvar util = _dereq_(\"./util\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        notEnumerableProp(this, \"message\",\n            typeof message === \"string\" ? message : defaultMessage);\n        notEnumerableProp(this, \"name\", nameProperty);\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            Error.call(this);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar _TypeError, _RangeError;\nvar Warning = subError(\"Warning\", \"warning\");\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\nvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\ntry {\n    _TypeError = TypeError;\n    _RangeError = RangeError;\n} catch(e) {\n    _TypeError = subError(\"TypeError\", \"type error\");\n    _RangeError = subError(\"RangeError\", \"range error\");\n}\n\nvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\nfor (var i = 0; i < methods.length; ++i) {\n    if (typeof Array.prototype[methods[i]] === \"function\") {\n        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n    }\n}\n\nes5.defineProperty(AggregateError.prototype, \"length\", {\n    value: 0,\n    configurable: false,\n    writable: true,\n    enumerable: true\n});\nAggregateError.prototype[\"isOperational\"] = true;\nvar level = 0;\nAggregateError.prototype.toString = function() {\n    var indent = Array(level * 4 + 1).join(\" \");\n    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n    level++;\n    indent = Array(level * 4 + 1).join(\" \");\n    for (var i = 0; i < this.length; ++i) {\n        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n        var lines = str.split(\"\\n\");\n        for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n        }\n        str = lines.join(\"\\n\");\n        ret += str + \"\\n\";\n    }\n    level--;\n    return ret;\n};\n\nfunction OperationalError(message) {\n    if (!(this instanceof OperationalError))\n        return new OperationalError(message);\n    notEnumerableProp(this, \"name\", \"OperationalError\");\n    notEnumerableProp(this, \"message\", message);\n    this.cause = message;\n    this[\"isOperational\"] = true;\n\n    if (message instanceof Error) {\n        notEnumerableProp(this, \"message\", message.message);\n        notEnumerableProp(this, \"stack\", message.stack);\n    } else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(OperationalError, Error);\n\nvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        OperationalError: OperationalError,\n        RejectionError: OperationalError,\n        AggregateError: AggregateError\n    });\n    es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n        value: errorTypes,\n        writable: false,\n        enumerable: false,\n        configurable: false\n    });\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: _TypeError,\n    RangeError: _RangeError,\n    CancellationError: errorTypes.CancellationError,\n    OperationalError: errorTypes.OperationalError,\n    TimeoutError: errorTypes.TimeoutError,\n    AggregateError: errorTypes.AggregateError,\n    Warning: Warning\n};\n\n},{\"./es5\":13,\"./util\":36}],13:[function(_dereq_,module,exports){\nvar isES5 = (function(){\n    \"use strict\";\n    return this === undefined;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        getDescriptor: Object.getOwnPropertyDescriptor,\n        keys: Object.keys,\n        names: Object.getOwnPropertyNames,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5,\n        propertyIsWritable: function(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n        }\n    };\n} else {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function (o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    };\n\n    var ObjectGetDescriptor = function(o, key) {\n        return {value: o[key]};\n    };\n\n    var ObjectDefineProperty = function (o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    };\n\n    var ObjectFreeze = function (obj) {\n        return obj;\n    };\n\n    var ObjectGetPrototypeOf = function (obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    };\n\n    var ArrayIsArray = function (obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    };\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        names: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        getDescriptor: ObjectGetDescriptor,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5,\n        propertyIsWritable: function() {\n            return true;\n        }\n    };\n}\n\n},{}],14:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseMap = Promise.map;\n\nPromise.prototype.filter = function (fn, options) {\n    return PromiseMap(this, fn, options, INTERNAL);\n};\n\nPromise.filter = function (promises, fn, options) {\n    return PromiseMap(promises, fn, options, INTERNAL);\n};\n};\n\n},{}],15:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, tryConvertToPromise, NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar CancellationError = Promise.CancellationError;\nvar errorObj = util.errorObj;\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\n\nfunction PassThroughHandlerContext(promise, type, handler) {\n    this.promise = promise;\n    this.type = type;\n    this.handler = handler;\n    this.called = false;\n    this.cancelPromise = null;\n}\n\nPassThroughHandlerContext.prototype.isFinallyHandler = function() {\n    return this.type === 0;\n};\n\nfunction FinallyHandlerCancelReaction(finallyHandler) {\n    this.finallyHandler = finallyHandler;\n}\n\nFinallyHandlerCancelReaction.prototype._resultCancelled = function() {\n    checkCancel(this.finallyHandler);\n};\n\nfunction checkCancel(ctx, reason) {\n    if (ctx.cancelPromise != null) {\n        if (arguments.length > 1) {\n            ctx.cancelPromise._reject(reason);\n        } else {\n            ctx.cancelPromise._cancel();\n        }\n        ctx.cancelPromise = null;\n        return true;\n    }\n    return false;\n}\n\nfunction succeed() {\n    return finallyHandler.call(this, this.promise._target()._settledValue());\n}\nfunction fail(reason) {\n    if (checkCancel(this, reason)) return;\n    errorObj.e = reason;\n    return errorObj;\n}\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    if (!this.called) {\n        this.called = true;\n        var ret = this.isFinallyHandler()\n            ? handler.call(promise._boundValue())\n            : handler.call(promise._boundValue(), reasonOrValue);\n        if (ret === NEXT_FILTER) {\n            return ret;\n        } else if (ret !== undefined) {\n            promise._setReturnedNonUndefined();\n            var maybePromise = tryConvertToPromise(ret, promise);\n            if (maybePromise instanceof Promise) {\n                if (this.cancelPromise != null) {\n                    if (maybePromise._isCancelled()) {\n                        var reason =\n                            new CancellationError(\"late cancellation observer\");\n                        promise._attachExtraTrace(reason);\n                        errorObj.e = reason;\n                        return errorObj;\n                    } else if (maybePromise.isPending()) {\n                        maybePromise._attachCancellationCallback(\n                            new FinallyHandlerCancelReaction(this));\n                    }\n                }\n                return maybePromise._then(\n                    succeed, fail, undefined, this, undefined);\n            }\n        }\n    }\n\n    if (promise.isRejected()) {\n        checkCancel(this);\n        errorObj.e = reasonOrValue;\n        return errorObj;\n    } else {\n        checkCancel(this);\n        return reasonOrValue;\n    }\n}\n\nPromise.prototype._passThrough = function(handler, type, success, fail) {\n    if (typeof handler !== \"function\") return this.then();\n    return this._then(success,\n                      fail,\n                      undefined,\n                      new PassThroughHandlerContext(this, type, handler),\n                      undefined);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function (handler) {\n    return this._passThrough(handler,\n                             0,\n                             finallyHandler,\n                             finallyHandler);\n};\n\n\nPromise.prototype.tap = function (handler) {\n    return this._passThrough(handler, 1, finallyHandler);\n};\n\nPromise.prototype.tapCatch = function (handlerOrPredicate) {\n    var len = arguments.length;\n    if(len === 1) {\n        return this._passThrough(handlerOrPredicate,\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    } else {\n         var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return Promise.reject(new TypeError(\n                    \"tapCatch statement predicate: \"\n                    + \"expecting an object but got \" + util.classString(item)\n                ));\n            }\n        }\n        catchInstances.length = j;\n        var handler = arguments[i];\n        return this._passThrough(catchFilter(catchInstances, handler, this),\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    }\n\n};\n\nreturn PassThroughHandlerContext;\n};\n\n},{\"./catch_filter\":7,\"./util\":36}],16:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          apiRejection,\n                          INTERNAL,\n                          tryConvertToPromise,\n                          Proxyable,\n                          debug) {\nvar errors = _dereq_(\"./errors\");\nvar TypeError = errors.TypeError;\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n    for (var i = 0; i < yieldHandlers.length; ++i) {\n        traceParent._pushContext();\n        var result = tryCatch(yieldHandlers[i])(value);\n        traceParent._popContext();\n        if (result === errorObj) {\n            traceParent._pushContext();\n            var ret = Promise.reject(errorObj.e);\n            traceParent._popContext();\n            return ret;\n        }\n        var maybePromise = tryConvertToPromise(result, traceParent);\n        if (maybePromise instanceof Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n    if (debug.cancellation()) {\n        var internal = new Promise(INTERNAL);\n        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n        this._promise = internal.lastly(function() {\n            return _finallyPromise;\n        });\n        internal._captureStackTrace();\n        internal._setOnCancel(this);\n    } else {\n        var promise = this._promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n    }\n    this._stack = stack;\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = undefined;\n    this._yieldHandlers = typeof yieldHandler === \"function\"\n        ? [yieldHandler].concat(yieldHandlers)\n        : yieldHandlers;\n    this._yieldedPromise = null;\n    this._cancellationPhase = false;\n}\nutil.inherits(PromiseSpawn, Proxyable);\n\nPromiseSpawn.prototype._isResolved = function() {\n    return this._promise === null;\n};\n\nPromiseSpawn.prototype._cleanup = function() {\n    this._promise = this._generator = null;\n    if (debug.cancellation() && this._finallyPromise !== null) {\n        this._finallyPromise._fulfill();\n        this._finallyPromise = null;\n    }\n};\n\nPromiseSpawn.prototype._promiseCancelled = function() {\n    if (this._isResolved()) return;\n    var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n\n    var result;\n    if (!implementsReturn) {\n        var reason = new Promise.CancellationError(\n            \"generator .return() sentinel\");\n        Promise.coroutine.returnSentinel = reason;\n        this._promise._attachExtraTrace(reason);\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"throw\"]).call(this._generator,\n                                                         reason);\n        this._promise._popContext();\n    } else {\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"return\"]).call(this._generator,\n                                                          undefined);\n        this._promise._popContext();\n    }\n    this._cancellationPhase = true;\n    this._yieldedPromise = null;\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseFulfilled = function(value) {\n    this._yieldedPromise = null;\n    this._promise._pushContext();\n    var result = tryCatch(this._generator.next).call(this._generator, value);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseRejected = function(reason) {\n    this._yieldedPromise = null;\n    this._promise._attachExtraTrace(reason);\n    this._promise._pushContext();\n    var result = tryCatch(this._generator[\"throw\"])\n        .call(this._generator, reason);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._resultCancelled = function() {\n    if (this._yieldedPromise instanceof Promise) {\n        var promise = this._yieldedPromise;\n        this._yieldedPromise = null;\n        promise.cancel();\n    }\n};\n\nPromiseSpawn.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function () {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = undefined;\n    this._promiseFulfilled(undefined);\n};\n\nPromiseSpawn.prototype._continue = function (result) {\n    var promise = this._promise;\n    if (result === errorObj) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._rejectCallback(result.e, false);\n        }\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._resolveCallback(value);\n        }\n    } else {\n        var maybePromise = tryConvertToPromise(value, this._promise);\n        if (!(maybePromise instanceof Promise)) {\n            maybePromise =\n                promiseFromYieldHandler(maybePromise,\n                                        this._yieldHandlers,\n                                        this._promise);\n            if (maybePromise === null) {\n                this._promiseRejected(\n                    new TypeError(\n                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\\u000a\".replace(\"%s\", String(value)) +\n                        \"From coroutine:\\u000a\" +\n                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n                    )\n                );\n                return;\n            }\n        }\n        maybePromise = maybePromise._target();\n        var bitField = maybePromise._bitField;\n        ;\n        if (((bitField & 50397184) === 0)) {\n            this._yieldedPromise = maybePromise;\n            maybePromise._proxy(this, null);\n        } else if (((bitField & 33554432) !== 0)) {\n            Promise._async.invoke(\n                this._promiseFulfilled, this, maybePromise._value()\n            );\n        } else if (((bitField & 16777216) !== 0)) {\n            Promise._async.invoke(\n                this._promiseRejected, this, maybePromise._reason()\n            );\n        } else {\n            this._promiseCancelled();\n        }\n    }\n};\n\nPromise.coroutine = function (generatorFunction, options) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var yieldHandler = Object(options).yieldHandler;\n    var PromiseSpawn$ = PromiseSpawn;\n    var stack = new Error().stack;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                                      stack);\n        var ret = spawn.promise();\n        spawn._generator = generator;\n        spawn._promiseFulfilled(undefined);\n        return ret;\n    };\n};\n\nPromise.coroutine.addYieldHandler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    yieldHandlers.push(fn);\n};\n\nPromise.spawn = function (generatorFunction) {\n    debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],17:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,\n         getDomain) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar reject;\n\nif (!true) {\nif (canEvaluate) {\n    var thenCallback = function(i) {\n        return new Function(\"value\", \"holder\", \"                             \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = value;                                           \\n\\\n            holder.checkFulfillment(this);                                   \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var promiseSetter = function(i) {\n        return new Function(\"promise\", \"holder\", \"                           \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = promise;                                         \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var generateHolderClass = function(total) {\n        var props = new Array(total);\n        for (var i = 0; i < props.length; ++i) {\n            props[i] = \"this.p\" + (i+1);\n        }\n        var assignment = props.join(\" = \") + \" = null;\";\n        var cancellationCode= \"var promise;\\n\" + props.map(function(prop) {\n            return \"                                                         \\n\\\n                promise = \" + prop + \";                                      \\n\\\n                if (promise instanceof Promise) {                            \\n\\\n                    promise.cancel();                                        \\n\\\n                }                                                            \\n\\\n            \";\n        }).join(\"\\n\");\n        var passedArguments = props.join(\", \");\n        var name = \"Holder$\" + total;\n\n\n        var code = \"return function(tryCatch, errorObj, Promise, async) {    \\n\\\n            'use strict';                                                    \\n\\\n            function [TheName](fn) {                                         \\n\\\n                [TheProperties]                                              \\n\\\n                this.fn = fn;                                                \\n\\\n                this.asyncNeeded = true;                                     \\n\\\n                this.now = 0;                                                \\n\\\n            }                                                                \\n\\\n                                                                             \\n\\\n            [TheName].prototype._callFunction = function(promise) {          \\n\\\n                promise._pushContext();                                      \\n\\\n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \\n\\\n                promise._popContext();                                       \\n\\\n                if (ret === errorObj) {                                      \\n\\\n                    promise._rejectCallback(ret.e, false);                   \\n\\\n                } else {                                                     \\n\\\n                    promise._resolveCallback(ret);                           \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype.checkFulfillment = function(promise) {       \\n\\\n                var now = ++this.now;                                        \\n\\\n                if (now === [TheTotal]) {                                    \\n\\\n                    if (this.asyncNeeded) {                                  \\n\\\n                        async.invoke(this._callFunction, this, promise);     \\n\\\n                    } else {                                                 \\n\\\n                        this._callFunction(promise);                         \\n\\\n                    }                                                        \\n\\\n                                                                             \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype._resultCancelled = function() {              \\n\\\n                [CancellationCode]                                           \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            return [TheName];                                                \\n\\\n        }(tryCatch, errorObj, Promise, async);                               \\n\\\n        \";\n\n        code = code.replace(/\\[TheName\\]/g, name)\n            .replace(/\\[TheTotal\\]/g, total)\n            .replace(/\\[ThePassedArguments\\]/g, passedArguments)\n            .replace(/\\[TheProperties\\]/g, assignment)\n            .replace(/\\[CancellationCode\\]/g, cancellationCode);\n\n        return new Function(\"tryCatch\", \"errorObj\", \"Promise\", \"async\", code)\n                           (tryCatch, errorObj, Promise, async);\n    };\n\n    var holderClasses = [];\n    var thenCallbacks = [];\n    var promiseSetters = [];\n\n    for (var i = 0; i < 8; ++i) {\n        holderClasses.push(generateHolderClass(i + 1));\n        thenCallbacks.push(thenCallback(i + 1));\n        promiseSetters.push(promiseSetter(i + 1));\n    }\n\n    reject = function (reason) {\n        this._reject(reason);\n    };\n}}\n\nPromise.join = function () {\n    var last = arguments.length - 1;\n    var fn;\n    if (last > 0 && typeof arguments[last] === \"function\") {\n        fn = arguments[last];\n        if (!true) {\n            if (last <= 8 && canEvaluate) {\n                var ret = new Promise(INTERNAL);\n                ret._captureStackTrace();\n                var HolderClass = holderClasses[last - 1];\n                var holder = new HolderClass(fn);\n                var callbacks = thenCallbacks;\n\n                for (var i = 0; i < last; ++i) {\n                    var maybePromise = tryConvertToPromise(arguments[i], ret);\n                    if (maybePromise instanceof Promise) {\n                        maybePromise = maybePromise._target();\n                        var bitField = maybePromise._bitField;\n                        ;\n                        if (((bitField & 50397184) === 0)) {\n                            maybePromise._then(callbacks[i], reject,\n                                               undefined, ret, holder);\n                            promiseSetters[i](maybePromise, holder);\n                            holder.asyncNeeded = false;\n                        } else if (((bitField & 33554432) !== 0)) {\n                            callbacks[i].call(ret,\n                                              maybePromise._value(), holder);\n                        } else if (((bitField & 16777216) !== 0)) {\n                            ret._reject(maybePromise._reason());\n                        } else {\n                            ret._cancel();\n                        }\n                    } else {\n                        callbacks[i].call(ret, maybePromise, holder);\n                    }\n                }\n\n                if (!ret._isFateSealed()) {\n                    if (holder.asyncNeeded) {\n                        var domain = getDomain();\n                        if (domain !== null) {\n                            holder.fn = util.domainBind(domain, holder.fn);\n                        }\n                    }\n                    ret._setAsyncGuaranteed();\n                    ret._setOnCancel(holder);\n                }\n                return ret;\n            }\n        }\n    }\n    var args = [].slice.call(arguments);;\n    if (fn) args.pop();\n    var ret = new PromiseArray(args).promise();\n    return fn !== undefined ? ret.spread(fn) : ret;\n};\n\n};\n\n},{\"./util\":36}],18:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nfunction MappingPromiseArray(promises, fn, limit, _filter) {\n    this.constructor$(promises);\n    this._promise._captureStackTrace();\n    var domain = getDomain();\n    this._callback = domain === null ? fn : util.domainBind(domain, fn);\n    this._preservedValues = _filter === INTERNAL\n        ? new Array(this.length())\n        : null;\n    this._limit = limit;\n    this._inFlight = 0;\n    this._queue = [];\n    async.invoke(this._asyncInit, this, undefined);\n}\nutil.inherits(MappingPromiseArray, PromiseArray);\n\nMappingPromiseArray.prototype._asyncInit = function() {\n    this._init$(undefined, -2);\n};\n\nMappingPromiseArray.prototype._init = function () {};\n\nMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var limit = this._limit;\n\n    if (index < 0) {\n        index = (index * -1) - 1;\n        values[index] = value;\n        if (limit >= 1) {\n            this._inFlight--;\n            this._drainQueue();\n            if (this._isResolved()) return true;\n        }\n    } else {\n        if (limit >= 1 && this._inFlight >= limit) {\n            values[index] = value;\n            this._queue.push(index);\n            return false;\n        }\n        if (preservedValues !== null) preservedValues[index] = value;\n\n        var promise = this._promise;\n        var callback = this._callback;\n        var receiver = promise._boundValue();\n        promise._pushContext();\n        var ret = tryCatch(callback).call(receiver, value, index, length);\n        var promiseCreated = promise._popContext();\n        debug.checkForgottenReturns(\n            ret,\n            promiseCreated,\n            preservedValues !== null ? \"Promise.filter\" : \"Promise.map\",\n            promise\n        );\n        if (ret === errorObj) {\n            this._reject(ret.e);\n            return true;\n        }\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            var bitField = maybePromise._bitField;\n            ;\n            if (((bitField & 50397184) === 0)) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = maybePromise;\n                maybePromise._proxy(this, (index + 1) * -1);\n                return false;\n            } else if (((bitField & 33554432) !== 0)) {\n                ret = maybePromise._value();\n            } else if (((bitField & 16777216) !== 0)) {\n                this._reject(maybePromise._reason());\n                return true;\n            } else {\n                this._cancel();\n                return true;\n            }\n        }\n        values[index] = ret;\n    }\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= length) {\n        if (preservedValues !== null) {\n            this._filter(values, preservedValues);\n        } else {\n            this._resolve(values);\n        }\n        return true;\n    }\n    return false;\n};\n\nMappingPromiseArray.prototype._drainQueue = function () {\n    var queue = this._queue;\n    var limit = this._limit;\n    var values = this._values;\n    while (queue.length > 0 && this._inFlight < limit) {\n        if (this._isResolved()) return;\n        var index = queue.pop();\n        this._promiseFulfilled(values[index], index);\n    }\n};\n\nMappingPromiseArray.prototype._filter = function (booleans, values) {\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n    }\n    ret.length = j;\n    this._resolve(ret);\n};\n\nMappingPromiseArray.prototype.preservedValues = function () {\n    return this._preservedValues;\n};\n\nfunction map(promises, fn, options, _filter) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    var limit = 0;\n    if (options !== undefined) {\n        if (typeof options === \"object\" && options !== null) {\n            if (typeof options.concurrency !== \"number\") {\n                return Promise.reject(\n                    new TypeError(\"'concurrency' must be a number but it is \" +\n                                    util.classString(options.concurrency)));\n            }\n            limit = options.concurrency;\n        } else {\n            return Promise.reject(new TypeError(\n                            \"options argument must be an object but it is \" +\n                             util.classString(options)));\n        }\n    }\n    limit = typeof limit === \"number\" &&\n        isFinite(limit) && limit >= 1 ? limit : 0;\n    return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n}\n\nPromise.prototype.map = function (fn, options) {\n    return map(this, fn, options, null);\n};\n\nPromise.map = function (promises, fn, options, _filter) {\n    return map(promises, fn, options, _filter);\n};\n\n\n};\n\n},{\"./util\":36}],19:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n\n},{\"./util\":36}],20:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = _dereq_(\"./errors\");\nvar OperationalError = errors.OperationalError;\nvar es5 = _dereq_(\"./es5\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n    return function(err, value) {\n        if (promise === null) return;\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (!multiArgs) {\n            promise._fulfill(value);\n        } else {\n            var args = [].slice.call(arguments, 1);;\n            promise._fulfill(args);\n        }\n        promise = null;\n    };\n}\n\nmodule.exports = nodebackForPromise;\n\n},{\"./errors\":12,\"./es5\":13,\"./util\":36}],21:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar async = Promise._async;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction spreadAdapter(val, nodeback) {\n    var promise = this;\n    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n    var ret =\n        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nfunction successAdapter(val, nodeback) {\n    var promise = this;\n    var receiver = promise._boundValue();\n    var ret = val === undefined\n        ? tryCatch(nodeback).call(receiver, null)\n        : tryCatch(nodeback).call(receiver, null, val);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\nfunction errorAdapter(reason, nodeback) {\n    var promise = this;\n    if (!reason) {\n        var newReason = new Error(reason + \"\");\n        newReason.cause = reason;\n        reason = newReason;\n    }\n    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nPromise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,\n                                                                     options) {\n    if (typeof nodeback == \"function\") {\n        var adapter = successAdapter;\n        if (options !== undefined && Object(options).spread) {\n            adapter = spreadAdapter;\n        }\n        this._then(\n            adapter,\n            errorAdapter,\n            undefined,\n            this,\n            nodeback\n        );\n    }\n    return this;\n};\n};\n\n},{\"./util\":36}],22:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function() {\nvar makeSelfResolutionError = function () {\n    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar reflectHandler = function() {\n    return new Promise.PromiseInspection(this._target());\n};\nvar apiRejection = function(msg) {\n    return Promise.reject(new TypeError(msg));\n};\nfunction Proxyable() {}\nvar UNDEFINED_BINDING = {};\nvar util = _dereq_(\"./util\");\n\nvar getDomain;\nif (util.isNode) {\n    getDomain = function() {\n        var ret = process.domain;\n        if (ret === undefined) ret = null;\n        return ret;\n    };\n} else {\n    getDomain = function() {\n        return null;\n    };\n}\nutil.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\nvar es5 = _dereq_(\"./es5\");\nvar Async = _dereq_(\"./async\");\nvar async = new Async();\nes5.defineProperty(Promise, \"_async\", {value: async});\nvar errors = _dereq_(\"./errors\");\nvar TypeError = Promise.TypeError = errors.TypeError;\nPromise.RangeError = errors.RangeError;\nvar CancellationError = Promise.CancellationError = errors.CancellationError;\nPromise.TimeoutError = errors.TimeoutError;\nPromise.OperationalError = errors.OperationalError;\nPromise.RejectionError = errors.OperationalError;\nPromise.AggregateError = errors.AggregateError;\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {};\nvar tryConvertToPromise = _dereq_(\"./thenables\")(Promise, INTERNAL);\nvar PromiseArray =\n    _dereq_(\"./promise_array\")(Promise, INTERNAL,\n                               tryConvertToPromise, apiRejection, Proxyable);\nvar Context = _dereq_(\"./context\")(Promise);\n /*jshint unused:false*/\nvar createContext = Context.create;\nvar debug = _dereq_(\"./debuggability\")(Promise, Context);\nvar CapturedTrace = debug.CapturedTrace;\nvar PassThroughHandlerContext =\n    _dereq_(\"./finally\")(Promise, tryConvertToPromise, NEXT_FILTER);\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nfunction check(self, executor) {\n    if (self == null || self.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (typeof executor !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n    }\n\n}\n\nfunction Promise(executor) {\n    if (executor !== INTERNAL) {\n        check(this, executor);\n    }\n    this._bitField = 0;\n    this._fulfillmentHandler0 = undefined;\n    this._rejectionHandler0 = undefined;\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._resolveFromExecutor(executor);\n    this._promiseCreated();\n    this._fireEvent(\"promiseCreated\", this);\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return apiRejection(\"Catch statement predicate: \" +\n                    \"expecting an object but got \" + util.classString(item));\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n        return this.then(undefined, catchFilter(catchInstances, fn, this));\n    }\n    return this.then(undefined, fn);\n};\n\nPromise.prototype.reflect = function () {\n    return this._then(reflectHandler,\n        reflectHandler, undefined, this, undefined);\n};\n\nPromise.prototype.then = function (didFulfill, didReject) {\n    if (debug.warnings() && arguments.length > 0 &&\n        typeof didFulfill !== \"function\" &&\n        typeof didReject !== \"function\") {\n        var msg = \".then() only accepts functions but was passed: \" +\n                util.classString(didFulfill);\n        if (arguments.length > 1) {\n            msg += \", \" + util.classString(didReject);\n        }\n        this._warn(msg);\n    }\n    return this._then(didFulfill, didReject, undefined, undefined, undefined);\n};\n\nPromise.prototype.done = function (didFulfill, didReject) {\n    var promise =\n        this._then(didFulfill, didReject, undefined, undefined, undefined);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n};\n\nPromise.prototype.toJSON = function () {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: undefined,\n        rejectionReason: undefined\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this.value();\n        ret.isFulfilled = true;\n    } else if (this.isRejected()) {\n        ret.rejectionReason = this.reason();\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function () {\n    if (arguments.length > 0) {\n        this._warn(\".all() was passed arguments but it does not take any\");\n    }\n    return new PromiseArray(this).promise();\n};\n\nPromise.prototype.error = function (fn) {\n    return this.caught(util.originatesFromRejection, fn);\n};\n\nPromise.getNewLibraryCopy = module.exports;\n\nPromise.is = function (val) {\n    return val instanceof Promise;\n};\n\nPromise.fromNode = Promise.fromCallback = function(fn) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs\n                                         : false;\n    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n    if (result === errorObj) {\n        ret._rejectCallback(result.e, true);\n    }\n    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.all = function (promises) {\n    return new PromiseArray(promises).promise();\n};\n\nPromise.cast = function (obj) {\n    var ret = tryConvertToPromise(obj);\n    if (!(ret instanceof Promise)) {\n        ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._setFulfilled();\n        ret._rejectionHandler0 = obj;\n    }\n    return ret;\n};\n\nPromise.resolve = Promise.fulfilled = Promise.cast;\n\nPromise.reject = Promise.rejected = function (reason) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._rejectCallback(reason, true);\n    return ret;\n};\n\nPromise.setScheduler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return async.setScheduler(fn);\n};\n\nPromise.prototype._then = function (\n    didFulfill,\n    didReject,\n    _,    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== undefined;\n    var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n    var target = this._target();\n    var bitField = target._bitField;\n\n    if (!haveInternalData) {\n        promise._propagateFrom(this, 3);\n        promise._captureStackTrace();\n        if (receiver === undefined &&\n            ((this._bitField & 2097152) !== 0)) {\n            if (!((bitField & 50397184) === 0)) {\n                receiver = this._boundValue();\n            } else {\n                receiver = target === this ? undefined : this._boundTo;\n            }\n        }\n        this._fireEvent(\"promiseChained\", this, promise);\n    }\n\n    var domain = getDomain();\n    if (!((bitField & 50397184) === 0)) {\n        var handler, value, settler = target._settlePromiseCtx;\n        if (((bitField & 33554432) !== 0)) {\n            value = target._rejectionHandler0;\n            handler = didFulfill;\n        } else if (((bitField & 16777216) !== 0)) {\n            value = target._fulfillmentHandler0;\n            handler = didReject;\n            target._unsetRejectionIsUnhandled();\n        } else {\n            settler = target._settlePromiseLateCancellationObserver;\n            value = new CancellationError(\"late cancellation observer\");\n            target._attachExtraTrace(value);\n            handler = didReject;\n        }\n\n        async.invoke(settler, target, {\n            handler: domain === null ? handler\n                : (typeof handler === \"function\" &&\n                    util.domainBind(domain, handler)),\n            promise: promise,\n            receiver: receiver,\n            value: value\n        });\n    } else {\n        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n    }\n\n    return promise;\n};\n\nPromise.prototype._length = function () {\n    return this._bitField & 65535;\n};\n\nPromise.prototype._isFateSealed = function () {\n    return (this._bitField & 117506048) !== 0;\n};\n\nPromise.prototype._isFollowing = function () {\n    return (this._bitField & 67108864) === 67108864;\n};\n\nPromise.prototype._setLength = function (len) {\n    this._bitField = (this._bitField & -65536) |\n        (len & 65535);\n};\n\nPromise.prototype._setFulfilled = function () {\n    this._bitField = this._bitField | 33554432;\n    this._fireEvent(\"promiseFulfilled\", this);\n};\n\nPromise.prototype._setRejected = function () {\n    this._bitField = this._bitField | 16777216;\n    this._fireEvent(\"promiseRejected\", this);\n};\n\nPromise.prototype._setFollowing = function () {\n    this._bitField = this._bitField | 67108864;\n    this._fireEvent(\"promiseResolved\", this);\n};\n\nPromise.prototype._setIsFinal = function () {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._isFinal = function () {\n    return (this._bitField & 4194304) > 0;\n};\n\nPromise.prototype._unsetCancelled = function() {\n    this._bitField = this._bitField & (~65536);\n};\n\nPromise.prototype._setCancelled = function() {\n    this._bitField = this._bitField | 65536;\n    this._fireEvent(\"promiseCancelled\", this);\n};\n\nPromise.prototype._setWillBeCancelled = function() {\n    this._bitField = this._bitField | 8388608;\n};\n\nPromise.prototype._setAsyncGuaranteed = function() {\n    if (async.hasCustomScheduler()) return;\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._receiverAt = function (index) {\n    var ret = index === 0 ? this._receiver0 : this[\n            index * 4 - 4 + 3];\n    if (ret === UNDEFINED_BINDING) {\n        return undefined;\n    } else if (ret === undefined && this._isBound()) {\n        return this._boundValue();\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function (index) {\n    return this[\n            index * 4 - 4 + 2];\n};\n\nPromise.prototype._fulfillmentHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 0];\n};\n\nPromise.prototype._rejectionHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 1];\n};\n\nPromise.prototype._boundValue = function() {};\n\nPromise.prototype._migrateCallback0 = function (follower) {\n    var bitField = follower._bitField;\n    var fulfill = follower._fulfillmentHandler0;\n    var reject = follower._rejectionHandler0;\n    var promise = follower._promise0;\n    var receiver = follower._receiverAt(0);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._migrateCallbackAt = function (follower, index) {\n    var fulfill = follower._fulfillmentHandlerAt(index);\n    var reject = follower._rejectionHandlerAt(index);\n    var promise = follower._promiseAt(index);\n    var receiver = follower._receiverAt(index);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._addCallbacks = function (\n    fulfill,\n    reject,\n    promise,\n    receiver,\n    domain\n) {\n    var index = this._length();\n\n    if (index >= 65535 - 4) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        this._receiver0 = receiver;\n        if (typeof fulfill === \"function\") {\n            this._fulfillmentHandler0 =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this._rejectionHandler0 =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    } else {\n        var base = index * 4 - 4;\n        this[base + 2] = promise;\n        this[base + 3] = receiver;\n        if (typeof fulfill === \"function\") {\n            this[base + 0] =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this[base + 1] =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    }\n    this._setLength(index + 1);\n    return index;\n};\n\nPromise.prototype._proxy = function (proxyable, arg) {\n    this._addCallbacks(undefined, undefined, arg, proxyable, null);\n};\n\nPromise.prototype._resolveCallback = function(value, shouldBind) {\n    if (((this._bitField & 117506048) !== 0)) return;\n    if (value === this)\n        return this._rejectCallback(makeSelfResolutionError(), false);\n    var maybePromise = tryConvertToPromise(value, this);\n    if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n\n    if (shouldBind) this._propagateFrom(maybePromise, 2);\n\n    var promise = maybePromise._target();\n\n    if (promise === this) {\n        this._reject(makeSelfResolutionError());\n        return;\n    }\n\n    var bitField = promise._bitField;\n    if (((bitField & 50397184) === 0)) {\n        var len = this._length();\n        if (len > 0) promise._migrateCallback0(this);\n        for (var i = 1; i < len; ++i) {\n            promise._migrateCallbackAt(this, i);\n        }\n        this._setFollowing();\n        this._setLength(0);\n        this._setFollowee(promise);\n    } else if (((bitField & 33554432) !== 0)) {\n        this._fulfill(promise._value());\n    } else if (((bitField & 16777216) !== 0)) {\n        this._reject(promise._reason());\n    } else {\n        var reason = new CancellationError(\"late cancellation observer\");\n        promise._attachExtraTrace(reason);\n        this._reject(reason);\n    }\n};\n\nPromise.prototype._rejectCallback =\nfunction(reason, synchronous, ignoreNonErrorWarnings) {\n    var trace = util.ensureErrorObject(reason);\n    var hasStack = trace === reason;\n    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n        var message = \"a promise was rejected with a non-error: \" +\n            util.classString(reason);\n        this._warn(message, true);\n    }\n    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n    this._reject(reason);\n};\n\nPromise.prototype._resolveFromExecutor = function (executor) {\n    if (executor === INTERNAL) return;\n    var promise = this;\n    this._captureStackTrace();\n    this._pushContext();\n    var synchronous = true;\n    var r = this._execute(executor, function(value) {\n        promise._resolveCallback(value);\n    }, function (reason) {\n        promise._rejectCallback(reason, synchronous);\n    });\n    synchronous = false;\n    this._popContext();\n\n    if (r !== undefined) {\n        promise._rejectCallback(r, true);\n    }\n};\n\nPromise.prototype._settlePromiseFromHandler = function (\n    handler, receiver, value, promise\n) {\n    var bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n    promise._pushContext();\n    var x;\n    if (receiver === APPLY) {\n        if (!value || typeof value.length !== \"number\") {\n            x = errorObj;\n            x.e = new TypeError(\"cannot .spread() a non-array: \" +\n                                    util.classString(value));\n        } else {\n            x = tryCatch(handler).apply(this._boundValue(), value);\n        }\n    } else {\n        x = tryCatch(handler).call(receiver, value);\n    }\n    var promiseCreated = promise._popContext();\n    bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n\n    if (x === NEXT_FILTER) {\n        promise._reject(value);\n    } else if (x === errorObj) {\n        promise._rejectCallback(x.e, false);\n    } else {\n        debug.checkForgottenReturns(x, promiseCreated, \"\",  promise, this);\n        promise._resolveCallback(x);\n    }\n};\n\nPromise.prototype._target = function() {\n    var ret = this;\n    while (ret._isFollowing()) ret = ret._followee();\n    return ret;\n};\n\nPromise.prototype._followee = function() {\n    return this._rejectionHandler0;\n};\n\nPromise.prototype._setFollowee = function(promise) {\n    this._rejectionHandler0 = promise;\n};\n\nPromise.prototype._settlePromise = function(promise, handler, receiver, value) {\n    var isPromise = promise instanceof Promise;\n    var bitField = this._bitField;\n    var asyncGuaranteed = ((bitField & 134217728) !== 0);\n    if (((bitField & 65536) !== 0)) {\n        if (isPromise) promise._invokeInternalOnCancel();\n\n        if (receiver instanceof PassThroughHandlerContext &&\n            receiver.isFinallyHandler()) {\n            receiver.cancelPromise = promise;\n            if (tryCatch(handler).call(receiver, value) === errorObj) {\n                promise._reject(errorObj.e);\n            }\n        } else if (handler === reflectHandler) {\n            promise._fulfill(reflectHandler.call(receiver));\n        } else if (receiver instanceof Proxyable) {\n            receiver._promiseCancelled(promise);\n        } else if (isPromise || promise instanceof PromiseArray) {\n            promise._cancel();\n        } else {\n            receiver.cancel();\n        }\n    } else if (typeof handler === \"function\") {\n        if (!isPromise) {\n            handler.call(receiver, value, promise);\n        } else {\n            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (receiver instanceof Proxyable) {\n        if (!receiver._isResolved()) {\n            if (((bitField & 33554432) !== 0)) {\n                receiver._promiseFulfilled(value, promise);\n            } else {\n                receiver._promiseRejected(value, promise);\n            }\n        }\n    } else if (isPromise) {\n        if (asyncGuaranteed) promise._setAsyncGuaranteed();\n        if (((bitField & 33554432) !== 0)) {\n            promise._fulfill(value);\n        } else {\n            promise._reject(value);\n        }\n    }\n};\n\nPromise.prototype._settlePromiseLateCancellationObserver = function(ctx) {\n    var handler = ctx.handler;\n    var promise = ctx.promise;\n    var receiver = ctx.receiver;\n    var value = ctx.value;\n    if (typeof handler === \"function\") {\n        if (!(promise instanceof Promise)) {\n            handler.call(receiver, value, promise);\n        } else {\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (promise instanceof Promise) {\n        promise._reject(value);\n    }\n};\n\nPromise.prototype._settlePromiseCtx = function(ctx) {\n    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n};\n\nPromise.prototype._settlePromise0 = function(handler, value, bitField) {\n    var promise = this._promise0;\n    var receiver = this._receiverAt(0);\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._settlePromise(promise, handler, receiver, value);\n};\n\nPromise.prototype._clearCallbackDataAtIndex = function(index) {\n    var base = index * 4 - 4;\n    this[base + 2] =\n    this[base + 3] =\n    this[base + 0] =\n    this[base + 1] = undefined;\n};\n\nPromise.prototype._fulfill = function (value) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._reject(err);\n    }\n    this._setFulfilled();\n    this._rejectionHandler0 = value;\n\n    if ((bitField & 65535) > 0) {\n        if (((bitField & 134217728) !== 0)) {\n            this._settlePromises();\n        } else {\n            async.settlePromises(this);\n        }\n    }\n};\n\nPromise.prototype._reject = function (reason) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    this._setRejected();\n    this._fulfillmentHandler0 = reason;\n\n    if (this._isFinal()) {\n        return async.fatalError(reason, util.isNode);\n    }\n\n    if ((bitField & 65535) > 0) {\n        async.settlePromises(this);\n    } else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._fulfillPromises = function (len, value) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._fulfillmentHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, value);\n    }\n};\n\nPromise.prototype._rejectPromises = function (len, reason) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._rejectionHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, reason);\n    }\n};\n\nPromise.prototype._settlePromises = function () {\n    var bitField = this._bitField;\n    var len = (bitField & 65535);\n\n    if (len > 0) {\n        if (((bitField & 16842752) !== 0)) {\n            var reason = this._fulfillmentHandler0;\n            this._settlePromise0(this._rejectionHandler0, reason, bitField);\n            this._rejectPromises(len, reason);\n        } else {\n            var value = this._rejectionHandler0;\n            this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n            this._fulfillPromises(len, value);\n        }\n        this._setLength(0);\n    }\n    this._clearCancellationData();\n};\n\nPromise.prototype._settledValue = function() {\n    var bitField = this._bitField;\n    if (((bitField & 33554432) !== 0)) {\n        return this._rejectionHandler0;\n    } else if (((bitField & 16777216) !== 0)) {\n        return this._fulfillmentHandler0;\n    }\n};\n\nfunction deferResolve(v) {this.promise._resolveCallback(v);}\nfunction deferReject(v) {this.promise._rejectCallback(v, false);}\n\nPromise.defer = Promise.pending = function() {\n    debug.deprecated(\"Promise.defer\", \"new Promise\");\n    var promise = new Promise(INTERNAL);\n    return {\n        promise: promise,\n        resolve: deferResolve,\n        reject: deferReject\n    };\n};\n\nutil.notEnumerableProp(Promise,\n                       \"_makeSelfResolutionError\",\n                       makeSelfResolutionError);\n\n_dereq_(\"./method\")(Promise, INTERNAL, tryConvertToPromise, apiRejection,\n    debug);\n_dereq_(\"./bind\")(Promise, INTERNAL, tryConvertToPromise, debug);\n_dereq_(\"./cancel\")(Promise, PromiseArray, apiRejection, debug);\n_dereq_(\"./direct_resolve\")(Promise);\n_dereq_(\"./synchronous_inspection\")(Promise);\n_dereq_(\"./join\")(\n    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\nPromise.Promise = Promise;\nPromise.version = \"3.5.0\";\n_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./call_get.js')(Promise);\n_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\n_dereq_('./timers.js')(Promise, INTERNAL, debug);\n_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\n_dereq_('./nodeify.js')(Promise);\n_dereq_('./promisify.js')(Promise, INTERNAL);\n_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\n_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\n_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./settle.js')(Promise, PromiseArray, debug);\n_dereq_('./some.js')(Promise, PromiseArray, apiRejection);\n_dereq_('./filter.js')(Promise, INTERNAL);\n_dereq_('./each.js')(Promise, INTERNAL);\n_dereq_('./any.js')(Promise);\n                                                         \n    util.toFastProperties(Promise);                                          \n    util.toFastProperties(Promise.prototype);                                \n    function fillTypes(value) {                                              \n        var p = new Promise(INTERNAL);                                       \n        p._fulfillmentHandler0 = value;                                      \n        p._rejectionHandler0 = value;                                        \n        p._promise0 = value;                                                 \n        p._receiver0 = value;                                                \n    }                                                                        \n    // Complete slack tracking, opt out of field-type tracking and           \n    // stabilize map                                                         \n    fillTypes({a: 1});                                                       \n    fillTypes({b: 2});                                                       \n    fillTypes({c: 3});                                                       \n    fillTypes(1);                                                            \n    fillTypes(function(){});                                                 \n    fillTypes(undefined);                                                    \n    fillTypes(false);                                                        \n    fillTypes(new Promise(INTERNAL));                                        \n    debug.setBounds(Async.firstLineError, util.lastLineError);               \n    return Promise;                                                          \n\n};\n\n},{\"./any.js\":1,\"./async\":2,\"./bind\":3,\"./call_get.js\":5,\"./cancel\":6,\"./catch_filter\":7,\"./context\":8,\"./debuggability\":9,\"./direct_resolve\":10,\"./each.js\":11,\"./errors\":12,\"./es5\":13,\"./filter.js\":14,\"./finally\":15,\"./generators.js\":16,\"./join\":17,\"./map.js\":18,\"./method\":19,\"./nodeback\":20,\"./nodeify.js\":21,\"./promise_array\":23,\"./promisify.js\":24,\"./props.js\":25,\"./race.js\":27,\"./reduce.js\":28,\"./settle.js\":30,\"./some.js\":31,\"./synchronous_inspection\":32,\"./thenables\":33,\"./timers.js\":34,\"./using.js\":35,\"./util\":36}],23:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n    apiRejection, Proxyable) {\nvar util = _dereq_(\"./util\");\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -2: return [];\n    case -3: return {};\n    case -6: return new Map();\n    }\n}\n\nfunction PromiseArray(values) {\n    var promise = this._promise = new Promise(INTERNAL);\n    if (values instanceof Promise) {\n        promise._propagateFrom(values, 3);\n    }\n    promise._setOnCancel(this);\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(undefined, -2);\n}\nutil.inherits(PromiseArray, Proxyable);\n\nPromiseArray.prototype.length = function () {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n    var values = tryConvertToPromise(this._values, this._promise);\n    if (values instanceof Promise) {\n        values = values._target();\n        var bitField = values._bitField;\n        ;\n        this._values = values;\n\n        if (((bitField & 50397184) === 0)) {\n            this._promise._setAsyncGuaranteed();\n            return values._then(\n                init,\n                this._reject,\n                undefined,\n                this,\n                resolveValueIfEmpty\n           );\n        } else if (((bitField & 33554432) !== 0)) {\n            values = values._value();\n        } else if (((bitField & 16777216) !== 0)) {\n            return this._reject(values._reason());\n        } else {\n            return this._cancel();\n        }\n    }\n    values = util.asArray(values);\n    if (values === null) {\n        var err = apiRejection(\n            \"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n        this._promise._rejectCallback(err, false);\n        return;\n    }\n\n    if (values.length === 0) {\n        if (resolveValueIfEmpty === -5) {\n            this._resolveEmptyArray();\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    this._iterate(values);\n};\n\nPromiseArray.prototype._iterate = function(values) {\n    var len = this.getActualLength(values.length);\n    this._length = len;\n    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n    var result = this._promise;\n    var isResolved = false;\n    var bitField = null;\n    for (var i = 0; i < len; ++i) {\n        var maybePromise = tryConvertToPromise(values[i], result);\n\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            bitField = maybePromise._bitField;\n        } else {\n            bitField = null;\n        }\n\n        if (isResolved) {\n            if (bitField !== null) {\n                maybePromise.suppressUnhandledRejections();\n            }\n        } else if (bitField !== null) {\n            if (((bitField & 50397184) === 0)) {\n                maybePromise._proxy(this, i);\n                this._values[i] = maybePromise;\n            } else if (((bitField & 33554432) !== 0)) {\n                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n            } else if (((bitField & 16777216) !== 0)) {\n                isResolved = this._promiseRejected(maybePromise._reason(), i);\n            } else {\n                isResolved = this._promiseCancelled(i);\n            }\n        } else {\n            isResolved = this._promiseFulfilled(maybePromise, i);\n        }\n    }\n    if (!isResolved) result._setAsyncGuaranteed();\n};\n\nPromiseArray.prototype._isResolved = function () {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function (value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype._cancel = function() {\n    if (this._isResolved() || !this._promise._isCancellable()) return;\n    this._values = null;\n    this._promise._cancel();\n};\n\nPromiseArray.prototype._reject = function (reason) {\n    this._values = null;\n    this._promise._rejectCallback(reason, false);\n};\n\nPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nPromiseArray.prototype._promiseCancelled = function() {\n    this._cancel();\n    return true;\n};\n\nPromiseArray.prototype._promiseRejected = function (reason) {\n    this._totalResolved++;\n    this._reject(reason);\n    return true;\n};\n\nPromiseArray.prototype._resultCancelled = function() {\n    if (this._isResolved()) return;\n    var values = this._values;\n    this._cancel();\n    if (values instanceof Promise) {\n        values.cancel();\n    } else {\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] instanceof Promise) {\n                values[i].cancel();\n            }\n        }\n    }\n};\n\nPromiseArray.prototype.shouldCopyValues = function () {\n    return true;\n};\n\nPromiseArray.prototype.getActualLength = function (len) {\n    return len;\n};\n\nreturn PromiseArray;\n};\n\n},{\"./util\":36}],24:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = _dereq_(\"./util\");\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar TypeError = _dereq_(\"./errors\").TypeError;\nvar defaultSuffix = \"Async\";\nvar defaultPromisified = {__isPromisified__: true};\nvar noCopyProps = [\n    \"arity\",    \"length\",\n    \"name\",\n    \"arguments\",\n    \"caller\",\n    \"callee\",\n    \"prototype\",\n    \"__isPromisified__\"\n];\nvar noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\nvar defaultFilter = function(name) {\n    return util.isIdentifier(name) &&\n        name.charAt(0) !== \"_\" &&\n        name !== \"constructor\";\n};\n\nfunction propsFilter(key) {\n    return !noCopyPropsPattern.test(key);\n}\n\nfunction isPromisified(fn) {\n    try {\n        return fn.__isPromisified__ === true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction hasPromisified(obj, key, suffix) {\n    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n                                            defaultPromisified);\n    return val ? isPromisified(val) : false;\n}\nfunction checkValid(ret, suffix, suffixRegexp) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (suffixRegexp.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\"\n                        .replace(\"%s\", suffix));\n                }\n            }\n        }\n    }\n}\n\nfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n    var keys = util.inheritedDataKeys(obj);\n    var ret = [];\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var value = obj[key];\n        var passesDefaultFilter = filter === defaultFilter\n            ? true : defaultFilter(key, value, obj);\n        if (typeof value === \"function\" &&\n            !isPromisified(value) &&\n            !hasPromisified(obj, key, suffix) &&\n            filter(key, value, obj, passesDefaultFilter)) {\n            ret.push(key, value);\n        }\n    }\n    checkValid(ret, suffix, suffixRegexp);\n    return ret;\n}\n\nvar escapeIdentRegex = function(str) {\n    return str.replace(/([$])/, \"\\\\$\");\n};\n\nvar makeNodePromisifiedEval;\nif (!true) {\nvar switchCaseArgumentOrder = function(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 3);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {\n        ret.push(i);\n    }\n    return ret;\n};\n\nvar argumentSequence = function(argumentCount) {\n    return util.filledRange(argumentCount, \"_arg\", \"\");\n};\n\nvar parameterDeclaration = function(parameterCount) {\n    return util.filledRange(\n        Math.max(parameterCount, 3), \"_arg\", \"\");\n};\n\nvar parameterCount = function(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n};\n\nmakeNodePromisifiedEval =\nfunction(callback, receiver, originalName, fn, _, multiArgs) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n    var shouldProxyThis = typeof callback === \"string\" || receiver === THIS;\n\n    function generateCallForArgumentCount(count) {\n        var args = argumentSequence(count).join(\", \");\n        var comma = count > 0 ? \", \" : \"\";\n        var ret;\n        if (shouldProxyThis) {\n            ret = \"ret = callback.call(this, {{args}}, nodeback); break;\\n\";\n        } else {\n            ret = receiver === undefined\n                ? \"ret = callback({{args}}, nodeback); break;\\n\"\n                : \"ret = callback.call(receiver, {{args}}, nodeback); break;\\n\";\n        }\n        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for (var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n\n        ret += \"                                                             \\n\\\n        default:                                                             \\n\\\n            var args = new Array(len + 1);                                   \\n\\\n            var i = 0;                                                       \\n\\\n            for (var i = 0; i < len; ++i) {                                  \\n\\\n               args[i] = arguments[i];                                       \\n\\\n            }                                                                \\n\\\n            args[i] = nodeback;                                              \\n\\\n            [CodeForCall]                                                    \\n\\\n            break;                                                           \\n\\\n        \".replace(\"[CodeForCall]\", (shouldProxyThis\n                                ? \"ret = callback.apply(this, args);\\n\"\n                                : \"ret = callback.apply(receiver, args);\\n\"));\n        return ret;\n    }\n\n    var getFunctionCode = typeof callback === \"string\"\n                                ? (\"this != null ? this['\"+callback+\"'] : fn\")\n                                : \"fn\";\n    var body = \"'use strict';                                                \\n\\\n        var ret = function (Parameters) {                                    \\n\\\n            'use strict';                                                    \\n\\\n            var len = arguments.length;                                      \\n\\\n            var promise = new Promise(INTERNAL);                             \\n\\\n            promise._captureStackTrace();                                    \\n\\\n            var nodeback = nodebackForPromise(promise, \" + multiArgs + \");   \\n\\\n            var ret;                                                         \\n\\\n            var callback = tryCatch([GetFunctionCode]);                      \\n\\\n            switch(len) {                                                    \\n\\\n                [CodeForSwitchCase]                                          \\n\\\n            }                                                                \\n\\\n            if (ret === errorObj) {                                          \\n\\\n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\\n\\\n            }                                                                \\n\\\n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \\n\\\n            return promise;                                                  \\n\\\n        };                                                                   \\n\\\n        notEnumerableProp(ret, '__isPromisified__', true);                   \\n\\\n        return ret;                                                          \\n\\\n    \".replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase())\n        .replace(\"[GetFunctionCode]\", getFunctionCode);\n    body = body.replace(\"Parameters\", parameterDeclaration(newParameterCount));\n    return new Function(\"Promise\",\n                        \"fn\",\n                        \"receiver\",\n                        \"withAppended\",\n                        \"maybeWrapAsError\",\n                        \"nodebackForPromise\",\n                        \"tryCatch\",\n                        \"errorObj\",\n                        \"notEnumerableProp\",\n                        \"INTERNAL\",\n                        body)(\n                    Promise,\n                    fn,\n                    receiver,\n                    withAppended,\n                    maybeWrapAsError,\n                    nodebackForPromise,\n                    util.tryCatch,\n                    util.errorObj,\n                    util.notEnumerableProp,\n                    INTERNAL);\n};\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n    var defaultThis = (function() {return this;})();\n    var method = callback;\n    if (typeof method === \"string\") {\n        callback = fn;\n    }\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        var promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n        var cb = typeof method === \"string\" && this !== defaultThis\n            ? this[method] : callback;\n        var fn = nodebackForPromise(promise, multiArgs);\n        try {\n            cb.apply(_receiver, withAppended(arguments, fn));\n        } catch(e) {\n            promise._rejectCallback(maybeWrapAsError(e), true, true);\n        }\n        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n        return promise;\n    }\n    util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n    var methods =\n        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n    for (var i = 0, len = methods.length; i < len; i+= 2) {\n        var key = methods[i];\n        var fn = methods[i+1];\n        var promisifiedKey = key + suffix;\n        if (promisifier === makeNodePromisified) {\n            obj[promisifiedKey] =\n                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n        } else {\n            var promisified = promisifier(fn, function() {\n                return makeNodePromisified(key, THIS, key,\n                                           fn, suffix, multiArgs);\n            });\n            util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n            obj[promisifiedKey] = promisified;\n        }\n    }\n    util.toFastProperties(obj);\n    return obj;\n}\n\nfunction promisify(callback, receiver, multiArgs) {\n    return makeNodePromisified(callback, receiver, undefined,\n                                callback, null, multiArgs);\n}\n\nPromise.promisify = function (fn, options) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    options = Object(options);\n    var receiver = options.context === undefined ? THIS : options.context;\n    var multiArgs = !!options.multiArgs;\n    var ret = promisify(fn, receiver, multiArgs);\n    util.copyDescriptors(fn, ret, propsFilter);\n    return ret;\n};\n\nPromise.promisifyAll = function (target, options) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    options = Object(options);\n    var multiArgs = !!options.multiArgs;\n    var suffix = options.suffix;\n    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n    var filter = options.filter;\n    if (typeof filter !== \"function\") filter = defaultFilter;\n    var promisifier = options.promisifier;\n    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n    if (!util.isIdentifier(suffix)) {\n        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n\n    var keys = util.inheritedDataKeys(target);\n    for (var i = 0; i < keys.length; ++i) {\n        var value = target[keys[i]];\n        if (keys[i] !== \"constructor\" &&\n            util.isClass(value)) {\n            promisifyAll(value.prototype, suffix, filter, promisifier,\n                multiArgs);\n            promisifyAll(value, suffix, filter, promisifier, multiArgs);\n        }\n    }\n\n    return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n};\n};\n\n\n},{\"./errors\":12,\"./nodeback\":20,\"./util\":36}],25:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar isObject = util.isObject;\nvar es5 = _dereq_(\"./es5\");\nvar Es6Map;\nif (typeof Map === \"function\") Es6Map = Map;\n\nvar mapToEntries = (function() {\n    var index = 0;\n    var size = 0;\n\n    function extractEntry(value, key) {\n        this[index] = value;\n        this[index + size] = key;\n        index++;\n    }\n\n    return function mapToEntries(map) {\n        size = map.size;\n        index = 0;\n        var ret = new Array(map.size * 2);\n        map.forEach(extractEntry, ret);\n        return ret;\n    };\n})();\n\nvar entriesToMap = function(entries) {\n    var ret = new Es6Map();\n    var length = entries.length / 2 | 0;\n    for (var i = 0; i < length; ++i) {\n        var key = entries[length + i];\n        var value = entries[i];\n        ret.set(key, value);\n    }\n    return ret;\n};\n\nfunction PropertiesPromiseArray(obj) {\n    var isMap = false;\n    var entries;\n    if (Es6Map !== undefined && obj instanceof Es6Map) {\n        entries = mapToEntries(obj);\n        isMap = true;\n    } else {\n        var keys = es5.keys(obj);\n        var len = keys.length;\n        entries = new Array(len * 2);\n        for (var i = 0; i < len; ++i) {\n            var key = keys[i];\n            entries[i] = obj[key];\n            entries[i + len] = key;\n        }\n    }\n    this.constructor$(entries);\n    this._isMap = isMap;\n    this._init$(undefined, isMap ? -6 : -3);\n}\nutil.inherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init = function () {};\n\nPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val;\n        if (this._isMap) {\n            val = entriesToMap(this._values);\n        } else {\n            val = {};\n            var keyOffset = this.length();\n            for (var i = 0, len = this.length(); i < len; ++i) {\n                val[this._values[i + keyOffset]] = this._values[i];\n            }\n        }\n        this._resolve(val);\n        return true;\n    }\n    return false;\n};\n\nPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nPropertiesPromiseArray.prototype.getActualLength = function (len) {\n    return len >> 1;\n};\n\nfunction props(promises) {\n    var ret;\n    var castValue = tryConvertToPromise(promises);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    } else if (castValue instanceof Promise) {\n        ret = castValue._then(\n            Promise.props, undefined, undefined, undefined, undefined);\n    } else {\n        ret = new PropertiesPromiseArray(castValue).promise();\n    }\n\n    if (castValue instanceof Promise) {\n        ret._propagateFrom(castValue, 2);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function () {\n    return props(this);\n};\n\nPromise.props = function (promises) {\n    return props(promises);\n};\n};\n\n},{\"./es5\":13,\"./util\":36}],26:[function(_dereq_,module,exports){\n\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    var moveItemsCount = (front + length) & (oldCapacity - 1);\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;\n\n},{}],27:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else {\n        promises = util.asArray(promises);\n        if (promises === null)\n            return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 3);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n\n},{\"./util\":36}],28:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nfunction ReductionPromiseArray(promises, fn, initialValue, _each) {\n    this.constructor$(promises);\n    var domain = getDomain();\n    this._fn = domain === null ? fn : util.domainBind(domain, fn);\n    if (initialValue !== undefined) {\n        initialValue = Promise.resolve(initialValue);\n        initialValue._attachCancellationCallback(this);\n    }\n    this._initialValue = initialValue;\n    this._currentCancellable = null;\n    if(_each === INTERNAL) {\n        this._eachValues = Array(this._length);\n    } else if (_each === 0) {\n        this._eachValues = null;\n    } else {\n        this._eachValues = undefined;\n    }\n    this._promise._captureStackTrace();\n    this._init$(undefined, -5);\n}\nutil.inherits(ReductionPromiseArray, PromiseArray);\n\nReductionPromiseArray.prototype._gotAccum = function(accum) {\n    if (this._eachValues !== undefined && \n        this._eachValues !== null && \n        accum !== INTERNAL) {\n        this._eachValues.push(accum);\n    }\n};\n\nReductionPromiseArray.prototype._eachComplete = function(value) {\n    if (this._eachValues !== null) {\n        this._eachValues.push(value);\n    }\n    return this._eachValues;\n};\n\nReductionPromiseArray.prototype._init = function() {};\n\nReductionPromiseArray.prototype._resolveEmptyArray = function() {\n    this._resolve(this._eachValues !== undefined ? this._eachValues\n                                                 : this._initialValue);\n};\n\nReductionPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nReductionPromiseArray.prototype._resolve = function(value) {\n    this._promise._resolveCallback(value);\n    this._values = null;\n};\n\nReductionPromiseArray.prototype._resultCancelled = function(sender) {\n    if (sender === this._initialValue) return this._cancel();\n    if (this._isResolved()) return;\n    this._resultCancelled$();\n    if (this._currentCancellable instanceof Promise) {\n        this._currentCancellable.cancel();\n    }\n    if (this._initialValue instanceof Promise) {\n        this._initialValue.cancel();\n    }\n};\n\nReductionPromiseArray.prototype._iterate = function (values) {\n    this._values = values;\n    var value;\n    var i;\n    var length = values.length;\n    if (this._initialValue !== undefined) {\n        value = this._initialValue;\n        i = 0;\n    } else {\n        value = Promise.resolve(values[0]);\n        i = 1;\n    }\n\n    this._currentCancellable = value;\n\n    if (!value.isRejected()) {\n        for (; i < length; ++i) {\n            var ctx = {\n                accum: null,\n                value: values[i],\n                index: i,\n                length: length,\n                array: this\n            };\n            value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n        }\n    }\n\n    if (this._eachValues !== undefined) {\n        value = value\n            ._then(this._eachComplete, undefined, undefined, this, undefined);\n    }\n    value._then(completed, completed, undefined, value, this);\n};\n\nPromise.prototype.reduce = function (fn, initialValue) {\n    return reduce(this, fn, initialValue, null);\n};\n\nPromise.reduce = function (promises, fn, initialValue, _each) {\n    return reduce(promises, fn, initialValue, _each);\n};\n\nfunction completed(valueOrReason, array) {\n    if (this.isFulfilled()) {\n        array._resolve(valueOrReason);\n    } else {\n        array._reject(valueOrReason);\n    }\n}\n\nfunction reduce(promises, fn, initialValue, _each) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n    return array.promise();\n}\n\nfunction gotAccum(accum) {\n    this.accum = accum;\n    this.array._gotAccum(accum);\n    var value = tryConvertToPromise(this.value, this.array._promise);\n    if (value instanceof Promise) {\n        this.array._currentCancellable = value;\n        return value._then(gotValue, undefined, undefined, this, undefined);\n    } else {\n        return gotValue.call(this, value);\n    }\n}\n\nfunction gotValue(value) {\n    var array = this.array;\n    var promise = array._promise;\n    var fn = tryCatch(array._fn);\n    promise._pushContext();\n    var ret;\n    if (array._eachValues !== undefined) {\n        ret = fn.call(promise._boundValue(), value, this.index, this.length);\n    } else {\n        ret = fn.call(promise._boundValue(),\n                              this.accum, value, this.index, this.length);\n    }\n    if (ret instanceof Promise) {\n        array._currentCancellable = ret;\n    }\n    var promiseCreated = promise._popContext();\n    debug.checkForgottenReturns(\n        ret,\n        promiseCreated,\n        array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\",\n        promise\n    );\n    return ret;\n}\n};\n\n},{\"./util\":36}],29:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar schedule;\nvar noAsyncScheduler = function() {\n    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar NativePromise = util.getNativePromise();\nif (util.isNode && typeof MutationObserver === \"undefined\") {\n    var GlobalSetImmediate = global.setImmediate;\n    var ProcessNextTick = process.nextTick;\n    schedule = util.isRecentNode\n                ? function(fn) { GlobalSetImmediate.call(global, fn); }\n                : function(fn) { ProcessNextTick.call(process, fn); };\n} else if (typeof NativePromise === \"function\" &&\n           typeof NativePromise.resolve === \"function\") {\n    var nativePromise = NativePromise.resolve();\n    schedule = function(fn) {\n        nativePromise.then(fn);\n    };\n} else if ((typeof MutationObserver !== \"undefined\") &&\n          !(typeof window !== \"undefined\" &&\n            window.navigator &&\n            (window.navigator.standalone || window.cordova))) {\n    schedule = (function() {\n        var div = document.createElement(\"div\");\n        var opts = {attributes: true};\n        var toggleScheduled = false;\n        var div2 = document.createElement(\"div\");\n        var o2 = new MutationObserver(function() {\n            div.classList.toggle(\"foo\");\n            toggleScheduled = false;\n        });\n        o2.observe(div2, opts);\n\n        var scheduleToggle = function() {\n            if (toggleScheduled) return;\n            toggleScheduled = true;\n            div2.classList.toggle(\"foo\");\n        };\n\n        return function schedule(fn) {\n            var o = new MutationObserver(function() {\n                o.disconnect();\n                fn();\n            });\n            o.observe(div, opts);\n            scheduleToggle();\n        };\n    })();\n} else if (typeof setImmediate !== \"undefined\") {\n    schedule = function (fn) {\n        setImmediate(fn);\n    };\n} else if (typeof setTimeout !== \"undefined\") {\n    schedule = function (fn) {\n        setTimeout(fn, 0);\n    };\n} else {\n    schedule = noAsyncScheduler;\n}\nmodule.exports = schedule;\n\n},{\"./util\":36}],30:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray, debug) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = _dereq_(\"./util\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return Promise.settle(this);\n};\n};\n\n},{\"./util\":36}],31:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar RangeError = _dereq_(\"./errors\").RangeError;\nvar AggregateError = _dereq_(\"./errors\").AggregateError;\nvar isArray = util.isArray;\nvar CANCELLATION = {};\n\n\nfunction SomePromiseArray(values) {\n    this.constructor$(values);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\nutil.inherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function () {\n    if (!this._initialized) {\n        return;\n    }\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(undefined, -5);\n    var isArrayResolved = isArray(this._values);\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        this._reject(this._getRangeError(this.length()));\n    }\n};\n\nSomePromiseArray.prototype.init = function () {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function () {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function () {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany = function (count) {\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled = function (value) {\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        } else {\n            this._resolve(this._values);\n        }\n        return true;\n    }\n    return false;\n\n};\nSomePromiseArray.prototype._promiseRejected = function (reason) {\n    this._addRejected(reason);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._promiseCancelled = function () {\n    if (this._values instanceof Promise || this._values == null) {\n        return this._cancel();\n    }\n    this._addRejected(CANCELLATION);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._checkOutcome = function() {\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        var e = new AggregateError();\n        for (var i = this.length(); i < this._values.length; ++i) {\n            if (this._values[i] !== CANCELLATION) {\n                e.push(this._values[i]);\n            }\n        }\n        if (e.length > 0) {\n            this._reject(e);\n        } else {\n            this._cancel();\n        }\n        return true;\n    }\n    return false;\n};\n\nSomePromiseArray.prototype._fulfilled = function () {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function () {\n    return this._values.length - this.length();\n};\n\nSomePromiseArray.prototype._addRejected = function (reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled = function (value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill = function () {\n    return this.length() - this._rejected();\n};\n\nSomePromiseArray.prototype._getRangeError = function (count) {\n    var message = \"Input array must contain at least \" +\n            this._howMany + \" items but contains only \" + count + \" items\";\n    return new RangeError(message);\n};\n\nSomePromiseArray.prototype._resolveEmptyArray = function () {\n    this._reject(this._getRangeError(0));\n};\n\nfunction some(promises, howMany) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function (promises, howMany) {\n    return some(promises, howMany);\n};\n\nPromise.prototype.some = function (howMany) {\n    return some(this, howMany);\n};\n\nPromise._SomePromiseArray = SomePromiseArray;\n};\n\n},{\"./errors\":12,\"./util\":36}],32:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== undefined) {\n        promise = promise._target();\n        this._bitField = promise._bitField;\n        this._settledValueField = promise._isFateSealed()\n            ? promise._settledValue() : undefined;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValueField = undefined;\n    }\n}\n\nPromiseInspection.prototype._settledValue = function() {\n    return this._settledValueField;\n};\n\nvar value = PromiseInspection.prototype.value = function () {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar reason = PromiseInspection.prototype.error =\nPromiseInspection.prototype.reason = function () {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar isFulfilled = PromiseInspection.prototype.isFulfilled = function() {\n    return (this._bitField & 33554432) !== 0;\n};\n\nvar isRejected = PromiseInspection.prototype.isRejected = function () {\n    return (this._bitField & 16777216) !== 0;\n};\n\nvar isPending = PromiseInspection.prototype.isPending = function () {\n    return (this._bitField & 50397184) === 0;\n};\n\nvar isResolved = PromiseInspection.prototype.isResolved = function () {\n    return (this._bitField & 50331648) !== 0;\n};\n\nPromiseInspection.prototype.isCancelled = function() {\n    return (this._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.__isCancelled = function() {\n    return (this._bitField & 65536) === 65536;\n};\n\nPromise.prototype._isCancelled = function() {\n    return this._target().__isCancelled();\n};\n\nPromise.prototype.isCancelled = function() {\n    return (this._target()._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.isPending = function() {\n    return isPending.call(this._target());\n};\n\nPromise.prototype.isRejected = function() {\n    return isRejected.call(this._target());\n};\n\nPromise.prototype.isFulfilled = function() {\n    return isFulfilled.call(this._target());\n};\n\nPromise.prototype.isResolved = function() {\n    return isResolved.call(this._target());\n};\n\nPromise.prototype.value = function() {\n    return value.call(this._target());\n};\n\nPromise.prototype.reason = function() {\n    var target = this._target();\n    target._unsetRejectionIsUnhandled();\n    return reason.call(target);\n};\n\nPromise.prototype._value = function() {\n    return this._settledValue();\n};\n\nPromise.prototype._reason = function() {\n    this._unsetRejectionIsUnhandled();\n    return this._settledValue();\n};\n\nPromise.PromiseInspection = PromiseInspection;\n};\n\n},{}],33:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) return obj;\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n                obj._then(\n                    ret._fulfill,\n                    ret._reject,\n                    undefined,\n                    ret,\n                    null\n                );\n                return ret;\n            }\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction doGetThen(obj) {\n    return obj.then;\n}\n\nfunction getThen(obj) {\n    try {\n        return doGetThen(obj);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    try {\n        return hasProp.call(obj, \"_promise0\");\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x, resolve, reject);\n    synchronous = false;\n\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolve(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function reject(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n\n},{\"./util\":36}],34:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, debug) {\nvar util = _dereq_(\"./util\");\nvar TimeoutError = Promise.TimeoutError;\n\nfunction HandleWrapper(handle)  {\n    this.handle = handle;\n}\n\nHandleWrapper.prototype._resultCancelled = function() {\n    clearTimeout(this.handle);\n};\n\nvar afterValue = function(value) { return delay(+this).thenReturn(value); };\nvar delay = Promise.delay = function (ms, value) {\n    var ret;\n    var handle;\n    if (value !== undefined) {\n        ret = Promise.resolve(value)\n                ._then(afterValue, null, null, ms, undefined);\n        if (debug.cancellation() && value instanceof Promise) {\n            ret._setOnCancel(value);\n        }\n    } else {\n        ret = new Promise(INTERNAL);\n        handle = setTimeout(function() { ret._fulfill(); }, +ms);\n        if (debug.cancellation()) {\n            ret._setOnCancel(new HandleWrapper(handle));\n        }\n        ret._captureStackTrace();\n    }\n    ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.prototype.delay = function (ms) {\n    return delay(ms, this);\n};\n\nvar afterTimeout = function (promise, message, parent) {\n    var err;\n    if (typeof message !== \"string\") {\n        if (message instanceof Error) {\n            err = message;\n        } else {\n            err = new TimeoutError(\"operation timed out\");\n        }\n    } else {\n        err = new TimeoutError(message);\n    }\n    util.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._reject(err);\n\n    if (parent != null) {\n        parent.cancel();\n    }\n};\n\nfunction successClear(value) {\n    clearTimeout(this.handle);\n    return value;\n}\n\nfunction failureClear(reason) {\n    clearTimeout(this.handle);\n    throw reason;\n}\n\nPromise.prototype.timeout = function (ms, message) {\n    ms = +ms;\n    var ret, parent;\n\n    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n        if (ret.isPending()) {\n            afterTimeout(ret, message, parent);\n        }\n    }, ms));\n\n    if (debug.cancellation()) {\n        parent = this.then();\n        ret = parent._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n        ret._setOnCancel(handleWrapper);\n    } else {\n        ret = this._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n    }\n\n    return ret;\n};\n\n};\n\n},{\"./util\":36}],35:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n    createContext, INTERNAL, debug) {\n    var util = _dereq_(\"./util\");\n    var TypeError = _dereq_(\"./errors\").TypeError;\n    var inherits = _dereq_(\"./util\").inherits;\n    var errorObj = util.errorObj;\n    var tryCatch = util.tryCatch;\n    var NULL = {};\n\n    function thrower(e) {\n        setTimeout(function(){throw e;}, 0);\n    }\n\n    function castPreservingDisposable(thenable) {\n        var maybePromise = tryConvertToPromise(thenable);\n        if (maybePromise !== thenable &&\n            typeof thenable._isDisposable === \"function\" &&\n            typeof thenable._getDisposer === \"function\" &&\n            thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n        }\n        return maybePromise;\n    }\n    function dispose(resources, inspection) {\n        var i = 0;\n        var len = resources.length;\n        var ret = new Promise(INTERNAL);\n        function iterator() {\n            if (i >= len) return ret._fulfill();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n            if (maybePromise instanceof Promise &&\n                maybePromise._isDisposable()) {\n                try {\n                    maybePromise = tryConvertToPromise(\n                        maybePromise._getDisposer().tryDispose(inspection),\n                        resources.promise);\n                } catch (e) {\n                    return thrower(e);\n                }\n                if (maybePromise instanceof Promise) {\n                    return maybePromise._then(iterator, thrower,\n                                              null, null, null);\n                }\n            }\n            iterator();\n        }\n        iterator();\n        return ret;\n    }\n\n    function Disposer(data, promise, context) {\n        this._data = data;\n        this._promise = promise;\n        this._context = context;\n    }\n\n    Disposer.prototype.data = function () {\n        return this._data;\n    };\n\n    Disposer.prototype.promise = function () {\n        return this._promise;\n    };\n\n    Disposer.prototype.resource = function () {\n        if (this.promise().isFulfilled()) {\n            return this.promise().value();\n        }\n        return NULL;\n    };\n\n    Disposer.prototype.tryDispose = function(inspection) {\n        var resource = this.resource();\n        var context = this._context;\n        if (context !== undefined) context._pushContext();\n        var ret = resource !== NULL\n            ? this.doDispose(resource, inspection) : null;\n        if (context !== undefined) context._popContext();\n        this._promise._unsetDisposable();\n        this._data = null;\n        return ret;\n    };\n\n    Disposer.isDisposer = function (d) {\n        return (d != null &&\n                typeof d.resource === \"function\" &&\n                typeof d.tryDispose === \"function\");\n    };\n\n    function FunctionDisposer(fn, promise, context) {\n        this.constructor$(fn, promise, context);\n    }\n    inherits(FunctionDisposer, Disposer);\n\n    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n        var fn = this.data();\n        return fn.call(resource, resource, inspection);\n    };\n\n    function maybeUnwrapDisposer(value) {\n        if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n            return value.promise();\n        }\n        return value;\n    }\n\n    function ResourceList(length) {\n        this.length = length;\n        this.promise = null;\n        this[length-1] = null;\n    }\n\n    ResourceList.prototype._resultCancelled = function() {\n        var len = this.length;\n        for (var i = 0; i < len; ++i) {\n            var item = this[i];\n            if (item instanceof Promise) {\n                item.cancel();\n            }\n        }\n    };\n\n    Promise.using = function () {\n        var len = arguments.length;\n        if (len < 2) return apiRejection(\n                        \"you must pass at least 2 arguments to Promise.using\");\n        var fn = arguments[len - 1];\n        if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n        }\n        var input;\n        var spreadArgs = true;\n        if (len === 2 && Array.isArray(arguments[0])) {\n            input = arguments[0];\n            len = input.length;\n            spreadArgs = false;\n        } else {\n            input = arguments;\n            len--;\n        }\n        var resources = new ResourceList(len);\n        for (var i = 0; i < len; ++i) {\n            var resource = input[i];\n            if (Disposer.isDisposer(resource)) {\n                var disposer = resource;\n                resource = resource.promise();\n                resource._setDisposable(disposer);\n            } else {\n                var maybePromise = tryConvertToPromise(resource);\n                if (maybePromise instanceof Promise) {\n                    resource =\n                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n                            resources: resources,\n                            index: i\n                    }, undefined);\n                }\n            }\n            resources[i] = resource;\n        }\n\n        var reflectedResources = new Array(resources.length);\n        for (var i = 0; i < reflectedResources.length; ++i) {\n            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n        }\n\n        var resultPromise = Promise.all(reflectedResources)\n            .then(function(inspections) {\n                for (var i = 0; i < inspections.length; ++i) {\n                    var inspection = inspections[i];\n                    if (inspection.isRejected()) {\n                        errorObj.e = inspection.error();\n                        return errorObj;\n                    } else if (!inspection.isFulfilled()) {\n                        resultPromise.cancel();\n                        return;\n                    }\n                    inspections[i] = inspection.value();\n                }\n                promise._pushContext();\n\n                fn = tryCatch(fn);\n                var ret = spreadArgs\n                    ? fn.apply(undefined, inspections) : fn(inspections);\n                var promiseCreated = promise._popContext();\n                debug.checkForgottenReturns(\n                    ret, promiseCreated, \"Promise.using\", promise);\n                return ret;\n            });\n\n        var promise = resultPromise.lastly(function() {\n            var inspection = new Promise.PromiseInspection(resultPromise);\n            return dispose(resources, inspection);\n        });\n        resources.promise = promise;\n        promise._setOnCancel(resources);\n        return promise;\n    };\n\n    Promise.prototype._setDisposable = function (disposer) {\n        this._bitField = this._bitField | 131072;\n        this._disposer = disposer;\n    };\n\n    Promise.prototype._isDisposable = function () {\n        return (this._bitField & 131072) > 0;\n    };\n\n    Promise.prototype._getDisposer = function () {\n        return this._disposer;\n    };\n\n    Promise.prototype._unsetDisposable = function () {\n        this._bitField = this._bitField & (~131072);\n        this._disposer = undefined;\n    };\n\n    Promise.prototype.disposer = function (fn) {\n        if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n        }\n        throw new TypeError();\n    };\n\n};\n\n},{\"./errors\":12,\"./util\":36}],36:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar canEvaluate = typeof navigator == \"undefined\";\n\nvar errorObj = {e: {}};\nvar tryCatchTarget;\nvar globalObject = typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    this !== undefined ? this : null;\n\nfunction tryCatcher() {\n    try {\n        var target = tryCatchTarget;\n        tryCatchTarget = null;\n        return target.apply(this, arguments);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return typeof value === \"function\" ||\n           typeof value === \"object\" && value !== null;\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(safeToString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n    if (es5.isES5) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n        if (desc != null) {\n            return desc.get == null && desc.set == null\n                    ? desc.value\n                    : defaultValue;\n        }\n    } else {\n        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n    }\n}\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\nfunction thrower(r) {\n    throw r;\n}\n\nvar inheritedDataKeys = (function() {\n    var excludedPrototypes = [\n        Array.prototype,\n        Object.prototype,\n        Function.prototype\n    ];\n\n    var isExcludedProto = function(val) {\n        for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (excludedPrototypes[i] === val) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    if (es5.isES5) {\n        var getKeys = Object.getOwnPropertyNames;\n        return function(obj) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n            while (obj != null && !isExcludedProto(obj)) {\n                var keys;\n                try {\n                    keys = getKeys(obj);\n                } catch (e) {\n                    return ret;\n                }\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n                    if (desc != null && desc.get == null && desc.set == null) {\n                        ret.push(key);\n                    }\n                }\n                obj = es5.getPrototypeOf(obj);\n            }\n            return ret;\n        };\n    } else {\n        var hasProp = {}.hasOwnProperty;\n        return function(obj) {\n            if (isExcludedProto(obj)) return [];\n            var ret = [];\n\n            /*jshint forin:false */\n            enumeration: for (var key in obj) {\n                if (hasProp.call(obj, key)) {\n                    ret.push(key);\n                } else {\n                    for (var i = 0; i < excludedPrototypes.length; ++i) {\n                        if (hasProp.call(excludedPrototypes[i], key)) {\n                            continue enumeration;\n                        }\n                    }\n                    ret.push(key);\n                }\n            }\n            return ret;\n        };\n    }\n\n})();\n\nvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\nfunction isClass(fn) {\n    try {\n        if (typeof fn === \"function\") {\n            var keys = es5.names(fn.prototype);\n\n            var hasMethods = es5.isES5 && keys.length > 1;\n            var hasMethodsOtherThanConstructor = keys.length > 0 &&\n                !(keys.length === 1 && keys[0] === \"constructor\");\n            var hasThisAssignmentAndStaticMethods =\n                thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\n            if (hasMethods || hasMethodsOtherThanConstructor ||\n                hasThisAssignmentAndStaticMethods) {\n                return true;\n            }\n        }\n        return false;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction toFastProperties(obj) {\n    /*jshint -W027,-W055,-W031*/\n    function FakeConstructor() {}\n    FakeConstructor.prototype = obj;\n    var l = 8;\n    while (l--) new FakeConstructor();\n    return obj;\n    eval(obj);\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n    return rident.test(str);\n}\n\nfunction filledRange(count, prefix, suffix) {\n    var ret = new Array(count);\n    for(var i = 0; i < count; ++i) {\n        ret[i] = prefix + i + suffix;\n    }\n    return ret;\n}\n\nfunction safeToString(obj) {\n    try {\n        return obj + \"\";\n    } catch (e) {\n        return \"[no string representation]\";\n    }\n}\n\nfunction isError(obj) {\n    return obj !== null &&\n           typeof obj === \"object\" &&\n           typeof obj.message === \"string\" &&\n           typeof obj.name === \"string\";\n}\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isOperational\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n        e[\"isOperational\"] === true);\n}\n\nfunction canAttachTrace(obj) {\n    return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n}\n\nvar ensureErrorObject = (function() {\n    if (!(\"stack\" in new Error())) {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            try {throw new Error(safeToString(value));}\n            catch(err) {return err;}\n        };\n    } else {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n        };\n    }\n})();\n\nfunction classString(obj) {\n    return {}.toString.call(obj);\n}\n\nfunction copyDescriptors(from, to, filter) {\n    var keys = es5.names(from);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        if (filter(key)) {\n            try {\n                es5.defineProperty(to, key, es5.getDescriptor(from, key));\n            } catch (ignore) {}\n        }\n    }\n}\n\nvar asArray = function(v) {\n    if (es5.isArray(v)) {\n        return v;\n    }\n    return null;\n};\n\nif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n    var ArrayFrom = typeof Array.from === \"function\" ? function(v) {\n        return Array.from(v);\n    } : function(v) {\n        var ret = [];\n        var it = v[Symbol.iterator]();\n        var itResult;\n        while (!((itResult = it.next()).done)) {\n            ret.push(itResult.value);\n        }\n        return ret;\n    };\n\n    asArray = function(v) {\n        if (es5.isArray(v)) {\n            return v;\n        } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n            return ArrayFrom(v);\n        }\n        return null;\n    };\n}\n\nvar isNode = typeof process !== \"undefined\" &&\n        classString(process).toLowerCase() === \"[object process]\";\n\nvar hasEnvVariables = typeof process !== \"undefined\" &&\n    typeof process.env !== \"undefined\";\n\nfunction env(key) {\n    return hasEnvVariables ? process.env[key] : undefined;\n}\n\nfunction getNativePromise() {\n    if (typeof Promise === \"function\") {\n        try {\n            var promise = new Promise(function(){});\n            if ({}.toString.call(promise) === \"[object Promise]\") {\n                return Promise;\n            }\n        } catch (e) {}\n    }\n}\n\nfunction domainBind(self, cb) {\n    return self.bind(cb);\n}\n\nvar ret = {\n    isClass: isClass,\n    isIdentifier: isIdentifier,\n    inheritedDataKeys: inheritedDataKeys,\n    getDataPropertyOrDefault: getDataPropertyOrDefault,\n    thrower: thrower,\n    isArray: es5.isArray,\n    asArray: asArray,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    isError: isError,\n    canEvaluate: canEvaluate,\n    errorObj: errorObj,\n    tryCatch: tryCatch,\n    inherits: inherits,\n    withAppended: withAppended,\n    maybeWrapAsError: maybeWrapAsError,\n    toFastProperties: toFastProperties,\n    filledRange: filledRange,\n    toString: safeToString,\n    canAttachTrace: canAttachTrace,\n    ensureErrorObject: ensureErrorObject,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n    classString: classString,\n    copyDescriptors: copyDescriptors,\n    hasDevTools: typeof chrome !== \"undefined\" && chrome &&\n                 typeof chrome.loadTimes === \"function\",\n    isNode: isNode,\n    hasEnvVariables: hasEnvVariables,\n    env: env,\n    global: globalObject,\n    getNativePromise: getNativePromise,\n    domainBind: domainBind\n};\nret.isRecentNode = ret.isNode && (function() {\n    var version = process.versions.node.split(\".\").map(Number);\n    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);\n})();\n\nif (ret.isNode) ret.toFastProperties(process);\n\ntry {throw new Error(); } catch (e) {ret.lastLineError = e;}\nmodule.exports = ret;\n\n},{\"./es5\":13}]},{},[4])(4)\n});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":5}],3:[function(require,module,exports){\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n},{}],4:[function(require,module,exports){\n(function (global){\n/*!\n *  howler.js v2.0.2\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  // 'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto iOS enabler.\n      self.mobileAutoEnable = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.value = vol;\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.value = muted ? 0 : self._volume;\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Mobile browsers will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _enableMobileAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on mobile devices if audio isn't already eanbled.\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(self._navigator && self._navigator.userAgent);\n      var isTouch = !!(('ontouchend' in window) || (self._navigator && self._navigator.maxTouchPoints > 0) || (self._navigator && self._navigator.msMaxTouchPoints > 0));\n      if (self._mobileEnabled || !self.ctx || (!isMobile && !isTouch)) {\n        return;\n      }\n\n      self._mobileEnabled = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function() {\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._mobileEnabled = true;\n          self.mobileAutoEnable = false;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchend', unlock, true);\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchend', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.state = 'resuming';\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio on iOS.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\n        Howler._enableMobileAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Check if this extension is available.\n        if (Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        var num = 0;\n        for (var i=0; i<self._sounds.length; i++) {\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n            num++;\n            id = self._sounds[i]._id;\n          }\n        }\n\n        if (num === 1) {\n          sprite = null;\n        } else {\n          id = null;\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If we have no sprite and the sound hasn't loaded, we must wait\n      // for the sound to load to get our audio's duration.\n      if (self._state !== 'loaded' && !self._sprite[sprite]) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(self._soundById(sound._id) ? sound._id : undefined);\n          }\n        });\n\n        return sound._id;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          setTimeout(function() {\n            self._emit('play', sound._id);\n          }, 0);\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n      // Update the parameters of the sound\n      sound._paused = false;\n      sound._ended = false;\n      sound._sprite = sprite;\n      sound._seek = seek;\n      sound._start = self._sprite[sprite][0] / 1000;\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n            }, 0);\n          }\n        };\n\n        var isRunning = (Howler.state === 'running');\n        if (self._state === 'loaded' && isRunning) {\n          playWebAudio();\n        } else {\n          // Wait for the audio to load and then begin playback.\n          self.once(isRunning ? 'load' : 'resume', playWebAudio, isRunning ? sound._id : null);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          setTimeout(function() {\n            node.play();\n\n            // Setup the new end timer.\n            if (timeout !== Infinity) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            if (!internal) {\n              self._emit('play', sound._id);\n            }\n          }, 0);\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (self._state === 'loaded' && (window && window.ejecta || !node.readyState && Howler._navigator.isCocoonJS));\n        if (node.readyState === 4 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                if (!internal) {\n                  self._emit('stop', sound._id);\n                }\n\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n            }\n          }\n        }\n\n        if (sound && !internal) {\n          self._emit('stop', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n      var diff = Math.abs(from - to);\n      var dir = from > to ? 'out' : 'in';\n      var steps = diff / 0.01;\n      var stepLen = (steps > 0) ? len / steps : len;\n\n      // Since browsers clamp timeouts to 4ms, we need to clamp our steps to that too.\n      if (stepLen < 4) {\n        steps = Math.ceil(steps / (4 / stepLen));\n        stepLen = 4;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          var vol = from;\n          sound._interval = setInterval(function(soundId, sound) {\n            // Update the volume amount, but only if the volume should change.\n            if (steps > 0) {\n              vol += (dir === 'in' ? 0.01 : -0.01);\n            }\n\n            // Make sure the volume is in the right bounds.\n            vol = Math.max(0, vol);\n            vol = Math.min(1, vol);\n\n            // Round to within 2 decimal points.\n            vol = Math.round(vol * 100) / 100;\n\n            // Change the volume.\n            if (self._webAudio) {\n              if (typeof id === 'undefined') {\n                self._volume = vol;\n              }\n\n              sound._volume = vol;\n            } else {\n              self.volume(vol, soundId, true);\n            }\n\n            // When the fade is complete, stop it and fire event.\n            if (vol === to) {\n              clearInterval(sound._interval);\n              sound._interval = null;\n              self.volume(vol, soundId);\n              self._emit('fade', soundId);\n            }\n          }.bind(self, ids[i], sound), stepLen);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            sound._rateSeek = self.seek(id[i]);\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.value = rate;\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Restart the playback if the sound was playing.\n          if (playing) {\n            self.play(id, true);\n          }\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node) {\n            sound._node.currentTime = seek;\n          }\n\n          self._emit('seek', id);\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n          self._emit('end', sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading.\n          sounds[i]._node.src = 'data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQAAAAA=';\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n\n        // Remove the references in the global Howler object.\n        var index = Howler._howls.indexOf(self);\n        if (index >= 0) {\n          Howler._howls.splice(index, 1);\n        }\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      if (fn) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          if (fn === events[i].fn && id === events[i].id) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function() {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // don't move onto the next task until this one is done\n        self.once(task.event, function() {\n          self._queue.shift();\n          self._loadQueue();\n        });\n\n        task.action();\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        clearTimeout(self._endTimers[id]);\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop;\n      }\n      sound._node.bufferSource.playbackRate.value = sound._rate;\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n\n      if (self._scratchBuffer) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        try { node.bufferSource.buffer = self._scratchBuffer; } catch(e) {}\n      }\n      node.bufferSource = null;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        self._node = new Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorListener, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Decode the buffer into an audio source.\n    Howler.ctx.decodeAudioData(arraybuffer, function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      }\n    }, function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    });\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.value = 1;\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.0.2\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n  \n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n      self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n      self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              sound._panner.setPosition(pan, 0, 0);\n            } else {\n              sound._panner.pan.value = pan;\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or\n   * all in the group. The most common usage is to set the 'x' position for\n   * left/right panning. Setting any value higher than 1.0 will begin to\n   * decrease the volume of the sound as it moves further away.\n   * @param  {Number} x  The x-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} y  The y-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} z  The z-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setPosition(x, y, z);\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setOrientation(x, y, z);\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) There will be no volume reduction inside this angle.\n   *     coneOuterAngle - (360 by default) The volume will be reduced to a constant value of\n   *                      `coneOuterGain` outside this angle.\n   *     coneOuterGain - (0 by default) The amount of volume reduction outside of `coneOuterAngle`.\n   *     distanceModel - ('inverse' by default) Determines algorithm to use to reduce volume as audio moves\n   *                      away from listener. Can be `linear`, `inverse` or `exponential`.\n   *     maxDistance - (10000 by default) Volume won't reduce between source/listener beyond this distance.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *     refDistance - (1 by default) A reference distance for reducing volume as the source\n   *                    moves away from the listener.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener.\n   * \n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : self._distanceModel,\n            maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : self._maxDistance,\n            panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : self._panningModel,\n            refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : self._refDistance,\n            rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : self._rolloffFactor\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.panningModel = pa.panningModel;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.value = sound._stereo;\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id);\n    }\n  };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],5:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPathColorName = getPathColorName;\nexports.getColorName = getColorName;\nexports.getRandomPop = getRandomPop;\nexports.getIndexedPopColor = getIndexedPopColor;\nvar config = require('./../../config');\n\nvar transparent = exports.transparent = new Color(0, 0);\n\nfunction getPathColorName(path) {\n  var hexColor = path.parent.data.originalColor;\n  // let hexColor = path.strokeColor.toCSS(true); // This fails when it's a gradient\n  return getColorName(hexColor);\n}\n\nfunction getColorName(color) {\n  if (color) {\n    color = color.toUpperCase(); // make sure\n    if (color in config.palette.colorNames) {\n      return config.palette.colorNames[color];\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\nfunction getRandomPop() {\n  var pops = config.palette.pops;\n  return pops[Math.floor(Math.random() * pops.length)];\n}\n\nfunction getIndexedPopColor(index) {\n  var pops = config.palette.pops;\n  return pops[index % pops.length];\n}\n\n},{\"./../../config\":1}],7:[function(require,module,exports){\n\"use strict\";\n\n(function (root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.ShapeDetector = factory();\n  }\n})(undefined, function () {\n\n  var _nbSamplePoints;\n  var _squareSize = 250;\n  var _phi = 0.5 * (-1.0 + Math.sqrt(5.0));\n  var _angleRange = deg2Rad(45.0);\n  var _anglePrecision = deg2Rad(2.0);\n  var _halfDiagonal = Math.sqrt(_squareSize * _squareSize + _squareSize * _squareSize) * 0.5;\n  var _origin = {\n    x: 0,\n    y: 0\n  };\n\n  function deg2Rad(d) {\n\n    return d * Math.PI / 180.0;\n  };\n\n  function getDistance(a, b) {\n\n    var dx = b.x - a.x;\n    var dy = b.y - a.y;\n\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  function Stroke(points, name) {\n\n    this.points = points;\n    this.name = name;\n    this.processStroke();\n  };\n\n  Stroke.prototype.processStroke = function () {\n\n    this.points = this.resample();\n    this.setCentroid();\n    this.points = this.rotateBy(-this.indicativeAngle());\n    this.points = this.scaleToSquare();\n    this.setCentroid();\n    this.points = this.translateToOrigin();\n\n    return this;\n  };\n\n  Stroke.prototype.resample = function () {\n\n    var localDistance, q;\n    var interval = this.strokeLength() / (_nbSamplePoints - 1);\n    var distance = 0.0;\n    var newPoints = [this.points[0]];\n\n    for (var i = 1; i < this.points.length; i++) {\n      localDistance = getDistance(this.points[i - 1], this.points[i]);\n\n      if (distance + localDistance >= interval) {\n        q = {\n          x: this.points[i - 1].x + (interval - distance) / localDistance * (this.points[i].x - this.points[i - 1].x),\n          y: this.points[i - 1].y + (interval - distance) / localDistance * (this.points[i].y - this.points[i - 1].y)\n        };\n\n        newPoints.push(q);\n        this.points.splice(i, 0, q);\n        distance = 0.0;\n      } else {\n        distance += localDistance;\n      }\n    }\n\n    if (newPoints.length === _nbSamplePoints - 1) {\n      newPoints.push(this.points[this.points.length - 1]);\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.rotateBy = function (angle) {\n\n    var point;\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var newPoints = [];\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: (point.x - this.c.x) * cos - (point.y - this.c.y) * sin + this.c.x,\n        y: (point.x - this.c.x) * sin + (point.y - this.c.y) * cos + this.c.y\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.scaleToSquare = function () {\n\n    var point;\n    var newPoints = [];\n    var box = {\n      minX: +Infinity,\n      maxX: -Infinity,\n      minY: +Infinity,\n      maxY: -Infinity\n    };\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      box.minX = Math.min(box.minX, point.x);\n      box.minY = Math.min(box.minY, point.y);\n      box.maxX = Math.max(box.maxX, point.x);\n      box.maxY = Math.max(box.maxY, point.y);\n    }\n\n    box.width = box.maxX - box.minX;\n    box.height = box.maxY - box.minY;\n\n    for (i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: point.x * (_squareSize / box.width),\n        y: point.y * (_squareSize / box.height)\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.translateToOrigin = function (points) {\n\n    var point;\n    var newPoints = [];\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      newPoints.push({\n        x: point.x + _origin.x - this.c.x,\n        y: point.y + _origin.y - this.c.y\n      });\n    }\n\n    return newPoints;\n  };\n\n  Stroke.prototype.setCentroid = function () {\n\n    var point;\n    this.c = {\n      x: 0.0,\n      y: 0.0\n    };\n\n    for (var i = 0; i < this.points.length; i++) {\n      point = this.points[i];\n\n      this.c.x += point.x;\n      this.c.y += point.y;\n    }\n\n    this.c.x /= this.points.length;\n    this.c.y /= this.points.length;\n\n    return this;\n  };\n\n  Stroke.prototype.indicativeAngle = function () {\n\n    return Math.atan2(this.c.y - this.points[0].y, this.c.x - this.points[0].x);\n  };\n\n  Stroke.prototype.strokeLength = function () {\n\n    var d = 0.0;\n\n    for (var i = 1; i < this.points.length; i++) {\n      d += getDistance(this.points[i - 1], this.points[i]);\n    }\n\n    return d;\n  };\n\n  Stroke.prototype.distanceAtBestAngle = function (pattern) {\n\n    var a = -_angleRange;\n    var b = _angleRange;\n    var x1 = _phi * a + (1.0 - _phi) * b;\n    var f1 = this.distanceAtAngle(pattern, x1);\n    var x2 = (1.0 - _phi) * a + _phi * b;\n    var f2 = this.distanceAtAngle(pattern, x2);\n\n    while (Math.abs(b - a) > _anglePrecision) {\n\n      if (f1 < f2) {\n        b = x2;\n        x2 = x1;\n        f2 = f1;\n        x1 = _phi * a + (1.0 - _phi) * b;\n        f1 = this.distanceAtAngle(pattern, x1);\n      } else {\n        a = x1;\n        x1 = x2;\n        f1 = f2;\n        x2 = (1.0 - _phi) * a + _phi * b;\n        f2 = this.distanceAtAngle(pattern, x2);\n      }\n    }\n\n    return Math.min(f1, f2);\n  };\n\n  Stroke.prototype.distanceAtAngle = function (pattern, angle) {\n\n    var strokePoints = this.rotateBy(angle);\n    var patternPoints = pattern.points;\n    var d = 0.0;\n\n    for (var i = 0; i < strokePoints.length; i++) {\n      d += getDistance(strokePoints[i], patternPoints[i]);\n    }\n\n    return d / strokePoints.length;\n  };\n\n  function ShapeDetector(patterns, options) {\n\n    options = options || {};\n    this.threshold = options.threshold || 0;\n    _nbSamplePoints = options.nbSamplePoints || 64;\n\n    this.patterns = [];\n\n    for (var i = 0; i < patterns.length; i++) {\n      this.learn(patterns[i].name, patterns[i].points);\n    }\n  }\n\n  ShapeDetector.defaultShapes = [{\n    points: [{ x: 0, y: 50 }, { x: 100, y: 50 }],\n    name: \"line\"\n  }, {\n    points: [{ x: 50, y: 0 }, { x: 50, y: 100 }],\n    name: \"line\"\n  }, {\n    points: [{ x: 0, y: 0 }, { x: 100, y: 100 }],\n    name: \"line\"\n  }, {\n    points: [{ \"x\": 89, \"y\": 164 }, { \"x\": 90, \"y\": 162 }, { \"x\": 92, \"y\": 162 }, { \"x\": 94, \"y\": 164 }, { \"x\": 95, \"y\": 166 }, { \"x\": 96, \"y\": 169 }, { \"x\": 97, \"y\": 171 }, { \"x\": 99, \"y\": 175 }, { \"x\": 101, \"y\": 178 }, { \"x\": 103, \"y\": 182 }, { \"x\": 106, \"y\": 189 }, { \"x\": 108, \"y\": 194 }, { \"x\": 111, \"y\": 199 }, { \"x\": 114, \"y\": 204 }, { \"x\": 117, \"y\": 209 }, { \"x\": 119, \"y\": 214 }, { \"x\": 122, \"y\": 218 }, { \"x\": 124, \"y\": 222 }, { \"x\": 126, \"y\": 225 }, { \"x\": 128, \"y\": 228 }, { \"x\": 130, \"y\": 229 }, { \"x\": 133, \"y\": 233 }, { \"x\": 134, \"y\": 236 }, { \"x\": 136, \"y\": 239 }, { \"x\": 138, \"y\": 240 }, { \"x\": 139, \"y\": 242 }, { \"x\": 140, \"y\": 244 }, { \"x\": 142, \"y\": 242 }, { \"x\": 142, \"y\": 240 }, { \"x\": 142, \"y\": 237 }, { \"x\": 143, \"y\": 235 }, { \"x\": 143, \"y\": 233 }, { \"x\": 145, \"y\": 229 }, { \"x\": 146, \"y\": 226 }, { \"x\": 148, \"y\": 217 }, { \"x\": 149, \"y\": 208 }, { \"x\": 149, \"y\": 205 }, { \"x\": 151, \"y\": 196 }, { \"x\": 151, \"y\": 193 }, { \"x\": 153, \"y\": 182 }, { \"x\": 155, \"y\": 172 }, { \"x\": 157, \"y\": 165 }, { \"x\": 159, \"y\": 160 }, { \"x\": 162, \"y\": 155 }, { \"x\": 164, \"y\": 150 }, { \"x\": 165, \"y\": 148 }, { \"x\": 166, \"y\": 146 }],\n    name: \"line\"\n  }, {\n    points: [{ \"x\": 91, \"y\": 185 }, { \"x\": 93, \"y\": 185 }, { \"x\": 95, \"y\": 185 }, { \"x\": 97, \"y\": 185 }, { \"x\": 100, \"y\": 188 }, { \"x\": 102, \"y\": 189 }, { \"x\": 104, \"y\": 190 }, { \"x\": 106, \"y\": 193 }, { \"x\": 108, \"y\": 195 }, { \"x\": 110, \"y\": 198 }, { \"x\": 112, \"y\": 201 }, { \"x\": 114, \"y\": 204 }, { \"x\": 115, \"y\": 207 }, { \"x\": 117, \"y\": 210 }, { \"x\": 118, \"y\": 212 }, { \"x\": 120, \"y\": 214 }, { \"x\": 121, \"y\": 217 }, { \"x\": 122, \"y\": 219 }, { \"x\": 123, \"y\": 222 }, { \"x\": 124, \"y\": 224 }, { \"x\": 126, \"y\": 226 }, { \"x\": 127, \"y\": 229 }, { \"x\": 129, \"y\": 231 }, { \"x\": 130, \"y\": 233 }, { \"x\": 129, \"y\": 231 }, { \"x\": 129, \"y\": 228 }, { \"x\": 129, \"y\": 226 }, { \"x\": 129, \"y\": 224 }, { \"x\": 129, \"y\": 221 }, { \"x\": 129, \"y\": 218 }, { \"x\": 129, \"y\": 212 }, { \"x\": 129, \"y\": 208 }, { \"x\": 130, \"y\": 198 }, { \"x\": 132, \"y\": 189 }, { \"x\": 134, \"y\": 182 }, { \"x\": 137, \"y\": 173 }, { \"x\": 143, \"y\": 164 }, { \"x\": 147, \"y\": 157 }, { \"x\": 151, \"y\": 151 }, { \"x\": 155, \"y\": 144 }, { \"x\": 161, \"y\": 137 }, { \"x\": 165, \"y\": 131 }, { \"x\": 171, \"y\": 122 }, { \"x\": 174, \"y\": 118 }, { \"x\": 176, \"y\": 114 }, { \"x\": 177, \"y\": 112 }, { \"x\": 177, \"y\": 114 }, { \"x\": 175, \"y\": 116 }, { \"x\": 173, \"y\": 118 }],\n    name: \"line\"\n  }, {\n    points: [{ \"x\": 113, \"y\": 68 }, { \"x\": 86, \"y\": 79 }, { \"x\": 63, \"y\": 131 }, { \"x\": 78, \"y\": 147 }, { \"x\": 156, \"y\": 149 }, { \"x\": 195, \"y\": 100 }, { \"x\": 189, \"y\": 79 }, { \"x\": 125.73497, \"y\": 62.81168 }],\n    name: \"circle\"\n  }, {\n    points: [{ \"x\": 98, \"y\": 67 }, { \"x\": 77, \"y\": 85 }, { \"x\": 77, \"y\": 162 }, { \"x\": 179, \"y\": 156 }, { \"x\": 197, \"y\": 123 }, { \"x\": 167, \"y\": 63 }, { \"x\": 141, \"y\": 61 }, { \"x\": 110, \"y\": 59 }, { \"x\": 106.51192, \"y\": 59.70407 }],\n    name: \"circle\"\n  }, {\n    points: [{ \"x\": 60, \"y\": 47 }, { \"x\": 43, \"y\": 96 }, { \"x\": 52, \"y\": 206 }, { \"x\": 63, \"y\": 246 }, { \"x\": 118, \"y\": 296 }, { \"x\": 144, \"y\": 246 }, { \"x\": 141, \"y\": 147 }, { \"x\": 133, \"y\": 129 }, { \"x\": 113, \"y\": 80 }, { \"x\": 60.42738, \"y\": 45.76813 }],\n    name: \"circle\"\n  }, {\n    points: [{ \"x\": 127, \"y\": 141 }, { \"x\": 124, \"y\": 140 }, { \"x\": 120, \"y\": 139 }, { \"x\": 118, \"y\": 139 }, { \"x\": 116, \"y\": 139 }, { \"x\": 111, \"y\": 140 }, { \"x\": 109, \"y\": 141 }, { \"x\": 104, \"y\": 144 }, { \"x\": 100, \"y\": 147 }, { \"x\": 96, \"y\": 152 }, { \"x\": 93, \"y\": 157 }, { \"x\": 90, \"y\": 163 }, { \"x\": 87, \"y\": 169 }, { \"x\": 85, \"y\": 175 }, { \"x\": 83, \"y\": 181 }, { \"x\": 82, \"y\": 190 }, { \"x\": 82, \"y\": 195 }, { \"x\": 83, \"y\": 200 }, { \"x\": 84, \"y\": 205 }, { \"x\": 88, \"y\": 213 }, { \"x\": 91, \"y\": 216 }, { \"x\": 96, \"y\": 219 }, { \"x\": 103, \"y\": 222 }, { \"x\": 108, \"y\": 224 }, { \"x\": 111, \"y\": 224 }, { \"x\": 120, \"y\": 224 }, { \"x\": 133, \"y\": 223 }, { \"x\": 142, \"y\": 222 }, { \"x\": 152, \"y\": 218 }, { \"x\": 160, \"y\": 214 }, { \"x\": 167, \"y\": 210 }, { \"x\": 173, \"y\": 204 }, { \"x\": 178, \"y\": 198 }, { \"x\": 179, \"y\": 196 }, { \"x\": 182, \"y\": 188 }, { \"x\": 182, \"y\": 177 }, { \"x\": 178, \"y\": 167 }, { \"x\": 170, \"y\": 150 }, { \"x\": 163, \"y\": 138 }, { \"x\": 152, \"y\": 130 }, { \"x\": 143, \"y\": 129 }, { \"x\": 140, \"y\": 131 }, { \"x\": 129, \"y\": 136 }, { \"x\": 126, \"y\": 139 }],\n    name: \"circle\"\n  }, {\n    points: [{ \"x\": 516, \"y\": 284 }, { \"x\": 496, \"y\": 319 }, { \"x\": 496, \"y\": 329 }, { \"x\": 513, \"y\": 329 }, { \"x\": 550, \"y\": 324 }, { \"x\": 696, \"y\": 305 }, { \"x\": 737, \"y\": 298 }, { \"x\": 746, \"y\": 292 }, { \"x\": 734, \"y\": 278 }, { \"x\": 709, \"y\": 252 }, { \"x\": 664, \"y\": 193 }],\n    name: \"triangle\"\n  }, {\n    points: [{ \"x\": 179, \"y\": 159 }, { \"x\": 152, \"y\": 290 }, { \"x\": 143, \"y\": 336 }, { \"x\": 142, \"y\": 355 }, { \"x\": 160, \"y\": 348 }, { \"x\": 208, \"y\": 337 }, { \"x\": 241, \"y\": 330 }, { \"x\": 256, \"y\": 328 }, { \"x\": 254, \"y\": 315 }, { \"x\": 238, \"y\": 277 }, { \"x\": 210, \"y\": 200 }, { \"x\": 182.94356, \"y\": 110.45656 }],\n    name: \"triangle\"\n  }, {\n    points: [{ \"x\": 105, \"y\": 335 }, { \"x\": 115, \"y\": 362 }, { \"x\": 128, \"y\": 338 }, { \"x\": 163, \"y\": 271 }, { \"x\": 241, \"y\": 135 }, { \"x\": 261, \"y\": 104 }, { \"x\": 267, \"y\": 98 }, { \"x\": 261, \"y\": 102 }, { \"x\": 236, \"y\": 119 }, { \"x\": 151, \"y\": 195 }, { \"x\": 108, \"y\": 235 }, { \"x\": 83, \"y\": 267 }, { \"x\": 79.92616, \"y\": 270.93451 }],\n    name: \"triangle\"\n  }, {\n    points: [{ \"x\": 137, \"y\": 139 }, { \"x\": 135, \"y\": 141 }, { \"x\": 133, \"y\": 144 }, { \"x\": 132, \"y\": 146 }, { \"x\": 130, \"y\": 149 }, { \"x\": 128, \"y\": 151 }, { \"x\": 126, \"y\": 155 }, { \"x\": 123, \"y\": 160 }, { \"x\": 120, \"y\": 166 }, { \"x\": 116, \"y\": 171 }, { \"x\": 112, \"y\": 177 }, { \"x\": 107, \"y\": 183 }, { \"x\": 102, \"y\": 188 }, { \"x\": 100, \"y\": 191 }, { \"x\": 95, \"y\": 195 }, { \"x\": 90, \"y\": 199 }, { \"x\": 86, \"y\": 203 }, { \"x\": 82, \"y\": 206 }, { \"x\": 80, \"y\": 209 }, { \"x\": 75, \"y\": 213 }, { \"x\": 73, \"y\": 213 }, { \"x\": 70, \"y\": 216 }, { \"x\": 67, \"y\": 219 }, { \"x\": 64, \"y\": 221 }, { \"x\": 61, \"y\": 223 }, { \"x\": 60, \"y\": 225 }, { \"x\": 62, \"y\": 226 }, { \"x\": 65, \"y\": 225 }, { \"x\": 67, \"y\": 226 }, { \"x\": 74, \"y\": 226 }, { \"x\": 77, \"y\": 227 }, { \"x\": 85, \"y\": 229 }, { \"x\": 91, \"y\": 230 }, { \"x\": 99, \"y\": 231 }, { \"x\": 108, \"y\": 232 }, { \"x\": 116, \"y\": 233 }, { \"x\": 125, \"y\": 233 }, { \"x\": 134, \"y\": 234 }, { \"x\": 145, \"y\": 233 }, { \"x\": 153, \"y\": 232 }, { \"x\": 160, \"y\": 233 }, { \"x\": 170, \"y\": 234 }, { \"x\": 177, \"y\": 235 }, { \"x\": 179, \"y\": 236 }, { \"x\": 186, \"y\": 237 }, { \"x\": 193, \"y\": 238 }, { \"x\": 198, \"y\": 239 }, { \"x\": 200, \"y\": 237 }, { \"x\": 202, \"y\": 239 }, { \"x\": 204, \"y\": 238 }, { \"x\": 206, \"y\": 234 }, { \"x\": 205, \"y\": 230 }, { \"x\": 202, \"y\": 222 }, { \"x\": 197, \"y\": 216 }, { \"x\": 192, \"y\": 207 }, { \"x\": 186, \"y\": 198 }, { \"x\": 179, \"y\": 189 }, { \"x\": 174, \"y\": 183 }, { \"x\": 170, \"y\": 178 }, { \"x\": 164, \"y\": 171 }, { \"x\": 161, \"y\": 168 }, { \"x\": 154, \"y\": 160 }, { \"x\": 148, \"y\": 155 }, { \"x\": 143, \"y\": 150 }, { \"x\": 138, \"y\": 148 }, { \"x\": 136, \"y\": 148 }],\n    name: \"triangle\"\n  }, {\n    points: [{ x: 0, y: 0 }, { x: 0, y: 50 }, { x: 50, y: 50 }, { x: 50, y: 0 }],\n    name: \"square\"\n  }, {\n    points: [{ x: 0, y: 0 }, { x: 0, y: 100 }, { x: 50, y: 100 }, { x: 50, y: 0 }],\n    name: \"square\"\n  }, {\n    points: [{ \"x\": 78, \"y\": 149 }, { \"x\": 78, \"y\": 153 }, { \"x\": 78, \"y\": 157 }, { \"x\": 78, \"y\": 160 }, { \"x\": 79, \"y\": 162 }, { \"x\": 79, \"y\": 164 }, { \"x\": 79, \"y\": 167 }, { \"x\": 79, \"y\": 169 }, { \"x\": 79, \"y\": 173 }, { \"x\": 79, \"y\": 178 }, { \"x\": 79, \"y\": 183 }, { \"x\": 80, \"y\": 189 }, { \"x\": 80, \"y\": 193 }, { \"x\": 80, \"y\": 198 }, { \"x\": 80, \"y\": 202 }, { \"x\": 81, \"y\": 208 }, { \"x\": 81, \"y\": 210 }, { \"x\": 81, \"y\": 216 }, { \"x\": 82, \"y\": 222 }, { \"x\": 82, \"y\": 224 }, { \"x\": 82, \"y\": 227 }, { \"x\": 83, \"y\": 229 }, { \"x\": 83, \"y\": 231 }, { \"x\": 85, \"y\": 230 }, { \"x\": 88, \"y\": 232 }, { \"x\": 90, \"y\": 233 }, { \"x\": 92, \"y\": 232 }, { \"x\": 94, \"y\": 233 }, { \"x\": 99, \"y\": 232 }, { \"x\": 102, \"y\": 233 }, { \"x\": 106, \"y\": 233 }, { \"x\": 109, \"y\": 234 }, { \"x\": 117, \"y\": 235 }, { \"x\": 123, \"y\": 236 }, { \"x\": 126, \"y\": 236 }, { \"x\": 135, \"y\": 237 }, { \"x\": 142, \"y\": 238 }, { \"x\": 145, \"y\": 238 }, { \"x\": 152, \"y\": 238 }, { \"x\": 154, \"y\": 239 }, { \"x\": 165, \"y\": 238 }, { \"x\": 174, \"y\": 237 }, { \"x\": 179, \"y\": 236 }, { \"x\": 186, \"y\": 235 }, { \"x\": 191, \"y\": 235 }, { \"x\": 195, \"y\": 233 }, { \"x\": 197, \"y\": 233 }, { \"x\": 200, \"y\": 233 }, { \"x\": 201, \"y\": 235 }, { \"x\": 201, \"y\": 233 }, { \"x\": 199, \"y\": 231 }, { \"x\": 198, \"y\": 226 }, { \"x\": 198, \"y\": 220 }, { \"x\": 196, \"y\": 207 }, { \"x\": 195, \"y\": 195 }, { \"x\": 195, \"y\": 181 }, { \"x\": 195, \"y\": 173 }, { \"x\": 195, \"y\": 163 }, { \"x\": 194, \"y\": 155 }, { \"x\": 192, \"y\": 145 }, { \"x\": 192, \"y\": 143 }, { \"x\": 192, \"y\": 138 }, { \"x\": 191, \"y\": 135 }, { \"x\": 191, \"y\": 133 }, { \"x\": 191, \"y\": 130 }, { \"x\": 190, \"y\": 128 }, { \"x\": 188, \"y\": 129 }, { \"x\": 186, \"y\": 129 }, { \"x\": 181, \"y\": 132 }, { \"x\": 173, \"y\": 131 }, { \"x\": 162, \"y\": 131 }, { \"x\": 151, \"y\": 132 }, { \"x\": 149, \"y\": 132 }, { \"x\": 138, \"y\": 132 }, { \"x\": 136, \"y\": 132 }, { \"x\": 122, \"y\": 131 }, { \"x\": 120, \"y\": 131 }, { \"x\": 109, \"y\": 130 }, { \"x\": 107, \"y\": 130 }, { \"x\": 90, \"y\": 132 }, { \"x\": 81, \"y\": 133 }, { \"x\": 76, \"y\": 133 }],\n    name: \"square\"\n  }, {\n    points: [{ \"x\": 67, \"y\": 172 }, { \"x\": 80, \"y\": 85 }, { \"x\": 83, \"y\": 58 }, { \"x\": 83, \"y\": 54 }, { \"x\": 136, \"y\": 110 }, { \"x\": 157, \"y\": 136 }, { \"x\": 162, \"y\": 140 }, { \"x\": 166, \"y\": 143 }, { \"x\": 80, \"y\": 124 }, { \"x\": 45, \"y\": 116 }, { \"x\": 37, \"y\": 114 }, { \"x\": 31, \"y\": 113 }, { \"x\": 52, \"y\": 106 }, { \"x\": 101, \"y\": 86 }, { \"x\": 131, \"y\": 75 }, { \"x\": 157, \"y\": 63 }, { \"x\": 163, \"y\": 62 }, { \"x\": 158, \"y\": 64 }, { \"x\": 153, \"y\": 73 }, { \"x\": 128, \"y\": 103 }, { \"x\": 71, \"y\": 170 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 30, \"y\": 69 }, { \"x\": 116, \"y\": 118 }, { \"x\": 90, \"y\": 164 }, { \"x\": 75, \"y\": 117 }, { \"x\": 157, \"y\": 83 }, { \"x\": 182, \"y\": 140 }, { \"x\": 155, \"y\": 163 }, { \"x\": 144, \"y\": 119 }, { \"x\": 221, \"y\": 54 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 87, \"y\": 76 }, { \"x\": 62, \"y\": 73 }, { \"x\": 100, \"y\": 98 }, { \"x\": 107, \"y\": 57 }, { \"x\": 61, \"y\": 38 }, { \"x\": 73, \"y\": 137 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 123, \"y\": 129 }, { \"x\": 123, \"y\": 131 }, { \"x\": 124, \"y\": 133 }, { \"x\": 125, \"y\": 136 }, { \"x\": 127, \"y\": 140 }, { \"x\": 129, \"y\": 142 }, { \"x\": 133, \"y\": 148 }, { \"x\": 137, \"y\": 154 }, { \"x\": 143, \"y\": 158 }, { \"x\": 145, \"y\": 161 }, { \"x\": 148, \"y\": 164 }, { \"x\": 153, \"y\": 170 }, { \"x\": 158, \"y\": 176 }, { \"x\": 160, \"y\": 178 }, { \"x\": 164, \"y\": 183 }, { \"x\": 168, \"y\": 188 }, { \"x\": 171, \"y\": 191 }, { \"x\": 175, \"y\": 196 }, { \"x\": 178, \"y\": 200 }, { \"x\": 180, \"y\": 202 }, { \"x\": 181, \"y\": 205 }, { \"x\": 184, \"y\": 208 }, { \"x\": 186, \"y\": 210 }, { \"x\": 187, \"y\": 213 }, { \"x\": 188, \"y\": 215 }, { \"x\": 186, \"y\": 212 }, { \"x\": 183, \"y\": 211 }, { \"x\": 177, \"y\": 208 }, { \"x\": 169, \"y\": 206 }, { \"x\": 162, \"y\": 205 }, { \"x\": 154, \"y\": 207 }, { \"x\": 145, \"y\": 209 }, { \"x\": 137, \"y\": 210 }, { \"x\": 129, \"y\": 214 }, { \"x\": 122, \"y\": 217 }, { \"x\": 118, \"y\": 218 }, { \"x\": 111, \"y\": 221 }, { \"x\": 109, \"y\": 222 }, { \"x\": 110, \"y\": 219 }, { \"x\": 112, \"y\": 217 }, { \"x\": 118, \"y\": 209 }, { \"x\": 120, \"y\": 207 }, { \"x\": 128, \"y\": 196 }, { \"x\": 135, \"y\": 187 }, { \"x\": 138, \"y\": 183 }, { \"x\": 148, \"y\": 167 }, { \"x\": 157, \"y\": 153 }, { \"x\": 163, \"y\": 145 }, { \"x\": 165, \"y\": 142 }, { \"x\": 172, \"y\": 133 }, { \"x\": 177, \"y\": 127 }, { \"x\": 179, \"y\": 127 }, { \"x\": 180, \"y\": 125 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 81, \"y\": 219 }, { \"x\": 84, \"y\": 218 }, { \"x\": 86, \"y\": 220 }, { \"x\": 88, \"y\": 220 }, { \"x\": 90, \"y\": 220 }, { \"x\": 92, \"y\": 219 }, { \"x\": 95, \"y\": 220 }, { \"x\": 97, \"y\": 219 }, { \"x\": 99, \"y\": 220 }, { \"x\": 102, \"y\": 218 }, { \"x\": 105, \"y\": 217 }, { \"x\": 107, \"y\": 216 }, { \"x\": 110, \"y\": 216 }, { \"x\": 113, \"y\": 214 }, { \"x\": 116, \"y\": 212 }, { \"x\": 118, \"y\": 210 }, { \"x\": 121, \"y\": 208 }, { \"x\": 124, \"y\": 205 }, { \"x\": 126, \"y\": 202 }, { \"x\": 129, \"y\": 199 }, { \"x\": 132, \"y\": 196 }, { \"x\": 136, \"y\": 191 }, { \"x\": 139, \"y\": 187 }, { \"x\": 142, \"y\": 182 }, { \"x\": 144, \"y\": 179 }, { \"x\": 146, \"y\": 174 }, { \"x\": 148, \"y\": 170 }, { \"x\": 149, \"y\": 168 }, { \"x\": 151, \"y\": 162 }, { \"x\": 152, \"y\": 160 }, { \"x\": 152, \"y\": 157 }, { \"x\": 152, \"y\": 155 }, { \"x\": 152, \"y\": 151 }, { \"x\": 152, \"y\": 149 }, { \"x\": 152, \"y\": 146 }, { \"x\": 149, \"y\": 142 }, { \"x\": 148, \"y\": 139 }, { \"x\": 145, \"y\": 137 }, { \"x\": 141, \"y\": 135 }, { \"x\": 139, \"y\": 135 }, { \"x\": 134, \"y\": 136 }, { \"x\": 130, \"y\": 140 }, { \"x\": 128, \"y\": 142 }, { \"x\": 126, \"y\": 145 }, { \"x\": 122, \"y\": 150 }, { \"x\": 119, \"y\": 158 }, { \"x\": 117, \"y\": 163 }, { \"x\": 115, \"y\": 170 }, { \"x\": 114, \"y\": 175 }, { \"x\": 117, \"y\": 184 }, { \"x\": 120, \"y\": 190 }, { \"x\": 125, \"y\": 199 }, { \"x\": 129, \"y\": 203 }, { \"x\": 133, \"y\": 208 }, { \"x\": 138, \"y\": 213 }, { \"x\": 145, \"y\": 215 }, { \"x\": 155, \"y\": 218 }, { \"x\": 164, \"y\": 219 }, { \"x\": 166, \"y\": 219 }, { \"x\": 177, \"y\": 219 }, { \"x\": 182, \"y\": 218 }, { \"x\": 192, \"y\": 216 }, { \"x\": 196, \"y\": 213 }, { \"x\": 199, \"y\": 212 }, { \"x\": 201, \"y\": 211 }],\n    name: \"other\"\n  }, {\n    points: [{ \"x\": 75, \"y\": 250 }, { \"x\": 75, \"y\": 247 }, { \"x\": 77, \"y\": 244 }, { \"x\": 78, \"y\": 242 }, { \"x\": 79, \"y\": 239 }, { \"x\": 80, \"y\": 237 }, { \"x\": 82, \"y\": 234 }, { \"x\": 82, \"y\": 232 }, { \"x\": 84, \"y\": 229 }, { \"x\": 85, \"y\": 225 }, { \"x\": 87, \"y\": 222 }, { \"x\": 88, \"y\": 219 }, { \"x\": 89, \"y\": 216 }, { \"x\": 91, \"y\": 212 }, { \"x\": 92, \"y\": 208 }, { \"x\": 94, \"y\": 204 }, { \"x\": 95, \"y\": 201 }, { \"x\": 96, \"y\": 196 }, { \"x\": 97, \"y\": 194 }, { \"x\": 98, \"y\": 191 }, { \"x\": 100, \"y\": 185 }, { \"x\": 102, \"y\": 178 }, { \"x\": 104, \"y\": 173 }, { \"x\": 104, \"y\": 171 }, { \"x\": 105, \"y\": 164 }, { \"x\": 106, \"y\": 158 }, { \"x\": 107, \"y\": 156 }, { \"x\": 107, \"y\": 152 }, { \"x\": 108, \"y\": 145 }, { \"x\": 109, \"y\": 141 }, { \"x\": 110, \"y\": 139 }, { \"x\": 112, \"y\": 133 }, { \"x\": 113, \"y\": 131 }, { \"x\": 116, \"y\": 127 }, { \"x\": 117, \"y\": 125 }, { \"x\": 119, \"y\": 122 }, { \"x\": 121, \"y\": 121 }, { \"x\": 123, \"y\": 120 }, { \"x\": 125, \"y\": 122 }, { \"x\": 125, \"y\": 125 }, { \"x\": 127, \"y\": 130 }, { \"x\": 128, \"y\": 133 }, { \"x\": 131, \"y\": 143 }, { \"x\": 136, \"y\": 153 }, { \"x\": 140, \"y\": 163 }, { \"x\": 144, \"y\": 172 }, { \"x\": 145, \"y\": 175 }, { \"x\": 151, \"y\": 189 }, { \"x\": 156, \"y\": 201 }, { \"x\": 161, \"y\": 213 }, { \"x\": 166, \"y\": 225 }, { \"x\": 169, \"y\": 233 }, { \"x\": 171, \"y\": 236 }, { \"x\": 174, \"y\": 243 }, { \"x\": 177, \"y\": 247 }, { \"x\": 178, \"y\": 249 }, { \"x\": 179, \"y\": 251 }, { \"x\": 180, \"y\": 253 }, { \"x\": 180, \"y\": 255 }, { \"x\": 179, \"y\": 257 }, { \"x\": 177, \"y\": 257 }, { \"x\": 174, \"y\": 255 }, { \"x\": 169, \"y\": 250 }, { \"x\": 164, \"y\": 247 }, { \"x\": 160, \"y\": 245 }, { \"x\": 149, \"y\": 238 }, { \"x\": 138, \"y\": 230 }, { \"x\": 127, \"y\": 221 }, { \"x\": 124, \"y\": 220 }, { \"x\": 112, \"y\": 212 }, { \"x\": 110, \"y\": 210 }, { \"x\": 96, \"y\": 201 }, { \"x\": 84, \"y\": 195 }, { \"x\": 74, \"y\": 190 }, { \"x\": 64, \"y\": 182 }, { \"x\": 55, \"y\": 175 }, { \"x\": 51, \"y\": 172 }, { \"x\": 49, \"y\": 170 }, { \"x\": 51, \"y\": 169 }, { \"x\": 56, \"y\": 169 }, { \"x\": 66, \"y\": 169 }, { \"x\": 78, \"y\": 168 }, { \"x\": 92, \"y\": 166 }, { \"x\": 107, \"y\": 164 }, { \"x\": 123, \"y\": 161 }, { \"x\": 140, \"y\": 162 }, { \"x\": 156, \"y\": 162 }, { \"x\": 171, \"y\": 160 }, { \"x\": 173, \"y\": 160 }, { \"x\": 186, \"y\": 160 }, { \"x\": 195, \"y\": 160 }, { \"x\": 198, \"y\": 161 }, { \"x\": 203, \"y\": 163 }, { \"x\": 208, \"y\": 163 }, { \"x\": 206, \"y\": 164 }, { \"x\": 200, \"y\": 167 }, { \"x\": 187, \"y\": 172 }, { \"x\": 174, \"y\": 179 }, { \"x\": 172, \"y\": 181 }, { \"x\": 153, \"y\": 192 }, { \"x\": 137, \"y\": 201 }, { \"x\": 123, \"y\": 211 }, { \"x\": 112, \"y\": 220 }, { \"x\": 99, \"y\": 229 }, { \"x\": 90, \"y\": 237 }, { \"x\": 80, \"y\": 244 }, { \"x\": 73, \"y\": 250 }, { \"x\": 69, \"y\": 254 }, { \"x\": 69, \"y\": 252 }],\n    name: \"other\"\n  }];\n\n  ShapeDetector.prototype.spot = function (points, patternName) {\n\n    if (patternName == null) {\n      patternName = '';\n    }\n\n    var distance, pattern, score;\n    var stroke = new Stroke(points);\n    var bestDistance = +Infinity;\n    var bestPattern = null;\n    var bestScore = 0;\n\n    for (var i = 0; i < this.patterns.length; i++) {\n      pattern = this.patterns[i];\n\n      if (pattern.name.indexOf(patternName) > -1) {\n        distance = stroke.distanceAtBestAngle(pattern);\n        score = 1.0 - distance / _halfDiagonal;\n\n        if (distance < bestDistance && score > this.threshold) {\n          bestDistance = distance;\n          bestPattern = pattern.name;\n          bestScore = score;\n        }\n      }\n    }\n\n    return {\n      pattern: bestPattern,\n      score: bestScore\n    };\n  };\n\n  ShapeDetector.prototype.learn = function (name, points) {\n\n    return this.patterns.push(new Stroke(points, name));\n  };\n\n  return ShapeDetector;\n});\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetWindow = resetWindow;\nvar touch = require('./touch');\nvar ui = require('./ui');\nvar overlays = require('./overlays');\nvar video = require('./video');\nvar timing = require('./timing');\nvar util = require('./util');\nvar sound = require('./sound');\nvar shape = require('./shape');\n\nfunction resetWindow() {\n  window.kan = {\n    currentColor: '#2B5E2E',\n    composition: [],\n    compositionInterval: null,\n    compositionTimeout: null,\n    soundTimeouts: [],\n    lastEvent: null,\n    interaction: false,\n    moves: [],\n    playing: false,\n    pinching: false,\n    pinchedGroup: null,\n    pinchedTut: null,\n    pathData: {},\n    shapePath: null,\n    prevAngle: null,\n    sides: [],\n    side: [],\n    corners: [],\n    lastScale: 1,\n    lastRotation: 0,\n    originalPosition: null,\n    tutorialCompletion: {\n      \"fill\": false,\n      \"pinch\": false,\n      \"swipe\": false\n    },\n    inactivityTimeout: null,\n    playPromptTimeout: null,\n    userHasDrawnFirstShape: false,\n    firstTimePlaying: true,\n    shapesSinceTut: 0,\n    refreshCheckInterval: null,\n    sha: null,\n    scheduledOverlay: null,\n    continueCountdownInterval: null,\n    shapeSounds: null\n  };\n}\n\n$(window).on('load', function () {\n  function run() {\n    resetWindow();\n    util.setSha();\n    ui.init();\n    overlays.init();\n    timing.init();\n    shape.init();\n    sound.init().then(function () {\n      // sound.init() is async because it loads in the sound files\n      touch.init();\n    }).fail(function (e) {\n      console.error('error initting shape sounds:', e);\n      location.reload();\n    });\n  }\n\n  try {\n    run();\n  } catch (e) {\n    console.error(e);\n    setTimeout(function () {\n      // wait 5 seconds then reload\n      location.reload();\n    }, 5 * 1000);\n  }\n});\n\n},{\"./overlays\":9,\"./shape\":10,\"./sound\":12,\"./timing\":13,\"./touch\":14,\"./ui\":16,\"./util\":17,\"./video\":18}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.openOverlay = openOverlay;\nexports.resetContinueCountdown = resetContinueCountdown;\nexports.cardNavNext = cardNavNext;\nexports.closeAndResetOverlays = closeAndResetOverlays;\nexports.init = init;\nvar config = require('./../../config');\n\nvar touch = require('./touch');\nvar video = require('./video');\nvar timing = require('./timing');\nvar tutorial = require('./tutorial');\nvar util = require('./util');\n\nvar hammerCanvas = touch.hammerCanvas;\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar $cardsWrap = $body.find('.overlay.tips .card-wrap');\nvar $cardItems = $cardsWrap.find('article');\nvar cardsCount = $cardItems.length;\nvar $footer = $body.find('.overlay.tips .footer');\n\nvar $sharePhone = $body.find('#phone');\nvar $shareKeypad = $body.find('.keypad');\n\nvar allOverlays = ['intro', 'play-prompt', 'share-prompt', 'continue', 'tips', 'share'];\nvar overlayOpenClasses = allOverlays.map(function (overlay) {\n  return overlay + '-active';\n}).join(' ');\n\nvar overlayActiveClass = 'overlay-active';\n\nfunction openOverlay(overlayName) {\n  // console.log('attempting to open overlay', overlayName);\n  if (window.kan.overlays === false) return;\n  if (allOverlays.includes(overlayName)) {\n    if (window.kan.pinching === true || window.kan.panning === true) {\n      if (overlayName === 'continue') {\n        timing.preventInactivityTimeout();\n      } else {\n        // console.log('scheduling overlay', overlayName);\n        window.kan.scheduledOverlay = overlayName;\n      }\n      return;\n    }\n    closeAndResetOverlays();\n    tutorial.hideContextualTuts();\n    $body.addClass(overlayActiveClass);\n    $body.find('.overlay:not(.tips)').on(tapEvent, function () {\n      closeAndResetOverlays();\n    });\n\n    switch (overlayName) {\n      case 'intro':\n        openIntroOverlay();\n        break;\n      case 'play-prompt':\n        if (util.anyShapesOnCanvas()) {\n          openPlayPromptOverlay();\n        } else {\n          window.kan.playPromptTimeout = setTimeout(function () {\n            openOverlay('play-prompt');\n          }, timing.playPromptDelay / 2);\n        }\n        break;\n      case 'share-prompt':\n        openSharePromptOverlay();\n        break;\n      case 'continue':\n        openContinueOverlay();\n        break;\n      case 'tips':\n        openTipsOverlay();\n        break;\n      case 'share':\n        openShareOverlay();\n        break;\n    }\n  } else {\n    // console.log('unable to open unknown overlay', overlayName);\n  }\n}\n\nfunction openIntroOverlay() {\n  $body.addClass('intro-active');\n}\n\nfunction openPlayPromptOverlay() {\n  $body.addClass('play-prompt-active');\n}\n\nfunction openSharePromptOverlay() {\n  $body.addClass('share-prompt-active');\n}\n\nfunction resetContinueCountdown() {\n  $('.overlay.continue .countdown-num').html(parseInt(timing.continueInactivityDelay / 1000));\n  clearInterval(window.kan.continueCountdownInterval);\n}\n\nfunction openContinueOverlay() {\n  $body.addClass('continue-active');\n\n  resetContinueCountdown();\n  clearTimeout(window.kan.inactivityTimeout);\n  clearTimeout(window.kan.playPromptTimeout);\n\n  window.kan.continueCountdownInterval = setInterval(function () {\n    var $countdownNumWrap = $('.overlay.continue .countdown-num');\n    var count = parseInt($countdownNumWrap.html());\n    if (count > 1) {\n      $countdownNumWrap.html(count - 1);\n    }\n  }, 1000);\n\n  window.kan.inactivityTimeout = setTimeout(function () {\n    video.enterTutorialMode();\n  }, timing.continueInactivityDelay);\n}\n\nfunction openTipsOverlay() {\n  $body.addClass('tips-active');\n  activateTipsCards();\n}\n\nfunction openShareOverlay() {\n  $body.addClass('share-active');\n}\n\n// card slider navigation\nfunction cardNavNext() {\n  var $old = $body.find('.card-wrap .current');\n  var $new = $old.next().length ? $old.next() : $cardItems.first();\n  var $next = $new.next().length ? $new.next() : $cardItems.first();\n  var $third = $next.next().length ? $next.next() : $cardItems.first().next();\n  var slide = $new.index();\n  $old.removeClass().addClass('remove');\n  $new.removeClass().addClass('current');\n  $next.removeClass().addClass('next');\n  $third.removeClass().addClass('third');\n  updateCardCounter(slide + 1, cardsCount);\n  setTimeout(function () {\n    $old.removeClass();\n  }, 600);\n}\n\n// tips card interactions\nfunction cardInteractions() {\n  var timeOfLastInteraction = 0;\n\n  $body.find('.overlay').on(tapEvent, function (e) {\n    var currentTime = Date.now();\n    if (timeOfLastInteraction > currentTime - 250) {\n      return;\n    }\n    timeOfLastInteraction = currentTime;\n\n    if ($(e.target).closest('.card-wrap').length == 1) {\n      // directly on a card, navigate to the next one\n      cardNavNext();\n    } else {\n      // outside elements, close everything and reset\n      closeAndResetOverlays();\n    }\n  });\n}\n\nfunction resetTips() {\n  $cardItems.removeClass();\n  $sharePhone.html('');\n}\n\n// close and reset tips\nfunction closeAndResetOverlays() {\n  $body.removeClass('overlay-active');\n  $body.removeClass(overlayOpenClasses);\n  resetTips();\n}\n\n// deal a fresh stack of cards\nfunction activateTipsCards() {\n  var $new = $cardItems.first();\n  var $next = $new.next().length ? $new.next() : $cardItems.first();\n  var $third = $next.next().length ? $next.next() : $cardItems.first().next();\n  $cardItems.removeClass();\n  $new.removeClass().addClass('current');\n  $next.removeClass().addClass('next');\n  $third.removeClass().addClass('third');\n  updateCardCounter(1, cardsCount);\n}\n\n// counting cards\nfunction updateCardCounter(current, total) {\n  $footer.find('.current').html(current);\n  $footer.find('.next').html(total);\n}\n\n// phone inputs\nfunction phoneNumberInputs() {\n  // mask the output\n  $sharePhone.mask('000-000-0000');\n  // get interactions from the keypad\n  $shareKeypad.find('.num').on(tapEvent, function (e) {\n    var phoneNumber = $sharePhone.html().toString() + $(e.target).html().toString();\n    phoneNumber = $sharePhone.masked(phoneNumber);\n    $sharePhone.html(phoneNumber);\n  });\n  // clear the display\n  $shareKeypad.find('.clear').on(tapEvent, function (e) {\n    $sharePhone.html('');\n  });\n  // FIXME: send sms\n  // $shareKeypad.find('.send').on(tapEvent, e => {});\n}\n\n// \"randomly\" place fiddly bits on the cards\nfunction randomCardGraphics() {\n  $body.find('.card-wrap article').each(function (i, el) {\n    $(el).attr('data-bg', i);\n  });\n}\n\nfunction initTips() {\n  cardInteractions();\n}\n\nfunction initShare() {\n  phoneNumberInputs();\n  randomCardGraphics();\n}\n\nfunction init() {\n  initTips();\n  initShare();\n}\n\n},{\"./../../config\":1,\"./timing\":13,\"./touch\":14,\"./tutorial\":15,\"./util\":17,\"./video\":18}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.startKeepaliveAnimation = startKeepaliveAnimation;\nexports.stopKeepaliveAnimation = stopKeepaliveAnimation;\nexports.destroyGroupPops = destroyGroupPops;\nexports.fillInGroupPopsById = fillInGroupPopsById;\nexports.toggleFill = toggleFill;\nexports.cleanUpGroup = cleanUpGroup;\nexports.updatePops = updatePops;\nexports.getOutlineGroup = getOutlineGroup;\nexports.getTruedShape = getTruedShape;\nexports.getCompletedPath = getCompletedPath;\nexports.getShapePrediction = getShapePrediction;\nexports.getIntegerPoint = getIntegerPoint;\nexports.stringifyPoint = stringifyPoint;\nexports.parsePoint = parsePoint;\nexports.getClosestPointFromPathData = getClosestPointFromPathData;\nexports.processShapeData = processShapeData;\nexports.findInteriorCurves = findInteriorCurves;\nexports.getExtendedPath = getExtendedPath;\nexports.getBruteExtendedPath = getBruteExtendedPath;\nexports.getTrimmedPath = getTrimmedPath;\nexports.hitTestGroupBounds = hitTestGroupBounds;\nexports.hitTestBounds = hitTestBounds;\nexports.init = init;\nvar ShapeDetector = require('./lib/shape-detector');\n\nvar config = require('./../../config');\n\nvar util = require('./util');\nvar color = require('./color');\n\nvar keepaliveShape = exports.keepaliveShape = void 0;\n\nvar cornerThresholdDeg = exports.cornerThresholdDeg = 30;\nvar thresholdDistMultiplier = exports.thresholdDistMultiplier = 0.1;\n\nvar detector = exports.detector = new ShapeDetector(ShapeDetector.defaultShapes);\n\nvar shapeNames = exports.shapeNames = [\"line\", \"circle\", \"square\", \"triangle\", \"other\"];\n\nfunction clearPops() {\n  var pops = util.getAllPops();\n  pops.forEach(function (pop) {\n    return pop.remove();\n  });\n}\n\nvar keepaliveInterval = null;\n\n// the canvas recorder automatically trims 'still' frames, so I add a semitransparent 1px square to trick the recorder into recording :)\nfunction initKeepaliveShape() {\n  exports.keepaliveShape = keepaliveShape = Path.Rectangle({\n    point: [1, 1],\n    size: [1, 1],\n    strokeColor: new Color(0, 0.001),\n    visible: false,\n    name: 'keepalive'\n  });\n}\n\nfunction startKeepaliveAnimation() {\n  keepaliveShape.visible = true;\n  keepaliveInterval = setInterval(function () {\n    keepaliveShape.rotation += 5;\n  }, 40);\n};\n\nfunction stopKeepaliveAnimation() {\n  keepaliveShape.visible = false;\n  clearInterval(keepaliveInterval);\n}\n\nfunction destroyGroupPops(group) {\n  // console.log('destroying pops');\n  var groupPopsBefore = util.getGroupPops(group);\n  // console.log('pops to be destroyed', groupPopsBefore);\n  if (groupPopsBefore.length > 0) {\n    groupPopsBefore.forEach(function (pop) {\n      return pop.remove();\n    });\n  }\n  var groupPopsAfter = util.getGroupPops(group);\n  // console.log('group pops after', groupPopsAfter);\n}\n\nfunction fillInGroupPopsById(groupId) {\n  var group = paper.project.getItem({\n    className: 'Group',\n    match: function match(el) {\n      return el.id === groupId;\n    }\n  });\n\n  if (!!group && group.children.length > 0) {\n    group.children.forEach(function (groupChild) {\n      if (groupChild.name === 'loop') {\n        toggleFill(groupChild);\n      }\n    });\n  }\n}\n\nfunction toggleFill(item) {\n  var transparent = color.transparent;\n  // console.log('hit');\n  var parent = item.parent;\n\n  // console.log('hit item', item);\n  // console.log('hit parent', parent);\n\n  if (item.data.interior) {\n    // console.log('interior');\n    item.data.transparent = !item.data.transparent;\n\n    if (item.data.transparent) {\n      // console.log('transparent');\n      item.fillColor = transparent;\n      item.strokeColor = transparent;\n    } else {\n      // console.log('not transparent');\n      item.fillColor = parent.data.color;\n      item.strokeColor = parent.data.color;\n    }\n\n    window.kan.moves.push({\n      type: 'fillChange',\n      id: item.id,\n      fill: parent.data.color,\n      transparent: item.data.transparent\n    });\n  } else {\n    // console.log('not interior');\n    // check if item is a pop, because then we'll fill the pop's parent\n    if (!!item.data && item.data.pop === true) {\n      if (!!item.parent) {\n        if (config.pop === true) {\n          fillInGroupPopsById(item.parent.id);\n        }\n      }\n    }\n  }\n}\n\nfunction cleanUpGroup(group) {\n  // console.log('cleaning up group');\n  var acceptableNames = ['mask', 'outer', 'shapePath', 'loop', 'pop'];\n\n  group.children.forEach(function (groupChild) {\n    if (groupChild.name === null || !acceptableNames.includes(groupChild.name) || !groupChild.length > 0) {\n      groupChild.remove();\n    }\n  });\n\n  return group;\n}\n\nfunction updatePops() {\n  var freshGroups = util.getFreshGroups();\n  var popCandidates = util.getPopCandidates();\n  var allPops = util.getAllPops();\n  popCandidates.reverse();\n  // console.log('freshGroups', freshGroups);\n  // console.log('popCandidates', popCandidates);\n  // clearPops();\n\n  freshGroups.forEach(function (freshGroup, i) {\n    // if (i >= 4) return;\n    // console.log('freshGroup', freshGroup);\n\n    var freshOuter = freshGroup._namedChildren.mask[0];\n    freshOuter.bringToFront();\n    // freshOuter.visible = true;\n    // freshOuter.fillColor = 'black';\n    // freshOuter.selected = true;\n    // console.log('freshOuter', freshOuter);\n    // freshOuter.selected = true;\n    popCandidates.forEach(function (otherGroup, j) {\n      var otherGroupOuter = otherGroup._namedChildren.mask[0];\n      if (freshGroup.id !== otherGroup.id) {\n        // console.log('otherGroup', otherGroup);\n        // console.log('otherGroupOuter', otherGroupOuter);\n        // otherGroupOuter.fillColor = 'white';\n        otherGroupOuter.bringToFront();\n        var thisPop = freshOuter.intersect(otherGroupOuter);\n        if (!!thisPop && thisPop.length > 0) {\n          // const popColor = color.getIndexedPopColor(i + j);\n          var popColor = color.getRandomPop();\n          thisPop.fillColor = popColor;\n          thisPop.strokeColor = popColor;\n          thisPop.data.pop = true;\n          thisPop.name = 'pop';\n          thisPop.data.popGroup = freshGroup.id;\n          thisPop.data.intersectingGroup = otherGroup.id;\n          thisPop.visible = true;\n          thisPop.closed = true;\n          thisPop.bringToFront();\n          freshGroup.addChild(thisPop);\n        }\n\n        cleanUpGroup(freshGroup);\n\n        // figure out if this pop intersects any other pops\n        // allPops.forEach((otherPop, k) => {\n        //   console.log('checking other pop', otherPop);\n        //   if (thisPop.id !== otherPop.id && thisPop.intersects(otherPop)) {\n        //     let popIntersection = thisPop.getIntersections(otherPop);\n        //     if (!!popIntersection && popIntersection.length > 0) {\n        //       popIntersection = new Path([popIntersection])\n        //       console.log('popIntersection', popIntersection);\n        //       // const popColor = color.getIndexedPopColor(i + j + k);\n        //       const popColor = color.getRandomPop();\n        //       popIntersection.data.pop = true;\n        //       popIntersection.fillColor = popColor\n        //       popIntersection.strokeColor = popColor;\n        //       popIntersection.visible = true;\n        //       popIntersection.closed = true;\n        //       popIntersection.bringToFront();\n        //     }\n        //   }\n        // });\n      }\n    });\n\n    freshGroup.data.fresh = false;\n  });\n}\n\nfunction getOutlineGroup(truedShape) {\n  // console.log('truedShape', truedShape);\n  var outerPath = new Path();\n  outerPath.name = 'outer';\n  outerPath.visible = true;\n\n  var middlePath = new Path();\n  middlePath.name = 'middle';\n  var sizes = [];\n  var angle = null,\n      lastAngle = null,\n      angleDelta = void 0;\n\n  var firstTop = null,\n      firstBottom = null;\n  var lastTop = null,\n      lastBottom = null;\n\n  if (!(truedShape.length > 0)) return new Group(outerPath, middlePath);\n\n  middlePath.add(truedShape.firstSegment.point);\n\n  for (var i = 0; i < truedShape.length; i += 10) {\n    while (sizes.length > 10) {\n      sizes.shift();\n    }\n\n    var size = Math.random() * 9; // This is just random variance\n    sizes.push(size);\n\n    var cumSize = 0;\n    for (var j = 0; j < sizes.length; j++) {\n      cumSize += sizes[j];\n    }\n    var avgSize = Math.max(5, (cumSize / sizes.length + size) / 2);\n\n    var point = truedShape.getPointAt(i);\n    var normal = truedShape.getNormalAt(i);\n\n    var top = new Point(point.x + normal.x * avgSize, point.y + normal.y * avgSize);\n    var bottom = new Point(point.x - normal.x * avgSize, point.y - normal.y * avgSize);\n\n    // console.log('point', point, 'normal', normal);\n    // console.log('top', top, 'bottom', bottom);\n\n    outerPath.add(top);\n    outerPath.insert(0, bottom);\n    middlePath.add(point);\n\n    lastAngle = angle;\n\n    if (i == 10) {\n      firstTop = top;\n      firstBottom = bottom;\n    } else {\n      lastTop = top;\n      lastBottom = bottom;\n    }\n  }\n\n  if (truedShape.closed === true) {\n    var centerTop = new Point((firstTop.x + lastTop.x) / 2, (firstTop.y + lastTop.y) / 2);\n    var centerBottom = new Point((firstBottom.x + lastBottom.x) / 2, (firstBottom.y + lastBottom.y) / 2);\n    var center = new Point((centerTop.x + centerBottom.x) / 2, (centerTop.y + centerBottom.y) / 2);\n\n    outerPath.add(centerTop);\n    outerPath.insert(0, centerBottom);\n    middlePath.add(center);\n\n    outerPath.add(firstTop);\n    outerPath.insert(0, firstBottom);\n    middlePath.closed = true;\n  }\n\n  outerPath.flatten(50);\n  middlePath.flatten(50);\n  outerPath.simplify();\n  middlePath.simplify();\n\n  outerPath.selected = false;\n  // middlePath.selected = true;\n  outerPath.name = 'outer';\n  middlePath.name = 'middle';\n  var returnGroup = new Group(outerPath, middlePath);\n  return returnGroup;\n}\n\nfunction getTruedShape(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n  // console.log('pathClone', pathClone);\n  var completedPath = getCompletedPath(pathClone);\n  // completedPath.reduce();\n\n  // true the path!\n  var truedPath = completedPath;\n  // console.log('truedPath', truedPath);\n\n  truedPath.strokeWidth = pathClone.strokeWidth;\n\n  pathClone.remove();\n  return truedPath;\n}\n\n// extend or trim path if the ends are close\nfunction getCompletedPath(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n  pathClone.reduce();\n  pathClone.simplify();\n\n  var intersections = pathClone.getIntersections();\n\n  if (intersections.length > 0) {\n    // trim path if ends are close\n    var trimmedPath = getTrimmedPath(pathClone);\n\n    pathClone.remove();\n\n    return trimmedPath;\n  } else {\n    // extend path to see if an intersection is near\n    var extendedPath = getExtendedPath(pathClone);\n    var _intersections = extendedPath.getIntersections();\n\n    // pathClone.remove();\n\n    if (_intersections.length > 0) {\n      // trim extra extended path\n      var _trimmedPath = getTrimmedPath(extendedPath);\n      extendedPath.remove();\n      return _trimmedPath;\n    } else {\n      // extended path does not intersect, return the original path\n      extendedPath.replaceWith(getBruteExtendedPath(pathClone));\n      if (extendedPath !== null) {\n        var _intersections2 = extendedPath.getIntersections();\n\n        if (_intersections2.length > 0) {\n          var _trimmedPath2 = getTrimmedPath(extendedPath);\n          extendedPath.remove();\n          return _trimmedPath2;\n        }\n\n        if (!!extendedPath && extendedPath.length > 0) {\n          extendedPath.remove();\n        }\n      }\n\n      pathClone.visible = true;\n      return pathClone;\n    }\n  }\n}\n\nfunction getShapePrediction(path) {\n  var prediction = {};\n\n  var shapeJSON = path.exportJSON();\n  var shapeData = processShapeData(shapeJSON);\n  // console.log(JSON.stringify(shapeData));\n  var shapePrediction = detector.spot(shapeData);\n\n  if (shapePrediction.score === 0) {\n    // algorithm doesn't like vertical lines for some reason\n    // if the certainty is 0 it's probably a line\n    prediction.pattern = \"line\";\n    prediction.score = 0.9;\n  } else {\n    if (shapePrediction.score > 0.5) {\n      prediction.pattern = shapePrediction.pattern;\n    } else {\n      prediction.pattern = \"other\";\n    }\n    prediction.score = shapePrediction.score;\n  }\n\n  if (path.closed === true) {\n    var closedShapes = ['triangle', 'square', 'circle'];\n    if (closedShapes.includes(prediction.pattern) === false) {\n      // closed shape should be one of the above, make a random pick\n      prediction.pattern = util.randomPick(closedShapes);\n    }\n  } else if (path.intersects(path) === true) {\n    prediction.pattern = 'other';\n    // const intersectingShapes = ['triangle', 'square', 'circle', 'other'];\n    // if (intersectingShapes.includes(prediction.pattern) === false) {\n    //   prediction.pattern = util.randomPick(intersectingShapes);\n    // }\n  } else {\n    prediction.pattern = 'line'; // lines are the only shape that is not closed and does not intersect\n  }\n\n  // console.log('shape prediction', prediction);\n\n  return prediction;\n}\n\n// floors the coordinates of a point\nfunction getIntegerPoint(point) {\n  return new Point(Math.floor(point.x), Math.floor(point.y));\n}\n\nfunction stringifyPoint(point) {\n  return Math.floor(point.x) + ',' + Math.floor(point.y);\n}\n\nfunction parsePoint(pointStr) {\n  var split = pointStr.split(',').map(function (num) {\n    return Math.floor(num);\n  });\n\n  if (split.length >= 2) {\n    return new Point(split[0], split[1]);\n  }\n\n  return null;\n}\n\nfunction getClosestPointFromPathData(point, pathData) {\n  var leastDistance = void 0,\n      closestPoint = void 0;\n\n  Base.each(pathData, function (datum, i) {\n    var distance = point.getDistance(datum.point);\n    if (!leastDistance || distance < leastDistance) {\n      leastDistance = distance;\n      closestPoint = datum.point;\n    }\n  });\n\n  return closestPoint || point;\n}\n\nfunction processShapeData(json) {\n  var returnShape = [];\n  var jsonObj = JSON.parse(json)[1]; // zero index is stringified type (e.g. \"Path\")\n\n  if ('segments' in jsonObj) {\n    var segments = jsonObj.segments;\n    Base.each(segments, function (segment, i) {\n      if (segment.length === 3) {\n        var positionInfo = segment[0]; // indexes 1 and 2 are superfluous matrix details\n        returnShape.push({\n          x: positionInfo[0],\n          y: positionInfo[1]\n        });\n      } else {\n        returnShape.push({\n          x: segment[0],\n          y: segment[1]\n        });\n      };\n    });\n  }\n  return returnShape;\n}\n\nfunction findInteriorCurves(path) {\n  var transparent = color.transparent;\n\n  var interiorCurves = [];\n\n  var pathClone = path.clone();\n  var intersections = pathClone.getIntersections();\n\n  if (intersections.length > 0) {\n    var dividedPath = pathClone.resolveCrossings();\n    // console.log(dividedPath);\n\n    if (dividedPath.className === 'CompoundPath') {\n      Base.each(dividedPath.children, function (child, i) {\n        if (child.length > 0 && child.closed) {\n          var enclosedLoop = child.clone();\n          if (pathClone.closed) {\n            enclosedLoop.fillColor = pathClone.strokeColor;\n            enclosedLoop.data.interior = true;\n            enclosedLoop.data.transparent = false;\n          } else {\n            enclosedLoop.fillColor = transparent;\n            enclosedLoop.data.transparent = true;\n          }\n          enclosedLoop.data.interior = true;\n          enclosedLoop.visible = true;\n          enclosedLoop.closed = true;\n          interiorCurves.push(enclosedLoop);\n        }\n      });\n    } else {\n      if (pathClone.closed) {\n        var enclosedLoop = pathClone.clone();\n        enclosedLoop.visible = true;\n        enclosedLoop.fillColor = pathClone.strokeColor;\n        enclosedLoop.data.interior = true;\n        enclosedLoop.data.transparent = false;\n        interiorCurves.push(enclosedLoop);\n      }\n    }\n  } else {\n    if (pathClone.closed) {\n      var _enclosedLoop = pathClone.clone();\n      _enclosedLoop.visible = true;\n      _enclosedLoop.fillColor = pathClone.strokeColor;\n      _enclosedLoop.data.interior = true;\n      _enclosedLoop.data.transparent = false;\n      interiorCurves.push(_enclosedLoop);\n    }\n  }\n\n  return interiorCurves;\n}\n\nfunction getExtendedPath(path) {\n  var bruteForce = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var extendedPath = path.clone();\n  extendedPath.visible = false;\n\n  var thresholdDist = thresholdDistMultiplier * extendedPath.length;\n\n  var firstSegment = extendedPath.firstSegment;\n  var nextSegment = firstSegment.next;\n  var startAngle = Math.atan2(nextSegment.point.y - firstSegment.point.y, nextSegment.point.x - firstSegment.point.x); // rad\n  var inverseStartAngle = startAngle + Math.PI;\n  var extendedStartPoint = new Point(firstSegment.point.x + Math.cos(inverseStartAngle) * thresholdDist / 2, firstSegment.point.y + Math.sin(inverseStartAngle) * thresholdDist / 2);\n  extendedPath.insert(0, extendedStartPoint);\n\n  var lastSegment = extendedPath.lastSegment;\n  var penSegment = lastSegment.previous; // penultimate\n  var endAngle = Math.atan2(lastSegment.point.y - penSegment.point.y, lastSegment.point.x - penSegment.point.x); // rad\n  var extendedEndPoint = new Point(lastSegment.point.x + Math.cos(endAngle) * thresholdDist / 2, lastSegment.point.y + Math.sin(endAngle) * thresholdDist / 2);\n  extendedPath.add(extendedEndPoint);\n\n  // extendedPath.visible = true;\n\n  return extendedPath;\n}\n\nfunction getBruteExtendedPath(path) {\n  var extendedPath = path.clone();\n  extendedPath.visible = false;\n\n  var thresholdDist = thresholdDistMultiplier * extendedPath.length;\n  var firstPoint = extendedPath.firstSegment.point;\n  var lastPoint = extendedPath.lastSegment.point;\n\n  if (firstPoint.getDistance(lastPoint) < thresholdDist) {\n    extendedPath.insert(0, lastPoint);\n    extendedPath.add(firstPoint);\n    extendedPath.closed = true;\n    extendedPath.unite();\n    var crossings = extendedPath.resolveCrossings();\n    if (!!crossings && !!crossings.children && crossings.children.length > 0) {\n      (function () {\n        var maxArea = 0,\n            maxChild = null;\n        crossings.children.forEach(function (child) {\n          if (child.area > maxArea) {\n            maxChild = child;\n            maxArea = child.area;\n          }\n        });\n\n        extendedPath = maxChild;\n      })();\n    }\n  }\n\n  return extendedPath;\n}\n\nfunction getTrimmedPath(path) {\n  var pathClone = path.clone();\n  pathClone.visible = false;\n\n  var firstPoint = pathClone.firstSegment.point;\n  var lastPoint = pathClone.lastSegment.point;\n  var thresholdDist = thresholdDistMultiplier * pathClone.length;\n\n  var intersections = pathClone.getIntersections();\n  intersections.forEach(function (intersection, i) {\n    if (intersection.offset === 0) {\n      intersections.splice(i, 1);\n    }\n  });\n\n  // console.log('intersections', intersections);\n\n  if (intersections.length == 1) {\n    for (var i = 0; i < intersections.length; i++) {\n      var intersectionPoint = intersections[i].point;\n\n      // if the average of the distance between the first and last points and the intersection point is within the threshold, trim\n      if (firstPoint.getDistance(intersectionPoint) + lastPoint.getDistance(intersectionPoint) < 2 * thresholdDist) {\n        // console.log('trimming path');\n        var dividedPath = pathClone.clone(); // resolve crossings seems to modify the path it was passed, so make an extra clone to be safe\n        dividedPath.visible = false;\n        var pathCrossings = dividedPath.resolveCrossings();\n\n        if (pathCrossings.className === 'CompoundPath' && pathCrossings.children.length > 0) {\n          for (var j = 0; j < pathCrossings.children.length; j++) {\n            var child = pathCrossings.children[j];\n            if (child.closed) {\n              // child.selected = true;\n              dividedPath = dividedPath.subtract(child);\n            }\n          }\n        }\n\n        // dividedPath.selected = true;\n\n        var trimmedPath = pathClone.subtract(dividedPath);\n        if (trimmedPath.length === 0) return pathClone;\n        if (trimmedPath.className === 'CompoundPath' && trimmedPath.children.length > 0) {\n          var _ret2 = function () {\n            var closedChildren = [];\n            trimmedPath.children.forEach(function (child, i) {\n              if (child.length > 0 && child.closed) {\n                var childClone = child.clone();\n                childClone.visible = false;\n                closedChildren.push(childClone);\n              }\n            });\n\n            if (closedChildren.length > 0) {\n              if (closedChildren.length > 1) {\n                // for some reason there are more than one closed children, merge them\n                var accumulator = closedChildren[0];\n\n                for (var _j = 1; _j < closedChildren.length; _j++) {\n                  accumulator = accumulator.unite(closedChildren[_j]);\n                }\n\n                if (accumulator.length > 0 && accumulator.className === 'Path') {\n                  // console.log('trimmed accumulator', accumulator);\n                  var newPath = new Path();\n                  newPath.copyContent(accumulator);\n                  newPath.copyAttributes(pathClone);\n                  accumulator.remove();\n                  pathClone.remove();\n                  dividedPath.remove();\n                  trimmedPath.remove();\n                  return {\n                    v: newPath\n                  };\n                }\n              }\n\n              pathClone.remove();\n              dividedPath.remove();\n              trimmedPath.remove();\n              // console.log('trimmed closedChildren[0]', closedChildren[0]);\n              return {\n                v: closedChildren[0]\n              };\n            }\n          }();\n\n          if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n        }\n\n        // console.log('trimmed path return', trimmedPath);\n        // console.log('path clone', pathClone);\n        // console.log('dividedPath', dividedPath);\n        pathClone.remove();\n        dividedPath.remove();\n        return trimmedPath;\n      }\n    }\n\n    // no close intersection were found so nothing can be trimmed\n    return pathClone;\n  } else {\n    return path;\n  }\n}\n\nfunction hitTestGroupBounds(point) {\n  var groups = util.getVisibleGroups();\n  return hitTestBounds(point, groups);\n}\n\nfunction hitTestBounds(point, children) {\n  if (!point) return null;\n\n  for (var i = children.length - 1; i >= 0; i--) {\n    var child = children[i];\n    var bounds = child.strokeBounds;\n    if (point.isInside(child.strokeBounds)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n\nfunction init() {\n  initKeepaliveShape();\n}\n\n},{\"./../../config\":1,\"./color\":6,\"./lib/shape-detector\":7,\"./util\":17}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.record = record;\nvar config = require('./../../config');\n\nvar ui = require('./ui');\nvar sound = require('./sound');\n\nvar drawCanvas = document.getElementById(config.canvasId);\nvar canvasRecorder = RecordRTC(drawCanvas, {\n  type: 'canvas'\n});\n\nfunction record() {\n  var audioRecorder = new Recorder(Howler.masterGain, {\n    workerPath: '/js/lib/recorderWorker.js'\n  });\n\n  canvasRecorder.startRecording();\n  audioRecorder.record();\n\n  sound.asyncPlayCompositionOnce().then(function () {\n    audioRecorder.stop();\n    audioRecorder.exportWAV(function (blob) {\n      download(blob, 'blob.wav');\n    });\n    canvasRecorder.stopRecording(function () {\n      var blob = canvasRecorder.getBlob();\n      download(blob, 'blob.webm');\n    });\n  }).error(function (e) {\n    audioRecorder.stop();\n    audioRecorder.exportWAV(function (blob) {\n      download(blob, 'blob.wav');\n    });\n    canvasRecorder.stopRecording(function () {\n      var blob = canvasRecorder.getBlob();\n      download(blob, 'blob.webm');\n    });\n  });\n}\n\n},{\"./../../config\":1,\"./sound\":12,\"./ui\":16}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.init = init;\nexports.reinitShapeSounds = reinitShapeSounds;\nexports.getShapeSoundObj = getShapeSoundObj;\nexports.startPlaying = startPlaying;\nexports.stopPlaying = stopPlaying;\nexports.asyncInitShapeSounds = asyncInitShapeSounds;\nexports.formatShapeSoundData = formatShapeSoundData;\nexports.quantizeLength = quantizeLength;\nexports.quantizePosition = quantizePosition;\nexports.removeShapeFromComposition = removeShapeFromComposition;\nexports.clearSoundTimeouts = clearSoundTimeouts;\nexports.startComposition = startComposition;\nexports.asyncPlayCompositionMultipleTimes = asyncPlayCompositionMultipleTimes;\nexports.asyncPlayCompositionOnce = asyncPlayCompositionOnce;\nexports.stopComposition = stopComposition;\nexports.getTrimmedCompositionObj = getTrimmedCompositionObj;\nrequire('howler');\nvar Promise = require(\"bluebird\");\n\nvar ui = require('./ui');\nvar shape = require('./shape');\nvar color = require('./color');\nvar overlays = require('./overlays');\nvar tutorial = require('./tutorial');\nvar util = require('./util');\n\nvar $body = $('body');\n\nvar measures = 4;\nvar bpm = 120;\nvar beatLength = 60 / bpm * 1000; // ms\nvar measureLength = beatLength * 4;\nvar compositionLength = exports.compositionLength = measureLength * measures;\n\nvar playingClass = exports.playingClass = 'playing';\nvar playEnabledClass = exports.playEnabledClass = 'play-enabled';\n\nfunction init() {\n  return asyncInitShapeSounds();\n}\n\nfunction reinitShapeSounds() {\n  return asyncInitShapeSounds();\n}\n\nfunction getShapeSoundObj(path) {\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var shapeSounds = window.kan.shapeSounds || initShapeSounds();\n  // alert(JSON.stringify(window.kan.shapeSounds));\n  // console.log(JSON.stringify(window.kan.shapeSounds));\n\n  var shapePrediction = shape.getShapePrediction(path);\n  var colorName = color.getPathColorName(path);\n  if (colorName === null) colorName = 'black'; // just in case\n\n  var quantizedSoundStartTime = quantizeLength(path.bounds.x / viewWidth * compositionLength); // ms\n  var quantizedSoundDuration = quantizeLength(path.bounds.width / viewWidth * compositionLength); // ms\n\n  var soundObj = {};\n  soundObj.sound = shapeSounds[shapePrediction.pattern];\n  soundObj.startTime = quantizedSoundStartTime;\n  soundObj.duration = quantizedSoundDuration;\n  soundObj.pathId = path.id;\n  soundObj.spriteName = colorName;\n  soundObj.groupId = path.parent.id;\n  soundObj.play = function () {\n    return new Promise(function (resolve, reject) {\n      soundObj.sound.play(soundObj.spriteName);\n      soundObj.sound.on('end', function () {\n        resolve('Group ' + soundObj.groupId + ' done playing sound');\n      });\n      soundObj.sound.on('loaderror', function () {\n        reject('Group ' + soundObj.groupId + ' failed to load sound');\n      });\n    });\n  };\n\n  return soundObj;\n}\n\nfunction startPlaying() {\n  // console.log('first time', window.kan.firstTimePlaying);\n  if ($body.hasClass(playEnabledClass)) {\n    $body.addClass(playingClass);\n\n    Howler.mute(false);\n\n    window.kan.playing = true;\n\n    if (window.kan.firstTimePlaying === true) {\n      window.kan.firstTimePlaying = false;\n      startComposition(window.kan.composition, false);\n    } else {\n      startComposition(window.kan.composition, true);\n    }\n  } else {\n    window.kan.playing = false;\n    $body.removeClass(playingClass);\n  }\n}\n\nfunction stopPlaying() {\n  var mute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (!!mute) {\n    Howler.mute(true);\n  }\n\n  window.kan.playing = false;\n  $body.removeClass(playingClass);\n\n  stopComposition();\n}\n\nfunction asyncGetShapeSoundFromShapeName(shapeName) {\n  var shapeSoundJSONPath = './audio/shapes/' + shapeName + '/' + shapeName + '.json';\n  return $.getJSON(shapeSoundJSONPath).then(function (resp) {\n    var shapeSoundData = formatShapeSoundData(shapeName, resp);\n    var sound = new Howl(shapeSoundData);\n    return {\n      shapeName: shapeName,\n      sound: sound\n    };\n  });\n}\n\nfunction asyncInitShapeSounds() {\n  var returnSounds = {};\n  var extensions = ['ogg', 'm4a', 'mp3', 'ac3'];\n\n  var shapeNames = shape.shapeNames;\n  var promises = [];\n  Base.each(shapeNames, function (shapeName) {\n    promises.push(asyncGetShapeSoundFromShapeName(shapeName));\n  });\n\n  return $.when.apply($, promises).done(function () {\n    var returnSounds = {};\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      returnSounds[arg.shapeName] = arg.sound;\n    }\n\n    window.kan.shapeSounds = returnSounds;\n    return returnSounds;\n  });\n}\n\nfunction formatShapeSoundData(shapeName, data) {\n  var returnData = {};\n\n  returnData.src = data.urls.map(function (url) {\n    return './audio/shapes/' + shapeName + '/' + url;\n  });\n  returnData.sprite = data.sprite;\n  returnData.html5 = false;\n  returnData.loop = false;\n\n  return returnData;\n}\n\nfunction quantizeLength(duration) {\n  var smallestDuration = 60 / bpm;\n  var returnDuration = Math.floor(duration / smallestDuration) * smallestDuration;\n\n  if (returnDuration > 0) {\n    return returnDuration;\n  } else {\n    // always return something greater than zero\n    return smallestDuration;\n  }\n}\n\nfunction quantizePosition(position, viewWidth) {\n  var smallestInterval = viewWidth / (4 * measures);\n  return returnPosition = Math.floor(position / smallestInterval) * smallestInterval;\n}\n\nfunction asyncPlayShape(shape) {\n  return new Promise(function (resolve, reject) {\n    Promise.all([asyncPlayShapeSound(shape), asyncPlayShapeAnimation(shape)]).then(function () {\n      resolve('Group ' + shape.groupId + ' fully done playing');\n    }).error(function (e) {\n      reject('Group ' + shape.groupId + ' errored while playing: ' + e);\n    });\n  });\n}\n\nfunction asyncPlayShapeSound(shape) {\n  return new Promise(function (resolve, reject) {\n    try {\n      // console.log('playing: ', shape.sound, shape.spriteName, shape.startTime);\n      shape.play().then(function (res) {\n        resolve(res);\n      }).catch(function (e) {\n        reject(e);\n      });\n    } catch (e) {\n      reject('Error playing shape sound: ' + e);\n    }\n  });\n}\n\nfunction asyncPlayShapeAnimation(shape) {\n  return new Promise(function (resolve, reject) {\n    var item = paper.project.getItem({\n      className: 'Path',\n      match: function match(el) {\n        return el.id === shape.pathId;\n      }\n    });\n    if (!!item) {\n      (function () {\n        var group = item.parent;\n        group.data.animating = true;\n        var totalDuration = measureLength / 2;\n        group.animate([{\n          properties: {\n            scale: 1,\n            rotate: -5\n          },\n          settings: {\n            duration: totalDuration / 4,\n            easing: \"easeInOut\"\n          }\n        }, {\n          properties: {\n            scale: 1.15,\n            rotate: 5\n          },\n          settings: {\n            duration: totalDuration / 2,\n            easing: \"easeInOut\"\n          }\n        }, {\n          properties: {\n            scale: 1,\n            rotate: 0\n          },\n          settings: {\n            duration: totalDuration / 4,\n            easing: \"easeInOut\",\n            complete: function complete() {\n              this.data.animating = false;\n              resolve('Group ' + group.id + ' done animating');\n              // console.log('animation step 3')\n            }\n          }\n        }]);\n      })();\n    } else {\n      reject('Item not specified. Could not animate');\n    }\n  });\n}\n\nfunction removeShapeFromComposition(shapeGroup) {\n  var _loop = function _loop(i) {\n    var sound = window.kan.composition[i];\n\n    if ('groupId' in sound) {\n      if (sound.groupId === shapeGroup.id) {\n        window.kan.composition.splice(i, 1);\n        return {\n          v: void 0\n        };\n      }\n    } else if ('pathId' in sound) {\n      var item = getItems({\n        match: function match(el) {\n          return el.id === sound.pathId;\n        }\n      });\n      if (item.length > 0) {\n        if (!!item.parent && item.parent.className === 'Group' && item.parent.id === shapeGroup.id) {\n          window.kan.composition.splice(i, 1);\n          return {\n            v: void 0\n          };\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < window.kan.composition.length; i++) {\n    var _ret2 = _loop(i);\n\n    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n  }\n}\n\nfunction clearSoundTimeouts() {\n  if (window.kan.soundTimeouts.length > 0) {\n    window.kan.soundTimeouts.forEach(function (soundTimeout) {\n      clearTimeout(soundTimeout);\n    });\n  }\n\n  window.kan.soundTimeouts = [];\n}\n\nfunction startComposition(composition) {\n  var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  stopComposition();\n  tutorial.hideContextualTuts();\n\n  clearTimeout(window.kan.playPromptTimeout);\n\n  var iterations = 0;\n  playCompositionFirstTime();\n\n  function playCompositionFirstTime() {\n    clearSoundTimeouts();\n    // console.log('playing composition first time');\n    var trimmedCompositionObj = getTrimmedCompositionObj(composition);\n\n    Base.each(trimmedCompositionObj.composition, function (shape, i) {\n      var soundTimeout = setTimeout(function () {\n        if (!window.kan.playing) {\n          // console.log('not playing, returning');\n          return;\n        }\n\n        if (shape.spriteName === null) {\n          // console.log('%cshape is null', 'color:red', shape);\n          return;\n        }\n\n        asyncPlayShape(shape).then(function (res) {\n          console.log(res);\n        }).error(function (e) {\n          console.log('Error playing shape', e);\n        });\n      }, shape.startTime);\n      window.kan.soundTimeouts.push(soundTimeout);\n    });\n\n    iterations++;\n    window.kan.compositionTimeout = setTimeout(repeatComposition, compositionLength - trimmedCompositionObj.startTime);\n  }\n\n  function playCompositionOnce() {\n    clearSoundTimeouts();\n    // console.log('repeat');\n    Base.each(composition, function (shape, i) {\n      var soundTimeout = setTimeout(function () {\n        if (!window.kan.playing) {\n          // console.log('not playing, returing');\n          return;\n        }\n\n        // console.log('playing: ', shape.sound, shape.spriteName, shape.startTime);\n        asyncPlayShape(shape).then(function (res) {\n          console.log(res);\n        }).error(function (e) {\n          console.log('Error playing shape', e);\n        });\n      }, shape.startTime);\n      window.kan.soundTimeouts.push(soundTimeout);\n    });\n    iterations++;\n  }\n\n  function repeatComposition() {\n    if (loop === true) {\n      playCompositionOnce();\n      window.kan.compositionInterval = setInterval(playCompositionOnce, compositionLength);\n    } else {\n      if (iterations < 2) {\n        playCompositionOnce();\n        setTimeout(repeatComposition, compositionLength);\n      } else {\n        stopPlaying();\n        overlays.openOverlay('share-prompt');\n      }\n    }\n  }\n}\n\nfunction asyncPlayCompositionMultipleTimes() {\n  var repeats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n  return new Promise(function (resolve, reject) {\n    var promisedRepeats = [];\n\n    for (var i = 0; i < repeats; i++) {\n      promisedRepeats.push(asyncPlayCompositionOnce());\n    }\n\n    Promise.each(promisedRepeats, function () {\n      console.log('repeat');\n    }).then(function () {\n      resolve('Repeats done');\n    }).error(function (e) {\n      reject(e);\n    });\n  });\n}\n\nfunction asyncPlayCompositionOnce() {\n  return new Promise(function (resolve, reject) {\n    var composition = window.kan.composition;\n    var startTime = new Date().getTime();\n    clearSoundTimeouts();\n\n    var shapePromises = [];\n\n    shape.startKeepaliveAnimation();\n\n    Base.each(composition, function (shape, i) {\n      shapePromises.push(asyncPlayShapeWithDelay(shape));\n    });\n\n    Promise.all(shapePromises).then(function (res) {\n      var endTime = new Date().getTime();\n      var playTime = endTime - startTime;\n\n      // wait for composition to be fully done before repeating (play is naturally truncated when the last shape finishes playing)\n      if (playTime < compositionLength) {\n        return Promise.delay(compositionLength - playTime).then(function () {\n          shape.stopKeepaliveAnimation();\n          resolve('Composition fully done, after a wait');\n        });\n      } else {\n        shape.stopKeepaliveAnimation();\n        resolve('Composition fully done, with no wait');\n      }\n    }).error(function (e) {\n      shape.stopKeepaliveAnimation();\n      reject(e);\n    });\n  });\n}\n\nfunction asyncPlayShapeWithDelay(shape) {\n  return new Promise(function (resolve, reject) {\n    var soundTimeout = setTimeout(function () {\n      // console.log('playing: ', shape.sound, shape.spriteName, shape.startTime);\n      asyncPlayShape(shape).then(function (res) {\n        resolve(res);\n      }).error(function (e) {\n        reject('Error playing shape with delay: ' + e);\n      });\n    }, shape.startTime);\n    window.kan.soundTimeouts.push(soundTimeout);\n  });\n}\n\nfunction stopComposition() {\n  clearInterval(window.kan.compositionInterval);\n  clearTimeout(window.kan.compositionTimeout);\n  clearSoundTimeouts();\n}\n\nfunction getTrimmedCompositionObj(composition) {\n  var firstTime = 0;\n  var trimmedComposition = [];\n  var startTime = getCompositionStartTime(composition);\n\n  composition.forEach(function (sound) {\n    var modifiedSound = util.shallowCopy(sound);\n    modifiedSound.startTime = sound.startTime - startTime;\n    if (modifiedSound.startTime < 0) modifiedSound.startTime = 0; // this shouldn't happen\n    trimmedComposition.push(modifiedSound);\n  });\n\n  return {\n    composition: trimmedComposition,\n    startTime: startTime\n  };\n}\n\nfunction getCompositionStartTime(composition) {\n  var startTime = compositionLength;\n\n  composition.forEach(function (sound) {\n    // console.log(sound);\n    // console.log(sound.startTime)\n    if ('startTime' in sound && sound.startTime < startTime) {\n      startTime = sound.startTime;\n    }\n  });\n\n  // console.log('start time', startTime);\n\n  if (startTime !== compositionLength) {\n    return startTime;\n  } else {\n    return 0;\n  }\n}\n\n},{\"./color\":6,\"./overlays\":9,\"./shape\":10,\"./tutorial\":15,\"./ui\":16,\"./util\":17,\"bluebird\":2,\"howler\":4}],13:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nexports.preventInactivityTimeout = preventInactivityTimeout;\nvar overlays = require('./overlays');\nvar video = require('./video');\nvar util = require('./util');\n\nvar $body = $('body');\n\nvar drawInactivityDelay = exports.drawInactivityDelay = 40 * 1000; // ms\nvar continueInactivityDelay = exports.continueInactivityDelay = 30 * 1000; // ms\nvar playPromptDelay = exports.playPromptDelay = 60 * 1000; // ms;\nvar inputDelay = exports.inputDelay = 100; // ms\nvar refreshCheckDelay = exports.refreshCheckDelay = 60 * 1000; // ms\nvar overlayDelay = exports.overlayDelay = 1000; // ms\n\nfunction init() {\n  if (window.location.hash.length > 0 && window.location.hash == '#dev') {\n    window.kan.overlays = false;\n    video.pauseVideo();\n    video.exitTutorialMode();\n  } else {\n    video.enterTutorialMode();\n  }\n}\n\nfunction preventInactivityTimeout() {\n  console.log('prevent timeout: ' + util.getTime());\n  // overlays.closeAndResetOverlays();\n\n  clearTimeout(window.kan.inactivityTimeout);\n  clearInterval(window.kan.continueCountdownInterval);\n\n  window.kan.inactivityTimeout = setTimeout(function () {\n    overlays.openOverlay('continue');\n  }, drawInactivityDelay);\n}\n\n},{\"./overlays\":9,\"./util\":17,\"./video\":18}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nrequire('hammerjs');\n\nvar config = require('./../../config');\nvar sound = require('./sound');\nvar color = require('./color');\nvar shape = require('./shape');\nvar util = require('./util');\nvar tutorial = require('./tutorial');\nvar timing = require('./timing');\nvar overlays = require('./overlays');\nvar ui = require('./ui');\n\nvar $body = $('body');\n\nvar hitOptions = {\n  segments: false,\n  stroke: true,\n  fill: true,\n  tolerance: 5\n};\n\nvar minShapeSize = 100;\nvar maxShapeLength = 5000;\nvar maxScaleFactor = 0.8;\n\nvar outerPath = void 0;\nvar sizes = [];\nvar size = void 0;\nvar cumSize = void 0;\nvar prevPoint = void 0;\n\nvar hammerTips = exports.hammerTips = void 0;\nvar hammerCanvas = exports.hammerCanvas = void 0;\n\nfunction init() {\n  exports.hammerTips = hammerTips = new Hammer.Manager(ui.tipsOverlay);\n  hammerTips.add(new Hammer.Swipe({ direction: Hammer.DIRECTION_ALL }));\n  hammerTips.on('swipe', overlays.cardNavNext);\n\n  exports.hammerCanvas = hammerCanvas = new Hammer.Manager(ui.drawCanvas);\n  hammerCanvas.add(new Hammer.Tap({ event: 'doubletap', taps: 2, interval: 400, time: 150, posThreshold: 50 }));\n  hammerCanvas.add(new Hammer.Tap({ event: 'singletap' }));\n  hammerCanvas.add(new Hammer.Pan({ direction: Hammer.DIRECTION_ALL }));\n  hammerCanvas.add(new Hammer.Pinch());\n\n  hammerCanvas.get('doubletap').recognizeWith('singletap');\n  // hammerCanvas.get('singletap').requireFailure('doubletap');\n  hammerCanvas.get('pan').requireFailure('pinch');\n  hammerCanvas.get('pinch').requireFailure('pan');\n\n  // hammerCanvas.on('singletap', singleTap);\n  hammerCanvas.on('doubletap', doubleTap);\n\n  hammerCanvas.on('panstart', panStart);\n  hammerCanvas.on('panmove', panMove);\n  hammerCanvas.on('panend', panEnd);\n  // hammerCanvas.on('pancancel', panCancel);\n\n  hammerCanvas.on('pinchstart', pinchStart);\n  hammerCanvas.on('pinchmove', pinchMove);\n  hammerCanvas.on('pinchend', pinchEnd);\n  // hammerCanvas.on('pinchcancel', pinchCancel);\n}\n\nfunction enablePanAndPinchEvents() {\n  enablePanEvents();\n  enablePinchEvents();\n}\n\nfunction enableTapEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n  hammerCanvas.get('singletap').set({ enable: enable });\n  hammerCanvas.get('doubletap').set({ enable: enable });\n}\n\nfunction disableTapEvents() {\n  enableTapEvents(false);\n}\n\nfunction enablePanEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n\n  hammerCanvas.get('pan').set({ enable: enable });\n  // hammerCanvas.get('panstart').set({enable: enable});\n  // hammerCanvas.get('panmove').set({enable: enable});\n  // hammerCanvas.get('panend').set({enable: enable});\n}\n\nfunction disablePanEvents() {\n  enablePanEvents(false);\n}\n\nfunction enablePinchEvents() {\n  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  enable = enable === true;\n\n  hammerCanvas.get('pinch').set({ enable: enable });\n  // hammerCanvas.get('pinchstart').set({enable: enable});\n  // hammerCanvas.get('pinchmove').set({enable: enable});\n  // hammerCanvas.get('pinchend').set({enable: enable});\n}\n\nfunction disablePinchEvents() {\n  enablePinchEvents(false);\n}\n\nfunction singleTap(event) {\n  // console.log(event.target);\n  // event.preventDefault();\n  // if (!eventTargetIsOnCanvas(event)) return;\n  tutorial.hideContextualTuts();\n  // $(event.target).click();\n\n  // sound.stopPlaying();\n  // if (!eventTargetIsOnCanvas(event)) return;\n  // console.log(event);\n  // tutorial.hideContextualTuts();\n  //\n  // sound.stopPlaying();\n  //\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = paper.project.hitTest(point, hitOptions);\n\n  if (hitResult) {\n    var item = hitResult.item;\n    // item.selected = !item.selected;\n    console.log(item);\n  }\n}\n\nfunction doubleTap(event) {\n  event.preventDefault();\n  // console.log('doubletap');\n\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = paper.project.hitTest(point, hitOptions);\n\n  if (!eventTargetIsOnCanvas(event)) return;\n\n  if (hitResult) {\n    shape.toggleFill(hitResult.item);\n    tutorial.hideContextualTutByName('fill');\n  } else {\n    window.kan.pinchedGroup = null;\n    // console.log('hit no item');\n  }\n}\n\nfunction panStart(event) {\n  // console.log(event);\n  // console.log('panstart');\n  // paper.project.activeLayer.removeChildren(); // REMOVE\n  // event.preventDefault();\n  timing.preventInactivityTimeout();\n\n  if (!eventTargetIsOnCanvas(event)) {\n    window.kan.panning = false;\n    // check if tips modal is up\n    if ($body.hasClass('overlay-active tips-active')) {\n      // if so, go to next tip card\n      overlays.cardNavNext();\n    }\n    event.srcEvent.stopPropagation();\n    return;\n  }\n\n  window.kan.panning = true;\n  tutorial.hideContextualTuts();\n\n  hammerCanvas.off('panstart');\n  // hammerCanvas.get('pan').set({enable: false});\n  disablePinchEvents();\n  disableTapEvents();\n\n  // ignore other touch inputs\n  // if (window.kan.pinching) return;\n  // if (!(event.changedPointers && event.changedPointers.length > 0)) return;\n  // if (event.changedPointers.length > 1) {\n  //   console.log('event.changedPointers > 1');\n  // }\n\n  sound.stopPlaying();\n\n  window.kan.prevAngle = Math.atan2(event.velocityY, event.velocityX);\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n\n  outerPath = new Path();\n  outerPath.fillColor = window.kan.currentColor;\n  // outerPath.fillColor = new Color(0, 0.5);\n\n  sizes = [];\n\n  var shapePath = new Path({\n    strokeColor: window.kan.currentColor,\n    name: 'shapePath',\n    strokeWidth: 5,\n    visible: false,\n    strokeCap: 'round'\n  });\n\n  shapePath.add(point);\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    first: true\n  };\n\n  window.kan.shapePath = shapePath;\n}\n\nfunction panMove(event) {\n  // console.log('panmove');\n  // event.preventDefault();\n  if (!eventTargetIsOnCanvas(event)) {\n    event.srcEvent.stopPropagation();\n    return;\n  }\n  if (window.kan.panning !== true) return;\n\n  // don't let the user draw past the max length\n  if (window.kan.shapePath.length <= maxShapeLength) {\n    var pointer = event.center;\n    var point = new Point(pointer.x, pointer.y);\n\n    var angle = Math.atan2(event.velocityY, event.velocityX);\n    var prevAngle = window.kan.prevAngle;\n    var angleDelta = util.angleDelta(angle, prevAngle);\n    window.kan.prevAngle = angle;\n\n    while (sizes.length > 10) {\n      sizes.shift();\n    }\n    if (sizes.length > 0) {\n      var dist = prevPoint.getDistance(point);\n\n      // These are based on acceleration\n      size = Math.random() * 10; // This is just random variance\n\n      cumSize = 0;\n      for (var j = 0; j < sizes.length; j++) {\n        cumSize += sizes[j];\n      }\n      // const avgSize = ((cumSize / sizes.length) + size) / 2;\n      var avgSize = Math.max(5, (cumSize / sizes.length + size) / 2);\n\n      var halfPointX = (point.x + prevPoint.x) / 2;\n      var halfPointY = (point.y + prevPoint.y) / 2;\n      var halfPoint = new Point(halfPointX, halfPointY);\n\n      var topX = halfPoint.x + Math.cos(angle - Math.PI / 2) * avgSize;\n      var topY = halfPoint.y + Math.sin(angle - Math.PI / 2) * avgSize;\n      var top = new Point(topX, topY);\n\n      var bottomX = halfPoint.x + Math.cos(angle + Math.PI / 2) * avgSize;\n      var bottomY = halfPoint.y + Math.sin(angle + Math.PI / 2) * avgSize;\n      var bottom = new Point(bottomX, bottomY);\n\n      outerPath.add(top);\n      outerPath.insert(0, bottom);\n      outerPath.smooth();\n    } else {\n      size = 5;\n    }\n\n    sizes.push(size);\n    prevPoint = point;\n\n    window.kan.pathData[shape.stringifyPoint(point)] = {\n      point: point,\n      speed: Math.abs(event.overallVelocity),\n      angle: angle\n    };\n\n    window.kan.shapePath.add(point);\n  } else {\n    window.kan.shapePath.data.tooLong = true;\n  }\n\n  paper.view.draw();\n}\n\nfunction panEnd(event) {\n  // console.log('panend');\n  // event.preventDefault();\n  if (!eventTargetIsOnCanvas(event)) {\n    event.srcEvent.stopPropagation();\n    return;\n  }\n  if (window.kan.panning !== true) return;\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n\n  var transparent = color.transparent;\n  var colorName = color.getColorName(window.kan.currentColor);\n\n  var move = { type: 'newGroup' };\n\n  var shapePath = window.kan.shapePath;\n\n  if (shapePath.length <= maxShapeLength) {\n    shapePath.add(point);\n  }\n  outerPath.visible = false;\n\n  if (shapePath.length < minShapeSize || shapePath.data && shapePath.data.tooLong === true) {\n    // console.log('path is too short');\n    shapePath.remove();\n    hammerCanvas.on('panstart', panStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n    window.kan.panning = false;\n    return;\n  }\n\n  var visibleGroups = util.getVisibleGroups();\n  if (visibleGroups.length >= config.maxShapes) {\n    // too many shapes on canvas, remove first shape\n    // TODO: place on moves stack so that they can be restored with an undo\n    var firstGroup = visibleGroups[0];\n    shape.destroyGroupPops(firstGroup);\n    sound.removeShapeFromComposition(firstGroup);\n    move.removedGroup = firstGroup;\n    // firstGroup.remove();\n    firstGroup.visible = false;\n  }\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    last: true\n  };\n\n  var group = new Group();\n\n  var truedShape = shape.getTruedShape(shapePath);\n\n  // group.data.color = truedShape.strokeColor;\n  // console.log('currentGradient:', config.palette.gradients[window.kan.currentColor]);\n\n  var shapeSize = truedShape.strokeBounds;\n  var centerPoint = new Point(shapeSize.width / 2, shapeSize.height / 2);\n  var angle = util.rad(Math.random() * 360);\n  var gradientSize = (shapeSize.width + shapeSize.height) / 4;\n  var originX = centerPoint.x + Math.cos(angle - Math.PI / 2) * gradientSize;\n  var originY = centerPoint.y + Math.sin(angle - Math.PI / 2) * gradientSize;\n  var destinationX = centerPoint.x + Math.cos(angle + Math.PI / 2) * gradientSize;\n  var destinationY = centerPoint.y + Math.sin(angle + Math.PI / 2) * gradientSize;\n\n  var origin = new Point(originX + shapeSize.x, originY + shapeSize.y);\n  var destination = new Point(destinationX + shapeSize.x, destinationY + shapeSize.y);\n  // group.addChild(new Path.Circle({\n  //   center: origin,\n  //   radius: 5,\n  //   fillColor: 'red',\n  // }));\n  // group.addChild(new Path.Circle({\n  //   center: destination,\n  //   radius: 5,\n  //   fillColor: 'green',\n  // }));\n  group.data.originalColor = window.kan.currentColor;\n  group.data.color = {\n    gradient: {\n      stops: config.palette.gradients[window.kan.currentColor]\n    },\n    origin: origin,\n    destination: destination\n  };\n  group.data.scale = 1; // init variable to track scale changes\n  group.data.rotation = 0; // init variable to track rotation changes\n  group.data.fresh = true;\n\n  shapePath.remove();\n  truedShape.visible = false;\n  truedShape.strokeColor = new Color(0, 0);\n  window.kan.shapePath = truedShape;\n  truedShape.name = 'shapePath';\n\n  if (!(truedShape.length > 0)) {\n    truedShape.remove();\n    group.remove();\n    window.kan.panning = false;\n    return;\n  }\n\n  group.addChild(truedShape);\n\n  var shapeSoundObj = sound.getShapeSoundObj(truedShape);\n  window.kan.composition.push(shapeSoundObj);\n\n  truedShape.visible = false;\n  var outlineGroup = shape.getOutlineGroup(truedShape);\n  var outline = outlineGroup._namedChildren.outer[0].clone();\n  outline.name = 'outer';\n  outline.fillColor = window.kan.currentColor;\n  outline.fillColor = group.data.color;\n\n  var outlineCenter = outlineGroup._namedChildren.middle[0].clone();\n  outlineCenter.strokeColor = group.data.color;\n  outlineCenter.visible = false;\n  group.addChild(outline);\n  outline.sendToBack();\n\n  outlineGroup.remove();\n\n  var shapeMask = outline.clone();\n  shapeMask.fillColor = outline.fillColor;\n  shapeMask.strokeColor = outline.strokeColor;\n  shapeMask.closed = true;\n\n  var enclosedLoops = shape.findInteriorCurves(outlineCenter);\n  if (enclosedLoops.length > 0 || truedShape.closed === true) {\n    group.data.line = false;\n  } else {\n    group.data.line = true;\n  }\n\n  enclosedLoops.forEach(function (loop) {\n    shapeMask.unite(loop);\n    shapeMask.sendToBack();\n    loop.name = 'loop';\n    loop.data.loop = true;\n    loop.visible = true;\n    group.addChild(loop);\n  });\n\n  shapeMask.unite();\n  var crossings = shapeMask.resolveCrossings();\n  if (!!crossings && !!crossings.children && crossings.children.length > 0) {\n    (function () {\n      var maxArea = 0,\n          maxChild = null;\n      crossings.children.forEach(function (child) {\n        if (child.area > maxArea) {\n          maxChild = child;\n          maxArea = child.area;\n        }\n      });\n\n      shapeMask = maxChild;\n    })();\n  }\n\n  outlineCenter.remove();\n  shapeMask.visible = false;\n  shapeMask.name = 'mask';\n  shapeMask.data.mask = true;\n  group.addChild(shapeMask);\n  shapeMask.sendToBack();\n\n  shape.cleanUpGroup(group);\n\n  move.id = group.id;\n  window.kan.moves.push(move);\n\n  ui.unditherButtonsByName(['new', 'undo', 'play-stop', 'share']);\n  $body.addClass(sound.playEnabledClass);\n\n  if (window.kan.userHasDrawnFirstShape !== true) {\n    // first shape!\n    // set play prompt timeout\n    window.kan.playPromptTimeout = setTimeout(function () {\n      overlays.openOverlay('play-prompt');\n    }, timing.playPromptDelay);\n\n    window.kan.userHasDrawnFirstShape = true;\n  }\n\n  if (config.runAnimations) {\n    var scaleFactor = 0.9;\n    group.animate([{\n      properties: {\n        scale: scaleFactor\n      },\n      settings: {\n        duration: 100,\n        easing: \"easeOut\"\n      }\n    }, {\n      properties: {\n        scale: 1 / scaleFactor\n      },\n      settings: {\n        duration: 100,\n        easing: \"easeIn\"\n      }\n    }]);\n  }\n\n  if (!tutorial.allTutsCompleted()) {\n    var tutorialCompletion = window.kan.tutorialCompletion;\n    var tutName = null;\n\n    if (!tutorialCompletion['fill'] && truedShape.closed) {\n      tutName = 'fill';\n    } else {\n      var groups = paper.project.getItems({\n        match: function match(el) {\n          return el.className === 'Group';\n        }\n      });\n      if (!tutorialCompletion['pinch'] && groups.length >= 3) {\n        tutName = 'pinch';\n      } else if (!tutorialCompletion['swipe'] && groups.length >= 5) {\n        tutName = 'swipe';\n      }\n    }\n\n    if (tutName !== null) {\n      // console.log(`${tutName} tutorial`);\n      tutorial.addContextualTut(tutName);\n      window.kan.tutorialCompletion[tutName] = true;\n      group.data.tut = tutName;\n    }\n  }\n\n  if (window.kan.scheduledOverlay !== null) {\n    (function () {\n      var scheduledOverlay = window.kan.scheduledOverlay;\n      window.kan.scheduledOverlay = null;\n      setTimeout(function () {\n        overlays.openOverlay(scheduledOverlay);\n      }, timing.overlayDelay);\n    })();\n  }\n\n  shapeSoundObj.play();\n\n  // console.log('pan done');\n  hammerCanvas.set({ enable: false });\n  setTimeout(function () {\n    hammerCanvas.set({ enable: true });\n    console.log('touch enabled');\n    hammerCanvas.on('panstart', panStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n\n    window.kan.panning = false;\n  }, timing.inputDelay);\n\n  if (config.pop === true) {\n    shape.updatePops();\n  }\n}\n\nfunction panCancel(event) {\n  console.log('pancancel');\n  event.srcEvent.stopPropagation();\n  // event.preventDefault();\n\n  hammerCanvas.set({ enable: true });\n  hammerCanvas.on('panstart', panStart);\n  enablePanAndPinchEvents();\n  enableTapEvents();\n  window.kan.panning = false;\n}\n\nfunction pinchStart(event) {\n  // console.log('pinchstart');\n  timing.preventInactivityTimeout();\n  tutorial.hideContextualTuts();\n  window.kan.interacting = true;\n  window.kan.pinching = true;\n  // event.preventDefault();\n\n  // hammerCanvas.get('pinchstart').set({enable: false});\n  hammerCanvas.off('pinchstart');\n  disablePanEvents();\n  disableTapEvents();\n\n  if (!eventTargetIsOnCanvas(event)) return;\n\n  sound.stopPlaying();\n\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = shape.hitTestGroupBounds(point);\n\n  if (hitResult) {\n    window.kan.pinching = true;\n    window.kan.pinchedGroup = hitResult;\n    window.kan.lastScale = 1;\n    window.kan.lastRotation = event.rotation;\n\n    window.kan.originalPosition = hitResult.position;\n    window.kan.originalRotation = hitResult.data.rotation;\n    window.kan.originalScale = hitResult.data.scale;\n    hitResult.data.thrown = false;\n\n    if (config.pop === true) {\n      shape.destroyGroupPops(hitResult);\n    }\n\n    hitResult.bringToFront();\n\n    if (hitResult.data.tut && hitResult.data.tut.length > 0) {\n      var $tut = $('.tut[data-tut-type=\\'' + hitResult.data.tut + '\\']');\n      if ($tut) {\n        window.kan.pinchedTut = $tut;\n      } else {\n        window.kan.pinchedTut = null;\n      }\n    } else {\n      window.kan.pinchedTut = null;\n    }\n\n    // if (config.runAnimations) {\n    //   hitResult.animate({\n    //     properties: {\n    //       scale: 1.25\n    //     },\n    //     settings: {\n    //       duration: 100,\n    //       easing: \"easeOut\",\n    //     }\n    //   });\n    // }\n  } else {\n    window.kan.pinchedGroup = null;\n    window.kan.pinchedTut = null;\n    // console.log('hit no item');\n  }\n}\n\nfunction pinchMove(event) {\n  // console.log('pinchMove');\n  // event.preventDefault();\n\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var pinchedGroup = window.kan.pinchedGroup;\n  var $pinchedTut = window.kan.pinchedTut;\n\n  if (!!pinchedGroup) {\n    var currentScale = event.scale;\n    var scaleDelta = void 0;\n\n    tutorial.hideContextualTutByName('pinch');\n\n    if (pinchedGroup.bounds.width < minShapeSize || pinchedGroup.bounds.height < minShapeSize) {\n      // only allow a shape to scale down if it is larger than the minimum size\n      scaleDelta = 1.1;\n    } else if (pinchedGroup.bounds.width >= paper.view.viewSize.width || pinchedGroup.bounds.height >= paper.view.viewSize.height) {\n      // only allow shape to scale up if it fits in the viewport\n      scaleDelta = 0.9;\n    } else {\n      scaleDelta = currentScale / window.kan.lastScale;\n    }\n\n    window.kan.lastScale = currentScale;\n\n    var currentRotation = event.rotation;\n    var rotationDelta = currentRotation - window.kan.lastRotation;\n    window.kan.lastRotation = currentRotation;\n\n    // console.log(`scaling by ${scaleDelta}`);\n    // console.log(`rotating by ${rotationDelta}`);\n\n    var centerPoint = event.center;\n    pinchedGroup.position = centerPoint;\n    if (!!$pinchedTut) {\n      tutorial.moveContextualTut($pinchedTut, centerPoint);\n    }\n\n    if (scaleDelta !== 1) {\n      pinchedGroup.scale(scaleDelta);\n\n      // check if scaling went awry, cannot be too big or too small\n      // hypotenuse must fit within view bounds\n      var hypot = util.hypot(pinchedGroup.bounds.width, pinchedGroup.bounds.height);\n      var viewHypot = util.hypot(paper.view.viewSize.width, paper.view.viewSize.height);\n      if (hypot >= viewHypot) {\n        // shape is too big, bring it back down to size\n        scaleDelta = viewHypot * maxScaleFactor / hypot;\n        pinchedGroup.scale(scaleDelta);\n      } else if (hypot <= minShapeSize) {\n        scaleDelta = minShapeSize / hypot;\n        pinchedGroup.scale(scaleDelta);\n      }\n    }\n    pinchedGroup.rotate(rotationDelta);\n\n    pinchedGroup.data.scale *= scaleDelta;\n    pinchedGroup.data.rotation += rotationDelta;\n  }\n}\n\nfunction pinchEnd(event) {\n  // event.preventDefault();\n\n  window.kan.lastEvent = event;\n  var pinchedGroup = window.kan.pinchedGroup;\n  var $pinchedTut = window.kan.pinchedTut;\n  var originalPosition = window.kan.originalPosition;\n  var originalRotation = window.kan.originalRotation;\n  var originalScale = window.kan.originalScale;\n\n  if (!!pinchedGroup) {\n    pinchedGroup.data.fresh = true;\n    var move = {\n      id: pinchedGroup.id,\n      type: 'transform'\n    };\n    if (pinchedGroup.position != originalPosition) {\n      move.position = originalPosition;\n    }\n\n    if (pinchedGroup.data.rotation != originalRotation) {\n      move.rotation = originalRotation - pinchedGroup.data.rotation;\n    }\n\n    if (pinchedGroup.data.scale != originalScale) {\n      move.scale = originalScale / pinchedGroup.data.scale;\n    }\n\n    if (pinchedGroup.children.length > 0 && pinchedGroup._namedChildren.shapePath && pinchedGroup._namedChildren.shapePath.length > 0) {\n      // update shapePath sound object if possible\n      sound.removeShapeFromComposition(pinchedGroup); // sound is now wrong\n\n      var shapePath = pinchedGroup._namedChildren.shapePath[0];\n      var shapeSoundObj = sound.getShapeSoundObj(shapePath);\n      window.kan.composition.push(shapeSoundObj);\n    }\n\n    window.kan.moves.push(move);\n\n    if (Math.abs(event.velocity) > 1) {\n      tutorial.hideContextualTutByName('swipe');\n\n      // hide any connected tuts\n      if (!!$pinchedTut) {\n        tutorial.hideContextualTut($pinchedTut);\n      }\n      // dispose of group offscreen\n      if (config.pop === true) {\n        shape.destroyGroupPops(pinchedGroup);\n        pinchedGroup.data.fresh = false;\n      }\n\n      pinchedGroup.data.thrown = true;\n      throwPinchedGroup();\n    }\n\n    // if (config.runAnimations) {\n    //   pinchedGroup.animate({\n    //     properties: {\n    //       scale: 0.8\n    //     },\n    //     settings: {\n    //       duration: 100,\n    //       easing: \"easeOut\",\n    //     }\n    //   });\n    // }\n  } else {\n    window.kan.pinchedGroup = null;\n  }\n\n  // if an overlay was interrupted, open it up now\n  if (window.kan.scheduledOverlay !== null) {\n    (function () {\n      var scheduledOverlay = window.kan.scheduledOverlay;\n      window.kan.scheduledOverlay = null;\n      setTimeout(function () {\n        overlays.openOverlay(scheduledOverlay);\n      }, timing.overlayDelay);\n    })();\n  }\n\n  window.kan.pinching = false;\n\n  if (config.pop === true) {\n    shape.updatePops();\n  }\n\n  // console.log('pinch done');\n  // hammerCanvas.set({ enable: false });\n  setTimeout(function () {\n    console.log('touch enabled');\n    hammerCanvas.on('pinchstart', pinchStart);\n    enablePanAndPinchEvents();\n    enableTapEvents();\n    // hammerCanvas.set({ enable: true });\n    // hammerCanvas.on('pinchstart', pinchStart);\n    // enablePanAndPinchEvents();\n    // enableTapEvents();\n    // window.kan.pinching = false;\n    // window.kan.pinchedGroup = null;\n  }, timing.inputDelay);\n}\n\nfunction pinchCancel(event) {\n  // console.log(event);\n  event.srcEvent.stopPropagation();\n  console.log('pinchcancel');\n  // event.preventDefault();\n\n  hammerCanvas.set({ enable: true });\n  hammerCanvas.on('pinchstart', pinchStart);\n  enablePanAndPinchEvents();\n  enableTapEvents();\n\n  window.kan.pinching = false;\n}\n\nfunction throwPinchedGroup() {\n\n  var velocityMultiplier = 25;\n  var lastEvent = window.kan.lastEvent;\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var pinchedGroup = window.kan.pinchedGroup;\n\n  if (pinchedGroup === null || pinchedGroup.data && pinchedGroup.data.thrown === false) return;\n  if (pinchedGroup.position.x <= 0 - pinchedGroup.bounds.width || pinchedGroup.position.x >= viewWidth + pinchedGroup.bounds.width || pinchedGroup.position.y <= 0 - pinchedGroup.bounds.height || pinchedGroup.position.y >= viewHeight + pinchedGroup.bounds.height) {\n    pinchedGroup.data.offScreen = true;\n    pinchedGroup.visible = false;\n    sound.removeShapeFromComposition(pinchedGroup);\n    window.kan.pinchedGroup = null;\n    return;\n  }\n  requestAnimationFrame(throwPinchedGroup);\n  var newX = pinchedGroup.position.x + lastEvent.velocityX * velocityMultiplier;\n  var newY = pinchedGroup.position.y + lastEvent.velocityY * velocityMultiplier;\n  var newPos = new Point(newX, newY);\n  pinchedGroup.position = newPos;\n}\n\nfunction eventTargetIsOnCanvas(event) {\n  if (!event) return false;\n  if (event.target != ui.drawCanvas) return false;\n  return true;\n}\n\n},{\"./../../config\":1,\"./color\":6,\"./overlays\":9,\"./shape\":10,\"./sound\":12,\"./timing\":13,\"./tutorial\":15,\"./ui\":16,\"./util\":17,\"hammerjs\":3}],15:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTutByName = getTutByName;\nexports.allTutsCompleted = allTutsCompleted;\nexports.addContextualTut = addContextualTut;\nexports.hideContextualTut = hideContextualTut;\nexports.hideContextualTutByName = hideContextualTutByName;\nexports.hideContextualTuts = hideContextualTuts;\nexports.resetContextualTuts = resetContextualTuts;\nexports.moveContextualTut = moveContextualTut;\nexports.getTutPositionFromCenter = getTutPositionFromCenter;\nvar config = require('./../../config');\n\nvar contextualTuts = config.contextualTuts;\nvar tutArrowHeight = 16;\n\nfunction getTutByName(tutName) {\n  for (var i = 0; i < contextualTuts.length; i++) {\n    var tutObj = contextualTuts[i];\n\n    if (tutObj.type === tutName) {\n      return tutObj.copy;\n    }\n  }\n\n  return null;\n}\n\nfunction allTutsCompleted() {\n  var tutorialCompletionObj = window.kan.tutorialCompletion;\n  var completion = true;\n\n  Object.keys(tutorialCompletionObj).forEach(function (key, val) {\n    completion = completion && tutorialCompletionObj[key];\n  });\n\n  return completion === true;\n}\n\nfunction addContextualTut(tutName) {\n  if (!!window.kan.shapePath && window.kan.shapePath.length > 0) {\n    hideContextualTuts();\n    window.kan.shapesSinceTut = 0;\n\n    var shapePath = window.kan.shapePath;\n    var shapeCenter = shapePath.bounds.center;\n\n    var tutCopy = getTutByName(tutName);\n\n    if (tutCopy !== null) {\n      var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n      if ($tut.length > 0) {\n        var tutPos = getTutPositionFromCenter($tut, shapeCenter);\n        $tut.css({ top: tutPos.y + 'px', left: tutPos.x + 'px', visibility: 'visible' });\n        $tut.addClass('animated bounceIn');\n      }\n    }\n  }\n}\n\nfunction hideContextualTut($tut) {\n  $tut.css({ visibility: 'hidden' });\n}\n\nfunction hideContextualTutByName(tutName) {\n  var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n  hideContextualTut($tut);\n}\n\nfunction hideContextualTuts() {\n  var $tuts = $('.contextual-tuts .tut');\n  $tuts.css({ visibility: 'hidden' });\n}\n\nfunction resetContextualTuts() {\n  hideContextualTuts();\n  window.kan.tutorialCompletion = {\n    \"fill\": false,\n    \"pinch\": false,\n    \"swipe\": false\n  };\n}\n\nfunction moveContextualTut($tut, centerPoint) {\n  var tutPos = getTutPositionFromCenter($tut, centerPoint);\n  $tut.css({ top: tutPos.y + 'px', left: tutPos.x + 'px' });\n}\n\nfunction getTutPositionFromCenter($tut, centerPoint) {\n  var tutWidth = $tut.outerWidth();\n  var tutHeight = $tut.outerHeight();\n  var leftPos = centerPoint.x - tutWidth / 2;\n  var topPos = centerPoint.y - tutHeight - tutArrowHeight;\n  return new Point(leftPos, topPos);\n}\n\n},{\"./../../config\":1}],16:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nexports.ditherButtonsByName = ditherButtonsByName;\nexports.unditherButtonsByName = unditherButtonsByName;\nexports.ditherButtonByName = ditherButtonByName;\nexports.unditherButtonByName = unditherButtonByName;\nexports.resetCanvas = resetCanvas;\nvar config = require('./../../config');\n\nvar sound = require('./sound');\nvar tutorial = require('./tutorial');\nvar overlays = require('./overlays');\nvar util = require('./util');\nvar color = require('./color');\nvar shape = require('./shape');\nvar share = require('./share');\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar playingClass = sound.playingClass;\nvar playEnabledClass = sound.playEnabledClass;\n\nvar $newButton = $('.controls .new');\nvar $undoButton = $('.controls .undo');\nvar $playButton = $('.controls .play-stop');\nvar $shareButton = $('.controls .share');\nvar $tipsButton = $('.controls .tips');\n\nvar drawCanvas = exports.drawCanvas = $('#canvas')[0];\nvar tipsOverlay = exports.tipsOverlay = $('.overlay.tips')[0];\n\nvar ditheredClass = 'dithered';\n\nfunction init() {\n  initLogoRefresh();\n  initColorPalette();\n  initNewButton();\n  initUndoButton();\n  initPlayButton();\n  initTipsButton();\n  initShareButton();\n  initContextualTuts();\n  resetCanvas();\n}\n\nfunction unditherAllButtons() {\n  $('.controls .' + ditheredClass).removeClass(ditheredClass);\n}\n\nfunction ditherButtonsByName(buttonNames) {\n  var undither = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (buttonNames.length > 0) {\n    if ($.isArray(buttonNames)) {\n      buttonNames.forEach(function (name) {\n        return ditherButtonByName(name, undither);\n      });\n    } else {\n      ditherButtonByName(buttonNames, undither);\n    }\n  }\n}\n\nfunction unditherButtonsByName(buttonNames) {\n  ditherButtonsByName(buttonNames, true);\n}\n\nfunction ditherButtonByName(buttonName) {\n  var undither = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var $button = $('.controls .' + buttonName);\n  // console.log($button);\n  if ($button.length > 0) {\n    if (undither !== true) {\n      $button.addClass(ditheredClass);\n    } else {\n      $button.removeClass(ditheredClass);\n    }\n  }\n}\n\nfunction unditherButtonByName(buttonName) {\n  ditherButtonByName(buttonName, true);\n}\n\nfunction unditherButtonsByName(buttonNames) {\n  ditherButtonsByName(buttonNames, true);\n}\n\nfunction newPressed() {\n  // console.log('new pressed');\n  window.kan.composition = [];\n  paper.project.activeLayer.removeChildren();\n  tutorial.hideContextualTuts();\n  ditherButtonsByName(['undo', 'new', 'play-stop', 'share']);\n  sound.stopPlaying();\n  // window.kan.userHasDrawnFirstShape = false;\n  // tutorial.resetContextualTuts();\n}\n\nfunction undoPressed() {\n  sound.stopPlaying();\n  tutorial.hideContextualTuts();\n\n  var transparent = new Color(0, 0);\n  // console.log('undo pressed');\n  if (!(window.kan.moves.length > 0)) {\n    // console.log('no moves yet');\n    window.kan.userHasDrawnFirstShape = false;\n    return;\n  }\n\n  var lastMove = window.kan.moves.pop();\n  var item = project.getItem({\n    id: lastMove.id\n  });\n\n  if (item) {\n    item.visible = true; // make sure\n    switch (lastMove.type) {\n      case 'newGroup':\n        // console.log('removing group');\n        sound.removeShapeFromComposition(item);\n        util.clearGroupPops(item);\n        item.remove();\n\n        if ('removedGroup' in lastMove) {\n          // bring back removed group\n          lastMove.removedGroup.visible = true;\n          lastMove.removedGroup.data.fresh = true;\n          shape.updatePops();\n        }\n\n        var numGroups = util.getNumGroups();\n        // console.log('numGroups', numGroups);\n\n        if (numGroups <= 0) {\n          ditherButtonsByName(['undo', 'new', 'play-stop', 'share']);\n          $body.removeClass(sound.playEnabledClass);\n        } else {\n          unditherButtonsByName(['undo', 'new', 'play-stop', 'share']);\n          $body.addClass(sound.playEnabledClass);\n        }\n\n        break;\n      case 'fillChange':\n        if (lastMove.transparent) {\n          item.fillColor = lastMove.fill;\n          item.strokeColor = lastMove.fill;\n        } else {\n          item.fillColor = transparent;\n          item.strokeColor = transparent;\n        }\n      case 'transform':\n        item.data.fresh = true;\n        if (!!lastMove.position) {\n          item.position = lastMove.position;\n          if (item.data && item.data.tut && item.data.tut.length > 0) {\n            // item has connected contextual tut, move it to the right place\n            var $tut = $('.tut[data-tut-type=\\'' + tutName + '\\']');\n            tutorial.moveContextualTut($tut, lastMove.position);\n          }\n        }\n        if (!!lastMove.rotation) {\n          item.rotation = lastMove.rotation;\n        }\n        if (!!lastMove.scale) {\n          item.scale(lastMove.scale);\n        }\n        if (config.pop === true) {\n          shape.updatePops();\n        }\n        break;\n      default:\n      // console.log('unknown case');\n    }\n  } else {\n      // console.log('could not find matching item');\n    }\n}\n\nfunction playPressed() {\n  // console.log('play pressed');\n  // sound.stopComposition();\n  // overlays.closeAndResetOverlays();\n  // tutorial.hideContextualTuts();\n  var playing = window.kan.playing;\n  // console.log(playing, util.getNumGroups() > 2, !playing && util.getNumGroups() > 2, $body);\n\n  clearTimeout(window.kan.playPromptTimeout);\n  if (!playing && util.getNumGroups() > 2) {\n    // console.log('starting playing');\n    sound.startPlaying();\n  } else {\n    // console.log('stopping playing');\n    sound.stopPlaying(true);\n  }\n}\n\nfunction tipsPressed() {\n  sound.stopPlaying();\n  overlays.openOverlay('tips');\n  // console.log('tips pressed');\n}\n\nfunction sharePressed() {\n  share.record();\n  // console.log('share pressed');\n  // sound.stopPlaying();\n  // if ($body.hasClass(sound.playEnabledClass)) {\n  //   overlays.openOverlay('share');\n  // }\n}\n\nfunction initLogoRefresh() {\n  $('.main-logo').on(tapEvent, function () {\n    location.reload();\n  });\n}\n\nfunction initColorPalette() {\n  var $paletteWrap = $('ul.palette-colors');\n  var $paletteColors = $paletteWrap.find('li');\n  var paletteColorSize = 20;\n  var paletteSelectedColorSize = 30;\n  var paletteSelectedClass = 'palette-selected';\n\n  // hook up click\n  $paletteColors.on('click tap touch', function () {\n    if (!$body.hasClass(playingClass)) {\n      var $svg = $(this).find('svg.palette-color');\n\n      if (!$svg.hasClass(paletteSelectedClass)) {\n        $('.' + paletteSelectedClass).removeClass(paletteSelectedClass).attr('width', paletteColorSize).attr('height', paletteColorSize).find('rect').attr('rx', 0).attr('ry', 0);\n\n        $svg.addClass(paletteSelectedClass).attr('width', paletteSelectedColorSize).attr('height', paletteSelectedColorSize).find('rect').attr('rx', paletteSelectedColorSize / 2).attr('ry', paletteSelectedColorSize / 2);\n\n        window.kan.currentColor = $svg.find('rect').attr('fill');\n        // console.log('%ccolor', 'color:red', color.getColorName(window.kan.currentColor));\n      }\n    };\n  });\n}\n\nfunction initNewButton() {\n  $('.main-controls .new').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      newPressed();\n    }\n  });\n}\n\nfunction initUndoButton() {\n  $('.main-controls .undo').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      undoPressed();\n    }\n  });\n}\n\nfunction initPlayButton() {\n  $('.main-controls .play-stop .play').on(tapEvent, sound.startPlaying);\n  $('.main-controls .play-stop .stop').on(tapEvent, sound.stopPlaying);\n}\n\nfunction initTipsButton() {\n  $('.controls .tips').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      tipsPressed();\n    }\n  });\n}\n\nfunction initShareButton() {\n  $('.controls .share').on(tapEvent, sharePressed);\n}\n\nfunction initContextualTuts() {\n  var $tuts = $('.contextual-tuts .tut');\n  $tuts.on(tapEvent, function () {\n    $(this).css({ visibility: 'hidden' });\n  });\n}\n\nfunction resetCanvas() {\n  paper.project.clear();\n\n  // add random background\n  paper.project.activeLayer.name = 'background';\n  var numCanvasses = 10;\n  var randomCanvasIndex = Math.round(Math.random() * (numCanvasses - 1)) + 1; // [1, numCanvasses]\n  var canvasBg = new Raster('canvas-' + randomCanvasIndex);\n  canvasBg.name = 'canvasBg';\n  canvasBg.position = paper.view.center;\n\n  // add canvas layer\n  var scaleFactorHorizontal = paper.view.viewSize.width / canvasBg.size.width;\n  var scaleFactorVertical = paper.view.viewSize.height / canvasBg.size.height;\n  canvasBg.scale(Math.max(scaleFactorHorizontal, scaleFactorVertical));\n  var layer = new Layer(); // init new layer that all other shapes will be drawn upon\n  paper.project.activeLayer.name = 'canvas';\n}\n\n},{\"./../../config\":1,\"./color\":6,\"./overlays\":9,\"./shape\":10,\"./share\":11,\"./sound\":12,\"./tutorial\":15,\"./util\":17}],17:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rad = rad;\nexports.deg = deg;\nexports.hypot = hypot;\nexports.angleDelta = angleDelta;\nexports.delta = delta;\nexports.getTime = getTime;\nexports.getNumVisibleGroups = getNumVisibleGroups;\nexports.getVisibleGroups = getVisibleGroups;\nexports.getAllGroups = getAllGroups;\nexports.anyShapesOnCanvas = anyShapesOnCanvas;\nexports.getNumGroups = getNumGroups;\nexports.getFreshGroups = getFreshGroups;\nexports.getAllPops = getAllPops;\nexports.clearGroupPops = clearGroupPops;\nexports.getGroupPops = getGroupPops;\nexports.getPopCandidates = getPopCandidates;\nexports.setSha = setSha;\nexports.shallowCopy = shallowCopy;\nexports.randomPick = randomPick;\nvar config = require('./../../config');\n\n// Converts from degrees to radians.\nfunction rad(degrees) {\n  return degrees * Math.PI / 180;\n};\n\n// Converts from radians to degrees.\nfunction deg(radians) {\n  return radians * 180 / Math.PI;\n};\n\nfunction hypot(a, b) {\n  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)); // pythagorean!\n}\n\n// returns absolute value of the delta of two angles in radians\nfunction angleDelta(x, y) {\n  return Math.abs(Math.atan2(Math.sin(y - x), Math.cos(y - x)));;\n}\n\n// distance between two points\nfunction delta(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2)); // pythagorean!\n}\n\nfunction getTime() {\n  return new Date().toLocaleTimeString();\n}\n\nfunction getNumVisibleGroups() {\n  var groups = getVisibleGroups();\n  return groups.length;\n}\n\nfunction getVisibleGroups() {\n  return paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return el.visible === true;\n    }\n  });\n}\n\nfunction getAllGroups() {\n  return paper.project.getItems({\n    className: 'Group'\n  });\n}\n\nfunction anyShapesOnCanvas() {\n  var groups = getVisibleGroups();\n  return groups.length > 0;\n}\n\nfunction getNumGroups() {\n  var groups = getVisibleGroups();\n  // console.log('numgroups', groups.length);\n  return groups.length;\n}\n\nfunction getFreshGroups() {\n  return paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return el.data && el.data.line === false && el.data.fresh === true;\n    }\n  });\n}\n\nfunction getAllPops() {\n  return paper.project.getItems({\n    match: function match(el) {\n      return el.data && el.data.pop === true;\n    }\n  });\n}\n\nfunction clearGroupPops(group) {\n  var pops = getGroupPops(group);\n  pops.forEach(function (pop) {\n    return pop.remove();\n  });\n}\n\nfunction getGroupPops(group) {\n  // console.log('group pop group', group.id, group);\n  var returnPops = [];\n\n  if (group.children.length > 0) {\n    var groupPops = group.getItems({\n      match: function match(el) {\n        return el.data && el.data.pop === true;\n      }\n    });\n    returnPops = returnPops.concat(groupPops);\n  }\n\n  var intersectingPops = paper.project.getItems({\n    match: function match(el) {\n      return el.data && el.data.pop === true && el.data.intersectingGroup === group.id;\n    }\n  });\n\n  if (intersectingPops.length > 0) {\n    returnPops = returnPops.concat(intersectingPops);\n  }\n\n  return returnPops;\n}\n\nfunction getPopCandidates() {\n  return paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return el.data && el.data.line === false && el.visible === true;\n    }\n  });\n}\n\nfunction setSha() {\n  $.get('/hash').done(function (res) {\n    console.log('current hash:', res);\n    window.kan.hash = res;\n  }).fail(function (e) {\n    console.error('error getting hash:', e);\n  });\n}\n\n// http://blog.soulserv.net/understanding-object-cloning-in-javascript-part-i/\nfunction shallowCopy(original) {\n  // First create an empty object with\n  // same prototype of our original source\n  var clone = Object.create(Object.getPrototypeOf(original));\n\n  var i,\n      keys = Object.getOwnPropertyNames(original);\n\n  for (i = 0; i < keys.length; i++) {\n    // copy each property into the clone\n    Object.defineProperty(clone, keys[i], Object.getOwnPropertyDescriptor(original, keys[i]));\n  }\n\n  return clone;\n}\n\nfunction randomPick(array) {\n  if (array.length > 0) {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  return null;\n}\n\n},{\"./../../config\":1}],18:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.enterTutorialMode = enterTutorialMode;\nexports.exitTutorialMode = exitTutorialMode;\nexports.pauseVideo = pauseVideo;\nexports.playVideo = playVideo;\nvar config = require('./../../config');\n\nvar main = require('./main');\nvar overlays = require('./overlays');\nvar timing = require('./timing');\nvar ui = require('./ui');\nvar sound = require('./sound');\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\n\nvar videoPlayingClass = exports.videoPlayingClass = 'video-playing';\n\nvar $videoWrapper = $body.find('#video-wrap');\nvar $video = $videoWrapper.find('video');\n\nfunction enterTutorialMode() {\n  console.log('entering tutorial mode');\n  playVideo();\n  $body.addClass(videoPlayingClass);\n  clearTimeout(window.kan.inactivityTimeout);\n  clearInterval(window.kan.continueCountdownInterval);\n  $body.off(tapEvent, timing.preventInactivityTimeout);\n  $body.on(tapEvent, exitTutorialMode);\n  main.resetWindow();\n  ui.resetCanvas();\n  window.kan.refreshCheckInterval = setInterval(function () {\n    $.get('/hash').done(function (res) {\n      if (res !== window.kan.hash) {\n        console.log('different hash, reloading');\n        location.reload();\n      }\n    }).fail(function (e) {\n      console.error('error getting hash:', e);\n    });\n  }, timing.refreshCheckDelay);\n}\n\nfunction exitTutorialMode() {\n  console.log('exiting tutorial mode');\n  sound.reinitShapeSounds().then(function () {\n    clearInterval(window.kan.refreshCheckInterval);\n    Howler.mute(false);\n    pauseVideo();\n    $body.off(tapEvent, exitTutorialMode);\n    $body.on(tapEvent, timing.preventInactivityTimeout);\n    $body.removeClass(videoPlayingClass);\n    clearTimeout(window.kan.inactivityTimeout);\n    clearInterval(window.kan.continueCountdownInterval);\n\n    overlays.openOverlay('intro');\n\n    window.kan.inactivityTimeout = setTimeout(function () {\n      overlays.openOverlay('continue');\n    }, timing.continueInactivityDelay);\n  }).fail(function (e) {\n    console.error('error initting shape sounds:', e);\n    location.reload();\n  });\n}\n\nfunction pauseVideo() {\n  $video.get(0).pause();\n}\n\nfunction playVideo() {\n  $video.get(0).play();\n}\n\n},{\"./../../config\":1,\"./main\":8,\"./overlays\":9,\"./sound\":12,\"./timing\":13,\"./ui\":16}]},{},[8])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}