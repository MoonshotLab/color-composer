{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","palette","colors","colorNames","#20171C","#1E2A43","#28377D","#352747","#CA2E26","#9A2A1F","#DA6C26","#453121","#916A47","#DAAD27","#7F7D31","#2B5E2E","pops","colorSize","selectedColorSize","shape","extendingThreshold","trimmingThreshold","cornerThresholdDeg","hitOptions","segments","stroke","fill","tolerance","velocityMultiplier","shapes","line","sprite","circle","square","triangle","other","log","runAnimations","sound","bpm","measures","playingClass","canvasId","2","window","document","exportName","undefined","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","forEach","hasOwnProperty","deprecate","method","name","message","deprecationMessage","stack","replace","console","warn","apply","this","arguments","inherit","child","base","properties","childP","baseP","prototype","Object","create","constructor","_super","assign","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","splice","DEDUP_TIMEOUT","isSyntheticEvent","dx","dy","DEDUP_DISTANCE","TouchAction","value","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","defaults","id","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","event","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","TypeError","output","index","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","process","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","on","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","define","amd","global","HowlerGlobal","Howler","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","mobileAutoEnable","_setup","volume","vol","parseFloat","setupAudioContext","gain","_webAudio","ids","_getSoundIds","j","_soundById","_node","mute","muted","unload","close","codecs","ext","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","match","isOldOpera","parseInt","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_enableMobileAudio","isMobile","maxTouchPoints","msMaxTouchPoints","_mobileEnabled","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","createBufferSource","buffer","connect","destination","noteOn","onended","disconnect","suspend","_sounds","_paused","_suspendTimer","then","_resumeAfterSuspend","_autoResume","resume","_emit","Howl","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","_src","_duration","_state","_endTimers","_queue","_onend","onend","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onresume","action","play","load","url","exec","location","protocol","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","seek","max","_seek","duration","_start","_stop","playWebAudio","_refreshBuffer","setValueAtTime","currentTime","_playStart","bufferSource","noteGrainOn","Infinity","bind","isRunning","once","_clearTimer","playHtml5","playbackRate","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","fade","from","to","len","diff","dir","steps","stepLen","ceil","linearRampToValueAtTime","_interval","setInterval","soundId","min","clearInterval","cancelScheduledValues","loopStart","loopEnd","realTime","playing","rateSeek","sounds","_errorFn","_loadFn","remCache","cache","msg","_loadQueue","task","shift","_drain","limit","cnt","_panner","howl","_parent","random","createGain","createGainNode","paused","_errorListener","_loadListener","__default","loadSound","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","standalone","_pos","_orientation","stereo","pan","pos","z","setPosition","orientation","xUp","yUp","zUp","or","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_panningModel","_refDistance","_rolloffFactor","pa","panner","createPanner","getColorName","color","config","defineProperty","./../../config","root","factory","ShapeDetector","deg2Rad","d","Stroke","points","processStroke","patterns","_nbSamplePoints","nbSamplePoints","learn","_squareSize","_phi","_angleRange","_anglePrecision","_halfDiagonal","_origin","resample","setCentroid","rotateBy","indicativeAngle","scaleToSquare","translateToOrigin","localDistance","q","strokeLength","newPoints","point","cos","sin","c","box","minX","maxX","minY","maxY","width","height","distanceAtBestAngle","pattern","x1","f1","distanceAtAngle","x2","f2","strokePoints","patternPoints","defaultShapes","spot","patternName","score","bestDistance","bestPattern","bestScore","6","kan","currentColor","composition","compositionInterval","lastEvent","moves","pinching","pinchedGroup","pathData","shapePath","prevAngle","sides","side","corners","lastScale","lastRotation","originalPosition","paper","install","$","ready","./color","./shape","./sound","./touch","./ui","7","getStrokes","path","pathClone","clone","minSize","Path","maxSize","prev","cumSpeed","totalPoints","Base","segment","pointStr","stringifyPoint","pointData","nearestPoint","getClosestPointFromPathData","speed","avgSpeed","size","bigClone","smallClone","overlap","subtract","strokeColor","oldgetStrokes","strokes","firstPoint","lastPoint","first","_bottomX","_bottomY","_bottom","Point","_topX","_topY","_top","insert","closed","fillColor","selected","reduce","getIdealGeometry","simplifiedPath","thresholdDist","returnPath","strokeWidth","truedPath","Circle","firstSegment","radius","lastSegment","angleDelta","util","integerPoint","getIntegerPoint","getNearestPoint","OldgetIdealGeometry","thresholdAngle","Color","angleDifference","pow","floor","parsePoint","map","leastDistance","closestPoint","datum","getComputedCorners","rad","thresholdDistance","_ret","_angle","lastSegmentPoint","returnCorners","_point","dist","closestPoints","sumX","sumY","pointObj","avgX","avgY","_typeof","processShapeData","json","returnShape","jsonObj","JSON","parse","positionInfo","findInteriorCurves","interiorCurves","dividedPath","resolveCrossings","children","trueGroup","group","_namedChildren","intersections","getIntersections","trueNecessary","pathCopy","visible","_trimPath","trimPath","_trimPath2","_slicedToArray","extendPath","_intersections","_trimPath3","_trimPath4","removePathExtensions","replaceWith","lengthTolerance","nextSegment","next","startAngle","inverseStartAngle","extendedStartPoint","penSegment","previous","endAngle","extendedEndPoint","original","_ret2","totalLength","unitedDividedPath","unite","firstIntersection","getNearestLocation","rest","splitAt","lastIntersection","reverse","className","largestChild","largestChildArea","area","removeSegment","checkPops","project","getItems","el","hitTestBounds","strokeBounds","isInside","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","done","detector","./lib/shape-detector","./util","8","startPlaying","addClass","startComposition","stopPlaying","removeClass","stopComposition","initShapeSounds","returnSounds","shapeName","shapeSoundJSONPath","getJSON","resp","shapeSoundData","formatShapeSoundData","returnData","urls","quantizeLength","smallestDuration","returnDuration","quantizePosition","position","viewWidth","smallestInterval","returnPosition","playCompositionOnce","groupId","spriteName","startTime","beatLength","measureLength","compositionLength","howler","9","hammerManager","canvas","singleTap","doubleTap","panStart","panMove","panEnd","pinchStart","pinchMove","pinchEnd","pointer","hitResult","hitTest","interior","transparent","strokeCap","thresholdAngleRad","cornerPoint","view","draw","Group","simplify","shapeJSON","exportJSON","shapeData","shapePrediction","shapePattern","_shape$trueGroup","_shape$trueGroup2","truedGroup","trueWasNecessary","computedCorners","computedCornersPath","computedCornersPathLength","removeSegments","colorName","playSounds","quantizedSoundStartTime","bounds","quantizedSoundDuration","compositionObj","getCrossings","copyContent","enclosedLoops","addChild","sendToBack","enclosedLoop","unitedPath","accumulator","otherPath","animate","settings","easing","hitTestGroupBounds","originalRotation","originalScale","currentScale","scaleDelta","currentRotation","rotationDelta","rotate","move","throwPinchedGroup","viewSize","viewHeight","offScreen","requestAnimationFrame","getElementById","hammerjs","10","initColorPalette","initNewButton","initUndoButton","initPlayButton","initTipsButton","initShareButton","newPressed","activeLayer","removeChildren","undoPressed","lastMove","pop","getItem","playPressed","tipsPressed","sharePressed","$paletteWrap","$paletteColors","paletteColorSize","paletteSelectedColorSize","paletteSelectedClass","$body","hasClass","$svg","attr","tapEvent","11","degrees","deg","radians","delta"],"mappings":"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F,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBACpyCxI,KAAM,aAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBACpyCxI,KAAM,aAENotB,SAAW9kB,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBACpyCxI,KAAM,aAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAC3uDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG;AAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAC3uDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAC3uDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAC3uDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAC3uDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAC3uDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAC3uDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAC3uDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAC/wDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAC9wDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAChxDxI,KAAM,WAENotB,SAAW9kB,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBACjxDxI,KAAM,WAENotB,SAAW9kB,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,iBAAkBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAC9wDxI,KAAM,WAENotB,SAAW9kB,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,iBAAkBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBACjxDxI,KAAM,WAENotB,SAAW9kB,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,iBAAkBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAC/wDxI,KAAM,WAENotB,SAAW9kB,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,iBAAkBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,kBAAmBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,qBAAwBF,EAAG,mBAAoBE,EAAG,oBAAuBF,EAAG,mBAAoBE,EAAG,qBAC5wDxI,KAAM,WAmBNotB,SAAW9kB,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MACtLxI,KAAM,UAENotB,SAAW9kB,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAC9XxI,KAAM,UAENotB,SAAW9kB,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,KAAQF,EAAG,GAAIE,EAAG,MAC3NxI,KAAM,UAENotB,SAAW9kB,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAC9PxI,KAAM,UAENotB,SAAW9kB,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,GAAIE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAASF,EAAG,IAAKE,EAAG,MAC7wCxI,KAAM,UAGPgtB,EAAchsB,UAAU+uB,KAAO,SAAU3C,EAAQ4C,GAE7B,MAAfA,IACHA,EAAc,GASf,KAAK,GANDpoB,GAAU0nB,EAASW,EACnBzyB,EAAS,GAAI2vB,GAAOC,GACpB8C,IAAgB1L,EAAAA,GAChB2L,EAAc,KACdC,EAAY,EAEP90B,EAAI,EAAGA,EAAIkF,KAAK8sB,SAASzxB,OAAQP,IACzCg0B,EAAU9uB,KAAK8sB,SAAShyB,GAEpBg0B,EAAQtvB,KAAK6C,QAAQmtB,IAAe,IACvCpoB,EAAWpK,EAAO6xB,oBAAoBC,GACtCW,EAAQ,EAAMroB,EAAWkmB,EAErBlmB,EAAWsoB,GAAgBD,EAAQzvB,KAAKsX,YAC3CoY,EAAetoB,EACfuoB,EAAcb,EAAQtvB,KACtBowB,EAAYH,GAKf,QAASX,QAASa,EAAaF,MAAOG,IAGvCpD,EAAchsB,UAAUysB,MAAQ,SAAUztB,EAAMotB,GAE/C,MAAO5sB,MAAK8sB,SAAS5pB,KAAK,GAAIypB,GAAOC,EAAQptB,KAGvCgtB,SAGFqD,GAAG,SAASh1B,EAAQU,EAAOJ,GACjC,YAEaN,GAAQ,kBAETA,EAAQ,WACRA,EAAQ,WACRA,EAAQ,WACRA,EAAQ,WACXA,EAAQ,OAEjBsD,QAAO2xB,KACLC,aAAc,UACdC,eACAC,oBAAqB,KACrBC,UAAW,KACXC,SACA9J,SAAS,EACT+J,UAAU,EACVC,aAAc,KACdC,YACAC,UAAW,KACXC,UAAW,KACXC,SACAC,QACAC,WACAC,UAAW,EACXC,aAAc,EACdC,iBAAkB,MAGpBC,MAAMC,QAAQ7yB,QAEd8yB,EAAE7yB,UAAU8yB,MAAM,gBAYf7E,iBAAiB,EAAE8E,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,OAAO,KAAKC,GAAG,SAAS32B,EAAQU,EAAOJ,GAC7G,YAkCA,SAASs2B,GAAWC,EAAMpB,GACxB,GAAIqB,GAAYD,EAAKE,QAGjBC,GAFU,GAAIC,MAEJ,GACVC,EAAU,EAEVC,EAAO,OAIPC,EAAW,EACXC,EAAc,CAElBC,MAAKlzB,KAAK0yB,EAAU50B,SAAU,SAAUq1B,EAASt3B,GAC/C,GAAIozB,GAAQkE,EAAQlE,MAChBmE,EAAWC,EAAepE,GAC1BqE,EAAY,MAChB,IAAIF,IAAY/B,GACdiC,EAAYjC,EAAS+B,OAChB,CACL,GAAIG,GAAeC,EAA4BvE,EAAOoC,EACtD+B,GAAWC,EAAeE,GACtBH,IAAY/B,GACdiC,EAAYjC,EAAS+B,GAErBxyB,QAAQlC,IAAI,8BAIhB,GAAI40B,EAAW,CACb1yB,QAAQlC,IAAI40B,EAORA,GAAUG,QACZT,GAAYlV,SAA2B,GAAlBwV,EAAUG,OAC/BR,KAIJF,EAAO9D,GAGT,IAAIyE,GAAWV,EAAWC,CAC1BryB,SAAQlC,IAAIg1B,EAEZ,IAAIC,GAAOD,CACXC,GAAOb,EAAUa,EACjBA,EAAO5oB,KAAKoZ,IAAIpZ,KAAK+b,IAAI6M,EAAMb,GAAUF,EAEzC,IAAIgB,GAAWnB,EAAKE,QAChBkB,EAAapB,EAAKE,OACtBiB,GAAS3qB,MAAM,KACf4qB,EAAW5qB,MAAM,GAEjB,IAAI6qB,GAAUF,EAASG,SAASF,EAUhC,OATAC,GAAQE,YAAc,OAEtBpzB,QAAQlC,IAAIi1B,GAOLjB,EAGT,QAASuB,GAAcxB,EAAMpB,GAC3B,GAAIqB,GAAYD,EAAKE,QACjBuB,EAAU,GAAIrB,MAEdD,EAAU,EACVE,EAAU,EAEVC,EAAO,OACPoB,EAAa,OACbC,EAAY,MA2DhB,OA1DAlB,MAAKlzB,KAAK0yB,EAAU50B,SAAU,SAAUq1B,EAASt3B,GAC/C,GAAIozB,GAAQkE,EAAQlE,MAChBmE,EAAWC,EAAepE,GAC1BqE,EAAY,MAChB,IAAIF,IAAY/B,GACdiC,EAAYjC,EAAS+B,OAChB,CACL,GAAIG,GAAeC,EAA4BvE,EAAOoC,EACtD+B,GAAWC,EAAeE,GACtBH,IAAY/B,GACdiC,EAAYjC,EAAS+B,GAErBxyB,QAAQlC,IAAI,8BAIhB,GAAI40B,EAAW,CACb1yB,QAAQlC,IAAI40B,EAOZ,IAAIA,EAAUe,MACZF,EAAab,EAAUrE,MACvBiF,EAAQriB,IAAIod,OACP,IAAIqE,EAAUvpB,KACnBqqB,EAAYd,EAAUrE,MACtBiF,EAAQriB,IAAIod,OACP,CACL,GAAIhnB,GAAQqrB,EAAUrrB,MAClB0rB,EAAyB,GAAlBL,EAAUG,KACrBE,GAAOb,EAAUa,EACjBA,EAAO5oB,KAAKoZ,IAAIpZ,KAAK+b,IAAI6M,EAAMb,GAAUF,GACzChyB,QAAQlC,IAAIi1B,EAEZ,IAAIW,GAAWrF,EAAMpmB,EAAIkC,KAAKmkB,IAAIjnB,EAAQ8C,KAAKG,GAAK,GAAKyoB,EACrDY,EAAWtF,EAAMlmB,EAAIgC,KAAKokB,IAAIlnB,EAAQ8C,KAAKG,GAAK,GAAKyoB,EACrDa,EAAU,GAAIC,OAAMH,EAAUC,GAE9BG,EAAQzF,EAAMpmB,EAAIkC,KAAKmkB,IAAIjnB,EAAQ8C,KAAKG,GAAK,GAAKyoB,EAClDgB,EAAQ1F,EAAMlmB,EAAIgC,KAAKokB,IAAIlnB,EAAQ8C,KAAKG,GAAK,GAAKyoB,EAClDiB,EAAO,GAAIH,OAAMC,EAAOC,EAE5BT,GAAQriB,IAAI+iB,GACZV,EAAQW,OAAO,EAAGL,IAItBzB,EAAO9D,IAGTiF,EAAQY,QAAS,EACjBZ,EAAQa,UAAY,OACpBb,EAAQc,UAAW,EACnBd,EAAQe,SAEDvC,EAGT,QAASwC,GAAiB7D,EAAUG,EAAO2D,GACzC,GAAIC,GAAgB,IAAOD,EAAe/4B,OAEtCi5B,EAAa,GAAIxC,OACnByC,YAAa,EACbtB,YAAa,SAGXuB,EAAY,GAAI1C,OAClByC,YAAa,EACbtB,YAAa,UAqBX/rB,GAZa,GAAI4qB,MAAK2C,QACxB5tB,OAAQutB,EAAeM,aAAaxG,MACpCyG,OAAQ,GACR1B,YAAa,SAGC,GAAInB,MAAK2C,QACvB5tB,OAAQutB,EAAeQ,YAAY1G,MACnCyG,OAAQ,GACR1B,YAAa,QAGH,QACRzC,EAAY,OACZqE,EAAa,MAsDjB,OArDA1C,MAAKlzB,KAAKwxB,EAAO,SAAUC,EAAM51B,GAC/B,GAAIs4B,GAAa1C,EAAK,GAClB2C,EAAY3C,EAAKA,EAAKr1B,OAAS,EAEnC6L,GAAQ8C,KAAKE,MAAMmpB,EAAUrrB,EAAIorB,EAAWprB,EAAGqrB,EAAUvrB,EAAIsrB,EAAWtrB,GAElE0oB,IACJqE,EAAaC,EAAKD,WAAW3tB,EAAOspB,GACpC3wB,QAAQlC,IAAIk3B,GACZP,EAAWxjB,IAAIsiB,GACfkB,EAAWxjB,IAAIuiB,IAGjB7C,EAAYtpB,IAGdirB,KAAKlzB,KAAKm1B,EAAer3B,SAAU,SAAUq1B,EAASt3B,GACpD,GAAIi6B,GAAeC,EAAgB5C,EAAQlE,OACvCsE,EAAe8B,EAAWW,gBAAgBF,EAE1CA,GAAa1tB,YAAYmrB,IAAiB6B,GAC5CG,EAAU1jB,IAAI0hB,GACd,GAAIV,MAAK2C,QACP5tB,OAAQ2rB,EACRmC,OAAQ,EACRX,UAAW,YAGbn0B,QAAQlC,IAAI,YACZ62B,EAAU1jB,IAAIikB,GACd,GAAIjD,MAAK2C,QACP5tB,OAAQkuB,EACRJ,OAAQ,EACRX,UAAW,aAYbI,EAAeL,SACjBS,EAAUT,QAAS,GAOdS,EAGT,QAASU,GAAoB5E,EAAUoB,GACrC,GAAIyD,GAAiBnrB,KAAKG,GAAK,EAI3BiG,GAHgB,GAAMshB,EAAKr2B,OAGnB,GAERo1B,KACAC,KACAsB,EAAO,OACPxB,EAAY,OAIZ8D,EAAa,GAAIxC,KA0ErB,OAxEAK,MAAKlzB,KAAKyyB,EAAK30B,SAAU,SAAUq1B,EAASt3B,GAC1C,GAAIi6B,GAAeC,EAAgB5C,EAAQlE,OACvCmE,EAAWC,EAAeyC,GAC1BxC,EAAY,MAChB,IAAIF,IAAY/B,GACdiC,EAAYjC,EAAS+B,OAChB,CACL,GAAIG,GAAeC,EAA4BnC,EAAUyE,EACzD1C,GAAWC,EAAeE,GAEtBH,IAAY/B,GACdiC,EAAYjC,EAAS+B,GAErBxyB,QAAQlC,IAAI,8BAIhB,GAAI40B,EAAW,CAQb,GAPA+B,EAAWxjB,IAAIikB,GACf,GAAIjD,MAAK2C,QACP5tB,OAAQkuB,EACRJ,OAAQ,EACR1B,YAAa,GAAImC,OAAMt6B,EAAI42B,EAAK30B,SAAS1B,OAAQP,EAAI42B,EAAK30B,SAAS1B,OAAQP,EAAI42B,EAAK30B,SAAS1B,UAE/FwE,QAAQlC,IAAI40B,EAAUrE,OACjB8D,EAIE,CAEL,GAAI9qB,GAAQ8C,KAAKE,MAAM6qB,EAAa/sB,EAAG+sB,EAAajtB,GAAKkC,KAAKE,MAAM8nB,EAAKhqB,EAAGgqB,EAAKlqB,EASjF,IARIZ,EAAQ,IAAGA,GAAS,EAAI8C,KAAKG,IAQR,mBAAdqmB,GAETE,EAAKxtB,KAAKqvB,OACL,CACL,GAAI8C,GAAkBrrB,KAAKsrB,IAAIpuB,EAAQspB,EAAW,EAClD3wB,SAAQlC,IAAI,kBAAmB03B,GAC3BA,GAAmBF,EAGrBzE,EAAKxtB,KAAKqvB,IAIV9B,EAAMvtB,KAAKwtB,GACXA,GAAQ6B,IAIZ/B,EAAYtpB,MA9BZwpB,GAAKxtB,KAAKqvB,EAiCZP,GAAO+C,EACP3kB,QAEAvQ,SAAQlC,IAAI,aAMhB8yB,EAAMvtB,KAAKwtB,GAEJD,EAIT,QAASuE,GAAgB9G,GACvB,MAAO,IAAIwF,OAAM1pB,KAAKurB,MAAMrH,EAAMpmB,GAAIkC,KAAKurB,MAAMrH,EAAMlmB,IAGzD,QAASsqB,GAAepE,GACtB,MAAOlkB,MAAKurB,MAAMrH,EAAMpmB,GAAK,IAAMkC,KAAKurB,MAAMrH,EAAMlmB,GAGtD,QAASwtB,GAAWnD,GAClB,GAAI9vB,GAAQ8vB,EAAS9vB,MAAM,KAAKkzB,IAAI,SAAU1S,GAC5C,MAAO/Y,MAAKurB,MAAMxS,IAGpB,OAAIxgB,GAAMlH,QAAU,EACX,GAAIq4B,OAAMnxB,EAAM,GAAIA,EAAM,IAG5B,KAGT,QAASkwB,GAA4BvE,EAAOoC,GAC1C,GAAIoF,GAAgB,OAChBC,EAAe,MAUnB,OARAxD,MAAKlzB,KAAKqxB,EAAU,SAAUsF,EAAO96B,GACnC,GAAIsM,GAAW8mB,EAAM7mB,YAAYuuB,EAAM1H,SAClCwH,GAAiBtuB,EAAWsuB,KAC/BA,EAAgBtuB,EAChBuuB,EAAeC,EAAM1H,SAIlByH,GAAgBzH,EAGzB,QAAS2H,GAAmBnE,GAC1B,GAAIyD,GAAiBL,EAAKgB,IAAI3J,EAAOzvB,MAAMG,oBACvCk5B,EAAoB,GAAMrE,EAAKr2B,OAE/Bs1B,IAEJ,IAAIe,EAAKr2B,OAAS,EAAG,CACnB,GAAI26B,GAAO,WACT,GACIhE,GAAO,OAEPxB,EAAY,OACZqE,EAAa,MAEjB1C,MAAKlzB,KAAKyyB,EAAK30B,SAAU,SAAUq1B,EAASt3B,GAC1C,GAAIozB,GAAQ8G,EAAgB5C,EAAQlE,MACpC,IAAM8D,EAAM,CACV,GAAIiE,GAASjsB,KAAKE,MAAMgkB,EAAMlmB,EAAIgqB,EAAKhqB,EAAGkmB,EAAMpmB,EAAIkqB,EAAKlqB,EACrDmuB,GAAS,IAAGA,GAAU,EAAIjsB,KAAKG,IAC7BqmB,IACJqE,EAAaC,EAAKD,WAAWoB,EAAQzF,GACjCqE,GAAcM,GAOhBxE,EAAQztB,KAAK8uB,IAMjBxB,EAAYyF,MAGZtF,GAAQztB,KAAKgrB,EAOf8D,GAAO9D,GAGT,IAAIgI,GAAmBlB,EAAgBtD,EAAKkD,YAAY1G,MACxDyC,GAAQztB,KAAKgzB,EAIb,KAAK,GAFDC,MAEKr7B,EAAI,EAAGA,EAAI61B,EAAQt1B,OAAQP,IAAK,CACvC,GAAIs7B,GAASzF,EAAQ71B,EAErB,IAAU,IAANA,EAAS,CAGX,IAFA,GAAIu7B,GAAOD,EAAO/uB,YAAY2qB,GAC1BsE,KACGD,EAAON,IACZO,EAAcpzB,MACZgrB,MAAOkI,EACPpkB,MAAOlX,IAGLA,EAAI61B,EAAQt1B,OAAS,IACvBP,IACAk3B,EAAOoE,EACPA,EAASzF,EAAQ71B,GACjBu7B,EAAOD,EAAO/uB,YAAY2qB,EAK9B,IAAIsE,EAAcj7B,OAAS,EAAG,CAC5B,GAAIk7B,GAAO,EACPC,EAAO,CAGXrE,MAAKlzB,KAAKq3B,EAAe,SAAUG,GACjCF,GAAQE,EAASvI,MAAMpmB,EACvB0uB,GAAQC,EAASvI,MAAMlmB,GAGzB,IAAI0uB,GAAOH,EAAOD,EAAcj7B,OAC5Bs7B,EAAOH,EAAOF,EAAcj7B,MAEhC86B,GAAcjzB,KAAK,GAAIwwB,OAAMgD,EAAMC,SAGrCR,GAAcjzB,KAAKkzB,EAGrBpE,GAAOoE,EAGT,OACEjtB,EAAGgtB,KAIP,IAAoE,YAA/C,mBAATH,GAAuB,YAAcY,EAAQZ,IAAqB,MAAOA,GAAK7sB,EAG5F,MAAOwnB,GAGT,QAASkG,GAAiBC,GACxB,GAAIC,MACAC,EAAUC,KAAKC,MAAMJ,GAAM,EAE/B,IAAI,YAAcE,GAAS,CACzB,GAAIj6B,GAAWi6B,EAAQj6B,QACvBo1B,MAAKlzB,KAAKlC,EAAU,SAAUq1B,EAASt3B,GACrC,GAAuB,IAAnBs3B,EAAQ/2B,OAAc,CACxB,GAAI87B,GAAe/E,EAAQ,EAC3B2E,GAAY7zB,MACV4E,EAAGqvB,EAAa,GAChBnvB,EAAGmvB,EAAa,SAGlBJ,GAAY7zB,MACV4E,EAAGsqB,EAAQ,GACXpqB,EAAGoqB,EAAQ,OAKnB,MAAO2E,GAIT,QAASK,GAAmB1F,GAC1B,GAAI2F,MACA1F,EAAYD,EAAKE,QACjB0F,EAAc3F,EAAU4F,kBAG5B,IAFA13B,QAAQlC,IAAI25B,GAERA,EAAYE,SAASn8B,OAAS,EAChC,IAAK,GAAIP,GAAI,EAAGA,EAAIw8B,EAAYE,SAASn8B,OAAQP,IAAK,CACpD,GAAIqF,GAAQm3B,EAAYE,SAAS18B,EAE7BqF,GAAM4zB,QACRsD,EAAen0B,KAAK/C,GAO1B,MAFAN,SAAQlC,IAAI,WAAY05B,GAEjBA,EAGT,QAASI,GAAUC,EAAO/G,GACxB,GAAIJ,GAAYmH,EAAMC,eAAepH,UAAU,EAC/C1wB,SAAQlC,IAAI,cAAegzB,EAAQt1B,OAEnC,IAAIu8B,GAAgBrH,EAAUsH,mBAC1BC,GAAgB,EAEhBC,EAAWxH,EAAUqB,OAIzB,IAHAmG,EAASC,SAAU,EAGfJ,EAAcv8B,OAAS,EAAG,CAE5B,GAAI48B,GAAYC,EAASH,EAAUxH,GAM/B4H,EAAaC,EAAeH,EAAW,EAE3CF,GAAWI,EAAW,GACtBL,EAAgBK,EAAW,OACtB,CAILJ,EAAWM,EAAWN,EAEtB,IAAIO,GAAiBP,EAASF,kBAC9B,IAAIS,EAAej9B,OAAS,EAAG,CAE7B,GAAIk9B,GAAaL,EAASH,EAAUxH,GAIhCiI,EAAaJ,EAAeG,EAAY,EAE5CR,GAAWS,EAAW,GACtBV,EAAgBU,EAAW,OAG3BT,GAAWU,EAAqBV,GAepC,MAVAl4B,SAAQlC,IAAI,mBAAoB4yB,EAAUl1B,QAC1CwE,QAAQlC,IAAI,gBAAiBo6B,EAAS18B,QAEtC08B,EAASv4B,KAAO,YAChBu4B,EAASC,SAAU,EAInBN,EAAMC,eAAepH,UAAU,GAAGmI,YAAYX,IAEtCL,EAAOI,GAGjB,QAASO,GAAW3G,GAClB,GAAIA,EAAKr2B,OAAS,EAAG,CACnB,GAAIs9B,GAAkBxM,EAAOzvB,MAAME,kBAAoB80B,EAAKr2B,OAExDq5B,EAAehD,EAAKgD,aACpBkE,EAAclE,EAAamE,KAC3BC,EAAa9uB,KAAKE,MAAM0uB,EAAY1K,MAAMlmB,EAAI0sB,EAAaxG,MAAMlmB,EAAG4wB,EAAY1K,MAAMpmB,EAAI4sB,EAAaxG,MAAMpmB,GAC7GixB,EAAoBD,EAAa9uB,KAAKG,GACtC6uB,EAAqB,GAAItF,OAAMgB,EAAaxG,MAAMpmB,EAAIkC,KAAKmkB,IAAI4K,GAAqBJ,EAAiBjE,EAAaxG,MAAMlmB,EAAIgC,KAAKokB,IAAI2K,GAAqBJ,EAC9JjH,GAAKoC,OAAO,EAAGkF,EAEf,IAAIpE,GAAclD,EAAKkD,YACnBqE,EAAarE,EAAYsE,SACzBC,EAAWnvB,KAAKE,MAAM0qB,EAAY1G,MAAMlmB,EAAIixB,EAAW/K,MAAMlmB,EAAG4sB,EAAY1G,MAAMpmB,EAAImxB,EAAW/K,MAAMpmB,GACvGsxB,EAAmB,GAAI1F,OAAMkB,EAAY1G,MAAMpmB,EAAIkC,KAAKmkB,IAAIgL,GAAYR,EAAiB/D,EAAY1G,MAAMlmB,EAAIgC,KAAKokB,IAAI+K,GAAYR,EACxIjH,GAAK5gB,IAAIsoB,GAEX,MAAO1H,GAGT,QAASwG,GAASxG,EAAM2H,GAEtB,IACE,GAAIC,GAAQ,WACV,GAAI1B,GAAgBlG,EAAKmG,mBACrBP,EAAc5F,EAAK6F,kBAEvB,IAAIK,EAAcv8B,OAAS,EACzB,OACE8N,GAAIkwB,GAAU,GAIlB,IAAI18B,GAAqBwvB,EAAOzvB,MAAMC,mBAClC48B,EAAc7H,EAAKr2B,MAiCvB,IA9BA82B,KAAKlzB,KAAKq4B,EAAYE,SAAU,SAAUr3B,EAAOrF,GAC3CqF,EAAM4zB,SAERuD,EAAcA,EAAYtE,SAAS7yB,MAQjCm3B,EAAYE,UAAYF,EAAYE,SAASn8B,OAAS,IAC1D,WAEE,GAAIm+B,GAAoB,GAAI1H,KAG5BK,MAAKlzB,KAAKq4B,EAAYE,SAAU,SAAUr3B,EAAOrF;AAC1CqF,EAAM4zB,SACTyF,EAAoBA,EAAkBC,MAAMt5B,MAGhDm3B,EAAckC,KAQd5B,EAAcv8B,OAAS,EAAG,CAE5B,GAAIq+B,GAAoBpC,EAAYqC,mBAAmB/B,EAAc,GAAG1J,OAEpE0L,EAAOtC,EAAYuC,QAAQH,GAC3BhF,EAAe4C,EACf1C,EAAc,MAWlB,IAAIgD,EAAcv8B,OAAS,EAAG,CAG5B,GAAIy+B,GAAmBF,EAAKD,mBAAmB/B,EAAcA,EAAcv8B,OAAS,GAAG6yB,MAMvF0G,GAAcgF,EAAKC,QAAQC,GACtBlF,GAAgBA,EAAYv5B,SAAQu5B,EAAcgF,GACvDA,EAAKG,cAELnF,GAAcgF,CAGVlF,IAAgBA,EAAar5B,QAAUsB,EAAqB48B,IAChE7H,EAAOA,EAAKsB,SAAS0B,GACE,iBAAnBhD,EAAKsI,WACP7H,KAAKlzB,KAAKyyB,EAAK8F,SAAU,SAAUr3B,EAAOrF,GACnCqF,EAAM4zB,QACT5zB,EAAMmZ,YAMRsb,GAAeA,EAAYv5B,QAAUsB,EAAqB48B,IAC9D7H,EAAOA,EAAKsB,SAAS4B,GACE,iBAAnBlD,EAAKsI,WACP7H,KAAKlzB,KAAKyyB,EAAK8F,SAAU,SAAUr3B,EAAOrF,GACnCqF,EAAM4zB,QACT5zB,EAAMmZ,YAmDhB,MAxCuB,iBAAnBoY,EAAKsI,WAAgCtI,EAAK8F,SAASn8B,OAAS,IAC1Dq2B,EAAK8F,SAASn8B,OAAS,GACzB,WACE,GAAI4+B,GAAe,OACfC,EAAmB,CAEvB/H,MAAKlzB,KAAKyyB,EAAK8F,SAAU,SAAUr3B,EAAOrF,GACpCqF,EAAMg6B,KAAOD,IACfA,EAAmB/5B,EAAMg6B,KACzBF,EAAe95B,KAKjBuxB,EADEuI,EACKA,EAEAvI,EAAK8F,SAAS,MAIzB9F,EAAOA,EAAK8F,SAAS,IAkBzB33B,QAAQlC,IAAI,mBAAoB47B,GAChC15B,QAAQlC,IAAI,iBAAkB+zB,EAAKr2B,QAC/Bq2B,EAAKr2B,OAAS,EACZ2O,KAAK/B,IAAIypB,EAAKr2B,OAASk+B,GAAeA,GAAe,KACvD15B,QAAQlC,IAAI,uBAEVwL,GAAIkwB,GAAU,MAIdlwB,GAAIuoB,GAAM,KAKZvoB,GAAIkwB,GAAU,MAKpB,IAAsE,YAAhD,mBAAVC,GAAwB,YAAc1C,EAAQ0C,IAAsB,MAAOA,GAAMnwB,EAC7F,MAAO9O,GAEP,MADAwF,SAAQ4f,MAAMplB,IACNg/B,GAAU,IAItB,QAASZ,GAAqB/G,GAG5B,MAFAA,GAAK0I,cAAc,GACnB1I,EAAK0I,cAAc1I,EAAK30B,SAAS1B,OAAS,GACnCq2B,EAGT,QAAS2I,KACMtJ,MAAMuJ,QAAQC,UACzBP,UAAW,QACXnd,MAAO,SAAe2d,GACpB,QAASA,EAAGnpB,MAAQmpB,EAAGnpB,KAAKsE,UAKlC,QAAS8kB,GAAcvM,EAAOsJ,GAC5B,IAAKtJ,EAAO,MAAO,KAEnB,KAAK,GAAIpzB,GAAI08B,EAASn8B,OAAS,EAAGP,GAAK,EAAGA,IAAK,CAC7C,GAAIqF,GAAQq3B,EAAS18B,EACRqF,GAAMu6B,YACnB,IAAIxM,EAAMyM,SAASx6B,EAAMu6B,cACvB,MAAOv6B,GAIX,MAAO,MAtzBTM,OAAO2rB,eAAejxB,EAAS,cAC7BkS,OAAO,GAGT,IAAI+qB,GAAiB,WAAc,QAASwC,GAAcC,EAAK//B,GAAK,GAAIggC,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAK38B,MAAW,KAAM,IAAK,GAAiC48B,GAA7BC,EAAKN,EAAIO,OAAOj8B,cAAmB47B,GAAMG,EAAKC,EAAGtC,QAAQwC,QAAoBP,EAAK53B,KAAKg4B,EAAG7tB,QAAYvS,GAAKggC,EAAKz/B,SAAWP,GAA3DigC,GAAK,IAAoE,MAAOte,GAAOue,GAAK,EAAMC,EAAKxe,EAAO,QAAU,KAAWse,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAK//B,GAAK,GAAIiE,MAAMC,QAAQ67B,GAAQ,MAAOA,EAAY,IAAIO,OAAOj8B,WAAYsB,QAAOo6B,GAAQ,MAAOD,GAAcC,EAAK//B,EAAa,MAAM,IAAIgX,WAAU,4DAEllB8kB,EAA4B,kBAAXwE,SAAoD,gBAApBA,QAAOj8B,SAAwB,SAAUD,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXk8B,SAAyBl8B,EAAIyB,cAAgBy6B,QAAUl8B,IAAQk8B,OAAO56B,UAAY,eAAkBtB,GAEtQ/D,GAAQs2B,WAAaA,EACrBt2B,EAAQ+3B,cAAgBA,EACxB/3B,EAAQg5B,iBAAmBA,EAC3Bh5B,EAAQ+5B,oBAAsBA,EAC9B/5B,EAAQ65B,gBAAkBA,EAC1B75B,EAAQm3B,eAAiBA,EACzBn3B,EAAQq6B,WAAaA,EACrBr6B,EAAQs3B,4BAA8BA,EACtCt3B,EAAQ06B,mBAAqBA,EAC7B16B,EAAQ07B,iBAAmBA,EAC3B17B,EAAQi8B,mBAAqBA,EAC7Bj8B,EAAQs8B,UAAYA,EACpBt8B,EAAQk9B,WAAaA,EACrBl9B,EAAQ+8B,SAAWA,EACnB/8B,EAAQs9B,qBAAuBA,EAC/Bt9B,EAAQk/B,UAAYA,EACpBl/B,EAAQs/B,cAAgBA,CACxB,IAAIjO,GAAgB3xB,EAAQ,wBAExBi6B,EAAOj6B,EAAQ,UACfsxB,EAAStxB,EAAQ,iBAENM,GAAQmgC,SAAW,GAAI9O,GAAcA,EAAc8C,iBA2xB/DjD,iBAAiB,EAAEkP,uBAAuB,EAAEC,SAAS,KAAKC,GAAG,SAAS5gC,EAAQU,EAAOJ,GACxF,YAqBA,SAASugC,KACPzK,EAAE,QAAQ0K,SAASxP,EAAOnuB,cAE1Bqc,OAAOyB,MAAK,GAEZ3d,OAAO2xB,IAAIzJ,SAAU,EACrBloB,OAAO2xB,IAAIG,oBAAsB2L,EAAiBz9B,OAAO2xB,IAAIE,aAG/D,QAAS6L,KACP,GAAI/f,GAAO7b,UAAU5E,OAAS,GAAsBiD,SAAjB2B,UAAU,IAAmBA,UAAU,EAEpE6b,IACJzB,OAAOyB,MAAK,GAGdmV,EAAE,QAAQ6K,YAAY3P,EAAOnuB,cAE7BG,OAAO2xB,IAAIzJ,SAAU,EACrB0V,EAAgB59B,OAAO2xB,IAAIG,qBAG7B,QAAS+L,KACP,GAAIC,KA0BJ,OAvBA9J,MAAKlzB,KAAKktB,EAAO/uB,OAAQ,SAAUV,EAAOw/B,GAExC,GAAIx/B,EAAMY,OAAQ,CAChB,GAAI6+B,GAAqB,kBAAoBD,EAAY,IAAMA,EAAY,OAC3EjL,GAAEmL,QAAQD,EAAoB,SAAUE,GACtC,GAAIC,GAAiBC,EAAqBL,EAAWG,GACjDx+B,EAAQ,GAAI2hB,MAAK8c,EACrBL,GAAaC,GAAar+B,QAEvB,CAOL,GAAIA,GAAQ,GAAI2hB,OACd/c,IAAK,kBAAoBy5B,EAAY,IAAMA,EAAY,QAEzDD,GAAaC,GAAar+B,KAIvBo+B,EAGT,QAASM,GAAqBL,EAAW7qB,GACvC,GAAImrB,KAOJ,OALAA,GAAW/5B,IAAM4O,EAAKorB,KAAKhH,IAAI,SAAUjT,GACvC,MAAO,kBAAoB0Z,EAAY,IAAM1Z,IAE/Cga,EAAWl/B,OAAS+T,EAAK/T,OAElBk/B,EAGT,QAASE,GAAepZ,GACtB,GAAIqZ,GAAmB,GAAKxQ,EAAOtuB,MAAMC,IACrC8+B,EAAiB5yB,KAAKurB,MAAMjS,EAAWqZ,GAAoBA,CAE/D,OAAIC,GAAiB,EACZA,EAGAD,EAIX,QAASE,GAAiBC,EAAUC,GAClC,GAAIC,GAAmBD,GAAa,EAAI5Q,EAAOtuB,MAAME,SACrD,OAAOk/B,gBAAiBjzB,KAAKurB,MAAMuH,EAAWE,GAAoBA,EAGpE,QAASpB,GAAiB5L,GAKxB,QAASkN,KACPr9B,QAAQlC,IAAI,UACZw0B,KAAKlzB,KAAK+wB,EAAa,SAAUtzB,EAAO5B,GACtC+E,QAAQlC,IAAIjB,GACRA,EAAMY,QACRqB,WAAW,WACTkB,QAAQlC,IAAI,iBAAmBjB,EAAMygC,SACrCzgC,EAAMmB,MAAMoiB,MAAK,GACjBvjB,EAAMmB,MAAMykB,KAAK5lB,EAAM0gC,aACtB1gC,EAAM2gC,WAET1+B,WAAW,WACTkB,QAAQlC,IAAI,kBAAoBjB,EAAMygC,SACtCzgC,EAAMmB,MAAMob,QACXvc,EAAM2gC,UAAY3gC,EAAM4mB,YAE3B3kB,WAAW,WACTkB,QAAQlC,IAAI,iBAAmBjB,EAAMygC,SACrCzgC,EAAMmB,MAAMoiB,MAAK,GACjBvjB,EAAMmB,MAAMykB,QACX5lB,EAAM2gC,WAET1+B,WAAW,WACTkB,QAAQlC,IAAI,kBAAoBjB,EAAMygC,SACtCzgC,EAAMmB,MAAMob,QACXvc,EAAM2gC,UAAY3gC,EAAM4mB,aA7BjC,GAAIga,GAAa,GAAKnR,EAAOtuB,MAAMC,IAAM,IACrCy/B,EAA6B,EAAbD,EAChBE,EAAoBD,EAAgBpR,EAAOtuB,MAAME,SAAW,GAiChE,OADAm/B,KACOrX,YAAYqX,EAAqBM,GAG1C,QAASzB,GAAgB/jB,GACvBgO,cAAchO,GA3IhBvX,OAAO2rB,eAAejxB,EAAS,cAC7BkS,OAAO,IAETlS,EAAQugC,aAAeA,EACvBvgC,EAAQ0gC,YAAcA,EACtB1gC,EAAQ6gC,gBAAkBA,EAC1B7gC,EAAQohC,qBAAuBA,EAC/BphC,EAAQuhC,eAAiBA,EACzBvhC,EAAQ0hC,iBAAmBA,EAC3B1hC,EAAQygC,iBAAmBA,EAC3BzgC,EAAQ4gC,gBAAkBA,EAC1BlhC,EAAQ,SAER,IAAIsxB,GAAStxB,EAAQ,kBAEjByiC,EAAa,GAAKnR,EAAOtuB,MAAMC,IAC/By/B,EAA6B,EAAbD,CACIniC,GAAQqiC,kBAAoBD,EAAgBpR,EAAOtuB,MAAME,WA6H9EsuB,iBAAiB,EAAEoR,OAAS,IAAIC,GAAG,SAAS7iC,EAAQU,EAAOJ,GAC9D,YAyBA,SAASyJ,KACP,GAAI+4B,GAAgB,GAAIttB,QAAOG,QAAQotB,EAEvCD,GAAc7sB,IAAI,GAAIT,QAAOqJ,KAAMtI,MAAO,YAAa2G,KAAM,KAC7D4lB,EAAc7sB,IAAI,GAAIT,QAAOqJ,KAAMtI,MAAO,eAC1CusB,EAAc7sB,IAAI,GAAIT,QAAOsJ,KAAM5Q,UAAWsH,OAAO4C,iBACrD0qB,EAAc7sB,IAAI,GAAIT,QAAOwJ,OAE7B8jB,EAAcruB,IAAI,aAAayB,cAAc,aAC7C4sB,EAAcruB,IAAI,aAAa0B,eAAe,aAC9C2sB,EAAcruB,IAAI,OAAO0B,eAAe,SAExC2sB,EAAcpkB,GAAG,YAAaskB,GAC9BF,EAAcpkB,GAAG,YAAaukB,GAE9BH,EAAcpkB,GAAG,WAAYwkB,GAC7BJ,EAAcpkB,GAAG,UAAWykB,GAC5BL,EAAcpkB,GAAG,SAAU0kB,GAE3BN,EAAcpkB,GAAG,aAAc2kB,GAC/BP,EAAcpkB,GAAG,YAAa4kB,GAC9BR,EAAcpkB,GAAG,WAAY6kB,GAC7BT,EAAcpkB,GAAG,cAAe,WAC9BokB,EAAcruB,IAAI,OAAOhC,KAAM3I,QAAQ,MAI3C,QAASk5B,GAAUzsB,GACjBvT,EAAMg+B,aAEN,IAAIwC,GAAUjtB,EAAMvK,OAChBqnB,EAAQ,GAAIwF,OAAM2K,EAAQv2B,EAAGu2B,EAAQr2B,GACrCs2B,EAAYvN,MAAMuJ,QAAQiE,QAAQrQ,EAAO/B,EAAOrvB,WAEpD,IAAIwhC,EAAW,CACb,GAAIztB,GAAOytB,EAAUztB,IAErBhR,SAAQlC,IAAIkT,IAIhB,QAASitB,GAAU1sB,GACjB,GAAIitB,GAAUjtB,EAAMvK,OAChBqnB,EAAQ,GAAIwF,OAAM2K,EAAQv2B,EAAGu2B,EAAQr2B,GACrCs2B,EAAYvN,MAAMuJ,QAAQiE,QAAQrQ,EAAO/B,EAAOrvB,WAEpD,IAAIwhC,EAAW,CACb,GAAIztB,GAAOytB,EAAUztB,KACjB7O,EAAS6O,EAAK7O,MAEd6O,GAAKQ,KAAKmtB,UACZ3tB,EAAKQ,KAAKotB,aAAe5tB,EAAKQ,KAAKotB,YAE/B5tB,EAAKQ,KAAKotB,aACZ5tB,EAAKmjB,UAAYyK,EACjB5tB,EAAKoiB,YAAcwL,IAEnB5tB,EAAKmjB,UAAYhyB,EAAOqP,KAAK6a,MAC7Brb,EAAKoiB,YAAcjxB,EAAOqP,KAAK6a,OAGjC/tB,OAAO2xB,IAAIK,MAAMjtB,MACfxB,KAAM,aACN8M,GAAIqC,EAAKrC,GACTvR,KAAM+E,EAAOqP,KAAK6a,MAClBuS,YAAa5tB,EAAKQ,KAAKotB,eAGzB5+B,QAAQlC,IAAI,oBAGdQ,QAAO2xB,IAAIO,aAAe,KAC1BxwB,QAAQlC,IAAI,eAIhB,QAASogC,GAAS3sB,GAIhB,IAAIjT,OAAO2xB,IAAIM,UACThf,EAAMvL,iBAAmBuL,EAAMvL,gBAAgBxK,OAAS,EAA9D,CACI+V,EAAMvL,gBAAgBxK,OAAS,GACjCwE,QAAQlC,IAAI,6BAGdE,EAAMg+B,cAEN19B,OAAO2xB,IAAIU,UAAYxmB,KAAKE,MAAMkH,EAAMtI,UAAWsI,EAAMvI,UAEzD,IAAIw1B,GAAUjtB,EAAMvK,OAChBqnB,EAAQ,GAAIwF,OAAM2K,EAAQv2B,EAAGu2B,EAAQr2B,GAErCuoB,EAAY,GAAIuB,OAClBmB,YAAa90B,OAAO2xB,IAAIC,aACxBvwB,KAAM,YACN+0B,YAAa,EACbyD,SAAS,EACT0G,UAAW,SAGbnO,GAAUzf,IAAIod,GAEd/vB,OAAO2xB,IAAIa,SAAWzC,GAEtB/vB,OAAO2xB,IAAIW,SACXtyB,OAAO2xB,IAAIY,MAAQxC,GAEnB/vB,OAAO2xB,IAAIQ,SAAS5zB,MAAM41B,eAAepE,KACvCA,MAAOA,EACPoF,OAAO,GAGTn1B,OAAO2xB,IAAIS,UAAYA,GAGzB,QAASyN,GAAQ5sB,GAEf,GADAA,EAAM4E,kBACF7X,OAAO2xB,IAAIM,SAAf,CAEA,GAAIiO,GAAUjtB,EAAMvK,OAChBqnB,EAAQ,GAAIwF,OAAM2K,EAAQv2B,EAAGu2B,EAAQr2B,GAErCd,EAAQ8C,KAAKE,MAAMkH,EAAMtI,UAAWsI,EAAMvI,WAC1C2nB,EAAYryB,OAAO2xB,IAAIU,UACvBqE,EAAaC,EAAKD,WAAW3tB,EAAOspB,GACpCmO,EAAoB7J,EAAKgB,IAAI3J,EAAOzvB,MAAMG,mBAC9CsB,QAAO2xB,IAAIU,UAAYtpB,CACvB,IAAIwpB,GAAOvyB,OAAO2xB,IAAIY,KAClBD,EAAQtyB,OAAO2xB,IAAIW,KAEvB,IAAIoE,EAAa8J,GACXjO,EAAKr1B,OAAS,EAAG,CAEnB,GAAIujC,GAAc1Q,CAMlB/vB,QAAO2xB,IAAIa,QAAQztB,KAAK07B,GACxBnO,EAAMvtB,KAAKwtB,GACXA,KAIJA,EAAKxtB,KAAKgrB,GAEV/vB,OAAO2xB,IAAIQ,SAAS5zB,MAAM41B,eAAepE,KACvCA,MAAOA,EACPwE,MAAO1oB,KAAK/B,IAAImJ,EAAMzJ,iBACtBT,MAAOA,GAGT/I,OAAO2xB,IAAIS,UAAUzf,IAAIod,GACzB/vB,OAAO2xB,IAAIW,MAAQA,EACnBtyB,OAAO2xB,IAAIY,KAAOA,EAElBK,MAAM8N,KAAKC,QAIb,QAASb,GAAO7sB,GACd,IAAIjT,OAAO2xB,IAAIM,SAAf,CAEA,GAAIiO,GAAUjtB,EAAMvK,OAChBqnB,EAAQ,GAAIwF,OAAM2K,EAAQv2B,EAAGu2B,EAAQr2B,GACrCuoB,EAAYpyB,OAAO2xB,IAAIS,UACvBG,EAAOvyB,OAAO2xB,IAAIY,KAClBD,EAAQtyB,OAAO2xB,IAAIW,MACnBE,EAAUxyB,OAAO2xB,IAAIa,QAErB+G,EAAQ,GAAIqH,QAAOxO,GACvBmH,GAAMrmB,KAAK6a,MAAQqE,EAAU0C,YAC7ByE,EAAMrmB,KAAKsE,QAAS,EACpB+hB,EAAMrmB,KAAKnJ,MAAQ,EACnBwvB,EAAMrmB,KAAKjJ,SAAW,EAEtBmoB,EAAUzf,IAAIod,GAGdwC,EAAKxtB,KAAKgrB,GACVuC,EAAMvtB,KAAKwtB,GAEXvyB,OAAO2xB,IAAIQ,SAAS5zB,MAAM41B,eAAepE,KACvCA,MAAOA,EACPllB,MAAM,GAGR2nB,EAAQztB,KAAKgrB,GAEbqC,EAAUyO,UAEV,IAAIC,GAAY1O,EAAU2O,aACtBC,EAAYziC,MAAMm6B,iBAAiBoI,EACvCp/B,SAAQlC,IAAIwhC,EACZ,IAAIC,GAAkB1iC,MAAM4+B,SAAS/L,KAAK4P,GACtCE,EAAe,MAEjBA,GADED,EAAgB3P,MAAQ,GACX2P,EAAgBtQ,QAEhB,QAGjBjvB,QAAQlC,IAAI,eAAgB0hC,EAAcD,EAAgB3P,MAG1D,IAAI6P,GAAmB5iC,MAAM+6B,UAAUC,EAAO/G,GAC1C4O,EAAoBnH,EAAekH,EAAkB,GACrDE,EAAaD,EAAkB,GAC/BE,EAAmBF,EAAkB,EAWzC,IATA7H,EAAMgB,YAAY8G,GAClBjP,EAAYmH,EAAMC,eAAepH,UAAU,GAC3CA,EAAU0C,YAAcyE,EAAMzE,YAO1BwM,EAAkB,CACpB,GAAIC,GAAkBhjC,MAAMm5B,mBAAmBtF,GAC3CoP,EAAsB,GAAI7N,MAAK4N,EACnCC,GAAoB3H,SAAU,CAC9B,IAAI4H,GAA4BD,EAAoBtkC,MAChD2O,MAAK/B,IAAI23B,EAA4BrP,EAAUl1B,QAAUk1B,EAAUl1B,QAAU,KAC/Ek1B,EAAUsP,iBAEVtP,EAAUxzB,SAAW2iC,GAMzBT,EAAY1O,EAAU2O,aACtBC,EAAYziC,MAAMm6B,iBAAiBoI,GACnCG,EAAkB1iC,MAAM4+B,SAAS/L,KAAK4P,GAEpCE,EADED,EAAgB3P,MAAQ,GACX2P,EAAgBtQ,QAEhB,OAEjB,IAAIgR,GAAY5T,MAAMD,aAAa9tB,OAAO2xB,IAAIC,cAM1CgQ,GAAa,EACbC,EAAiG,IAAvEniC,EAAM6+B,eAAehF,EAAMuI,OAAOn4B,EAAIi1B,EAAYS,GAC5E0C,EAAoG,IAA3EriC,EAAM6+B,eAAehF,EAAMuI,OAAOtR,MAAQoO,EAAYS,GAC/E2C,IACJA,GAAetiC,MAAQ0oB,EAAO8Y,GAC9Bc,EAAe9C,UAAY2C,EAC3BG,EAAe7c,SAAW4c,EAC1BC,EAAehD,QAAUzF,EAAMlpB,GAC3B2d,EAAO/uB,OAAOiiC,GAAc/hC,QAC9B6iC,EAAe7iC,QAAS,EACxB6iC,EAAe/C,WAAa0C,EAExBC,GACFxZ,EAAO8Y,GAAc/c,KAAKwd,KAG5BK,EAAe7iC,QAAS,EAEpByiC,GACFxZ,EAAO8Y,GAAc/c,QAIzBnkB,OAAO2xB,IAAIE,YAAY9sB,KAAKi9B,GAG5BtgC,QAAQlC,IAAI0hC,EAAe,IAAMS,EAEjC,IAAIlI,GAAgBrH,EAAU6P,cAC9B,IAAIxI,EAAcv8B,OAAS,EAAG,CAE5B,GAAI08B,GAAW,GAAIjG,KACnBiG,GAASsI,YAAY9P,GACrBwH,EAASC,SAAU,CAEnB,IAAIsI,GAAgB5jC,MAAM06B,mBAAmBW,EAE7C,IAAIuI,EAAcjlC,OAAS,EACzB,IAAK,GAAIP,GAAI,EAAGA,EAAIwlC,EAAcjlC,OAAQP,IACpCy1B,EAAUwD,QACZuM,EAAcxlC,GAAGk5B,UAAYzD,EAAU0C,YACvCqN,EAAcxlC,GAAGuW,KAAKmtB,UAAW,EACjC8B,EAAcxlC,GAAGuW,KAAKotB,aAAc,IAEpC6B,EAAcxlC,GAAGk5B,UAAYyK,EAC7B6B,EAAcxlC,GAAGuW,KAAKotB,aAAc,GAEtC6B,EAAcxlC,GAAGuW,KAAKmtB,UAAW,EACjC8B,EAAcxlC,GAAGk9B,SAAU,EAC3BsI,EAAcxlC,GAAGi5B,QAAS,EAC1B2D,EAAM6I,SAASD,EAAcxlC,IAC7BwlC,EAAcxlC,GAAG0lC,iBAKrB,IAAIjQ,EAAUwD,OAAQ,CACpB,GAAI0M,GAAelQ,EAAUqB,OAC7B6O,GAAazI,SAAU,EACvByI,EAAazM,UAAY0D,EAAMzE,YAC/BwN,EAAapvB,KAAKmtB,UAAW,EAC7BiC,EAAapvB,KAAKotB,aAAc,EAChC/G,EAAM6I,SAASE,GACfA,EAAaD,aAIjB,GAAIhJ,GAAWE,EAAM6C,UACnB1d,MAAO,SAAehM,GACpB,MAAqB,cAAdA,EAAKrR,QAQZkhC,EAAa,GAAI5O,KACrB,IAAI0F,EAASn8B,OAAS,EAAG,CACvB,GAAIslC,GAAc,GAAI7O,KACtB6O,GAAYN,YAAY7I,EAAS,IACjCmJ,EAAY3I,SAAU,CAEtB,KAAK,GAAImD,GAAK,EAAGA,EAAK3D,EAASn8B,OAAQ8/B,IAAM,CAC3C,GAAIyF,GAAY,GAAI9O,KACpB8O,GAAUP,YAAY7I,EAAS2D,IAC/ByF,EAAU5I,SAAU,EAEpB0I,EAAaC,EAAYlH,MAAMmH,GAC/BA,EAAUtnB,SACVqnB,EAAcD,OAEPlJ,GAASn8B,OAAS,GAC3BqlC,EAAWL,YAAY7I,EAAS,GAGlCkJ,GAAW1I,SAAU,EACrB0I,EAAWrvB,KAAK7R,KAAO,OAEvBk4B,EAAM6I,SAASG,GACfA,EAAWF,aAIXriC,OAAO2xB,IAAIS,UAAYA,EACvBpyB,OAAO2xB,IAAIY,KAAOA,EAClBvyB,OAAO2xB,IAAIW,MAAQA,EACnBtyB,OAAO2xB,IAAIa,QAAUA,EAErBxyB,OAAO2xB,IAAIK,MAAMjtB,MACfxB,KAAM,WACN8M,GAAIkpB,EAAMlpB,KAGR2d,EAAOvuB,eACT85B,EAAMmJ,UACJxgC,YACE6H,MAAO,IAET44B,UACExd,SAAU,IACVyd,OAAQ,aAGV1gC,YACE6H,MAAO,MAET44B,UACExd,SAAU,IACVyd,OAAQ,cAMhB,QAAS7C,GAAW9sB,GAClBvR,QAAQlC,IAAI,aAAcyT,EAAMvK,QAChChJ,EAAMg+B,cAEN8B,cAAcruB,IAAI,OAAOhC,KAAM3I,QAAQ,GACvC,IAAI05B,GAAUjtB,EAAMvK,OAChBqnB,EAAQ,GAAIwF,OAAM2K,EAAQv2B,EAAGu2B,EAAQr2B,GACrCs2B,EAAY0C,mBAAmB9S,EAE/BoQ,IACFlO,UAAW,EACXjyB,OAAO2xB,IAAIO,aAAeiO,EAC1BngC,OAAO2xB,IAAIc,UAAY,EACvBzyB,OAAO2xB,IAAIe,aAAezf,EAAMhJ,SAEhCjK,OAAO2xB,IAAIgB,iBAAmBwN,EAAUxB,SACxC3+B,OAAO2xB,IAAImR,iBAAmB3C,EAAUjtB,KAAKjJ,SAC7CjK,OAAO2xB,IAAIoR,cAAgB5C,EAAUjtB,KAAKnJ,MAEtCikB,EAAOvuB,eACT0gC,EAAUuC,SACRxgC,YACE6H,MAAO,MAET44B,UACExd,SAAU,IACVyd,OAAQ,eAKd5iC,OAAO2xB,IAAIO,aAAe,KAC1BxwB,QAAQlC,IAAI,gBAIhB,QAASwgC,GAAU/sB,GACjBvR,QAAQlC,IAAI,aACZyT,EAAM4E,gBACN,IAAIqa,GAAelyB,OAAO2xB,IAAIO,YAC9B,IAAMA,EAAc,CAGlB,GAAI8Q,GAAe/vB,EAAMlJ,MACrBk5B,EAAaD,EAAehjC,OAAO2xB,IAAIc,SAE3CzyB,QAAO2xB,IAAIc,UAAYuQ,CAEvB,IAAIE,GAAkBjwB,EAAMhJ,SACxBk5B,EAAgBD,EAAkBljC,OAAO2xB,IAAIe,YACjD1yB,QAAO2xB,IAAIe,aAAewQ,EAK1BhR,EAAayM,SAAW1rB,EAAMvK,OAC9BwpB,EAAanoB,MAAMk5B,GACnB/Q,EAAakR,OAAOD,GAEpBjR,EAAahf,KAAKnJ,OAASk5B,EAC3B/Q,EAAahf,KAAKjJ,UAAYk5B,GAIlC,QAASlD,GAAShtB,GAChBjT,OAAO2xB,IAAII,UAAY9e,CACvB,IAAIif,GAAelyB,OAAO2xB,IAAIO,aAC1BS,EAAmB3yB,OAAO2xB,IAAIgB,iBAC9BmQ,EAAmB9iC,OAAO2xB,IAAImR,iBAC9BC,EAAgB/iC,OAAO2xB,IAAIoR,aAE/B,IAAM7Q,EAAc,CAClBA,EAAahf,KAAKsE,QAAS,CAC3B,IAAI6rB,IACFhzB,GAAI6hB,EAAa7hB,GACjB9M,KAAM,YAEJ2uB,GAAayM,UAAYhM,IAC3B0Q,EAAK1E,SAAWhM,GAGdT,EAAahf,KAAKjJ,UAAY64B,IAChCO,EAAKp5B,SAAW64B,EAAmB5Q,EAAahf,KAAKjJ,UAGnDioB,EAAahf,KAAKnJ,OAASg5B,IAC7BM,EAAKt5B,MAAQg5B,EAAgB7Q,EAAahf,KAAKnJ,OAGjDrI,QAAQlC,IAAI,cAAe0yB,EAAahf,KAAKnJ,OAC7CrI,QAAQlC,IAAI6jC,GAEZrjC,OAAO2xB,IAAIK,MAAMjtB,KAAKs+B,GAElBx3B,KAAK/B,IAAImJ,EAAMxI,UAAY,GAE7B64B,IAeJrR,UAAW,EACXzxB,WAAW,WACTg/B,cAAcruB,IAAI,OAAOhC,KAAM3I,QAAQ,KACtC,KAGL,QAAS88B,KACP,GAAItkC,GAAqBgvB,EAAOhvB,mBAC5B+yB,EAAY/xB,OAAO2xB,IAAII,UACvB6M,EAAYhM,MAAM8N,KAAK6C,SAAS/S,MAChCgT,EAAa5Q,MAAM8N,KAAK6C,SAAS9S,OACjCyB,EAAelyB,OAAO2xB,IAAIO,YAE9B,OAAIA,GAAayM,SAASh1B,GAAK,EAAIuoB,EAAa4P,OAAOtR,OAAS0B,EAAayM,SAASh1B,GAAKi1B,EAAY1M,EAAa4P,OAAOtR,OAAS0B,EAAayM,SAAS90B,GAAK,EAAIqoB,EAAa4P,OAAOrR,QAAUyB,EAAayM,SAAS90B,GAAK25B,EAAatR,EAAa4P,OAAOrR,QAC3PyB,EAAahf,KAAKuwB,WAAY,OAC9BvR,EAAa2H,SAAU,KAGzB6J,sBAAsBJ,GACtBpR,EAAayM,SAASh1B,GAAKooB,EAAUrnB,UAAY1L,OACjDkzB,EAAayM,SAAS90B,GAAKkoB,EAAUpnB,UAAY3L,IA1hBnDsD,OAAO2rB,eAAejxB,EAAS,cAC7BkS,OAAO,GAGT,IAAI+qB,GAAiB,WAAc,QAASwC,GAAcC,EAAK//B,GAAK,GAAIggC,MAAeC,GAAK,EAAUC,GAAK,EAAWC,EAAK38B,MAAW,KAAM,IAAK,GAAiC48B,GAA7BC,EAAKN,EAAIO,OAAOj8B,cAAmB47B,GAAMG,EAAKC,EAAGtC,QAAQwC,QAAoBP,EAAK53B,KAAKg4B,EAAG7tB,QAAYvS,GAAKggC,EAAKz/B,SAAWP,GAA3DigC,GAAK,IAAoE,MAAOte,GAAOue,GAAK,EAAMC,EAAKxe,EAAO,QAAU,KAAWse,GAAMI,EAAW,QAAGA,EAAW,SAAO,QAAU,GAAIH,EAAI,KAAMC,IAAQ,MAAOH,GAAQ,MAAO,UAAUD,EAAK//B,GAAK,GAAIiE,MAAMC,QAAQ67B,GAAQ,MAAOA,EAAY,IAAIO,OAAOj8B,WAAYsB,QAAOo6B,GAAQ,MAAOD,GAAcC,EAAK//B,EAAa,MAAM,IAAIgX,WAAU,2DAEtlB3W,GAAQyJ,KAAOA,EACf/J,EAAQ,WAER,IAAIsxB,GAAStxB,EAAQ,kBACjBgD,EAAQhD,EAAQ,WAChBi6B,EAAOj6B,EAAQ,UAEf0rB,EAAS1oB,EAAMm+B,kBAEf4B,EAASx/B,SAAS0jC,eAAe3V,EAAOluB,UAExC8+B,EAAYhM,MAAM8N,KAAK6C,SAAS/S,MAEhC6O,GADazM,MAAM8N,KAAK6C,SAAS9S,OACb/wB,EAAM2/B,mBAE1BiB,EAAc,GAAIrJ,OAAM,EAAG,KAwgB5B/I,iBAAiB,EAAEgF,UAAU,EAAEmK,SAAS,GAAGuG,SAAW,IAAIC,IAAI,SAASnnC,EAAQU,EAAOJ,GACzF,YAYA,SAASyJ,KACPq9B,IACAC,IACAC,IACAC,IACAC,IACAC,IAGF,QAASC,KACP1iC,QAAQlC,IAAI,eACZQ,OAAO2xB,IAAIE,eACXe,MAAMuJ,QAAQkI,YAAYC,iBAG5B,QAASC,KACP,GAAIjE,GAAc,GAAIrJ,OAAM,EAAG,EAE/B,IADAv1B,QAAQlC,IAAI,kBACNQ,OAAO2xB,IAAIK,MAAM90B,OAAS,GAE9B,WADAwE,SAAQlC,IAAI,eAId,IAAIglC,GAAWxkC,OAAO2xB,IAAIK,MAAMyS,MAC5B/xB,EAAOypB,QAAQuI,SACjBr0B,GAAIm0B,EAASn0B,IAGf,IAAIqC,EAEF,OADAA,EAAKmnB,SAAU,EACP2K,EAASjhC,MACf,IAAK,WACH7B,QAAQlC,IAAI,kBACZkT,EAAKyI,QACL,MACF,KAAK,aACCqpB,EAASlE,aACX5tB,EAAKmjB,UAAY2O,EAAS1lC,KAC1B4T,EAAKoiB,YAAc0P,EAAS1lC,OAE5B4T,EAAKmjB,UAAYyK,EACjB5tB,EAAKoiB,YAAcwL,EAEvB,KAAK,YACGkE,EAAS7F,WACbjsB,EAAKisB,SAAW6F,EAAS7F,UAErB6F,EAASv6B,WACbyI,EAAKzI,SAAWu6B,EAASv6B,UAErBu6B,EAASz6B,OACb2I,EAAK3I,MAAMy6B,EAASz6B,MAEtB,MACF,SACErI,QAAQlC,IAAI,oBAGhBkC,SAAQlC,IAAI,gCAIhB,QAASmlC,KACPjjC,QAAQlC,IAAI,gBACRQ,OAAO2xB,IAAIzJ,QACbxoB,MAAMg+B,aAAY,GAElBh+B,MAAM69B,eAGR77B,QAAQlC,IAAI,gBAGd,QAASolC,KACPljC,QAAQlC,IAAI,gBAGd,QAASqlC,KACPnjC,QAAQlC,IAAI,iBAGd,QAASskC,KACP,GAAIgB,GAAehS,EAAE,qBACjBiS,EAAiBD,EAAa7gC,KAAK,MACnC+gC,EAAmB,GACnBC,EAA2B,GAC3BC,EAAuB,kBAG3BH,GAAe3pB,GAAG,kBAAmB,WACnC,IAAK+pB,EAAMC,SAASpX,EAAOnuB,cAAe,CACxC,GAAIwlC,GAAOvS,EAAEjxB,MAAMoC,KAAK,oBAEnBohC,GAAKD,SAASF,KACjBpS,EAAE,IAAMoS,GAAsBvH,YAAYuH,GAAsBI,KAAK,QAASN,GAAkBM,KAAK,SAAUN,GAAkB/gC,KAAK,QAAQqhC,KAAK,KAAM,GAAGA,KAAK,KAAM,GAEvKD,EAAK7H,SAAS0H,GAAsBI,KAAK,QAASL,GAA0BK,KAAK,SAAUL,GAA0BhhC,KAAK,QAAQqhC,KAAK,KAAML,EAA2B,GAAGK,KAAK,KAAML,EAA2B,GAEjNjlC,OAAO2xB,IAAIC,aAAeyT,EAAKphC,KAAK,QAAQqhC,KAAK,YAMzD,QAASvB,KACPjR,EAAE,uBAAuB1X,GAAGmqB,EAAU,WAC/BJ,EAAMC,SAASvlC,IAClBukC,MAKN,QAASJ,KACPlR,EAAE,wBAAwB1X,GAAGmqB,EAAU,WAChCJ,EAAMC,SAASvlC,IAClB0kC,MAKN,QAASN,KACPnR,EAAE,6BAA6B1X,GAAGmqB,EAAUZ,GAG9C,QAAST,KACPpR,EAAE,uBAAuB1X,GAAGmqB,EAAU,WAC/BJ,EAAMC,SAASvlC,IAClB+kC,MAKN,QAAST,KACPrR,EAAE,wBAAwB1X,GAAGmqB,EAAU,WAChCJ,EAAMC,SAASvlC,IAClBglC,MAjJNviC,OAAO2rB,eAAejxB,EAAS,cAC7BkS,OAAO,IAETlS,EAAQyJ,KAAOA,CACf,IAAIunB,GAAStxB,EAAQ,kBAEjByoC,EAAQrS,EAAE,QACVyS,EAAW,kBACX1lC,EAAemuB,EAAOnuB,eA8IvBquB,iBAAiB,IAAIsX,IAAI,SAAS9oC,EAAQU,EAAOJ,GACpD,YAYA,SAAS26B,GAAI8N,GACX,MAAOA,GAAU55B,KAAKG,GAAK,IAI7B,QAAS05B,GAAIC,GACX,MAAiB,KAAVA,EAAgB95B,KAAKG,GAI9B,QAAS0qB,GAAW/sB,EAAGE,GACrB,MAAOgC,MAAK/B,IAAI+B,KAAKE,MAAMF,KAAKokB,IAAIpmB,EAAIF,GAAIkC,KAAKmkB,IAAInmB,EAAIF,KAI3D,QAASi8B,GAAMn6B,EAAIC,GACjB,MAAOG,MAAKC,KAAKD,KAAKsrB,IAAI1rB,EAAG9B,EAAI+B,EAAG/B,EAAG,GAAKkC,KAAKsrB,IAAI1rB,EAAG5B,EAAI6B,EAAG7B,EAAG,IA1BpEvH,OAAO2rB,eAAejxB,EAAS,cAC7BkS,OAAO,IAETlS,EAAQ26B,IAAMA,EACd36B,EAAQ0oC,IAAMA,EACd1oC,EAAQ05B,WAAaA,EACrB15B,EAAQ4oC,MAAQA,CACHlpC,GAAQ,oBAsBlBwxB,iBAAiB,SAAS","file":"../main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nexports.palette = {\n  colors: [\"#20171C\", \"#1E2A43\", \"#28377D\", \"#352747\", \"#CA2E26\", \"#9A2A1F\", \"#DA6C26\", \"#453121\", \"#916A47\", \"#DAAD27\", \"#7F7D31\", \"#2B5E2E\"],\n  colorNames: {\n    \"#20171C\": \"black\",\n    \"#1E2A43\": \"blue\",\n    \"#28377D\": \"blue\",\n    \"#352747\": \"blue\",\n    \"#CA2E26\": \"red\",\n    \"#9A2A1F\": \"red\",\n    \"#DA6C26\": \"orange\",\n    \"#453121\": \"brown\",\n    \"#916A47\": \"brown\",\n    \"#DAAD27\": \"orange\",\n    \"#7F7D31\": \"green\",\n    \"#2B5E2E\": \"green\"\n  },\n  pops: [\"#00ADEF\", \"#F285A5\", \"#7DC57F\", \"#F6EB16\", \"#F4EAE0\"],\n  colorSize: 20,\n  selectedColorSize: 30\n};\n\nexports.shape = {\n  extendingThreshold: 0.1,\n  trimmingThreshold: 0.075,\n  cornerThresholdDeg: 30,\n  hitOptions: {\n    segments: false,\n    stroke: true,\n    fill: true,\n    tolerance: 5\n  },\n  velocityMultiplier: 25\n};\n\nexports.shapes = {\n  \"line\": {\n    sprite: false\n  },\n  \"circle\": {\n    sprite: true\n  },\n  \"square\": {\n    sprite: true\n  },\n  \"triangle\": {\n    sprite: false\n  },\n  \"other\": {\n    sprite: false\n  }\n};\n\nexports.log = true;\n\nexports.runAnimations = false;\n\nexports.sound = {\n  bpm: 140,\n  measures: 4,\n  playingClass: 'playing'\n};\n\nexports.canvasId = 'canvas';\n\n},{}],2:[function(require,module,exports){\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n},{}],3:[function(require,module,exports){\n(function (global){\n/*!\n *  howler.js v2.0.2\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto iOS enabler.\n      self.mobileAutoEnable = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.value = vol;\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.value = muted ? 0 : self._volume;\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'running' : 'running';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Mobile browsers will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _enableMobileAudio: function() {\n      var self = this || Howler;\n\n      // Only run this on mobile devices if audio isn't already eanbled.\n      var isMobile = /iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(self._navigator && self._navigator.userAgent);\n      var isTouch = !!(('ontouchend' in window) || (self._navigator && self._navigator.maxTouchPoints > 0) || (self._navigator && self._navigator.msMaxTouchPoints > 0));\n      if (self._mobileEnabled || !self.ctx || (!isMobile && !isTouch)) {\n        return;\n      }\n\n      self._mobileEnabled = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function() {\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._mobileEnabled = true;\n          self.mobileAutoEnable = false;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchend', unlock, true);\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchend', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.state = 'resuming';\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio on iOS.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.mobileAutoEnable) {\n        Howler._enableMobileAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Check if this extension is available.\n        if (Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        var num = 0;\n        for (var i=0; i<self._sounds.length; i++) {\n          if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n            num++;\n            id = self._sounds[i]._id;\n          }\n        }\n\n        if (num === 1) {\n          sprite = null;\n        } else {\n          id = null;\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If we have no sprite and the sound hasn't loaded, we must wait\n      // for the sound to load to get our audio's duration.\n      if (self._state !== 'loaded' && !self._sprite[sprite]) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(self._soundById(sound._id) ? sound._id : undefined);\n          }\n        });\n\n        return sound._id;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          setTimeout(function() {\n            self._emit('play', sound._id);\n          }, 0);\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n      // Update the parameters of the sound\n      sound._paused = false;\n      sound._ended = false;\n      sound._sprite = sprite;\n      sound._seek = seek;\n      sound._start = self._sprite[sprite][0] / 1000;\n      sound._stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n            }, 0);\n          }\n        };\n\n        var isRunning = (Howler.state === 'running');\n        if (self._state === 'loaded' && isRunning) {\n          playWebAudio();\n        } else {\n          // Wait for the audio to load and then begin playback.\n          self.once(isRunning ? 'load' : 'resume', playWebAudio, isRunning ? sound._id : null);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          setTimeout(function() {\n            node.play();\n\n            // Setup the new end timer.\n            if (timeout !== Infinity) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            if (!internal) {\n              self._emit('play', sound._id);\n            }\n          }, 0);\n        };\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (self._state === 'loaded' && (window && window.ejecta || !node.readyState && Howler._navigator.isCocoonJS));\n        if (node.readyState === 4 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // make sure the sound has been created\n              if (!sound._node.bufferSource) {\n                if (!internal) {\n                  self._emit('stop', sound._id);\n                }\n\n                return self;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n            }\n          }\n        }\n\n        if (sound && !internal) {\n          self._emit('stop', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n      var diff = Math.abs(from - to);\n      var dir = from > to ? 'out' : 'in';\n      var steps = diff / 0.01;\n      var stepLen = (steps > 0) ? len / steps : len;\n\n      // Since browsers clamp timeouts to 4ms, we need to clamp our steps to that too.\n      if (stepLen < 4) {\n        steps = Math.ceil(steps / (4 / stepLen));\n        stepLen = 4;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          var vol = from;\n          sound._interval = setInterval(function(soundId, sound) {\n            // Update the volume amount, but only if the volume should change.\n            if (steps > 0) {\n              vol += (dir === 'in' ? 0.01 : -0.01);\n            }\n\n            // Make sure the volume is in the right bounds.\n            vol = Math.max(0, vol);\n            vol = Math.min(1, vol);\n\n            // Round to within 2 decimal points.\n            vol = Math.round(vol * 100) / 100;\n\n            // Change the volume.\n            if (self._webAudio) {\n              if (typeof id === 'undefined') {\n                self._volume = vol;\n              }\n\n              sound._volume = vol;\n            } else {\n              self.volume(vol, soundId, true);\n            }\n\n            // When the fade is complete, stop it and fire event.\n            if (vol === to) {\n              clearInterval(sound._interval);\n              sound._interval = null;\n              self.volume(vol, soundId);\n              self._emit('fade', soundId);\n            }\n          }.bind(self, ids[i], sound), stepLen);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded') {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            sound._rateSeek = self.seek(id[i]);\n            sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.value = rate;\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded') {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Restart the playback if the sound was playing.\n          if (playing) {\n            self.play(id, true);\n          }\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node) {\n            sound._node.currentTime = seek;\n          }\n\n          self._emit('seek', id);\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n          self._emit('end', sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading.\n          sounds[i]._node.src = 'data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQAAAAA=';\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n\n        // Remove the references in the global Howler object.\n        var index = Howler._howls.indexOf(self);\n        if (index >= 0) {\n          Howler._howls.splice(index, 1);\n        }\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      if (fn) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          if (fn === events[i].fn && id === events[i].id) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function() {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // don't move onto the next task until this one is done\n        self.once(task.event, function() {\n          self._queue.shift();\n          self._loadQueue();\n        });\n\n        task.action();\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        clearTimeout(self._endTimers[id]);\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop;\n      }\n      sound._node.bufferSource.playbackRate.value = sound._rate;\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n\n      if (self._scratchBuffer) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        try { node.bufferSource.buffer = self._scratchBuffer; } catch(e) {}\n      }\n      node.bufferSource = null;\n\n      return self;\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        self._node = new Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._muted = parent._muted;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = Math.round(Date.now() * Math.random());\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorListener, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Decode the buffer into an audio source.\n    Howler.ctx.decodeAudioData(arraybuffer, function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      }\n    }, function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    });\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.value = 1;\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.0.2\n *  howlerjs.com\n *\n *  (c) 2013-2016, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n  \n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n      self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n      self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              sound._panner.setPosition(pan, 0, 0);\n            } else {\n              sound._panner.pan.value = pan;\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or\n   * all in the group. The most common usage is to set the 'x' position for\n   * left/right panning. Setting any value higher than 1.0 will begin to\n   * decrease the volume of the sound as it moves further away.\n   * @param  {Number} x  The x-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} y  The y-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} z  The z-position of the audio from -1000.0 to 1000.0.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setPosition(x, y, z);\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            sound._panner.setOrientation(x, y, z);\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) There will be no volume reduction inside this angle.\n   *     coneOuterAngle - (360 by default) The volume will be reduced to a constant value of\n   *                      `coneOuterGain` outside this angle.\n   *     coneOuterGain - (0 by default) The amount of volume reduction outside of `coneOuterAngle`.\n   *     distanceModel - ('inverse' by default) Determines algorithm to use to reduce volume as audio moves\n   *                      away from listener. Can be `linear`, `inverse` or `exponential`.\n   *     maxDistance - (10000 by default) Volume won't reduce between source/listener beyond this distance.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *     refDistance - (1 by default) A reference distance for reducing volume as the source\n   *                    moves away from the listener.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener.\n   * \n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : self._distanceModel,\n            maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : self._maxDistance,\n            panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : self._panningModel,\n            refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : self._refDistance,\n            rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : self._rolloffFactor\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.panningModel = pa.panningModel;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.value = sound._stereo;\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id);\n    }\n  };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getColorName = getColorName;\nvar config = require('./../../config');\n\nfunction getColorName(color) {\n  if (color in config.palette.colorNames) {\n    return config.palette.colorNames[color];\n  } else {\n    return null;\n  }\n}\n\n},{\"./../../config\":1}],5:[function(require,module,exports){\n\"use strict\";\n\n(function (root, factory) {\n\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine([], factory);\n\t} else if (typeof module !== \"undefined\" && module.exports) {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.ShapeDetector = factory();\n\t}\n})(undefined, function () {\n\n\tvar _nbSamplePoints;\n\tvar _squareSize = 250;\n\tvar _phi = 0.5 * (-1.0 + Math.sqrt(5.0));\n\tvar _angleRange = deg2Rad(45.0);\n\tvar _anglePrecision = deg2Rad(2.0);\n\tvar _halfDiagonal = Math.sqrt(_squareSize * _squareSize + _squareSize * _squareSize) * 0.5;\n\tvar _origin = { x: 0, y: 0 };\n\n\tfunction deg2Rad(d) {\n\n\t\treturn d * Math.PI / 180.0;\n\t};\n\n\tfunction getDistance(a, b) {\n\n\t\tvar dx = b.x - a.x;\n\t\tvar dy = b.y - a.y;\n\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t};\n\n\tfunction Stroke(points, name) {\n\n\t\tthis.points = points;\n\t\tthis.name = name;\n\t\tthis.processStroke();\n\t};\n\n\tStroke.prototype.processStroke = function () {\n\n\t\tthis.points = this.resample();\n\t\tthis.setCentroid();\n\t\tthis.points = this.rotateBy(-this.indicativeAngle());\n\t\tthis.points = this.scaleToSquare();\n\t\tthis.setCentroid();\n\t\tthis.points = this.translateToOrigin();\n\n\t\treturn this;\n\t};\n\n\tStroke.prototype.resample = function () {\n\n\t\tvar localDistance, q;\n\t\tvar interval = this.strokeLength() / (_nbSamplePoints - 1);\n\t\tvar distance = 0.0;\n\t\tvar newPoints = [this.points[0]];\n\n\t\tfor (var i = 1; i < this.points.length; i++) {\n\t\t\tlocalDistance = getDistance(this.points[i - 1], this.points[i]);\n\n\t\t\tif (distance + localDistance >= interval) {\n\t\t\t\tq = {\n\t\t\t\t\tx: this.points[i - 1].x + (interval - distance) / localDistance * (this.points[i].x - this.points[i - 1].x),\n\t\t\t\t\ty: this.points[i - 1].y + (interval - distance) / localDistance * (this.points[i].y - this.points[i - 1].y)\n\t\t\t\t};\n\n\t\t\t\tnewPoints.push(q);\n\t\t\t\tthis.points.splice(i, 0, q);\n\t\t\t\tdistance = 0.0;\n\t\t\t} else {\n\t\t\t\tdistance += localDistance;\n\t\t\t}\n\t\t}\n\n\t\tif (newPoints.length === _nbSamplePoints - 1) {\n\t\t\tnewPoints.push(this.points[this.points.length - 1]);\n\t\t}\n\n\t\treturn newPoints;\n\t};\n\n\tStroke.prototype.rotateBy = function (angle) {\n\n\t\tvar point;\n\t\tvar cos = Math.cos(angle);\n\t\tvar sin = Math.sin(angle);\n\t\tvar newPoints = [];\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tpoint = this.points[i];\n\n\t\t\tnewPoints.push({\n\t\t\t\tx: (point.x - this.c.x) * cos - (point.y - this.c.y) * sin + this.c.x,\n\t\t\t\ty: (point.x - this.c.x) * sin + (point.y - this.c.y) * cos + this.c.y\n\t\t\t});\n\t\t}\n\n\t\treturn newPoints;\n\t};\n\n\tStroke.prototype.scaleToSquare = function () {\n\n\t\tvar point;\n\t\tvar newPoints = [];\n\t\tvar box = {\n\t\t\tminX: +Infinity,\n\t\t\tmaxX: -Infinity,\n\t\t\tminY: +Infinity,\n\t\t\tmaxY: -Infinity\n\t\t};\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tpoint = this.points[i];\n\n\t\t\tbox.minX = Math.min(box.minX, point.x);\n\t\t\tbox.minY = Math.min(box.minY, point.y);\n\t\t\tbox.maxX = Math.max(box.maxX, point.x);\n\t\t\tbox.maxY = Math.max(box.maxY, point.y);\n\t\t}\n\n\t\tbox.width = box.maxX - box.minX;\n\t\tbox.height = box.maxY - box.minY;\n\n\t\tfor (i = 0; i < this.points.length; i++) {\n\t\t\tpoint = this.points[i];\n\n\t\t\tnewPoints.push({\n\t\t\t\tx: point.x * (_squareSize / box.width),\n\t\t\t\ty: point.y * (_squareSize / box.height)\n\t\t\t});\n\t\t}\n\n\t\treturn newPoints;\n\t};\n\n\tStroke.prototype.translateToOrigin = function (points) {\n\n\t\tvar point;\n\t\tvar newPoints = [];\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tpoint = this.points[i];\n\n\t\t\tnewPoints.push({\n\t\t\t\tx: point.x + _origin.x - this.c.x,\n\t\t\t\ty: point.y + _origin.y - this.c.y\n\t\t\t});\n\t\t}\n\n\t\treturn newPoints;\n\t};\n\n\tStroke.prototype.setCentroid = function () {\n\n\t\tvar point;\n\t\tthis.c = {\n\t\t\tx: 0.0,\n\t\t\ty: 0.0\n\t\t};\n\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tpoint = this.points[i];\n\n\t\t\tthis.c.x += point.x;\n\t\t\tthis.c.y += point.y;\n\t\t}\n\n\t\tthis.c.x /= this.points.length;\n\t\tthis.c.y /= this.points.length;\n\n\t\treturn this;\n\t};\n\n\tStroke.prototype.indicativeAngle = function () {\n\n\t\treturn Math.atan2(this.c.y - this.points[0].y, this.c.x - this.points[0].x);\n\t};\n\n\tStroke.prototype.strokeLength = function () {\n\n\t\tvar d = 0.0;\n\n\t\tfor (var i = 1; i < this.points.length; i++) {\n\t\t\td += getDistance(this.points[i - 1], this.points[i]);\n\t\t}\n\n\t\treturn d;\n\t};\n\n\tStroke.prototype.distanceAtBestAngle = function (pattern) {\n\n\t\tvar a = -_angleRange;\n\t\tvar b = _angleRange;\n\t\tvar x1 = _phi * a + (1.0 - _phi) * b;\n\t\tvar f1 = this.distanceAtAngle(pattern, x1);\n\t\tvar x2 = (1.0 - _phi) * a + _phi * b;\n\t\tvar f2 = this.distanceAtAngle(pattern, x2);\n\n\t\twhile (Math.abs(b - a) > _anglePrecision) {\n\n\t\t\tif (f1 < f2) {\n\t\t\t\tb = x2;\n\t\t\t\tx2 = x1;\n\t\t\t\tf2 = f1;\n\t\t\t\tx1 = _phi * a + (1.0 - _phi) * b;\n\t\t\t\tf1 = this.distanceAtAngle(pattern, x1);\n\t\t\t} else {\n\t\t\t\ta = x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tf1 = f2;\n\t\t\t\tx2 = (1.0 - _phi) * a + _phi * b;\n\t\t\t\tf2 = this.distanceAtAngle(pattern, x2);\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(f1, f2);\n\t};\n\n\tStroke.prototype.distanceAtAngle = function (pattern, angle) {\n\n\t\tvar strokePoints = this.rotateBy(angle);\n\t\tvar patternPoints = pattern.points;\n\t\tvar d = 0.0;\n\n\t\tfor (var i = 0; i < strokePoints.length; i++) {\n\t\t\td += getDistance(strokePoints[i], patternPoints[i]);\n\t\t}\n\n\t\treturn d / strokePoints.length;\n\t};\n\n\tfunction ShapeDetector(patterns, options) {\n\n\t\toptions = options || {};\n\t\tthis.threshold = options.threshold || 0;\n\t\t_nbSamplePoints = options.nbSamplePoints || 64;\n\n\t\tthis.patterns = [];\n\n\t\tfor (var i = 0; i < patterns.length; i++) {\n\t\t\tthis.learn(patterns[i].name, patterns[i].points);\n\t\t}\n\t}\n\n\tShapeDetector.defaultShapes = [{\n\t\tpoints: [{ x: 47, y: 55 }, { x: 156, y: 55 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 57, y: 158 }, { x: 148, y: 75 }, { x: 207, y: 29 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 22, y: 38 }, { x: 60, y: 55 }, { x: 119, y: 87 }, { x: 186, y: 125 }, { x: 259, y: 158 }, { x: 271, y: 161 }, { x: 277, y: 166 }, { x: 295, y: 172 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 154, y: 42 }, { x: 157, y: 150 }, { x: 160, y: 240 }, { x: 168, y: 325 }, { x: 171, y: 339 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 9, y: 95 }, { x: 23, y: 66 }, { x: 57, y: 41 }, { x: 83, y: 48 }, { x: 116, y: 81 }, { x: 174, y: 102 }, { x: 256, y: 45 }, { x: 312, y: 18 }, { x: 371, y: 74 }, { x: 382, y: 98 }, { x: 388, y: 108 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 151, y: 7 }, { x: 141, y: 17 }, { x: 121, y: 50 }, { x: 149, y: 69 }, { x: 170, y: 92 }, { x: 198, y: 172 }, { x: 191, y: 237 }, { x: 170, y: 287 }, { x: 173, y: 306 }, { x: 229, y: 363 }, { x: 259, y: 388 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 71, y: 279 }, { x: 220, y: 279 }, { x: 290, y: 273 }, { x: 424, y: 269 }, { x: 593, y: 269 }, { x: 689, y: 264 }, { x: 763, y: 240 }, { x: 873, y: 228 }, { x: 901, y: 231 }, { x: 912, y: 233 }, { x: 918, y: 227 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 565, y: 91 }, { x: 565, y: 501 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 131, y: 79 }, { x: 131, y: 383 }],\n\t\tname: \"line\"\n\t}, {\n\t\tpoints: [{ x: 140.17500305175776, y: 420.52500915527327 }, { x: 157.69687843322748, y: 385.4812583923338 }, { x: 175.2187538146972, y: 350.4375076293944 }, { x: 192.7406291961669, y: 315.39375686645496 }, { x: 210.26250457763663, y: 280.3500061035155 }, { x: 227.78437995910636, y: 245.30625534057606 }, { x: 245.30625534057606, y: 210.26250457763663 }, { x: 262.8281307220458, y: 175.2187538146972 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 297.87188148498524, y: 175.2187538146972 }, { x: 315.39375686645496, y: 210.26250457763663 }, { x: 332.9156322479247, y: 245.30625534057606 }, { x: 350.4375076293944, y: 280.3500061035155 }, { x: 367.95938301086414, y: 315.39375686645496 }, { x: 385.4812583923338, y: 350.4375076293944 }, { x: 403.00313377380354, y: 385.4812583923338 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }],\n\t\tname: \"triangle\"\n\t}, {\n\t\tpoints: [{ x: 280.3500061035155, y: 140.17500305175776 }, { x: 297.87188148498524, y: 175.2187538146972 }, { x: 315.39375686645496, y: 210.26250457763663 }, { x: 332.9156322479247, y: 245.30625534057606 }, { x: 350.4375076293944, y: 280.3500061035155 }, { x: 367.95938301086414, y: 315.39375686645496 }, { x: 385.4812583923338, y: 350.4375076293944 }, { x: 403.00313377380354, y: 385.4812583923338 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 157.69687843322748, y: 385.4812583923338 }, { x: 175.2187538146972, y: 350.4375076293944 }, { x: 192.7406291961669, y: 315.39375686645496 }, { x: 210.26250457763663, y: 280.3500061035155 }, { x: 227.78437995910636, y: 245.30625534057606 }, { x: 245.30625534057606, y: 210.26250457763663 }, { x: 262.8281307220458, y: 175.2187538146972 }, { x: 280.3500061035155, y: 140.17500305175776 }],\n\t\tname: \"triangle\"\n\t}, {\n\t\tpoints: [{ x: 420.52500915527327, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 157.69687843322748, y: 385.4812583923338 }, { x: 175.2187538146972, y: 350.4375076293944 }, { x: 192.7406291961669, y: 315.39375686645496 }, { x: 210.26250457763663, y: 280.3500061035155 }, { x: 227.78437995910636, y: 245.30625534057606 }, { x: 245.30625534057606, y: 210.26250457763663 }, { x: 262.8281307220458, y: 175.2187538146972 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 297.87188148498524, y: 175.2187538146972 }, { x: 315.39375686645496, y: 210.26250457763663 }, { x: 332.9156322479247, y: 245.30625534057606 }, { x: 350.4375076293944, y: 280.3500061035155 }, { x: 367.95938301086414, y: 315.39375686645496 }, { x: 385.4812583923338, y: 350.4375076293944 }, { x: 403.00313377380354, y: 385.4812583923338 }, { x: 420.52500915527327, y: 420.52500915527327 }],\n\t\tname: \"triangle\"\n\t}, {\n\t\tpoints: [{ x: 140.17500305175776, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 403.00313377380354, y: 385.4812583923338 }, { x: 385.4812583923338, y: 350.4375076293944 }, { x: 367.9593830108641, y: 315.39375686645496 }, { x: 350.4375076293944, y: 280.3500061035155 }, { x: 332.9156322479247, y: 245.30625534057606 }, { x: 315.39375686645496, y: 210.26250457763663 }, { x: 297.87188148498524, y: 175.2187538146972 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 262.8281307220458, y: 175.2187538146972 }, { x: 245.30625534057606, y: 210.26250457763663 }, { x: 227.78437995910636, y: 245.30625534057606 }, { x: 210.26250457763663, y: 280.3500061035155 }, { x: 192.7406291961669, y: 315.39375686645496 }, { x: 175.2187538146972, y: 350.4375076293944 }, { x: 157.69687843322748, y: 385.4812583923338 }, { x: 140.17500305175776, y: 420.52500915527327 }],\n\t\tname: \"triangle\"\n\t}, {\n\t\tpoints: [{ x: 420.52500915527327, y: 420.52500915527327 }, { x: 403.00313377380354, y: 385.4812583923338 }, { x: 385.4812583923338, y: 350.4375076293944 }, { x: 367.9593830108641, y: 315.39375686645496 }, { x: 350.4375076293944, y: 280.3500061035155 }, { x: 332.9156322479247, y: 245.30625534057606 }, { x: 315.39375686645496, y: 210.26250457763663 }, { x: 297.87188148498524, y: 175.2187538146972 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 262.8281307220458, y: 175.2187538146972 }, { x: 245.30625534057606, y: 210.26250457763663 }, { x: 227.78437995910636, y: 245.30625534057606 }, { x: 210.26250457763663, y: 280.3500061035155 }, { x: 192.7406291961669, y: 315.39375686645496 }, { x: 175.2187538146972, y: 350.4375076293944 }, { x: 157.69687843322748, y: 385.4812583923338 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }],\n\t\tname: \"triangle\"\n\t}, {\n\t\tpoints: [{ x: 280.3500061035155, y: 140.17500305175776 }, { x: 262.8281307220458, y: 175.2187538146972 }, { x: 245.30625534057606, y: 210.26250457763663 }, { x: 227.78437995910636, y: 245.30625534057606 }, { x: 210.26250457763663, y: 280.3500061035155 }, { x: 192.7406291961669, y: 315.39375686645496 }, { x: 175.2187538146972, y: 350.4375076293944 }, { x: 157.69687843322748, y: 385.4812583923338 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 403.00313377380354, y: 385.4812583923338 }, { x: 385.4812583923338, y: 350.4375076293944 }, { x: 367.9593830108641, y: 315.39375686645496 }, { x: 350.4375076293944, y: 280.3500061035155 }, { x: 332.9156322479247, y: 245.30625534057606 }, { x: 315.39375686645496, y: 210.26250457763663 }, { x: 297.87188148498524, y: 175.2187538146972 }, { x: 280.3500061035155, y: 140.17500305175776 }],\n\t\tname: \"triangle\"\n\t}, {\n\t\tpoints: [{ x: 140.17500305175776, y: 140.17500305175776 }, { x: 175.2187538146972, y: 140.17500305175776 }, { x: 210.26250457763663, y: 140.17500305175776 }, { x: 245.30625534057606, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 315.39375686645496, y: 140.17500305175776 }, { x: 350.4375076293944, y: 140.17500305175776 }, { x: 385.4812583923338, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 175.2187538146972 }, { x: 420.52500915527327, y: 210.26250457763663 }, { x: 420.52500915527327, y: 245.30625534057606 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 420.52500915527327, y: 315.39375686645496 }, { x: 420.52500915527327, y: 350.4375076293944 }, { x: 420.52500915527327, y: 385.4812583923338 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 385.4812583923338 }, { x: 140.17500305175776, y: 350.4375076293944 }, { x: 140.17500305175776, y: 315.39375686645496 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 140.17500305175776, y: 245.30625534057606 }, { x: 140.17500305175776, y: 210.26250457763663 }, { x: 140.17500305175776, y: 175.2187538146972 }, { x: 140.17500305175776, y: 140.17500305175776 }],\n\t\tname: \"square\"\n\t}, {\n\t\tpoints: [{ x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 175.2187538146972 }, { x: 420.52500915527327, y: 210.26250457763663 }, { x: 420.52500915527327, y: 245.30625534057606 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 420.52500915527327, y: 315.39375686645496 }, { x: 420.52500915527327, y: 350.4375076293944 }, { x: 420.52500915527327, y: 385.4812583923338 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 385.4812583923338 }, { x: 140.17500305175776, y: 350.4375076293944 }, { x: 140.17500305175776, y: 315.39375686645496 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 140.17500305175776, y: 245.30625534057606 }, { x: 140.17500305175776, y: 210.26250457763663 }, { x: 140.17500305175776, y: 175.2187538146972 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 175.2187538146972, y: 140.17500305175776 }, { x: 210.26250457763663, y: 140.17500305175776 }, { x: 245.30625534057606, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 315.39375686645496, y: 140.17500305175776 }, { x: 350.4375076293944, y: 140.17500305175776 }, { x: 385.4812583923338, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }],\n\t\tname: \"square\"\n\t}, {\n\t\tpoints: [{ x: 420.52500915527327, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 385.4812583923338 }, { x: 140.17500305175776, y: 350.4375076293944 }, { x: 140.17500305175776, y: 315.39375686645496 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 140.17500305175776, y: 245.30625534057606 }, { x: 140.17500305175776, y: 210.26250457763663 }, { x: 140.17500305175776, y: 175.2187538146972 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 175.2187538146972, y: 140.17500305175776 }, { x: 210.26250457763663, y: 140.17500305175776 }, { x: 245.30625534057606, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 315.39375686645496, y: 140.17500305175776 }, { x: 350.4375076293944, y: 140.17500305175776 }, { x: 385.4812583923338, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 175.2187538146972 }, { x: 420.52500915527327, y: 210.26250457763663 }, { x: 420.52500915527327, y: 245.30625534057606 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 420.52500915527327, y: 315.39375686645496 }, { x: 420.52500915527327, y: 350.4375076293944 }, { x: 420.52500915527327, y: 385.4812583923338 }, { x: 420.52500915527327, y: 420.52500915527327 }],\n\t\tname: \"square\"\n\t}, {\n\t\tpoints: [{ x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 385.4812583923338 }, { x: 140.17500305175776, y: 350.4375076293944 }, { x: 140.17500305175776, y: 315.39375686645496 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 140.17500305175776, y: 245.30625534057606 }, { x: 140.17500305175776, y: 210.26250457763663 }, { x: 140.17500305175776, y: 175.2187538146972 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 175.2187538146972, y: 140.17500305175776 }, { x: 210.26250457763663, y: 140.17500305175776 }, { x: 245.30625534057606, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 315.39375686645496, y: 140.17500305175776 }, { x: 350.4375076293944, y: 140.17500305175776 }, { x: 385.4812583923338, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 175.2187538146972 }, { x: 420.52500915527327, y: 210.26250457763663 }, { x: 420.52500915527327, y: 245.30625534057606 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 420.52500915527327, y: 315.39375686645496 }, { x: 420.52500915527327, y: 350.4375076293944 }, { x: 420.52500915527327, y: 385.4812583923338 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }],\n\t\tname: \"square\"\n\t}, {\n\t\tpoints: [{ x: 140.17500305175776, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 385.4812583923338 }, { x: 420.52500915527327, y: 350.4375076293944 }, { x: 420.52500915527327, y: 315.39375686645496 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 420.52500915527327, y: 245.30625534057606 }, { x: 420.52500915527327, y: 210.26250457763663 }, { x: 420.52500915527327, y: 175.2187538146972 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 385.4812583923338, y: 140.17500305175776 }, { x: 350.4375076293944, y: 140.17500305175776 }, { x: 315.39375686645496, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 245.30625534057606, y: 140.17500305175776 }, { x: 210.26250457763663, y: 140.17500305175776 }, { x: 175.2187538146972, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 175.2187538146972 }, { x: 140.17500305175776, y: 210.26250457763663 }, { x: 140.17500305175776, y: 245.30625534057606 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 140.17500305175776, y: 315.39375686645496 }, { x: 140.17500305175776, y: 350.4375076293944 }, { x: 140.17500305175776, y: 385.4812583923338 }, { x: 140.17500305175776, y: 420.52500915527327 }],\n\t\tname: \"square\"\n\t}, {\n\t\tpoints: [{ x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 385.4812583923338 }, { x: 420.52500915527327, y: 350.4375076293944 }, { x: 420.52500915527327, y: 315.39375686645496 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 420.52500915527327, y: 245.30625534057606 }, { x: 420.52500915527327, y: 210.26250457763663 }, { x: 420.52500915527327, y: 175.2187538146972 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 385.4812583923338, y: 140.17500305175776 }, { x: 350.4375076293944, y: 140.17500305175776 }, { x: 315.39375686645496, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 245.30625534057606, y: 140.17500305175776 }, { x: 210.26250457763663, y: 140.17500305175776 }, { x: 175.2187538146972, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 175.2187538146972 }, { x: 140.17500305175776, y: 210.26250457763663 }, { x: 140.17500305175776, y: 245.30625534057606 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 140.17500305175776, y: 315.39375686645496 }, { x: 140.17500305175776, y: 350.4375076293944 }, { x: 140.17500305175776, y: 385.4812583923338 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }],\n\t\tname: \"square\"\n\t}, {\n\t\tpoints: [{ x: 420.52500915527327, y: 140.17500305175776 }, { x: 385.4812583923338, y: 140.17500305175776 }, { x: 350.4375076293944, y: 140.17500305175776 }, { x: 315.39375686645496, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 245.30625534057606, y: 140.17500305175776 }, { x: 210.26250457763663, y: 140.17500305175776 }, { x: 175.2187538146972, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 175.2187538146972 }, { x: 140.17500305175776, y: 210.26250457763663 }, { x: 140.17500305175776, y: 245.30625534057606 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 140.17500305175776, y: 315.39375686645496 }, { x: 140.17500305175776, y: 350.4375076293944 }, { x: 140.17500305175776, y: 385.4812583923338 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 385.4812583923338 }, { x: 420.52500915527327, y: 350.4375076293944 }, { x: 420.52500915527327, y: 315.39375686645496 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 420.52500915527327, y: 245.30625534057606 }, { x: 420.52500915527327, y: 210.26250457763663 }, { x: 420.52500915527327, y: 175.2187538146972 }, { x: 420.52500915527327, y: 140.17500305175776 }],\n\t\tname: \"square\"\n\t}, {\n\t\tpoints: [{ x: 140.17500305175776, y: 140.17500305175776 }, { x: 140.17500305175776, y: 175.2187538146972 }, { x: 140.17500305175776, y: 210.26250457763663 }, { x: 140.17500305175776, y: 245.30625534057606 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 140.17500305175776, y: 315.39375686645496 }, { x: 140.17500305175776, y: 350.4375076293944 }, { x: 140.17500305175776, y: 385.4812583923338 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 140.17500305175776, y: 420.52500915527327 }, { x: 175.2187538146972, y: 420.52500915527327 }, { x: 210.26250457763663, y: 420.52500915527327 }, { x: 245.30625534057606, y: 420.52500915527327 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 315.39375686645496, y: 420.52500915527327 }, { x: 350.4375076293944, y: 420.52500915527327 }, { x: 385.4812583923338, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 420.52500915527327 }, { x: 420.52500915527327, y: 385.4812583923338 }, { x: 420.52500915527327, y: 350.4375076293944 }, { x: 420.52500915527327, y: 315.39375686645496 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 420.52500915527327, y: 245.30625534057606 }, { x: 420.52500915527327, y: 210.26250457763663 }, { x: 420.52500915527327, y: 175.2187538146972 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 420.52500915527327, y: 140.17500305175776 }, { x: 385.4812583923338, y: 140.17500305175776 }, { x: 350.4375076293944, y: 140.17500305175776 }, { x: 315.39375686645496, y: 140.17500305175776 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 245.30625534057606, y: 140.17500305175776 }, { x: 210.26250457763663, y: 140.17500305175776 }, { x: 175.2187538146972, y: 140.17500305175776 }, { x: 140.17500305175776, y: 140.17500305175776 }],\n\t\tname: \"square\"\n\t}, {\n\t\tpoints: [{ x: 420.52500915527327, y: 280.3500061035155 }, { x: 418.3954358873965, y: 304.69113993790967 }, { x: 412.07142208989444, y: 328.29268073795373 }, { x: 401.74511972189896, y: 350.43750762939436 }, { x: 387.73028825550034, y: 370.4527612529582 }, { x: 370.4527612529582, y: 387.73028825550034 }, { x: 350.4375076293944, y: 401.74511972189896 }, { x: 328.2926807379538, y: 412.07142208989444 }, { x: 304.69113993790967, y: 418.3954358873965 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 256.0088722691214, y: 418.3954358873965 }, { x: 232.4073314690773, y: 412.07142208989444 }, { x: 210.26250457763666, y: 401.74511972189896 }, { x: 190.2472509540728, y: 387.73028825550034 }, { x: 172.9697239515307, y: 370.4527612529582 }, { x: 158.95489248513206, y: 350.43750762939436 }, { x: 148.62859011713658, y: 328.2926807379538 }, { x: 142.30457631963455, y: 304.6911399379096 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 142.30457631963455, y: 256.00887226912135 }, { x: 148.62859011713655, y: 232.4073314690773 }, { x: 158.9548924851321, y: 210.2625045776366 }, { x: 172.96972395153068, y: 190.2472509540728 }, { x: 190.24725095407277, y: 172.9697239515307 }, { x: 210.26250457763658, y: 158.95489248513212 }, { x: 232.40733146907718, y: 148.62859011713658 }, { x: 256.00887226912135, y: 142.30457631963455 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 304.6911399379096, y: 142.30457631963455 }, { x: 328.2926807379537, y: 148.62859011713653 }, { x: 350.4375076293944, y: 158.9548924851321 }, { x: 370.4527612529582, y: 172.96972395153068 }, { x: 387.73028825550034, y: 190.24725095407274 }, { x: 401.7451197218989, y: 210.26250457763658 }, { x: 412.07142208989444, y: 232.4073314690773 }, { x: 418.39543588739645, y: 256.00887226912124 }, { x: 420.52500915527327, y: 280.35000610351545 }],\n\t\tname: \"circle\"\n\t}, {\n\t\tpoints: [{ x: 420.52500915527327, y: 280.3500061035155 }, { x: 418.3954358873965, y: 256.00887226912135 }, { x: 412.07142208989444, y: 232.4073314690773 }, { x: 401.74511972189896, y: 210.26250457763666 }, { x: 387.73028825550034, y: 190.2472509540728 }, { x: 370.4527612529582, y: 172.96972395153068 }, { x: 350.4375076293944, y: 158.9548924851321 }, { x: 328.2926807379538, y: 148.62859011713658 }, { x: 304.69113993790967, y: 142.30457631963455 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 256.0088722691214, y: 142.30457631963455 }, { x: 232.4073314690773, y: 148.62859011713655 }, { x: 210.26250457763666, y: 158.95489248513206 }, { x: 190.2472509540728, y: 172.96972395153068 }, { x: 172.9697239515307, y: 190.24725095407277 }, { x: 158.95489248513206, y: 210.26250457763666 }, { x: 148.62859011713658, y: 232.40733146907723 }, { x: 142.30457631963455, y: 256.0088722691214 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 142.30457631963455, y: 304.69113993790967 }, { x: 148.62859011713655, y: 328.29268073795373 }, { x: 158.9548924851321, y: 350.4375076293944 }, { x: 172.96972395153068, y: 370.4527612529582 }, { x: 190.24725095407277, y: 387.73028825550034 }, { x: 210.26250457763658, y: 401.7451197218989 }, { x: 232.40733146907718, y: 412.07142208989444 }, { x: 256.00887226912135, y: 418.3954358873965 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 304.6911399379096, y: 418.3954358873965 }, { x: 328.2926807379537, y: 412.0714220898945 }, { x: 350.4375076293944, y: 401.74511972189896 }, { x: 370.4527612529582, y: 387.73028825550034 }, { x: 387.73028825550034, y: 370.4527612529583 }, { x: 401.7451197218989, y: 350.4375076293944 }, { x: 412.07142208989444, y: 328.29268073795373 }, { x: 418.39543588739645, y: 304.6911399379098 }, { x: 420.52500915527327, y: 280.35000610351557 }],\n\t\tname: \"circle\"\n\t}, {\n\t\tpoints: [{ x: 140.17500305175776, y: 280.3500061035155 }, { x: 142.30457631963455, y: 256.00887226912135 }, { x: 148.62859011713655, y: 232.4073314690773 }, { x: 158.95489248513206, y: 210.26250457763666 }, { x: 172.96972395153068, y: 190.2472509540728 }, { x: 190.2472509540728, y: 172.96972395153068 }, { x: 210.2625045776366, y: 158.9548924851321 }, { x: 232.40733146907726, y: 148.62859011713658 }, { x: 256.00887226912135, y: 142.30457631963455 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 304.6911399379096, y: 142.30457631963455 }, { x: 328.29268073795373, y: 148.62859011713655 }, { x: 350.43750762939436, y: 158.95489248513206 }, { x: 370.4527612529582, y: 172.96972395153068 }, { x: 387.73028825550034, y: 190.24725095407277 }, { x: 401.74511972189896, y: 210.26250457763666 }, { x: 412.07142208989444, y: 232.40733146907723 }, { x: 418.3954358873965, y: 256.0088722691214 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 418.3954358873965, y: 304.69113993790967 }, { x: 412.07142208989444, y: 328.29268073795373 }, { x: 401.74511972189896, y: 350.4375076293944 }, { x: 387.73028825550034, y: 370.4527612529582 }, { x: 370.4527612529582, y: 387.73028825550034 }, { x: 350.4375076293944, y: 401.7451197218989 }, { x: 328.29268073795384, y: 412.07142208989444 }, { x: 304.69113993790967, y: 418.3954358873965 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 256.0088722691214, y: 418.3954358873965 }, { x: 232.40733146907735, y: 412.0714220898945 }, { x: 210.2625045776366, y: 401.74511972189896 }, { x: 190.2472509540728, y: 387.73028825550034 }, { x: 172.9697239515307, y: 370.4527612529583 }, { x: 158.95489248513212, y: 350.4375076293944 }, { x: 148.62859011713655, y: 328.29268073795373 }, { x: 142.30457631963458, y: 304.6911399379098 }, { x: 140.17500305175776, y: 280.35000610351557 }],\n\t\tname: \"circle\"\n\t}, {\n\t\tpoints: [{ x: 140.17500305175776, y: 280.3500061035155 }, { x: 142.30457631963455, y: 304.69113993790967 }, { x: 148.62859011713655, y: 328.29268073795373 }, { x: 158.95489248513206, y: 350.43750762939436 }, { x: 172.96972395153068, y: 370.4527612529582 }, { x: 190.2472509540728, y: 387.73028825550034 }, { x: 210.2625045776366, y: 401.74511972189896 }, { x: 232.40733146907726, y: 412.07142208989444 }, { x: 256.00887226912135, y: 418.3954358873965 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 304.6911399379096, y: 418.3954358873965 }, { x: 328.29268073795373, y: 412.07142208989444 }, { x: 350.43750762939436, y: 401.74511972189896 }, { x: 370.4527612529582, y: 387.73028825550034 }, { x: 387.73028825550034, y: 370.4527612529582 }, { x: 401.74511972189896, y: 350.43750762939436 }, { x: 412.07142208989444, y: 328.2926807379538 }, { x: 418.3954358873965, y: 304.6911399379096 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 418.3954358873965, y: 256.00887226912135 }, { x: 412.07142208989444, y: 232.4073314690773 }, { x: 401.74511972189896, y: 210.2625045776366 }, { x: 387.73028825550034, y: 190.2472509540728 }, { x: 370.4527612529582, y: 172.9697239515307 }, { x: 350.4375076293944, y: 158.95489248513212 }, { x: 328.29268073795384, y: 148.62859011713658 }, { x: 304.69113993790967, y: 142.30457631963455 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 256.0088722691214, y: 142.30457631963455 }, { x: 232.40733146907735, y: 148.62859011713653 }, { x: 210.2625045776366, y: 158.9548924851321 }, { x: 190.2472509540728, y: 172.96972395153068 }, { x: 172.9697239515307, y: 190.24725095407274 }, { x: 158.95489248513212, y: 210.26250457763658 }, { x: 148.62859011713655, y: 232.4073314690773 }, { x: 142.30457631963458, y: 256.00887226912124 }, { x: 140.17500305175776, y: 280.35000610351545 }],\n\t\tname: \"circle\"\n\t}, {\n\t\tpoints: [{ x: 280.3500061035155, y: 420.52500915527327 }, { x: 304.6911399379096, y: 418.3954358873965 }, { x: 328.29268073795373, y: 412.07142208989444 }, { x: 350.43750762939436, y: 401.74511972189896 }, { x: 370.4527612529582, y: 387.73028825550034 }, { x: 387.73028825550034, y: 370.4527612529582 }, { x: 401.74511972189896, y: 350.43750762939436 }, { x: 412.07142208989444, y: 328.2926807379538 }, { x: 418.3954358873965, y: 304.6911399379096 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 418.3954358873965, y: 256.00887226912135 }, { x: 412.07142208989444, y: 232.4073314690773 }, { x: 401.74511972189896, y: 210.2625045776366 }, { x: 387.73028825550034, y: 190.2472509540728 }, { x: 370.4527612529582, y: 172.9697239515307 }, { x: 350.4375076293944, y: 158.95489248513212 }, { x: 328.29268073795384, y: 148.62859011713658 }, { x: 304.69113993790967, y: 142.30457631963455 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 256.0088722691214, y: 142.30457631963455 }, { x: 232.40733146907735, y: 148.62859011713653 }, { x: 210.2625045776366, y: 158.9548924851321 }, { x: 190.2472509540728, y: 172.96972395153068 }, { x: 172.9697239515307, y: 190.24725095407274 }, { x: 158.95489248513212, y: 210.26250457763658 }, { x: 148.62859011713655, y: 232.4073314690773 }, { x: 142.30457631963458, y: 256.00887226912124 }, { x: 140.17500305175776, y: 280.35000610351545 }, { x: 142.30457631963455, y: 304.6911399379096 }, { x: 148.62859011713658, y: 328.2926807379538 }, { x: 158.954892485132, y: 350.4375076293943 }, { x: 172.96972395153068, y: 370.4527612529582 }, { x: 190.24725095407274, y: 387.7302882555003 }, { x: 210.26250457763666, y: 401.74511972189896 }, { x: 232.40733146907718, y: 412.07142208989444 }, { x: 256.00887226912135, y: 418.3954358873965 }, { x: 280.35000610351545, y: 420.52500915527327 }],\n\t\tname: \"circle\"\n\t}, {\n\t\tpoints: [{ x: 280.3500061035155, y: 140.17500305175776 }, { x: 304.6911399379096, y: 142.30457631963455 }, { x: 328.29268073795373, y: 148.62859011713655 }, { x: 350.43750762939436, y: 158.95489248513206 }, { x: 370.4527612529582, y: 172.96972395153068 }, { x: 387.73028825550034, y: 190.24725095407277 }, { x: 401.74511972189896, y: 210.26250457763666 }, { x: 412.07142208989444, y: 232.40733146907723 }, { x: 418.3954358873965, y: 256.0088722691214 }, { x: 420.52500915527327, y: 280.3500061035155 }, { x: 418.3954358873965, y: 304.69113993790967 }, { x: 412.07142208989444, y: 328.29268073795373 }, { x: 401.74511972189896, y: 350.4375076293944 }, { x: 387.73028825550034, y: 370.4527612529582 }, { x: 370.4527612529582, y: 387.73028825550034 }, { x: 350.4375076293944, y: 401.7451197218989 }, { x: 328.29268073795384, y: 412.07142208989444 }, { x: 304.69113993790967, y: 418.3954358873965 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 256.0088722691214, y: 418.3954358873965 }, { x: 232.40733146907735, y: 412.0714220898945 }, { x: 210.2625045776366, y: 401.74511972189896 }, { x: 190.2472509540728, y: 387.73028825550034 }, { x: 172.9697239515307, y: 370.4527612529583 }, { x: 158.95489248513212, y: 350.4375076293944 }, { x: 148.62859011713655, y: 328.29268073795373 }, { x: 142.30457631963458, y: 304.6911399379098 }, { x: 140.17500305175776, y: 280.35000610351557 }, { x: 142.30457631963455, y: 256.0088722691214 }, { x: 148.62859011713658, y: 232.40733146907723 }, { x: 158.954892485132, y: 210.26250457763672 }, { x: 172.96972395153068, y: 190.2472509540728 }, { x: 190.24725095407274, y: 172.96972395153074 }, { x: 210.26250457763666, y: 158.95489248513206 }, { x: 232.40733146907718, y: 148.6285901171366 }, { x: 256.00887226912135, y: 142.30457631963455 }, { x: 280.35000610351545, y: 140.17500305175776 }],\n\t\tname: \"circle\"\n\t}, {\n\t\tpoints: [{ x: 280.3500061035155, y: 140.17500305175776 }, { x: 256.0088722691214, y: 142.30457631963455 }, { x: 232.4073314690773, y: 148.62859011713655 }, { x: 210.26250457763666, y: 158.95489248513206 }, { x: 190.2472509540728, y: 172.96972395153068 }, { x: 172.9697239515307, y: 190.24725095407277 }, { x: 158.95489248513206, y: 210.26250457763666 }, { x: 148.62859011713658, y: 232.40733146907723 }, { x: 142.30457631963455, y: 256.0088722691214 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 142.30457631963455, y: 304.69113993790967 }, { x: 148.62859011713655, y: 328.29268073795373 }, { x: 158.9548924851321, y: 350.4375076293944 }, { x: 172.96972395153068, y: 370.4527612529582 }, { x: 190.24725095407277, y: 387.73028825550034 }, { x: 210.26250457763658, y: 401.7451197218989 }, { x: 232.40733146907718, y: 412.07142208989444 }, { x: 256.00887226912135, y: 418.3954358873965 }, { x: 280.3500061035155, y: 420.52500915527327 }, { x: 304.6911399379096, y: 418.3954358873965 }, { x: 328.2926807379537, y: 412.0714220898945 }, { x: 350.4375076293944, y: 401.74511972189896 }, { x: 370.4527612529582, y: 387.73028825550034 }, { x: 387.73028825550034, y: 370.4527612529583 }, { x: 401.7451197218989, y: 350.4375076293944 }, { x: 412.07142208989444, y: 328.29268073795373 }, { x: 418.39543588739645, y: 304.6911399379098 }, { x: 420.52500915527327, y: 280.35000610351557 }, { x: 418.3954358873965, y: 256.0088722691214 }, { x: 412.07142208989444, y: 232.40733146907723 }, { x: 401.745119721899, y: 210.26250457763672 }, { x: 387.73028825550034, y: 190.2472509540728 }, { x: 370.4527612529583, y: 172.96972395153074 }, { x: 350.43750762939436, y: 158.95489248513206 }, { x: 328.29268073795384, y: 148.6285901171366 }, { x: 304.69113993790967, y: 142.30457631963455 }, { x: 280.35000610351557, y: 140.17500305175776 }],\n\t\tname: \"circle\"\n\t}, {\n\t\tpoints: [{ x: 280.3500061035155, y: 420.52500915527327 }, { x: 256.0088722691214, y: 418.3954358873965 }, { x: 232.4073314690773, y: 412.07142208989444 }, { x: 210.26250457763666, y: 401.74511972189896 }, { x: 190.2472509540728, y: 387.73028825550034 }, { x: 172.9697239515307, y: 370.4527612529582 }, { x: 158.95489248513206, y: 350.43750762939436 }, { x: 148.62859011713658, y: 328.2926807379538 }, { x: 142.30457631963455, y: 304.6911399379096 }, { x: 140.17500305175776, y: 280.3500061035155 }, { x: 142.30457631963455, y: 256.00887226912135 }, { x: 148.62859011713655, y: 232.4073314690773 }, { x: 158.9548924851321, y: 210.2625045776366 }, { x: 172.96972395153068, y: 190.2472509540728 }, { x: 190.24725095407277, y: 172.9697239515307 }, { x: 210.26250457763658, y: 158.95489248513212 }, { x: 232.40733146907718, y: 148.62859011713658 }, { x: 256.00887226912135, y: 142.30457631963455 }, { x: 280.3500061035155, y: 140.17500305175776 }, { x: 304.6911399379096, y: 142.30457631963455 }, { x: 328.2926807379537, y: 148.62859011713653 }, { x: 350.4375076293944, y: 158.9548924851321 }, { x: 370.4527612529582, y: 172.96972395153068 }, { x: 387.73028825550034, y: 190.24725095407274 }, { x: 401.7451197218989, y: 210.26250457763658 }, { x: 412.07142208989444, y: 232.4073314690773 }, { x: 418.39543588739645, y: 256.00887226912124 }, { x: 420.52500915527327, y: 280.35000610351545 }, { x: 418.3954358873965, y: 304.6911399379096 }, { x: 412.07142208989444, y: 328.2926807379538 }, { x: 401.745119721899, y: 350.4375076293943 }, { x: 387.73028825550034, y: 370.4527612529582 }, { x: 370.4527612529583, y: 387.7302882555003 }, { x: 350.43750762939436, y: 401.74511972189896 }, { x: 328.29268073795384, y: 412.07142208989444 }, { x: 304.69113993790967, y: 418.3954358873965 }, { x: 280.35000610351557, y: 420.52500915527327 }],\n\t\tname: \"circle\"\n\t},\n\t// {\n\t// \tpoints: [{\"x\":290,\"y\":256},{\"x\":285,\"y\":291},{\"x\":301,\"y\":347},{\"x\":359,\"y\":367},{\"x\":402,\"y\":367},{\"x\":511,\"y\":308},{\"x\":559,\"y\":246},{\"x\":560,\"y\":225},{\"x\":513,\"y\":194},{\"x\":477,\"y\":186},{\"x\":410.44786,\"y\":185.58245}],\n\t// \tname: \"circle\"\n\t// },\n\t// {\n\t// \tpoints: [{\"x\":342,\"y\":187},{\"x\":270,\"y\":267},{\"x\":234,\"y\":380},{\"x\":234,\"y\":398},{\"x\":278,\"y\":445},{\"x\":386,\"y\":467},{\"x\":452,\"y\":450},{\"x\":479,\"y\":425},{\"x\":489,\"y\":272},{\"x\":445,\"y\":178},{\"x\":356,\"y\":170}],\n\t// \tname: \"circle\"\n\t// },\n\t// {\n\t// \tpoints: [{\"x\":597,\"y\":58},{\"x\":590,\"y\":111},{\"x\":642,\"y\":78},{\"x\":636,\"y\":67},{\"x\":600,\"y\":52},{\"x\":597,\"y\":52}],\n\t// \tname: \"circle\"\n\t// },\n\t// {\n\t// \tpoints: [{\"x\":228,\"y\":464},{\"x\":191,\"y\":467},{\"x\":190,\"y\":519},{\"x\":224,\"y\":524},{\"x\":248,\"y\":523},{\"x\":314,\"y\":477},{\"x\":291,\"y\":460},{\"x\":229,\"y\":452},{\"x\":206,\"y\":452}],\n\t// \tname: \"circle\"\n\t// },\n\t{\n\t\tpoints: [{ x: 380, y: 202 }, { x: 529, y: 265 }, { x: 580, y: 313 }, { x: 571, y: 367 }, { x: 492, y: 401 }, { x: 472, y: 334 }, { x: 478, y: 313 }, { x: 521, y: 248 }, { x: 611, y: 174 }],\n\t\tname: \"other\"\n\t}, {\n\t\tpoints: [{ x: 553, y: 292 }, { x: 579, y: 297 }, { x: 608, y: 297 }, { x: 609, y: 286 }, { x: 585, y: 267 }, { x: 540, y: 282 }, { x: 521, y: 311 }, { x: 540, y: 321 }, { x: 611, y: 319 }, { x: 626, y: 290 }, { x: 625, y: 257 }, { x: 548, y: 227 }, { x: 516, y: 228 }, { x: 495, y: 236 }, { x: 451, y: 276 }, { x: 447, y: 324 }, { x: 506, y: 400 }, { x: 593, y: 416 }, { x: 680, y: 385 }],\n\t\tname: \"other\"\n\t}, {\n\t\tpoints: [{ x: 42, y: 83 }, { x: 74, y: 84 }, { x: 82, y: 85 }, { x: 86, y: 86 }, { x: 44, y: 74 }, { x: 63, y: 82 }, { x: 56, y: 88 }, { x: 48, y: 95 }, { x: 57, y: 63 }, { x: 65, y: 53 }, { x: 64, y: 69 }, { x: 58, y: 106 }],\n\t\tname: \"other\"\n\t}, {\n\t\tpoints: [{ x: 135, y: 491 }, { x: 124, y: 424 }, { x: 96, y: 418 }, { x: 88, y: 434 }, { x: 88, y: 437 }, { x: 113, y: 413 }, { x: 114, y: 395 }, { x: 102, y: 391 }, { x: 90, y: 390 }, { x: 78, y: 405 }, { x: 70, y: 480 }, { x: 85, y: 502 }, { x: 93, y: 510 }],\n\t\tname: \"other\"\n\t}, {\n\t\tpoints: [{ x: 81, y: 219 }, { x: 84, y: 218 }, { x: 86, y: 220 }, { x: 88, y: 220 }, { x: 90, y: 220 }, { x: 92, y: 219 }, { x: 95, y: 220 }, { x: 97, y: 219 }, { x: 99, y: 220 }, { x: 102, y: 218 }, { x: 105, y: 217 }, { x: 107, y: 216 }, { x: 110, y: 216 }, { x: 113, y: 214 }, { x: 116, y: 212 }, { x: 118, y: 210 }, { x: 121, y: 208 }, { x: 124, y: 205 }, { x: 126, y: 202 }, { x: 129, y: 199 }, { x: 132, y: 196 }, { x: 136, y: 191 }, { x: 139, y: 187 }, { x: 142, y: 182 }, { x: 144, y: 179 }, { x: 146, y: 174 }, { x: 148, y: 170 }, { x: 149, y: 168 }, { x: 151, y: 162 }, { x: 152, y: 160 }, { x: 152, y: 157 }, { x: 152, y: 155 }, { x: 152, y: 151 }, { x: 152, y: 149 }, { x: 152, y: 146 }, { x: 149, y: 142 }, { x: 148, y: 139 }, { x: 145, y: 137 }, { x: 141, y: 135 }, { x: 139, y: 135 }, { x: 134, y: 136 }, { x: 130, y: 140 }, { x: 128, y: 142 }, { x: 126, y: 145 }, { x: 122, y: 150 }, { x: 119, y: 158 }, { x: 117, y: 163 }, { x: 115, y: 170 }, { x: 114, y: 175 }, { x: 117, y: 184 }, { x: 120, y: 190 }, { x: 125, y: 199 }, { x: 129, y: 203 }, { x: 133, y: 208 }, { x: 138, y: 213 }, { x: 145, y: 215 }, { x: 155, y: 218 }, { x: 164, y: 219 }, { x: 166, y: 219 }, { x: 177, y: 219 }, { x: 182, y: 218 }, { x: 192, y: 216 }, { x: 196, y: 213 }, { x: 199, y: 212 }, { x: 201, y: 211 }],\n\t\tname: \"other\"\n\t}];\n\n\tShapeDetector.prototype.spot = function (points, patternName) {\n\n\t\tif (patternName == null) {\n\t\t\tpatternName = '';\n\t\t}\n\n\t\tvar distance, pattern, score;\n\t\tvar stroke = new Stroke(points);\n\t\tvar bestDistance = +Infinity;\n\t\tvar bestPattern = null;\n\t\tvar bestScore = 0;\n\n\t\tfor (var i = 0; i < this.patterns.length; i++) {\n\t\t\tpattern = this.patterns[i];\n\n\t\t\tif (pattern.name.indexOf(patternName) > -1) {\n\t\t\t\tdistance = stroke.distanceAtBestAngle(pattern);\n\t\t\t\tscore = 1.0 - distance / _halfDiagonal;\n\n\t\t\t\tif (distance < bestDistance && score > this.threshold) {\n\t\t\t\t\tbestDistance = distance;\n\t\t\t\t\tbestPattern = pattern.name;\n\t\t\t\t\tbestScore = score;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { pattern: bestPattern, score: bestScore };\n\t};\n\n\tShapeDetector.prototype.learn = function (name, points) {\n\n\t\treturn this.patterns.push(new Stroke(points, name));\n\t};\n\n\treturn ShapeDetector;\n});\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar config = require('./../../config');\n\nvar shape = require('./shape');\nvar color = require('./color');\nvar sound = require('./sound');\nvar touch = require('./touch');\nvar ui = require('./ui');\n\nwindow.kan = {\n  currentColor: '#20171C',\n  composition: [],\n  compositionInterval: null,\n  lastEvent: null,\n  moves: [],\n  playing: false,\n  pinching: false,\n  pinchedGroup: null,\n  pathData: {},\n  shapePath: null,\n  prevAngle: null,\n  sides: [],\n  side: [],\n  corners: [],\n  lastScale: 1,\n  lastRotation: 0,\n  originalPosition: null\n};\n\npaper.install(window);\n\n$(document).ready(function () {\n  function run() {\n    var canvas = document.getElementById(config.canvasId);\n    paper.setup(canvas);\n    initCanvasDraw();\n    ui.init();\n    touch.init();\n  }\n\n  // run();\n});\n\n},{\"./../../config\":1,\"./color\":4,\"./shape\":7,\"./sound\":8,\"./touch\":9,\"./ui\":10}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getStrokes = getStrokes;\nexports.oldgetStrokes = oldgetStrokes;\nexports.getIdealGeometry = getIdealGeometry;\nexports.OldgetIdealGeometry = OldgetIdealGeometry;\nexports.getIntegerPoint = getIntegerPoint;\nexports.stringifyPoint = stringifyPoint;\nexports.parsePoint = parsePoint;\nexports.getClosestPointFromPathData = getClosestPointFromPathData;\nexports.getComputedCorners = getComputedCorners;\nexports.processShapeData = processShapeData;\nexports.findInteriorCurves = findInteriorCurves;\nexports.trueGroup = trueGroup;\nexports.extendPath = extendPath;\nexports.trimPath = trimPath;\nexports.removePathExtensions = removePathExtensions;\nexports.checkPops = checkPops;\nexports.hitTestBounds = hitTestBounds;\nvar ShapeDetector = require('./lib/shape-detector');\n\nvar util = require('./util');\nvar config = require('./../../config');\n\nvar detector = exports.detector = new ShapeDetector(ShapeDetector.defaultShapes);\n\nfunction getStrokes(path, pathData) {\n  var pathClone = path.clone();\n  var strokes = new Path();\n\n  var minSize = 1;\n  var maxSize = 5;\n\n  var prev = void 0;\n  var firstPoint = void 0,\n      lastPoint = void 0;\n\n  var cumSpeed = 0;\n  var totalPoints = 0;\n\n  Base.each(pathClone.segments, function (segment, i) {\n    var point = segment.point;\n    var pointStr = stringifyPoint(point);\n    var pointData = void 0;\n    if (pointStr in pathData) {\n      pointData = pathData[pointStr];\n    } else {\n      var nearestPoint = getClosestPointFromPathData(point, pathData);\n      pointStr = stringifyPoint(nearestPoint);\n      if (pointStr in pathData) {\n        pointData = pathData[pointStr];\n      } else {\n        console.log('could not find close point');\n      }\n    }\n\n    if (pointData) {\n      console.log(pointData);\n      var top = void 0,\n          bottom = void 0;\n      var bottomX = void 0,\n          bottomY = void 0,\n          topX = void 0,\n          topY = void 0;\n      if (pointData.speed) {\n        cumSpeed += parseInt(pointData.speed * 10);\n        totalPoints++;\n      }\n    }\n\n    prev = point;\n  });\n\n  var avgSpeed = cumSpeed / totalPoints;\n  console.log(avgSpeed);\n\n  var size = avgSpeed;\n  size = maxSize - size;\n  size = Math.max(Math.min(size, maxSize), minSize); // clamp size to [min, max)\n\n  var bigClone = path.clone();\n  var smallClone = path.clone();\n  bigClone.scale(1.5);\n  smallClone.scale(0.5);\n\n  var overlap = bigClone.subtract(smallClone);\n  overlap.strokeColor = 'pink';\n\n  console.log(size);\n\n  // strokes.closed = true;\n  // strokes.fillColor = 'pink';\n  // strokes.selected = true;\n  // strokes.reduce();\n\n  return pathClone;\n}\n\nfunction oldgetStrokes(path, pathData) {\n  var pathClone = path.clone();\n  var strokes = new Path();\n\n  var minSize = 2;\n  var maxSize = 8;\n\n  var prev = void 0;\n  var firstPoint = void 0,\n      lastPoint = void 0;\n  Base.each(pathClone.segments, function (segment, i) {\n    var point = segment.point;\n    var pointStr = stringifyPoint(point);\n    var pointData = void 0;\n    if (pointStr in pathData) {\n      pointData = pathData[pointStr];\n    } else {\n      var nearestPoint = getClosestPointFromPathData(point, pathData);\n      pointStr = stringifyPoint(nearestPoint);\n      if (pointStr in pathData) {\n        pointData = pathData[pointStr];\n      } else {\n        console.log('could not find close point');\n      }\n    }\n\n    if (pointData) {\n      console.log(pointData);\n      var top = void 0,\n          bottom = void 0;\n      var bottomX = void 0,\n          bottomY = void 0,\n          topX = void 0,\n          topY = void 0;\n      if (pointData.first) {\n        firstPoint = pointData.point;\n        strokes.add(point);\n      } else if (pointData.last) {\n        lastPoint = pointData.point;\n        strokes.add(point);\n      } else {\n        var angle = pointData.angle;\n        var size = pointData.speed * 10;\n        size = maxSize - size;\n        size = Math.max(Math.min(size, maxSize), minSize); // clamp size to [min, max)\n        console.log(size);\n\n        var _bottomX = point.x + Math.cos(angle + Math.PI / 2) * size;\n        var _bottomY = point.y + Math.sin(angle + Math.PI / 2) * size;\n        var _bottom = new Point(_bottomX, _bottomY);\n\n        var _topX = point.x + Math.cos(angle - Math.PI / 2) * size;\n        var _topY = point.y + Math.sin(angle - Math.PI / 2) * size;\n        var _top = new Point(_topX, _topY);\n\n        strokes.add(_top);\n        strokes.insert(0, _bottom);\n      }\n    }\n\n    prev = point;\n  });\n\n  strokes.closed = true;\n  strokes.fillColor = 'pink';\n  strokes.selected = true;\n  strokes.reduce();\n\n  return pathClone;\n}\n\nfunction getIdealGeometry(pathData, sides, simplifiedPath) {\n  var thresholdDist = 0.05 * simplifiedPath.length;\n\n  var returnPath = new Path({\n    strokeWidth: 5,\n    strokeColor: 'pink'\n  });\n\n  var truedPath = new Path({\n    strokeWidth: 5,\n    strokeColor: 'green'\n  });\n\n  // new Path.Circle({\n  //   center: simplifiedPath.firstSegment.point,\n  //   radius: 3,\n  //   fillColor: 'black'\n  // });\n\n  var firstPoint = new Path.Circle({\n    center: simplifiedPath.firstSegment.point,\n    radius: 10,\n    strokeColor: 'blue'\n  });\n\n  var lastPoint = new Path.Circle({\n    center: simplifiedPath.lastSegment.point,\n    radius: 10,\n    strokeColor: 'red'\n  });\n\n  var angle = void 0,\n      prevAngle = void 0,\n      angleDelta = void 0;\n  Base.each(sides, function (side, i) {\n    var firstPoint = side[0];\n    var lastPoint = side[side.length - 1];\n\n    angle = Math.atan2(lastPoint.y - firstPoint.y, lastPoint.x - firstPoint.x);\n\n    if (!!prevAngle) {\n      angleDelta = util.angleDelta(angle, prevAngle);\n      console.log(angleDelta);\n      returnPath.add(firstPoint);\n      returnPath.add(lastPoint);\n    }\n\n    prevAngle = angle;\n  });\n\n  Base.each(simplifiedPath.segments, function (segment, i) {\n    var integerPoint = getIntegerPoint(segment.point);\n    var nearestPoint = returnPath.getNearestPoint(integerPoint);\n    // console.log(integerPoint.getDistance(nearestPoint), thresholdDist);\n    if (integerPoint.getDistance(nearestPoint) <= thresholdDist) {\n      truedPath.add(nearestPoint);\n      new Path.Circle({\n        center: nearestPoint,\n        radius: 3,\n        fillColor: 'black'\n      });\n    } else {\n      console.log('off path');\n      truedPath.add(integerPoint);\n      new Path.Circle({\n        center: integerPoint,\n        radius: 3,\n        fillColor: 'green'\n      });\n    }\n  });\n\n  // truedPath.add(simplifiedPath.lastSegment.point);\n  // new Path.Circle({\n  //   center: simplifiedPath.lastSegment.point,\n  //   radius: 3,\n  //   fillColor: 'black'\n  // });\n\n  if (simplifiedPath.closed) {\n    truedPath.closed = true;\n  }\n\n  // Base.each(truedPath, (point, i) => {\n  //   truedPath.removeSegment(i);\n  // });\n\n  return truedPath;\n}\n\nfunction OldgetIdealGeometry(pathData, path) {\n  var thresholdAngle = Math.PI / 2;\n  var thresholdDist = 0.1 * path.length;\n  // console.log(path);\n\n  var count = 0;\n\n  var sides = [];\n  var side = [];\n  var prev = void 0;\n  var prevAngle = void 0;\n\n  // console.log('thresholdAngle', thresholdAngle);\n\n  var returnPath = new Path();\n\n  Base.each(path.segments, function (segment, i) {\n    var integerPoint = getIntegerPoint(segment.point);\n    var pointStr = stringifyPoint(integerPoint);\n    var pointData = void 0;\n    if (pointStr in pathData) {\n      pointData = pathData[pointStr];\n    } else {\n      var nearestPoint = getClosestPointFromPathData(pathData, integerPoint);\n      pointStr = stringifyPoint(nearestPoint);\n\n      if (pointStr in pathData) {\n        pointData = pathData[pointStr];\n      } else {\n        console.log('could not find close point');\n      }\n    }\n\n    if (pointData) {\n      returnPath.add(integerPoint);\n      new Path.Circle({\n        center: integerPoint,\n        radius: 5,\n        strokeColor: new Color(i / path.segments.length, i / path.segments.length, i / path.segments.length)\n      });\n      console.log(pointData.point);\n      if (!prev) {\n        // first point\n        // console.log('pushing first point to side');\n        side.push(pointData);\n      } else {\n        // let angleFoo = integerPoint.getDirectedAngle(prev);\n        var angle = Math.atan2(integerPoint.y, integerPoint.x) - Math.atan2(prev.y, prev.x);\n        if (angle < 0) angle += 2 * Math.PI; // normalize to [0, 2π)\n        // console.log(angleFoo, angleBar);\n        // let angle = Math.atan2(integerPoint.y - prev.y, integerPoint.x - prev.x);\n        // let line = new Path.Line(prev, integerPoint);\n        // line.strokeWidth = 5;\n        // line.strokeColor = 'pink';\n        // line.rotate(util.deg(Math.cos(angle) * Math.PI * 2));\n        // console.log('angle', angle);\n        if (typeof prevAngle === 'undefined') {\n          // second point\n          side.push(pointData);\n        } else {\n          var angleDifference = Math.pow(angle - prevAngle, 2);\n          console.log('angleDifference', angleDifference);\n          if (angleDifference <= thresholdAngle) {\n            // same side\n            // console.log('pushing point to same side');\n            side.push(pointData);\n          } else {\n            // new side\n            // console.log('new side');\n            sides.push(side);\n            side = [pointData];\n          }\n        }\n\n        prevAngle = angle;\n      }\n\n      prev = integerPoint;\n      count++;\n    } else {\n      console.log('no data');\n    }\n  });\n\n  // console.log(count);\n\n  sides.push(side);\n\n  return sides;\n}\n\n// floors the coordinates of a point\nfunction getIntegerPoint(point) {\n  return new Point(Math.floor(point.x), Math.floor(point.y));\n}\n\nfunction stringifyPoint(point) {\n  return Math.floor(point.x) + ',' + Math.floor(point.y);\n}\n\nfunction parsePoint(pointStr) {\n  var split = pointStr.split(',').map(function (num) {\n    return Math.floor(num);\n  });\n\n  if (split.length >= 2) {\n    return new Point(split[0], split[1]);\n  }\n\n  return null;\n}\n\nfunction getClosestPointFromPathData(point, pathData) {\n  var leastDistance = void 0,\n      closestPoint = void 0;\n\n  Base.each(pathData, function (datum, i) {\n    var distance = point.getDistance(datum.point);\n    if (!leastDistance || distance < leastDistance) {\n      leastDistance = distance;\n      closestPoint = datum.point;\n    }\n  });\n\n  return closestPoint || point;\n}\n\nfunction getComputedCorners(path) {\n  var thresholdAngle = util.rad(config.shape.cornerThresholdDeg);\n  var thresholdDistance = 0.1 * path.length;\n\n  var corners = [];\n\n  if (path.length > 0) {\n    var _ret = function () {\n      var point = void 0,\n          prev = void 0;\n      var angle = void 0,\n          prevAngle = void 0,\n          angleDelta = void 0;\n\n      Base.each(path.segments, function (segment, i) {\n        var point = getIntegerPoint(segment.point);\n        if (!!prev) {\n          var _angle = Math.atan2(point.y - prev.y, point.x - prev.x);\n          if (_angle < 0) _angle += 2 * Math.PI; // normalize to [0, 2π)\n          if (!!prevAngle) {\n            angleDelta = util.angleDelta(_angle, prevAngle);\n            if (angleDelta >= thresholdAngle) {\n              // console.log('corner');\n              // new Path.Circle({\n              //   center: prev,\n              //   radius: 10,\n              //   fillColor: 'pink'\n              // });\n              corners.push(prev);\n            } else {\n              // console.log(angleDelta);\n            }\n          }\n\n          prevAngle = _angle;\n        } else {\n          // first point\n          corners.push(point);\n          // new Path.Circle({\n          //   center: point,\n          //   radius: 10,\n          //   fillColor: 'pink'\n          // })\n        }\n        prev = point;\n      });\n\n      var lastSegmentPoint = getIntegerPoint(path.lastSegment.point);\n      corners.push(lastSegmentPoint);\n\n      var returnCorners = [];\n      var skippedIds = [];\n      for (var i = 0; i < corners.length; i++) {\n        var _point = corners[i];\n\n        if (i !== 0) {\n          var dist = _point.getDistance(prev);\n          var closestPoints = [];\n          while (dist < thresholdDistance) {\n            closestPoints.push({\n              point: _point,\n              index: i\n            });\n\n            if (i < corners.length - 1) {\n              i++;\n              prev = _point;\n              _point = corners[i];\n              dist = _point.getDistance(prev);\n            } else {\n              break;\n            }\n          }\n          if (closestPoints.length > 0) {\n            var sumX = 0,\n                sumY = 0;\n\n\n            Base.each(closestPoints, function (pointObj) {\n              sumX += pointObj.point.x;\n              sumY += pointObj.point.y;\n            });\n\n            var avgX = sumX / closestPoints.length,\n                avgY = sumY / closestPoints.length;\n\n            returnCorners.push(new Point(avgX, avgY));\n          }\n        } else {\n          returnCorners.push(_point);\n        }\n\n        prev = _point;\n      }\n\n      return {\n        v: returnCorners\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  }\n\n  return corners;\n}\n\nfunction processShapeData(json) {\n  var returnShape = [];\n  var jsonObj = JSON.parse(json)[1]; // zero index is stringified type (e.g. \"Path\")\n\n  if ('segments' in jsonObj) {\n    var segments = jsonObj.segments;\n    Base.each(segments, function (segment, i) {\n      if (segment.length === 3) {\n        var positionInfo = segment[0]; // indexes 1 and 2 are superfluous matrix details\n        returnShape.push({\n          x: positionInfo[0],\n          y: positionInfo[1]\n        });\n      } else {\n        returnShape.push({\n          x: segment[0],\n          y: segment[1]\n        });\n      };\n    });\n  }\n  return returnShape;\n}\n\n// returns an array of the interior curves of a given compound path\nfunction findInteriorCurves(path) {\n  var interiorCurves = [];\n  var pathClone = path.clone();\n  var dividedPath = pathClone.resolveCrossings();\n  console.log(dividedPath);\n\n  if (dividedPath.children.length > 0) {\n    for (var i = 0; i < dividedPath.children.length; i++) {\n      var child = dividedPath.children[i];\n\n      if (child.closed) {\n        interiorCurves.push(child);\n      }\n    }\n  }\n\n  console.log('interior', interiorCurves);\n\n  return interiorCurves;\n}\n\nfunction trueGroup(group, corners) {\n  var shapePath = group._namedChildren.shapePath[0];\n  console.log('num corners', corners.length);\n\n  var intersections = shapePath.getIntersections();\n  var trueNecessary = false;\n\n  var pathCopy = shapePath.clone();\n  pathCopy.visible = false;\n  // debugger;\n\n  if (intersections.length > 0) {\n    // pathCopy.strokeColor = 'orange';\n    var _trimPath = trimPath(pathCopy, shapePath);\n    // see if we can trim the path while maintaining intersections\n    // console.log('intersections!');\n    // pathCopy.strokeColor = 'yellow';\n\n\n    var _trimPath2 = _slicedToArray(_trimPath, 2);\n\n    pathCopy = _trimPath2[0];\n    trueNecessary = _trimPath2[1];\n  } else {\n    // extend first and last segment by threshold, see if intersection\n    // console.log('no intersections, extending first!');\n    // pathCopy.strokeColor = 'yellow';\n    pathCopy = extendPath(pathCopy);\n    // pathCopy.strokeColor = 'orange';\n    var _intersections = pathCopy.getIntersections();\n    if (_intersections.length > 0) {\n      // pathCopy.strokeColor = 'green';\n      var _trimPath3 = trimPath(pathCopy, shapePath);\n      // pathCopy.strokeColor = 'pink';\n\n\n      var _trimPath4 = _slicedToArray(_trimPath3, 2);\n\n      pathCopy = _trimPath4[0];\n      trueNecessary = _trimPath4[1];\n    } else {\n      // pathCopy.strokeColor = 'red';\n      pathCopy = removePathExtensions(pathCopy);\n      // pathCopy.strokeColor = 'blue';\n    }\n  }\n\n  console.log('original length:', shapePath.length);\n  console.log('trued length:', pathCopy.length);\n\n  pathCopy.name = 'shapePath'; // make sure\n  pathCopy.visible = true;\n\n  // group.addChild(pathCopy);\n  // group._namedChildren.shapePath[0] = pathCopy;\n  group._namedChildren.shapePath[0].replaceWith(pathCopy);\n\n  return [group, trueNecessary];\n}\n\nfunction extendPath(path) {\n  if (path.length > 0) {\n    var lengthTolerance = config.shape.trimmingThreshold * path.length;\n\n    var firstSegment = path.firstSegment;\n    var nextSegment = firstSegment.next;\n    var startAngle = Math.atan2(nextSegment.point.y - firstSegment.point.y, nextSegment.point.x - firstSegment.point.x); // rad\n    var inverseStartAngle = startAngle + Math.PI;\n    var extendedStartPoint = new Point(firstSegment.point.x + Math.cos(inverseStartAngle) * lengthTolerance, firstSegment.point.y + Math.sin(inverseStartAngle) * lengthTolerance);\n    path.insert(0, extendedStartPoint);\n\n    var lastSegment = path.lastSegment;\n    var penSegment = lastSegment.previous; // penultimate\n    var endAngle = Math.atan2(lastSegment.point.y - penSegment.point.y, lastSegment.point.x - penSegment.point.x); // rad\n    var extendedEndPoint = new Point(lastSegment.point.x + Math.cos(endAngle) * lengthTolerance, lastSegment.point.y + Math.sin(endAngle) * lengthTolerance);\n    path.add(extendedEndPoint);\n  }\n  return path;\n}\n\nfunction trimPath(path, original) {\n  // originalPath.strokeColor = 'pink';\n  try {\n    var _ret2 = function () {\n      var intersections = path.getIntersections();\n      var dividedPath = path.resolveCrossings();\n\n      if (intersections.length > 1) {\n        return {\n          v: [original, false]\n        }; // more than one intersection, don't worry about trimming\n      }\n\n      var extendingThreshold = config.shape.extendingThreshold;\n      var totalLength = path.length;\n\n      // we want to remove all closed loops from the path, since these are necessarily interior and not first or last\n      Base.each(dividedPath.children, function (child, i) {\n        if (child.closed) {\n          // console.log('subtracting closed child');\n          dividedPath = dividedPath.subtract(child);\n        } else {\n          // dividedPath = dividedPath.unite(child);\n        }\n      });\n\n      // console.log(dividedPath);\n\n      if (!!dividedPath.children && dividedPath.children.length > 1) {\n        (function () {\n          // divided path is a compound path\n          var unitedDividedPath = new Path();\n          // unitedDividedPath.copyAttributes(dividedPath);\n          // console.log('before', unitedDividedPath);\n          Base.each(dividedPath.children, function (child, i) {\n            if (!child.closed) {\n              unitedDividedPath = unitedDividedPath.unite(child);\n            }\n          });\n          dividedPath = unitedDividedPath;\n          // console.log('after', unitedDividedPath);\n          // return;\n        })();\n      } else {\n          // console.log('dividedPath has one child');\n        }\n\n      if (intersections.length > 0) {\n        // we have to get the nearest location because the exact intersection point has already been removed as a part of resolveCrossings()\n        var firstIntersection = dividedPath.getNearestLocation(intersections[0].point);\n        // console.log(dividedPath);\n        var rest = dividedPath.splitAt(firstIntersection); // dividedPath is now the first segment\n        var firstSegment = dividedPath;\n        var lastSegment = void 0;\n\n        // firstSegment.strokeColor = 'pink';\n\n        // let circleOne = new Path.Circle({\n        //   center: firstIntersection.point,\n        //   radius: 5,\n        //   strokeColor: 'red'\n        // });\n\n        // console.log(intersections);\n        if (intersections.length > 1) {\n          // console.log('foo');\n          // rest.reverse(); // start from end\n          var lastIntersection = rest.getNearestLocation(intersections[intersections.length - 1].point);\n          // let circleTwo = new Path.Circle({\n          //   center: lastIntersection.point,\n          //   radius: 5,\n          //   strokeColor: 'green'\n          // });\n          lastSegment = rest.splitAt(lastIntersection); // rest is now everything BUT the first and last segments\n          if (!lastSegment || !lastSegment.length) lastSegment = rest;\n          rest.reverse();\n        } else {\n          lastSegment = rest;\n        }\n\n        if (!!firstSegment && firstSegment.length <= extendingThreshold * totalLength) {\n          path = path.subtract(firstSegment);\n          if (path.className === 'CompoundPath') {\n            Base.each(path.children, function (child, i) {\n              if (!child.closed) {\n                child.remove();\n              }\n            });\n          }\n        }\n\n        if (!!lastSegment && lastSegment.length <= extendingThreshold * totalLength) {\n          path = path.subtract(lastSegment);\n          if (path.className === 'CompoundPath') {\n            Base.each(path.children, function (child, i) {\n              if (!child.closed) {\n                child.remove();\n              }\n            });\n          }\n        }\n      }\n\n      // this is hacky but I'm not sure how to get around it\n      // sometimes path.subtract() returns a compound path, with children consisting of the closed path I want and another extraneous closed path\n      // it appears that the correct path always has a higher version, though I'm not 100% sure that this is always the case\n\n      if (path.className === 'CompoundPath' && path.children.length > 0) {\n        if (path.children.length > 1) {\n          (function () {\n            var largestChild = void 0;\n            var largestChildArea = 0;\n\n            Base.each(path.children, function (child, i) {\n              if (child.area > largestChildArea) {\n                largestChildArea = child.area;\n                largestChild = child;\n              }\n            });\n\n            if (largestChild) {\n              path = largestChild;\n            } else {\n              path = path.children[0];\n            }\n          })();\n        } else {\n          path = path.children[0];\n        }\n        // console.log(path);\n        // console.log(path.lastChild);\n        // path.firstChild.strokeColor = 'pink';\n        // path.lastChild.strokeColor = 'green';\n        // path = path.lastChild; // return last child?\n        // find highest version\n        //\n        // console.log(realPathVersion);\n        //\n        // Base.each(path.children, (child, i) => {\n        //   if (child.version == realPathVersion) {\n        //     console.log('returning child');\n        //     return child;\n        //   }\n        // })\n      }\n      console.log('original length:', totalLength);\n      console.log('edited length:', path.length);\n      if (path.length > 0) {\n        if (Math.abs(path.length - totalLength) / totalLength <= 0.01) {\n          console.log('returning original');\n          return {\n            v: [original, false]\n          };\n        } else {\n          return {\n            v: [path, true]\n          };\n        }\n      } else {\n        return {\n          v: [original, false]\n        };\n      }\n    }();\n\n    if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n  } catch (e) {\n    console.error(e);\n    return [original, false];\n  }\n}\n\nfunction removePathExtensions(path) {\n  path.removeSegment(0);\n  path.removeSegment(path.segments.length - 1);\n  return path;\n}\n\nfunction checkPops() {\n  var groups = paper.project.getItems({\n    className: 'Group',\n    match: function match(el) {\n      return !!el.data && el.data.update;\n    }\n  });\n}\n\nfunction hitTestBounds(point, children) {\n  if (!point) return null;\n\n  for (var i = children.length - 1; i >= 0; i--) {\n    var child = children[i];\n    var bounds = child.strokeBounds;\n    if (point.isInside(child.strokeBounds)) {\n      return child;\n    }\n  }\n\n  return null;\n}\n\n},{\"./../../config\":1,\"./lib/shape-detector\":5,\"./util\":11}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startPlaying = startPlaying;\nexports.stopPlaying = stopPlaying;\nexports.initShapeSounds = initShapeSounds;\nexports.formatShapeSoundData = formatShapeSoundData;\nexports.quantizeLength = quantizeLength;\nexports.quantizePosition = quantizePosition;\nexports.startComposition = startComposition;\nexports.stopComposition = stopComposition;\nrequire('howler');\n\nvar config = require('./../../config');\n\nvar beatLength = 60 / config.sound.bpm;\nvar measureLength = beatLength * 4;\nvar compositionLength = exports.compositionLength = measureLength * config.sound.measures;\n\nfunction startPlaying() {\n  $('body').addClass(config.playingClass);\n\n  Howler.mute(false);\n\n  window.kan.playing = true;\n  window.kan.compositionInterval = startComposition(window.kan.composition);\n}\n\nfunction stopPlaying() {\n  var mute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (!!mute) {\n    Howler.mute(true);\n  }\n\n  $('body').removeClass(config.playingClass);\n\n  window.kan.playing = false;\n  stopComposition(window.kan.compositionInterval);\n}\n\nfunction initShapeSounds() {\n  var returnSounds = {};\n  var extensions = ['ogg', 'm4a', 'mp3', 'ac3'];\n\n  Base.each(config.shapes, function (shape, shapeName) {\n    // console.log(shape, shapeName);\n    if (shape.sprite) {\n      var shapeSoundJSONPath = './audio/shapes/' + shapeName + '/' + shapeName + '.json';\n      $.getJSON(shapeSoundJSONPath, function (resp) {\n        var shapeSoundData = formatShapeSoundData(shapeName, resp);\n        var sound = new Howl(shapeSoundData);\n        returnSounds[shapeName] = sound;\n      });\n    } else {\n      // let sound = new Howl({\n      //   src: extensions.map((extension) => `./audio/shapes/${shape.name}/${shape.name}.${extension}`),\n      // });\n      // console.log({\n      //   src: extensions.map((extension) => `./audio/shapes/${shape.name}/${shape.name}.${extension}`),\n      // }) Math.\n      var sound = new Howl({\n        src: './audio/shapes/' + shapeName + '/' + shapeName + '.mp3'\n      });\n      returnSounds[shapeName] = sound;\n    }\n  });\n\n  return returnSounds;\n}\n\nfunction formatShapeSoundData(shapeName, data) {\n  var returnData = {};\n\n  returnData.src = data.urls.map(function (url) {\n    return './audio/shapes/' + shapeName + '/' + url;\n  });\n  returnData.sprite = data.sprite;\n\n  return returnData;\n}\n\nfunction quantizeLength(duration) {\n  var smallestDuration = 60 / config.sound.bpm;\n  var returnDuration = Math.floor(duration / smallestDuration) * smallestDuration;\n\n  if (returnDuration > 0) {\n    return returnDuration;\n  } else {\n    // always return something greater than zero\n    return smallestDuration;\n  }\n}\n\nfunction quantizePosition(position, viewWidth) {\n  var smallestInterval = viewWidth / (4 * config.sound.measures);\n  return returnPosition = Math.floor(position / smallestInterval) * smallestInterval;\n}\n\nfunction startComposition(composition) {\n  var beatLength = 60 / config.sound.bpm * 1000;\n  var measureLength = beatLength * 4;\n  var compositionLength = measureLength * config.sound.measures - 250; // adjust for time to set up\n\n  function playCompositionOnce() {\n    console.log('repeat');\n    Base.each(composition, function (shape, i) {\n      console.log(shape);\n      if (shape.sprite) {\n        setTimeout(function () {\n          console.log('playing shape ' + shape.groupId);\n          shape.sound.loop(true);\n          shape.sound.play(shape.spriteName);\n        }, shape.startTime);\n\n        setTimeout(function () {\n          console.log('stopping shape ' + shape.groupId);\n          shape.sound.stop();\n        }, shape.startTime + shape.duration);\n      } else {\n        setTimeout(function () {\n          console.log('playing shape ' + shape.groupId);\n          shape.sound.loop(true);\n          shape.sound.play();\n        }, shape.startTime);\n\n        setTimeout(function () {\n          console.log('stopping shape ' + shape.groupId);\n          shape.sound.stop();\n        }, shape.startTime + shape.duration);\n      }\n    });\n  }\n\n  playCompositionOnce();\n  return setInterval(playCompositionOnce, compositionLength);\n}\n\nfunction stopComposition(interval) {\n  clearInterval(interval);\n}\n\n},{\"./../../config\":1,\"howler\":3}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.init = init;\nrequire('hammerjs');\n\nvar config = require('./../../config');\nvar sound = require('./sound');\nvar util = require('./util');\n\nvar sounds = sound.initShapeSounds();\n\nvar canvas = document.getElementById(config.canvasId);\n\nvar viewWidth = paper.view.viewSize.width;\nvar viewHeight = paper.view.viewSize.height;\nvar compositionLength = sound.compositionLength;\n\nvar transparent = new Color(0, 0);\n\nfunction init() {\n  var hammerManager = new Hammer.Manager(canvas);\n\n  hammerManager.add(new Hammer.Tap({ event: 'doubletap', taps: 2 }));\n  hammerManager.add(new Hammer.Tap({ event: 'singletap' }));\n  hammerManager.add(new Hammer.Pan({ direction: Hammer.DIRECTION_ALL }));\n  hammerManager.add(new Hammer.Pinch());\n\n  hammerManager.get('doubletap').recognizeWith('singletap');\n  hammerManager.get('singletap').requireFailure('doubletap');\n  hammerManager.get('pan').requireFailure('pinch');\n\n  hammerManager.on('singletap', singleTap);\n  hammerManager.on('doubletap', doubleTap);\n\n  hammerManager.on('panstart', panStart);\n  hammerManager.on('panmove', panMove);\n  hammerManager.on('panend', panEnd);\n\n  hammerManager.on('pinchstart', pinchStart);\n  hammerManager.on('pinchmove', pinchMove);\n  hammerManager.on('pinchend', pinchEnd);\n  hammerManager.on('pinchcancel', function () {\n    hammerManager.get('pan').set({ enable: true });\n  }); // make sure it's reenabled\n}\n\nfunction singleTap(event) {\n  sound.stopPlaying();\n\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = paper.project.hitTest(point, config.hitOptions);\n\n  if (hitResult) {\n    var item = hitResult.item;\n    // item.selected = !item.selected;\n    console.log(item);\n  }\n}\n\nfunction doubleTap(event) {\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = paper.project.hitTest(point, config.hitOptions);\n\n  if (hitResult) {\n    var item = hitResult.item;\n    var parent = item.parent;\n\n    if (item.data.interior) {\n      item.data.transparent = !item.data.transparent;\n\n      if (item.data.transparent) {\n        item.fillColor = transparent;\n        item.strokeColor = transparent;\n      } else {\n        item.fillColor = parent.data.color;\n        item.strokeColor = parent.data.color;\n      }\n\n      window.kan.moves.push({\n        type: 'fillChange',\n        id: item.id,\n        fill: parent.data.color,\n        transparent: item.data.transparent\n      });\n    } else {\n      console.log('not interior');\n    }\n  } else {\n    window.kan.pinchedGroup = null;\n    console.log('hit no item');\n  }\n}\n\nfunction panStart(event) {\n  // paper.project.activeLayer.removeChildren(); // REMOVE\n\n  // ignore other touch inputs\n  if (window.kan.pinching) return;\n  if (!(event.changedPointers && event.changedPointers.length > 0)) return;\n  if (event.changedPointers.length > 1) {\n    console.log('event.changedPointers > 1');\n  }\n\n  sound.stopPlaying();\n\n  window.kan.prevAngle = Math.atan2(event.velocityY, event.velocityX);\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n\n  var shapePath = new Path({\n    strokeColor: window.kan.currentColor,\n    name: 'shapePath',\n    strokeWidth: 5,\n    visible: true,\n    strokeCap: 'round'\n  });\n\n  shapePath.add(point);\n\n  window.kan.corners = [point];\n\n  window.kan.sides = [];\n  window.kan.side = [point];\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    first: true\n  };\n\n  window.kan.shapePath = shapePath;\n}\n\nfunction panMove(event) {\n  event.preventDefault();\n  if (window.kan.pinching) return;\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n\n  var angle = Math.atan2(event.velocityY, event.velocityX);\n  var prevAngle = window.kan.prevAngle;\n  var angleDelta = util.angleDelta(angle, prevAngle);\n  var thresholdAngleRad = util.rad(config.shape.cornerThresholdDeg);\n  window.kan.prevAngle = angle;\n  var side = window.kan.side;\n  var sides = window.kan.sides;\n\n  if (angleDelta > thresholdAngleRad) {\n    if (side.length > 0) {\n      // console.log('corner');\n      var cornerPoint = point;\n      // new Path.Circle({\n      //   center: cornerPoint,\n      //   radius: 15,\n      //   strokeColor: 'black'\n      // });\n      window.kan.corners.push(cornerPoint);\n      sides.push(side);\n      side = [];\n    }\n  }\n\n  side.push(point);\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    speed: Math.abs(event.overallVelocity),\n    angle: angle\n  };\n\n  window.kan.shapePath.add(point);\n  window.kan.sides = sides;\n  window.kan.side = side;\n\n  paper.view.draw();\n}\n\n// hc svnt dracones\nfunction panEnd(event) {\n  if (window.kan.pinching) return;\n\n  var pointer = event.center;\n  var point = new Point(pointer.x, pointer.y);\n  var shapePath = window.kan.shapePath;\n  var side = window.kan.side;\n  var sides = window.kan.sides;\n  var corners = window.kan.corners;\n\n  var group = new Group([shapePath]);\n  group.data.color = shapePath.strokeColor;\n  group.data.update = true; // used for pops\n  group.data.scale = 1; // init variable to track scale changes\n  group.data.rotation = 0; // init variable to track rotation changes\n\n  shapePath.add(point);\n  // shapePath.simplify();\n\n  side.push(point);\n  sides.push(side);\n\n  window.kan.pathData[shape.stringifyPoint(point)] = {\n    point: point,\n    last: true\n  };\n\n  corners.push(point);\n\n  shapePath.simplify();\n\n  var shapeJSON = shapePath.exportJSON();\n  var shapeData = shape.processShapeData(shapeJSON);\n  console.log(shapeData);\n  var shapePrediction = shape.detector.spot(shapeData);\n  var shapePattern = void 0;\n  if (shapePrediction.score > 0.5) {\n    shapePattern = shapePrediction.pattern;\n  } else {\n    shapePattern = \"other\";\n  }\n\n  console.log('shape before', shapePattern, shapePrediction.score);;\n  // shapePath.reduce();\n\n  var _shape$trueGroup = shape.trueGroup(group, corners),\n      _shape$trueGroup2 = _slicedToArray(_shape$trueGroup, 2),\n      truedGroup = _shape$trueGroup2[0],\n      trueWasNecessary = _shape$trueGroup2[1];\n\n  group.replaceWith(truedGroup);\n  shapePath = group._namedChildren.shapePath[0];\n  shapePath.strokeColor = group.strokeColor;\n  // shapePath.selected = true;\n\n  // shapePath.flatten(4);\n  // shapePath.reduce();\n\n  // shapePath.simplify();\n  if (trueWasNecessary) {\n    var computedCorners = shape.getComputedCorners(shapePath);\n    var computedCornersPath = new Path(computedCorners);\n    computedCornersPath.visible = false;\n    var computedCornersPathLength = computedCornersPath.length;\n    if (Math.abs(computedCornersPathLength - shapePath.length) / shapePath.length <= 0.1) {\n      shapePath.removeSegments();\n      // console.log(computedCorners);\n      shapePath.segments = computedCorners;\n      // shapePath.reduce();\n    }\n  }\n\n  // check shape\n  shapeJSON = shapePath.exportJSON();\n  shapeData = shape.processShapeData(shapeJSON);\n  shapePrediction = shape.detector.spot(shapeData);\n  if (shapePrediction.score > 0.6) {\n    shapePattern = shapePrediction.pattern;\n  } else {\n    shapePattern = \"other\";\n  }\n  var colorName = color.getColorName(window.kan.currentColor);\n\n  // get size\n\n  // console.log(config.shapes[shapePattern]);\n  // console.log(sounds[shapePattern]);\n  var playSounds = false;\n  var quantizedSoundStartTime = sound.quantizeLength(group.bounds.x / viewWidth * compositionLength) * 1000; // ms\n  var quantizedSoundDuration = sound.quantizeLength(group.bounds.width / viewWidth * compositionLength) * 1000; // ms\n  var compositionObj = {};\n  compositionObj.sound = sounds[shapePattern];\n  compositionObj.startTime = quantizedSoundStartTime;\n  compositionObj.duration = quantizedSoundDuration;\n  compositionObj.groupId = group.id;\n  if (config.shapes[shapePattern].sprite) {\n    compositionObj.sprite = true;\n    compositionObj.spriteName = colorName;\n\n    if (playSounds) {\n      sounds[shapePattern].play(colorName);\n    }\n  } else {\n    compositionObj.sprite = false;\n\n    if (playSounds) {\n      sounds[shapePattern].play();\n    }\n  }\n\n  window.kan.composition.push(compositionObj);\n\n  // set sound to loop again\n  console.log(shapePattern + '-' + colorName);\n\n  var intersections = shapePath.getCrossings();\n  if (intersections.length > 0) {\n    // we create a copy of the path because resolveCrossings() splits source path\n    var pathCopy = new Path();\n    pathCopy.copyContent(shapePath);\n    pathCopy.visible = false;\n\n    var enclosedLoops = shape.findInteriorCurves(pathCopy);\n\n    if (enclosedLoops.length > 0) {\n      for (var i = 0; i < enclosedLoops.length; i++) {\n        if (shapePath.closed) {\n          enclosedLoops[i].fillColor = shapePath.strokeColor;\n          enclosedLoops[i].data.interior = true;\n          enclosedLoops[i].data.transparent = false;\n        } else {\n          enclosedLoops[i].fillColor = transparent;\n          enclosedLoops[i].data.transparent = true;\n        }\n        enclosedLoops[i].data.interior = true;\n        enclosedLoops[i].visible = true;\n        enclosedLoops[i].closed = true;\n        group.addChild(enclosedLoops[i]);\n        enclosedLoops[i].sendToBack();\n      }\n    }\n    // pathCopy.remove();\n  } else {\n    if (shapePath.closed) {\n      var enclosedLoop = shapePath.clone();\n      enclosedLoop.visible = true;\n      enclosedLoop.fillColor = group.strokeColor;\n      enclosedLoop.data.interior = true;\n      enclosedLoop.data.transparent = false;\n      group.addChild(enclosedLoop);\n      enclosedLoop.sendToBack();\n    }\n  }\n\n  var children = group.getItems({\n    match: function match(item) {\n      return item.name !== 'shapePath';\n    }\n  });\n\n  // console.log('-----');\n  // console.log(group);\n  // console.log(children);\n  // group.selected = true;\n  var unitedPath = new Path();\n  if (children.length > 1) {\n    var accumulator = new Path();\n    accumulator.copyContent(children[0]);\n    accumulator.visible = false;\n\n    for (var _i = 1; _i < children.length; _i++) {\n      var otherPath = new Path();\n      otherPath.copyContent(children[_i]);\n      otherPath.visible = false;\n\n      unitedPath = accumulator.unite(otherPath);\n      otherPath.remove();\n      accumulator = unitedPath;\n    }\n  } else if (children.length > 0) {\n    unitedPath.copyContent(children[0]);\n  }\n\n  unitedPath.visible = false;\n  unitedPath.data.name = 'mask';\n\n  group.addChild(unitedPath);\n  unitedPath.sendToBack();\n\n  // shapePath.selected = true\n\n  window.kan.shapePath = shapePath;\n  window.kan.side = side;\n  window.kan.sides = sides;\n  window.kan.corners = corners;\n\n  window.kan.moves.push({\n    type: 'newGroup',\n    id: group.id\n  });\n\n  if (config.runAnimations) {\n    group.animate([{\n      properties: {\n        scale: 0.9\n      },\n      settings: {\n        duration: 100,\n        easing: \"easeOut\"\n      }\n    }, {\n      properties: {\n        scale: 1.11\n      },\n      settings: {\n        duration: 100,\n        easing: \"easeIn\"\n      }\n    }]);\n  }\n}\n\nfunction pinchStart(event) {\n  console.log('pinchStart', event.center);\n  sound.stopPlaying();\n\n  hammerManager.get('pan').set({ enable: false });\n  var pointer = event.center,\n      point = new Point(pointer.x, pointer.y),\n      hitResult = hitTestGroupBounds(point);\n\n  if (hitResult) {\n    pinching = true;\n    window.kan.pinchedGroup = hitResult;\n    window.kan.lastScale = 1;\n    window.kan.lastRotation = event.rotation;\n\n    window.kan.originalPosition = hitResult.position;\n    window.kan.originalRotation = hitResult.data.rotation;\n    window.kan.originalScale = hitResult.data.scale;\n\n    if (config.runAnimations) {\n      hitResult.animate({\n        properties: {\n          scale: 1.25\n        },\n        settings: {\n          duration: 100,\n          easing: \"easeOut\"\n        }\n      });\n    }\n  } else {\n    window.kan.pinchedGroup = null;\n    console.log('hit no item');\n  }\n}\n\nfunction pinchMove(event) {\n  console.log('pinchMove');\n  event.preventDefault();\n  var pinchedGroup = window.kan.pinchedGroup;\n  if (!!pinchedGroup) {\n    // console.log('pinchmove', event);\n    // console.log(pinchedGroup);\n    var currentScale = event.scale;\n    var scaleDelta = currentScale / window.kan.lastScale;\n    // console.log(lastScale, currentScale, scaleDelta);\n    window.kan.lastScale = currentScale;\n\n    var currentRotation = event.rotation;\n    var rotationDelta = currentRotation - window.kan.lastRotation;\n    window.kan.lastRotation = currentRotation;\n\n    // console.log(`scaling by ${scaleDelta}`);\n    // console.log(`rotating by ${rotationDelta}`);\n\n    pinchedGroup.position = event.center;\n    pinchedGroup.scale(scaleDelta);\n    pinchedGroup.rotate(rotationDelta);\n\n    pinchedGroup.data.scale *= scaleDelta;\n    pinchedGroup.data.rotation += rotationDelta;\n  }\n}\n\nfunction pinchEnd(event) {\n  window.kan.lastEvent = event;\n  var pinchedGroup = window.kan.pinchedGroup;\n  var originalPosition = window.kan.originalPosition;\n  var originalRotation = window.kan.originalRotation;\n  var originalScale = window.kan.originalScale;\n\n  if (!!pinchedGroup) {\n    pinchedGroup.data.update = true;\n    var move = {\n      id: pinchedGroup.id,\n      type: 'transform'\n    };\n    if (pinchedGroup.position != originalPosition) {\n      move.position = originalPosition;\n    }\n\n    if (pinchedGroup.data.rotation != originalRotation) {\n      move.rotation = originalRotation - pinchedGroup.data.rotation;\n    }\n\n    if (pinchedGroup.data.scale != originalScale) {\n      move.scale = originalScale / pinchedGroup.data.scale;\n    }\n\n    console.log('final scale', pinchedGroup.data.scale);\n    console.log(move);\n\n    window.kan.moves.push(move);\n\n    if (Math.abs(event.velocity) > 1) {\n      // dispose of group offscreen\n      throwPinchedGroup();\n    }\n\n    // if (config.runAnimations) {\n    //   pinchedGroup.animate({\n    //     properties: {\n    //       scale: 0.8\n    //     },\n    //     settings: {\n    //       duration: 100,\n    //       easing: \"easeOut\",\n    //     }\n    //   });\n    // }\n  }\n  pinching = false;\n  setTimeout(function () {\n    hammerManager.get('pan').set({ enable: true });\n  }, 250);\n}\n\nfunction throwPinchedGroup() {\n  var velocityMultiplier = config.velocityMultiplier;\n  var lastEvent = window.kan.lastEvent;\n  var viewWidth = paper.view.viewSize.width;\n  var viewHeight = paper.view.viewSize.height;\n  var pinchedGroup = window.kan.pinchedGroup;\n\n  if (pinchedGroup.position.x <= 0 - pinchedGroup.bounds.width || pinchedGroup.position.x >= viewWidth + pinchedGroup.bounds.width || pinchedGroup.position.y <= 0 - pinchedGroup.bounds.height || pinchedGroup.position.y >= viewHeight + pinchedGroup.bounds.height) {\n    pinchedGroup.data.offScreen = true;\n    pinchedGroup.visible = false;\n    return;\n  }\n  requestAnimationFrame(throwPinchedGroup);\n  pinchedGroup.position.x += lastEvent.velocityX * velocityMultiplier;\n  pinchedGroup.position.y += lastEvent.velocityY * velocityMultiplier;\n}\n\n},{\"./../../config\":1,\"./sound\":8,\"./util\":11,\"hammerjs\":2}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.init = init;\nvar config = require('./../../config');\n\nvar $body = $('body');\nvar tapEvent = 'click tap touch';\nvar playingClass = config.playingClass;\n\nfunction init() {\n  initColorPalette();\n  initNewButton();\n  initUndoButton();\n  initPlayButton();\n  initTipsButton();\n  initShareButton();\n}\n\nfunction newPressed() {\n  console.log('new pressed');\n  window.kan.composition = [];\n  paper.project.activeLayer.removeChildren();\n}\n\nfunction undoPressed() {\n  var transparent = new Color(0, 0);\n  console.log('undo pressed');\n  if (!(window.kan.moves.length > 0)) {\n    console.log('no moves yet');\n    return;\n  }\n\n  var lastMove = window.kan.moves.pop();\n  var item = project.getItem({\n    id: lastMove.id\n  });\n\n  if (item) {\n    item.visible = true; // make sure\n    switch (lastMove.type) {\n      case 'newGroup':\n        console.log('removing group');\n        item.remove();\n        break;\n      case 'fillChange':\n        if (lastMove.transparent) {\n          item.fillColor = lastMove.fill;\n          item.strokeColor = lastMove.fill;\n        } else {\n          item.fillColor = transparent;\n          item.strokeColor = transparent;\n        }\n      case 'transform':\n        if (!!lastMove.position) {\n          item.position = lastMove.position;\n        }\n        if (!!lastMove.rotation) {\n          item.rotation = lastMove.rotation;\n        }\n        if (!!lastMove.scale) {\n          item.scale(lastMove.scale);\n        }\n        break;\n      default:\n        console.log('unknown case');\n    }\n  } else {\n    console.log('could not find matching item');\n  }\n}\n\nfunction playPressed() {\n  console.log('play pressed');\n  if (window.kan.playing) {\n    sound.stopPlaying(true);\n  } else {\n    sound.startPlaying();\n  }\n\n  console.log('play pressed');\n}\n\nfunction tipsPressed() {\n  console.log('tips pressed');\n}\n\nfunction sharePressed() {\n  console.log('share pressed');\n}\n\nfunction initColorPalette() {\n  var $paletteWrap = $('ul.palette-colors');\n  var $paletteColors = $paletteWrap.find('li');\n  var paletteColorSize = 20;\n  var paletteSelectedColorSize = 30;\n  var paletteSelectedClass = 'palette-selected';\n\n  // hook up click\n  $paletteColors.on('click tap touch', function () {\n    if (!$body.hasClass(config.playingClass)) {\n      var $svg = $(this).find('svg.palette-color');\n\n      if (!$svg.hasClass(paletteSelectedClass)) {\n        $('.' + paletteSelectedClass).removeClass(paletteSelectedClass).attr('width', paletteColorSize).attr('height', paletteColorSize).find('rect').attr('rx', 0).attr('ry', 0);\n\n        $svg.addClass(paletteSelectedClass).attr('width', paletteSelectedColorSize).attr('height', paletteSelectedColorSize).find('rect').attr('rx', paletteSelectedColorSize / 2).attr('ry', paletteSelectedColorSize / 2);\n\n        window.kan.currentColor = $svg.find('rect').attr('fill');\n      }\n    };\n  });\n}\n\nfunction initNewButton() {\n  $('.main-controls .new').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      newPressed();\n    }\n  });\n}\n\nfunction initUndoButton() {\n  $('.main-controls .undo').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      undoPressed();\n    }\n  });\n}\n\nfunction initPlayButton() {\n  $('.main-controls .play-stop').on(tapEvent, playPressed);\n}\n\nfunction initTipsButton() {\n  $('.aux-controls .tips').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      tipsPressed();\n    }\n  });\n}\n\nfunction initShareButton() {\n  $('.aux-controls .share').on(tapEvent, function () {\n    if (!$body.hasClass(playingClass)) {\n      sharePressed();\n    }\n  });\n}\n\n},{\"./../../config\":1}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rad = rad;\nexports.deg = deg;\nexports.angleDelta = angleDelta;\nexports.delta = delta;\nvar config = require('./../../config');\n\n// Converts from degrees to radians.\nfunction rad(degrees) {\n  return degrees * Math.PI / 180;\n};\n\n// Converts from radians to degrees.\nfunction deg(radians) {\n  return radians * 180 / Math.PI;\n};\n\n// returns absolute value of the delta of two angles in radians\nfunction angleDelta(x, y) {\n  return Math.abs(Math.atan2(Math.sin(y - x), Math.cos(y - x)));;\n}\n\n// distance between two points\nfunction delta(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2)); // pythagorean!\n}\n\n},{\"./../../config\":1}]},{},[6])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}